[{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/404.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/__screenshots__/index.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/_sites/[slug].tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/about.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/admin/admin/branding/[id].tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":19},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":109,"column":13,"nodeType":"JSXOpeningElement","endLine":109,"endColumn":87},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":115,"column":11,"nodeType":"JSXOpeningElement","endLine":119,"endColumn":13},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":125,"column":13,"nodeType":"JSXOpeningElement","endLine":125,"endColumn":80}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport QRCode from 'qrcode';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport default function BrandingProfilePage() {\n  const searchParams = useSearchParams();\n  const id = searchParams?.get('id') as string;\n  const [profile, setProfile] = useState<any>(null);\n  const [qr, setQr] = useState<string | null>(null);\n  const [accessOk, setAccessOk] = useState(false);\n  const [passwordAttempt, setPasswordAttempt] = useState('');\n\n  useEffect(() => {\n    if (!id || typeof id !== 'string') return;\n\n    supabase\n      .from('branding_profiles')\n      .select('*')\n      .eq('id', id)\n      .single()\n      .then(({ data }) => {\n        if (data) {\n          const accessParam = new URLSearchParams(window.location.search).get('access');\n          if (!data.access_token && !data.password) {\n            setAccessOk(true);\n          } else if (data.access_token && accessParam === data.access_token) {\n            setAccessOk(true);\n          } else {\n            setAccessOk(false);\n          }\n          setProfile(data);\n          const previewUrl = `${window.location.origin}/api/og/snapshot?theme=${data.theme}&brand=${data.brand}`;\n          QRCode.toDataURL(previewUrl).then(setQr);\n        }\n      });\n  }, [id]);\n\n  if (!profile) return <p className=\"p-6 text-sm text-muted-foreground\">Loading profile...</p>;\n\n  if (!accessOk && profile?.password) {\n    return (\n      <div className=\"p-6\">\n        <h2 className=\"text-lg font-semibold mb-2\">Password Required</h2>\n        <input\n          className=\"border px-2 py-1 rounded mr-2\"\n          placeholder=\"Enter password\"\n          value={passwordAttempt}\n          onChange={(e) => setPasswordAttempt(e.target.value)}\n        />\n        <button\n          className=\"bg-black text-white px-3 py-1 rounded\"\n          onClick={() => {\n            if (passwordAttempt === profile.password) setAccessOk(true);\n            else alert('Incorrect password');\n          }}\n        >\n          Submit\n        </button>\n      </div>\n    );\n  }\n\n  const previewUrl = `/api/og/snapshot?theme=${profile.theme}&brand=${profile.brand}`;\n\n  async function downloadPDF() {\n    const html2pdf = (await import('html2pdf.js')).default;\n    const element = document.getElementById('branding-preview-pdf');\n    if (element) {\n      html2pdf()\n        .set({\n          filename: `${profile.name}-preview.pdf`,\n          margin: 10,\n          html2canvas: { scale: 2 },\n          jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' },\n        })\n        .from(element)\n        .save();\n    }\n  }\n\n  return (\n    <div className=\"max-w-3xl mx-auto p-6 space-y-6\">\n      <div id=\"branding-preview-pdf\" className=\"space-y-6\">\n        <h1 className=\"text-2xl font-bold\">{profile.name}</h1>\n\n        <div className=\"flex items-center gap-4\">\n          <span className=\"text-sm font-medium\">Theme:</span>\n          <span className=\"px-2 py-1 rounded bg-gray-200\">{profile.theme}</span>\n\n          <span className=\"text-sm font-medium\">Brand:</span>\n          <span className=\"px-2 py-1 rounded bg-gray-200\">{profile.brand}</span>\n\n          {profile.accent_color && (\n            <span\n              className=\"w-5 h-5 rounded-full border\"\n              style={{ backgroundColor: profile.accent_color }}\n            />\n          )}\n\n          {profile.logo_url && (\n            <img src={profile.logo_url} alt=\"Logo\" className=\"w-8 h-8 rounded-full\" />\n          )}\n        </div>\n\n        <div>\n          <p className=\"text-sm text-muted-foreground mb-1\">OG Preview:</p>\n          <img\n            src={previewUrl}\n            alt=\"OG Preview\"\n            className=\"w-full max-w-xl border shadow rounded\"\n          />\n        </div>\n\n        {qr && (\n          <div>\n            <p className=\"text-sm text-muted-foreground mb-1\">QR Code:</p>\n            <img src={qr} alt=\"QR Code\" className=\"w-32 h-32 border rounded\" />\n          </div>\n        )}\n\n        <div>\n          <p className=\"text-sm\">Link:</p>\n          <code className=\"text-xs bg-gray-100 p-2 rounded block\">{previewUrl}</code>\n        </div>\n      </div>\n\n      <button className=\"bg-blue-600 text-white px-4 py-2 rounded mt-4\" onClick={downloadPDF}>\n        Download PDF Preview\n      </button>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/announce.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\n\nexport default function AnnouncePage() {\n  const [entries, setEntries] = useState([]);\n\n  useEffect(() => {\n    fetch('/announcements.json')\n      .then((res) => res.json())\n      .then(setEntries);\n  }, []);\n\n  return (\n    <div className=\"max-w-3xl mx-auto p-6 text-white\">\n      <h1 className=\"text-3xl font-bold mb-4\">📣 Announcements</h1>\n      <ul className=\"space-y-6\">\n        {entries.map((a: any, i: number) => (\n          <li key={i} className=\"border-l-2 border-blue-500 pl-4\">\n            <div className=\"text-zinc-400 text-sm mb-1\">{a.date}</div>\n            <div className=\"text-white font-semibold\">{a.title}</div>\n            <div className=\"text-zinc-300 text-sm\">{a.body}</div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/block/[id].tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":2,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":29,"column":7,"nodeType":"JSXOpeningElement","endLine":33,"endColumn":9}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { json } from '@/lib/api/json';\nimport { useEffect, useState } from 'react';\n\nexport default function BlockDetail() {\n  const searchParams = useSearchParams();\n  const id = searchParams?.get('id') as string;\n  const [block, setBlock] = useState<any>(null);\n\n  useEffect(() => {\n    if (!id) return;\n    fetch('/api/block?id=' + id)\n      .then((res) => res.json())\n      .then(setBlock);\n  }, [id]);\n\n  if (!block) return <div className=\"text-white p-6\">Loading...</div>;\n\n  return (\n    <div className=\"text-white p-6 max-w-xl mx-auto space-y-4\">\n      <h1 className=\"text-2xl font-bold\">\n        {block.emoji} {block.title}\n      </h1>\n      <p className=\"text-zinc-400\">{block.message}</p>\n      <p className=\"text-sm text-zinc-600\">\n        Lat: {block.lat}, Lon: {block.lon}\n      </p>\n      <img\n        src={`/api/block-qr?handle=${block.owner_handle || 'me'}&blockId=${block.id}`}\n        className=\"w-32 h-32 mt-4\"\n        alt=\"QR\"\n      />\n      <div>\n        <a\n          href={`/api/print-labels-pdf?handle=${block.owner_handle || 'me'}`}\n          className=\"text-blue-400 hover:underline text-sm\"\n        >\n          🧾 Print PDF with this label\n        </a>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/block/new.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/checkin-map.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/claim-handle.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useState } from 'react';\nimport { json } from '@/lib/api/json';\n\nexport default function ClaimHandlePage() {\n  const [handle, setHandle] = useState('');\n  const [message, setMessage] = useState('');\n\n  const submit = async () => {\n    const res = await fetch('/api/claim-handle', {\n      method: 'POST',\n      body: JSON.stringify({ handle }),\n    });\n    const result = await res.json();\n    setMessage(result.message || 'Saved');\n  };\n\n  return (\n    <div className=\"p-6 text-white max-w-md mx-auto text-center\">\n      <h1 className=\"text-2xl font-bold mb-4\">🔖 Claim Your Handle</h1>\n      <input\n        className=\"w-full mb-4 p-2 rounded bg-zinc-800\"\n        value={handle}\n        onChange={(e) => setHandle(e.target.value.toLowerCase())}\n        placeholder=\"@yourname\"\n      />\n      <button onClick={submit} className=\"bg-blue-600 px-4 py-2 rounded hover:bg-blue-700\">\n        Claim\n      </button>\n      {message && <p className=\"mt-4 text-sm text-zinc-400\">{message}</p>}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/claim/[slug].tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":19},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":35,"column":7,"nodeType":"JSXOpeningElement","endLine":39,"endColumn":9}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useState, useEffect } from 'react';\nimport { json } from '@/lib/api/json';\nimport { useRouter, useSearchParams } from 'next/navigation';\n\nexport default function ClaimPage() {\n  const searchParams = useSearchParams();\n  const slug = searchParams?.get('slug') as string;\n  const [status, setStatus] = useState<'loading' | 'claimed' | 'unclaimed'>('loading');\n  const [email, setEmail] = useState('');\n  const [anon, setAnon] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  useEffect(() => {\n    if (slug) {\n      fetch(`/api/check-claim?slug=${slug}`)\n        .then((res) => res.json())\n        .then((d) => setStatus(d.claimed ? 'claimed' : 'unclaimed'));\n    }\n  }, [slug]);\n\n  const handleSubmit = async () => {\n    await fetch('/api/claim-site', {\n      method: 'POST',\n      body: JSON.stringify({ slug, email, anon }),\n    });\n    setSubmitted(true);\n  };\n\n  if (!slug) return null;\n\n  return (\n    <div className=\"max-w-xl mx-auto text-white p-6 text-center\">\n      <h1 className=\"text-2xl font-bold mb-4\">🪪 Claim {slug}</h1>\n      <img\n        src={`/screenshots/${slug}.thumb.png`}\n        alt={`${slug} preview`}\n        className=\"w-full h-40 object-cover rounded mb-4\"\n      />\n\n      {status === 'claimed' && (\n        <p className=\"text-red-400 text-sm mb-4\">This site has already been claimed.</p>\n      )}\n\n      {status === 'unclaimed' && !submitted && (\n        <>\n          <input\n            type=\"email\"\n            placeholder=\"your@email.com\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"w-full p-2 rounded bg-zinc-800 mb-3 text-white\"\n          />\n          <label className=\"flex items-center gap-2 mb-4 justify-center\">\n            <input type=\"checkbox\" checked={anon} onChange={(e) => setAnon(e.target.checked)} />\n            <span className=\"text-sm text-zinc-300\">Claim anonymously</span>\n          </label>\n          <button\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded\"\n            onClick={handleSubmit}\n          >\n            Claim this site\n          </button>\n        </>\n      )}\n\n      {submitted && (\n        <p className=\"text-green-400 mt-4\">🎉 You’ve claimed this site successfully.</p>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/confirm.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\n\nexport default function ConfirmPage() {\n  const searchParams = useSearchParams();\n  const code = searchParams?.get('code') as string;\n\n  useEffect(() => {\n    if (!code) return;\n    // for now: assume any code is valid\n    localStorage.setItem('invite_verified', 'true');\n    setTimeout(() => (window.location.href = '/starter'), 1000);\n  }, [code]);\n\n  return (\n    <div className=\"p-6 text-white text-center\">\n      <h1 className=\"text-2xl font-bold mb-4\">🔓 Confirming Access…</h1>\n      <p className=\"text-zinc-400\">You’ll be redirected shortly.</p>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/contact.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/creator/[handle].tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":2,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":40,"column":9,"nodeType":"JSXOpeningElement","endLine":40,"endColumn":95}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { json } from '@/lib/api/json';\nimport { useEffect, useState } from 'react';\n\ntype Badge = {\n  icon: string;\n  title: string;\n};\n\ntype HandleProfile = {\n  avatar?: string;\n  bio?: string;\n  badge?: Badge;\n};\n\nexport default function PublicHandlePage() {\n  const searchParams = useSearchParams();\n  const handle = searchParams?.get('handle') as string;\n  const [data, setData] = useState<HandleProfile | null>(null);\n\n  useEffect(() => {\n    if (!handle) return;\n    fetch(`/api/handle-profile?handle=${handle}`)\n      .then((res) => res.json())\n      .then(setData)\n      .catch((err) => {\n        console.error('Failed to fetch handle profile:', err);\n        setData(null);\n      });\n  }, [handle]);\n\n  if (!data) {\n    return <div className=\"text-white p-6\">Loading profile…</div>;\n  }\n\n  return (\n    <div className=\"text-white p-6 text-center max-w-2xl mx-auto\">\n      {data.avatar && (\n        <img src={data.avatar} alt=\"avatar\" className=\"w-20 h-20 rounded-full mx-auto mb-4\" />\n      )}\n      <h1 className=\"text-2xl font-bold\">@{handle}</h1>\n      {data.badge && (\n        <p className=\"text-yellow-400\">\n          {data.badge.icon} {data.badge.title}\n        </p>\n      )}\n      {data.bio && <p className=\"text-zinc-400 mt-2\">{data.bio}</p>}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/creator/me/campaigns/index.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\nimport Link from 'next/link';\nimport { useUser } from '@supabase/auth-helpers-react';\n\nexport default function MyCampaigns() {\n  const user = useUser();\n  const [campaigns, setCampaigns] = useState([]);\n\n  useEffect(() => {\n    if (!user) return;\n    fetch('/api/my-campaigns?user_id=' + user.id)\n      .then((res) => res.json())\n      .then(setCampaigns);\n  }, [user]);\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6 text-white space-y-6\">\n      <h1 className=\"text-2xl font-bold\">🎯 My Campaigns</h1>\n      <ul className=\"space-y-4\">\n        {campaigns.map((c: any) => (\n          <li key={c.slug} className=\"bg-zinc-800 p-4 rounded\">\n            <Link\n              href={`/support/${c.slug}`}\n              className=\"text-blue-400 text-lg font-semibold hover:underline\"\n            >\n              {c.headline}\n            </Link>\n            <p className=\"text-sm text-zinc-400\">\n              {c.goal_count} {c.target_action}s goal • Created{' '}\n              {new Date(c.created_at).toLocaleDateString()}\n            </p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/creator/me/campaigns/new.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useState } from 'react';\nimport { json } from '@/lib/api/json';\n\nexport default function NewCampaign() {\n  const [slug, setSlug] = useState('');\n  const [headline, setHeadline] = useState('');\n  const [goal, setGoal] = useState(10);\n  const [action, setAction] = useState('cheer');\n  const [blockId, setBlockId] = useState('');\n  const [message, setMessage] = useState('');\n\n  const submit = async () => {\n    const res = await fetch('/api/create-campaign', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('supabase.auth.token')}`,\n      },\n      body: JSON.stringify({\n        slug,\n        headline,\n        goal_count: goal,\n        target_action: action,\n        block_id: blockId,\n      }),\n    });\n\n    const json = await res.json();\n    setMessage(json.error ? 'Error: ' + json.error : '✅ Campaign created!');\n  };\n\n  return (\n    <div className=\"max-w-xl mx-auto p-6 text-white space-y-4\">\n      <h1 className=\"text-2xl font-bold\">🎯 Create Campaign</h1>\n      <input\n        value={slug}\n        onChange={(e) => setSlug(e.target.value)}\n        placeholder=\"Slug (e.g. floss)\"\n        className=\"p-2 text-black w-full rounded\"\n      />\n      <input\n        value={headline}\n        onChange={(e) => setHeadline(e.target.value)}\n        placeholder=\"Headline\"\n        className=\"p-2 text-black w-full rounded\"\n      />\n      <input\n        type=\"number\"\n        value={goal}\n        onChange={(e) => setGoal(Number(e.target.value))}\n        placeholder=\"Goal\"\n        className=\"p-2 text-black w-full rounded\"\n      />\n      <select\n        value={action}\n        onChange={(e) => setAction(e.target.value)}\n        className=\"p-2 text-black w-full rounded\"\n      >\n        <option value=\"cheer\">🎉 Cheer</option>\n        <option value=\"echo\">🔁 Echo</option>\n        <option value=\"reflect\">🪞 Reflect</option>\n        <option value=\"checkin\">✅ Check-in</option>\n      </select>\n      <input\n        value={blockId}\n        onChange={(e) => setBlockId(e.target.value)}\n        placeholder=\"Block ID\"\n        className=\"p-2 text-black w-full rounded\"\n      />\n      <button onClick={submit} className=\"bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded\">\n        Create\n      </button>\n      {message && <p className=\"text-green-300 text-sm\">{message}</p>}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/creator/me/campaigns/posters.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":23,"column":13,"nodeType":"JSXOpeningElement","endLine":27,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\nimport { useUser } from '@supabase/auth-helpers-react';\n\nexport default function PosterBatchView() {\n  const user = useUser();\n  const [campaigns, setCampaigns] = useState([]);\n\n  useEffect(() => {\n    if (!user) return;\n    fetch('/api/my-campaigns?user_id=' + user.id)\n      .then((res) => res.json())\n      .then(setCampaigns);\n  }, [user]);\n\n  return (\n    <div className=\"p-6 text-white max-w-6xl mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-4\">🖨️ Poster Print Batch</h1>\n      <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n        {campaigns.map((c: any) => (\n          <div key={c.slug} className=\"bg-zinc-800 p-4 rounded\">\n            <img\n              src={`/posters/${c.slug}`}\n              alt={c.headline}\n              className=\"w-full rounded shadow border border-zinc-700\"\n            />\n            <div className=\"mt-2 text-sm text-zinc-300 truncate\">{c.headline}</div>\n            <a\n              href={`/posters/${c.slug}`}\n              download={`${c.slug}-poster.png`}\n              className=\"text-blue-400 hover:underline text-xs\"\n            >\n              Download\n            </a>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/creator/me/feedback.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\nimport { useUser } from '@supabase/auth-helpers-react';\n\nexport default function MyFeedback() {\n  const user = useUser();\n  const [received, setReceived] = useState([]);\n  const [sent, setSent] = useState([]);\n\n  useEffect(() => {\n    if (!user) return;\n    fetch('/api/feedback-history?type=received&user_id=' + user.id)\n      .then((res) => res.json())\n      .then(setReceived);\n\n    fetch('/api/feedback-history?type=sent&user_id=' + user.id)\n      .then((res) => res.json())\n      .then(setSent);\n  }, [user]);\n\n  return (\n    <div className=\"p-6 text-white max-w-2xl mx-auto space-y-6\">\n      <h1 className=\"text-2xl font-bold\">🧾 Feedback</h1>\n\n      <div>\n        <h2 className=\"text-xl font-semibold mb-2\">🎯 Received</h2>\n        {received.length === 0 && <p className=\"text-zinc-400 text-sm\">Nothing yet.</p>}\n        <ul className=\"space-y-2\">\n          {received.map((f: any) => (\n            <li key={f.id} className=\"bg-zinc-800 p-3 rounded text-sm\">\n              <span className=\"font-bold\">{f.action}</span> on <code>{f.block_id.slice(0, 8)}</code>\n              {f.message && <p className=\"text-zinc-300 mt-1 italic\">“{f.message}”</p>}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div>\n        <h2 className=\"text-xl font-semibold mt-6 mb-2\">📤 Sent</h2>\n        {sent.length === 0 && <p className=\"text-zinc-400 text-sm\">No outgoing feedback yet.</p>}\n        <ul className=\"space-y-2\">\n          {sent.map((f: any) => (\n            <li key={f.id} className=\"bg-zinc-800 p-3 rounded text-sm\">\n              <span className=\"font-bold\">{f.action}</span> to block{' '}\n              <code>{f.block_id.slice(0, 8)}</code>\n              {f.message && <p className=\"text-zinc-300 mt-1 italic\">“{f.message}”</p>}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/creator/me/notifications.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\nimport { useUser } from '@supabase/auth-helpers-react';\n\nexport default function NotificationsPage() {\n  const user = useUser();\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    if (!user) return;\n    fetch('/api/notifications?handle=' + user.user_metadata?.handle)\n      .then((res) => res.json())\n      .then(setItems);\n  }, [user]);\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6 text-white space-y-4\">\n      <h1 className=\"text-2xl font-bold\">🔔 Notifications</h1>\n      {items.length === 0 && <p className=\"text-zinc-400\">Nothing new yet.</p>}\n      {items.map((r: any) => (\n        <div key={r.id} className=\"bg-zinc-800 p-4 rounded\">\n          <div className=\"text-sm\">\n            <span className=\"text-green-400\">@{r.receiver_handle}</span> received a support request\n          </div>\n          <div className=\"text-zinc-400 text-xs mt-1\">\n            {r.slug} • {r.message}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/creator/me/summary.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\nimport { useUser } from '@supabase/auth-helpers-react';\n\nexport default function SummaryPage() {\n  const user = useUser();\n  const [summary, setSummary] = useState<any>(null);\n\n  useEffect(() => {\n    if (!user) return;\n    fetch('/api/feedback-summary?user_id=' + user.id)\n      .then((res) => res.json())\n      .then(setSummary);\n  }, [user]);\n\n  if (!summary) return <div className=\"p-6 text-white\">Loading summary...</div>;\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6 text-white space-y-6\">\n      <h1 className=\"text-2xl font-bold\">🧠 Weekly Summary</h1>\n\n      <div>\n        <h2 className=\"text-lg font-semibold mb-2\">📥 Received Feedback</h2>\n        {summary.received_feedback.length === 0 && (\n          <p className=\"text-zinc-400\">No feedback yet.</p>\n        )}\n        <ul className=\"space-y-2\">\n          {summary.received_feedback.map((f: any, i: number) => (\n            <li key={i} className=\"bg-zinc-800 p-3 rounded text-sm\">\n              <span className=\"font-bold\">{f.action}</span> on <code>{f.block_id.slice(0, 8)}</code>\n              {f.message && <p className=\"italic mt-1 text-zinc-300\">“{f.message}”</p>}\n              <div className=\"text-xs text-zinc-400\">{new Date(f.created_at).toLocaleString()}</div>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div>\n        <h2 className=\"text-lg font-semibold mb-2 mt-6\">📆 Check-in History</h2>\n        {summary.checkin_history.length === 0 && <p className=\"text-zinc-400\">No check-ins yet.</p>}\n        <ul className=\"space-y-2\">\n          {summary.checkin_history.map((c: any, i: number) => (\n            <li key={i} className=\"bg-zinc-900 p-2 rounded text-sm\">\n              ✅ <strong>{c.slug}</strong> @ {new Date(c.created_at).toLocaleString()}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/creator/me/thank.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\n\ntype Supporter = {\n  user_id: string;\n};\n\nexport default function ThankSupporters() {\n  const [supporters, setSupporters] = useState<Supporter[]>([]);\n  const [sent, setSent] = useState<Record<string, boolean>>({});\n\n  useEffect(() => {\n    fetch('/api/supporters?handle=me') // TODO: replace 'me' with dynamic handle\n      .then((res) => res.json())\n      .then(setSupporters)\n      .catch((err) => console.error('Failed to load supporters:', err));\n  }, []);\n\n  const handleSendThanks = async (userId: string) => {\n    const message = prompt('What would you like to say?');\n    if (!message) return;\n\n    try {\n      await fetch('/api/send-thanks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('supabase.auth.token') || ''}`,\n        },\n        body: JSON.stringify({\n          recipient_id: userId,\n          block_id: 'N/A', // Replace if needed\n          message,\n        }),\n      });\n\n      setSent((prev) => ({ ...prev, [userId]: true }));\n    } catch (err) {\n      console.error('Failed to send message:', err);\n      alert('Failed to send. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"max-w-xl mx-auto p-6 text-white space-y-4\">\n      <h1 className=\"text-2xl font-bold\">🙏 Send Thanks</h1>\n      {supporters.map((s) => (\n        <div key={s.user_id} className=\"bg-zinc-800 p-3 rounded\">\n          <div className=\"text-green-400 text-sm mb-2\">User: {s.user_id.slice(0, 8)}</div>\n          <button\n            disabled={sent[s.user_id]}\n            onClick={() => handleSendThanks(s.user_id)}\n            className=\"bg-blue-600 hover:bg-blue-700 px-4 py-1 text-sm rounded disabled:opacity-50\"\n          >\n            {sent[s.user_id] ? '✅ Sent' : 'Send Thanks'}\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/discover.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\nimport Link from 'next/link';\n\nexport default function DiscoverPage() {\n  const [profiles, setProfiles] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/discover')\n      .then((res) => res.json())\n      .then(setProfiles);\n  }, []);\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6 text-white space-y-4\">\n      <h1 className=\"text-2xl font-bold\">🌍 Discover Public Worlds</h1>\n      {profiles.length === 0 && <p className=\"text-zinc-400\">No public profiles yet.</p>}\n      <ul className=\"space-y-4\">\n        {profiles.map((p: any) => (\n          <li key={p.user_id} className=\"bg-zinc-800 p-4 rounded shadow\">\n            <div className=\"text-xl font-semibold\">\n              <Link href={`/world/${p.handle}/share`} className=\"hover:underline\">\n                {p.emoji} @{p.handle}\n              </Link>\n            </div>\n            {p.bio && <p className=\"text-sm text-zinc-400 mt-1\">{p.bio}</p>}\n            {p.goal_tags?.length > 0 && (\n              <div className=\"text-xs text-green-400 uppercase mt-1\">{p.goal_tags.join(' • ')}</div>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/docs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/early-access.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/early.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/edit/[slug].tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Head' is defined but never used.","line":2,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":12},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'dynamic' is defined but never used.","line":7,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":7,"endColumn":15},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'GripVertical' is defined but never used.","line":9,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":9,"endColumn":22},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'DndContext' is defined but never used.","line":13,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":13,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'closestCenter' is defined but never used.","line":13,"column":22,"nodeType":null,"messageId":"unusedVar","endLine":13,"endColumn":35},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'SortableContext' is defined but never used.","line":14,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":14,"endColumn":25},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'arrayMove' is defined but never used.","line":14,"column":27,"nodeType":null,"messageId":"unusedVar","endLine":14,"endColumn":36},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'verticalListSortingStrategy' is defined but never used.","line":14,"column":38,"nodeType":null,"messageId":"unusedVar","endLine":14,"endColumn":65},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'supabase' is assigned a value but never used.","line":22,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":22,"endColumn":15},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'setCurrentPageIndex' is assigned a value but never used.","line":31,"column":28,"nodeType":null,"messageId":"unusedVar","endLine":31,"endColumn":47},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'showBlockPicker' is assigned a value but never used.","line":33,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":33,"endColumn":25},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'previewMode' is assigned a value but never used.","line":34,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":34,"endColumn":21},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'setPreviewMode' is assigned a value but never used.","line":34,"column":23,"nodeType":null,"messageId":"unusedVar","endLine":34,"endColumn":37},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'showSettings' is assigned a value but never used.","line":35,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":35,"endColumn":22},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'setShowSettings' is assigned a value but never used.","line":35,"column":24,"nodeType":null,"messageId":"unusedVar","endLine":35,"endColumn":39},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'saved' is assigned a value but never used.","line":36,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":36,"endColumn":15},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'isHydrated' is assigned a value but never used.","line":37,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":37,"endColumn":20},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.","line":78,"column":6,"nodeType":"ArrayExpression","endLine":78,"endColumn":16,"suggestions":[{"desc":"Update the dependencies array to be: [siteData, slug]","fix":{"range":[2946,2956],"text":"[siteData, slug]"}}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'handleSlugChange' is assigned a value but never used.","line":80,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":80,"endColumn":25},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'handleTogglePublish' is assigned a value but never used.","line":86,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":86,"endColumn":28},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'blocksWithId' is assigned a value but never used.","line":93,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":93,"endColumn":21},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'handleBlockSave' is assigned a value but never used.","line":99,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":99,"endColumn":24},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'handleAddBlock' is assigned a value but never used.","line":106,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":106,"endColumn":23}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport Head from 'next/head';\n// import { json } from '@/lib/api/json';\n\nimport { useEffect, useState, useRef } from 'react';\nimport { useSearchParams } from 'next/navigation';\nimport dynamic from 'next/dynamic';\nimport { createClient } from '@supabase/supabase-js';\nimport { GripVertical } from 'lucide-react';\n// import RenderBlock from '@/components/admin/templates/render-block';\n// import BlockSidebar from '@/components/admin/templates/block-sidebar';\n// import { SortableBlockList } from '@/components/admin/templates/sortable-block-list';\nimport { DndContext, closestCenter } from '@dnd-kit/core';\nimport { SortableContext, arrayMove, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport React from 'react';\n// const SiteSettingsPanel = dynamic(() => import('@/components/admin/site-settings-panel'), {\n//   ssr: false,\n// });\n// import { ModalWrapper } from '@/components/ui';\n// import type { SiteData } from '@/types/site';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport default function EditPage() {\n  const searchParams = useSearchParams();\n  const slug = searchParams?.get('slug') as string;\n  const [siteData, setSiteData] = useState<any | null>(null);\n  const [currentPageIndex, setCurrentPageIndex] = useState(0);\n  const [selectedBlockIndex, setSelectedBlockIndex] = useState<number | null>(null);\n  const [showBlockPicker, setShowBlockPicker] = useState(false);\n  const [previewMode, setPreviewMode] = useState(false);\n  const [showSettings, setShowSettings] = useState(false);\n  const [saved, setSaved] = useState(false);\n  const [isHydrated, setIsHydrated] = useState(false);\n\n  const saveTimeout = useRef<NodeJS.Timeout | null>(null);\n\n  useEffect(() => {\n    setIsHydrated(true);\n  }, []);\n\n  useEffect(() => {\n    if (!slug) return;\n    fetch(`/api/sites/${slug}`) // TODO: add error handling for 404 and 500 errors\n      .then((res) => res.json())\n      .then((data) => {\n        console.debug('[EditPage] useEffect triggered', data);\n        setSiteData(data);\n      })\n      .catch((err) => {\n        console.error('Site load failed:', err);\n        alert('Failed to load site');\n      });\n  }, [slug]);\n\n  useEffect(() => {\n    console.debug('[EditPage] useEffect triggered', siteData, slug);\n    if (!siteData) {\n      console.debug('[EditPage] siteData is null', siteData, slug);\n      return;\n    }\n    if (saveTimeout.current) clearTimeout(saveTimeout.current);\n    saveTimeout.current = setTimeout(async () => {\n      if (!siteData?._meta?.id) return;\n      await fetch('/api/sites/save', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ id: siteData._meta.id, data: siteData }),\n      });\n      console.log('Saving site to UUID:', siteData?._meta?.id);\n\n      setSaved(true);\n      setTimeout(() => setSaved(false), 1500);\n    }, 800);\n  }, [siteData]);\n\n  const handleSlugChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!siteData) return;\n    const nextSlug = e.target.value.toLowerCase().replace(/[^a-z0-9-]+/g, '-');\n    setSiteData({ ...siteData, slug: nextSlug });\n  };\n\n  const handleTogglePublish = () => {\n    if (!siteData) return;\n    setSiteData({ ...siteData, is_published: !siteData.is_published });\n  };\n\n  const currentPage = siteData?.pages?.[currentPageIndex];\n  if (!currentPage) return;\n  const blocksWithId =\n    currentPage?.content_blocks?.map((b: any, i: number) => ({\n      _id: b._id || `block-${i}-${Date.now()}`,\n      ...b,\n    })) || [];\n\n  const handleBlockSave = (updatedBlock: any) => {\n    const pages = [...siteData.pages];\n    pages[currentPageIndex].content_blocks[selectedBlockIndex!] = updatedBlock;\n    setSiteData({ ...siteData, pages });\n    setSelectedBlockIndex(null);\n  };\n\n  const handleAddBlock = (type: string) => {\n    const newBlock = {\n      _id: `block-${Date.now()}`,\n      type,\n      content: {\n        headline: 'New Block',\n        subheadline: '',\n        cta_text: '',\n        cta_link: '',\n      },\n    };\n    const pages = [...siteData.pages];\n    pages[currentPageIndex].content_blocks.push(newBlock as any);\n    setSiteData({ ...siteData, pages });\n    setShowBlockPicker(false);\n  };\n\n  console.debug('[EditPage] siteData:', JSON.stringify(siteData));\n  return (\n    // <>\n    //   <Head>\n    //     <title>{siteData?.seo_title || siteData?.business_name || 'Editing Site'}</title>\n    //     <meta\n    //       name=\"description\"\n    //       content={siteData?.seo_description || 'Edit this site’s content, SEO, and design.'}\n    //     />\n    //     {siteData?.slug && (\n    //       <link\n    //         rel=\"canonical\"\n    //         href={`https://${siteData.custom_domain || `${siteData.slug}.quicksites.ai`}`}\n    //       />\n    //     )}\n    //     {siteData?.twitter_handle && <meta name=\"twitter:site\" content={siteData.twitter_handle} />}\n    //   </Head>\n\n    //   <div className=\"text-white p-6 max-w-screen-xl mx-auto relative\">\n    //     <div className=\"flex justify-between items-center mb-4\">\n    //       <div>\n    //         <input\n    //           type=\"text\"\n    //           value={siteData?.slug || ''}\n    //           onChange={handleSlugChange}\n    //           className=\"text-2xl font-bold bg-transparent border-b border-zinc-600 focus:outline-none px-2 py-1\"\n    //           placeholder=\"custom-slug\"\n    //         />\n    //         <span className=\"ml-2 text-sm text-zinc-400\">\n    //           {siteData?.is_published ? '🌐 Live' : '📝 Draft'}\n    //         </span>\n    //       </div>\n\n    //       <div className=\"flex items-center gap-4\">\n    //         <label className=\"flex items-center gap-2 text-sm cursor-pointer\">\n    //           <input\n    //             type=\"checkbox\"\n    //             checked={!!siteData?.is_published}\n    //             onChange={handleTogglePublish}\n    //             className=\"accent-blue-500\"\n    //           />\n    //           Publish\n    //         </label>\n\n    //         {siteData?.slug && (\n    //           <a\n    //             href={`https://${siteData.slug}.quicksites.ai`}\n    //             target=\"_blank\"\n    //             rel=\"noopener noreferrer\"\n    //             className=\"text-blue-400 text-sm hover:underline\"\n    //           >\n    //             🔗 View Site\n    //           </a>\n    //         )}\n\n    //         <button\n    //           onClick={() => setShowSettings(true)}\n    //           className=\"text-sm text-blue-400 hover:underline\"\n    //         >\n    //           🛠 Site Settings\n    //         </button>\n    //       </div>\n    //     </div>\n\n    //     {saved && (\n    //       <div className=\"absolute top-4 right-6 text-green-400 text-sm bg-zinc-800 px-3 py-1 rounded shadow\">\n    //         ✅ Saved\n    //       </div>\n    //     )}\n\n    //     {isHydrated && showSettings && siteData?._meta?.id && (\n    //       <ModalWrapper open={showSettings} onClose={() => setShowSettings(false)}>\n    //         <div className=\"h-full p-6\">\n    //           <SiteSettingsPanel siteId={siteData._meta.id} />\n    //         </div>\n    //       </ModalWrapper>\n    //     )}\n\n    //     {!siteData ? (\n    //       <p>Loading...</p>\n    //     ) : (\n    //       <>\n    //         <div className=\"flex justify-between mb-4\">\n    //           <label className=\"text-sm text-zinc-400\">Page:</label>\n    //           <select\n    //             value={currentPageIndex}\n    //             onChange={(e) => setCurrentPageIndex(Number(e.target.value))}\n    //             className=\"bg-zinc-800 p-2 rounded ml-2\"\n    //           >\n    //             {siteData.pages.map((p: any, i: number) => (\n    //               <option key={p.id} value={i}>\n    //                 {p.slug || `Page ${i + 1}`}\n    //               </option>\n    //             ))}\n    //           </select>\n    //           <button\n    //             onClick={() => setPreviewMode(!previewMode)}\n    //             className=\"text-sm text-blue-400 hover:underline\"\n    //           >\n    //             {previewMode ? '🔧 Edit Mode' : '👁️ Preview Mode'}\n    //           </button>\n    //         </div>\n\n    //         {previewMode ? (\n    //           <DndContext collisionDetection={closestCenter}>\n    //             <SortableContext\n    //               items={siteData.pages.map((p: any) => p.id)}\n    //               strategy={verticalListSortingStrategy}\n    //             >\n    //               <div className=\"space-y-4\">\n    //                 {siteData.pages.map((page: any, pageIndex: number) => (\n    //                   <div key={page.id} className=\"mb-8 bg-zinc-800 rounded p-4 shadow\">\n    //                     <div className=\"flex items-center gap-2 text-zinc-300 mb-4\">\n    //                       <GripVertical className=\"w-4 h-4 opacity-60\" />\n    //                       <h2 className=\"text-lg font-semibold\">\n    //                         📄 {page.slug || `Page ${pageIndex + 1}`}\n    //                       </h2>\n    //                     </div>\n    //                     {page.content_blocks.map((block: any, i: number) => (\n    //                       <div key={i} className=\"mb-4\">\n    //                         <RenderBlock block={block} />\n    //                       </div>\n    //                     ))}\n    //                   </div>\n    //                 ))}\n    //               </div>\n    //             </SortableContext>\n    //           </DndContext>\n    //         ) : (\n    //           <>\n    //             <SortableBlockList\n    //               blocks={blocksWithId}\n    //               onChange={(next) => {\n    //                 const pages = [...siteData.pages];\n    //                 pages[currentPageIndex].content_blocks = next;\n    //                 setSiteData({ ...siteData, pages });\n    //               }}\n    //               /*\n    //             onDelete={(blockId: string) => {\n    //               const pages = [...siteData.pages];\n    //               pages[currentPageIndex].content_blocks = pages[currentPageIndex].content_blocks.filter(\n    //                   (b: { _id: string }) => b._id !== blockId\n    //               );\n    //               setSiteData({ ...siteData, pages });\n    //             }}\n    //             onEdit={(blockId: string) => {\n    //               const index = blocksWithId.findIndex((b: { _id: string }) => b._id === blockId);\n    //               if (index !== -1) setSelectedBlockIndex(index);\n    //             }}\n    //             */\n    //             />\n    //             <button\n    //               className=\"mt-4 px-3 py-2 text-sm bg-blue-700 rounded hover:bg-blue-800\"\n    //               onClick={() => setShowBlockPicker(true)}\n    //             >\n    //               ➕ Add Block\n    //             </button>\n\n    //             {showBlockPicker && (\n    //               <div className=\"mt-4 p-4 border border-zinc-700 rounded bg-zinc-800\">\n    //                 <h3 className=\"text-sm font-semibold mb-2\">Choose a block type</h3>\n    //                 <div className=\"grid grid-cols-2 gap-3\">\n    //                   {['hero', 'services', 'testimonial', 'text', 'cta', 'quote'].map((type) => (\n    //                     <button\n    //                       key={type}\n    //                       onClick={() => handleAddBlock(type)}\n    //                       className=\"text-left p-2 rounded bg-zinc-700 hover:bg-zinc-600\"\n    //                     >\n    //                       <span className=\"block font-medium capitalize\">{type}</span>\n    //                     </button>\n    //                   ))}\n    //                 </div>\n    //               </div>\n    //             )}\n    //           </>\n    //         )}\n\n    //         {selectedBlockIndex !== null && (\n    //           <BlockSidebar\n    //             block={siteData.pages[currentPageIndex].content_blocks[selectedBlockIndex]}\n    //             onChange={(updated) => handleBlockSave(updated)}\n    //             onClose={() => setSelectedBlockIndex(null)}\n    //           />\n    //         )}\n    //       </>\n    //     )}\n    //   </div>\n    // </>\n    <div className=\"text-white p-6 max-w-screen-xl mx-auto relative\">\n      <h1 className=\"text-2xl font-bold\">Edit Page</h1>\n      <p>This is the edit page. (Coming soon)</p>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/edit/remix/[slug].tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { BlocksEditor } from '@/components/admin/templates/blocks-editor';\nimport type { Block } from '@/types/blocks';\n\nexport default function PublicEditPage() {\n  const searchParams = useSearchParams();\n  const slug = searchParams?.get('slug') as string;\n  const [data, setData] = useState<Block[] | null>(null);\n  const [forked, setForked] = useState(false);\n\n  useEffect(() => {\n    if (slug) {\n      fetch(`/api/template?domain=${slug}`)\n        .then((res) => res.json())\n        .then((d) => setData(d.data));\n    }\n  }, [slug]);\n\n  const saveFork = async () => {\n    await fetch('/api/fork-template', {\n      method: 'POST',\n      body: JSON.stringify({ base_slug: slug, data }),\n    });\n    setForked(true);\n  };\n\n  return (\n    <div className=\"p-6 text-white max-w-4xl mx-auto\">\n      <h1 className=\"text-xl font-bold mb-4\">Remix: {slug}</h1>\n      {data && <BlocksEditor blocks={data} onChange={(updated) => setData(updated)} />}\n      <button onClick={saveFork} className=\"mt-4 bg-green-700 px-4 py-2 rounded\">\n        Save a Copy\n      </button>\n      {forked && <p className=\"text-green-400 mt-2\">Forked! Check /starter to claim it.</p>}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/forks.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\n\ntype ForkRecord = {\n  name: string;\n  base?: string;\n  count: number;\n};\n\nexport default function ForksPage() {\n  const [data, setData] = useState<ForkRecord[]>([]);\n\n  useEffect(() => {\n    fetch('/api/forks')\n      .then((res) => res.json())\n      .then(setData);\n  }, []);\n\n  return (\n    <div className=\"p-6 text-white max-w-4xl mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-4\">🔁 Forked Templates</h1>\n      <table className=\"w-full text-sm\">\n        <thead className=\"text-zinc-400 text-xs border-b border-zinc-600\">\n          <tr>\n            <th className=\"text-left p-2\">Template</th>\n            <th className=\"text-left p-2\">Forked From</th>\n            <th className=\"text-right p-2\">Times Forked</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((row, i) => (\n            <tr key={i} className=\"border-b border-zinc-700\">\n              <td className=\"p-2\">{row.name}</td>\n              <td className=\"p-2\">{row.base || '—'}</td>\n              <td className=\"p-2 text-right\">{row.count}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/forks/[template_id].tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":2,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { json } from '@/lib/api/json';\nimport { useEffect, useState } from 'react';\n\ntype ForkRecord = {\n  handle: string;\n  name: string;\n  created_at: string;\n};\n\nexport default function ForksPage() {\n  const searchParams = useSearchParams();\n  const template_id = searchParams?.get('template_id') as string;\n  const [forks, setForks] = useState<ForkRecord[]>([]);\n\n  useEffect(() => {\n    if (!template_id) return;\n    fetch('/api/forks-tree?template_id=' + template_id)\n      .then((res) => res.json())\n      .then(setForks);\n  }, [template_id]);\n\n  return (\n    <div className=\"text-white p-6 max-w-2xl mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-6\">🌱 Remix Lineage</h1>\n      <ul className=\"space-y-3 border-l border-zinc-600 pl-4\">\n        {forks.map((f, i) => (\n          <li key={i}>\n            <div className=\"text-sm text-zinc-300\">\n              <strong>@{f.handle}</strong> → {f.name}\n              <div className=\"text-xs text-zinc-500\">{f.created_at}</div>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/goodbye.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/habits/[slug]/leaderboard.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\nimport { useRouter, useSearchParams } from 'next/navigation';\n\nexport default function HabitLeaderboard() {\n  const searchParams = useSearchParams();\n  const slug = searchParams?.get('slug') as string;\n  const [entries, setEntries] = useState([]);\n\n  useEffect(() => {\n    if (!slug) return;\n    fetch('/api/habit-leaderboard?slug=' + slug)\n      .then((res) => res.json())\n      .then(setEntries);\n  }, [slug]);\n\n  return (\n    <div className=\"max-w-xl mx-auto p-6 text-white\">\n      <h1 className=\"text-2xl font-bold mb-4\">🏆 {slug} Leaderboard</h1>\n      {!entries.length && <p className=\"text-zinc-400\">Loading...</p>}\n      <ol className=\"space-y-3 list-decimal list-inside\">\n        {entries.map((e: any, i: number) => (\n          <li key={i} className=\"bg-zinc-800 p-3 rounded\">\n            <div className=\"flex justify-between\">\n              <span>User: {e.user_id.slice(0, 8)}…</span>\n              <span className=\"text-green-400\">{e.total} check-ins</span>\n            </div>\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/habits/add.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useUser' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":17},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.","line":46,"column":6,"nodeType":"ArrayExpression","endLine":46,"endColumn":31,"suggestions":[{"desc":"Update the dependencies array to be: [slug, accessToken, user, router]","fix":{"range":[1492,1517],"text":"[slug, accessToken, user, router]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { useUser } from '@supabase/auth-helpers-react';\nimport { useSession } from '@supabase/auth-helpers-react';\n\nexport default function AddHabitBlock() {\n  const router = useRouter();\n  const session = useSession(); // ✅\n  const user = session?.user;\n  const accessToken = session?.access_token; // ✅\n  const params = useSearchParams();\n  const slug = params?.get('slug') || '';\n  const [status, setStatus] = useState('initial');\n\n  useEffect(() => {\n    if (!slug || !accessToken || !user) return;\n\n    navigator.geolocation.getCurrentPosition(async (pos) => {\n      setStatus('saving');\n      const res = await fetch('/api/create-block', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${accessToken}`, // ✅\n        },\n        body: JSON.stringify({\n          lat: pos.coords.latitude,\n          lon: pos.coords.longitude,\n          title: slug.charAt(0).toUpperCase() + slug.slice(1),\n          message: `Tracking: ${slug}`,\n          emoji: slug === 'floss' ? '🦷' : slug === 'water' ? '💧' : '🧘',\n          slug,\n          type: 'tracking',\n          actions: [{ label: 'Check In', type: 'check-in', target: slug }],\n        }),\n      });\n\n      if (res.ok) {\n        setStatus('done');\n        router.push('/world/me');\n      } else {\n        setStatus('error');\n      }\n    });\n  }, [slug, accessToken, user]);\n\n  return (\n    <div className=\"text-white p-6 text-center\">\n      {status === 'saving' && <p>📍 Pinning to your current location...</p>}\n      {status === 'done' && <p>✅ Added! Redirecting...</p>}\n      {status === 'error' && <p className=\"text-red-500\">⚠️ Error adding block.</p>}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/habits/index.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\n\nexport default function HabitLibrary() {\n  const [templates, setTemplates] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/habit-templates')\n      .then((res) => res.json())\n      .then(setTemplates);\n  }, []);\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6 text-white\">\n      <h1 className=\"text-2xl font-bold mb-4\">📚 Habit Library</h1>\n      <ul className=\"space-y-4\">\n        {templates.map((t: any) => (\n          <li key={t.slug} className=\"bg-zinc-800 rounded p-4\">\n            <div className=\"flex justify-between items-center\">\n              <div>\n                <div className=\"text-lg font-semibold\">\n                  {t.emoji} {t.title}\n                </div>\n                <div className=\"text-sm text-zinc-400\">{t.message}</div>\n              </div>\n              <a\n                href={`/habits/add?slug=${t.slug}`}\n                className=\"text-sm px-3 py-1 bg-blue-600 hover:bg-blue-700 rounded text-white\"\n              >\n                ➕ Add\n              </a>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/hall-of-fame.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { NextSeo } from 'next-seo';\nimport { json } from '@/lib/api/json';\nimport { usePageSeo } from '@/lib/usePageSeo';\nimport { useEffect, useState } from 'react';\n\nexport default function HallOfFame() {\n  const seo = usePageSeo({\n    description: 'Hall of fame page.',\n  });\n\n  const [entries, setEntries] = useState<any[]>([]);\n\n  useEffect(() => {\n    fetch('/api/hall-of-fame')\n      .then((res) => res.json())\n      .then(setEntries);\n  }, []);\n\n  return (\n    <>\n      <NextSeo {...seo} />\n      <div className=\"max-w-4xl mx-auto p-6 text-white\">\n        <h1 className=\"text-3xl font-bold mb-6 text-center\">🏅 Hall of Fame</h1>\n        <p className=\"text-center text-zinc-400 mb-8 text-sm\">\n          Celebrating those who grew the network with care and courage.\n        </p>\n\n        <table className=\"w-full text-sm text-zinc-200\">\n          <thead className=\"text-xs uppercase text-zinc-400 border-b border-zinc-700\">\n            <tr>\n              <th className=\"text-left p-2\">Name / Alias</th>\n              <th className=\"text-right p-2\">Claims</th>\n              <th className=\"text-right p-2\">Referrals</th>\n              <th className=\"text-right p-2 font-bold\">Impact</th>\n            </tr>\n          </thead>\n          <tbody>\n            {entries.map((entry, i) => (\n              <tr key={i} className={i % 2 === 0 ? 'bg-zinc-900' : 'bg-zinc-800'}>\n                <td className=\"p-2\">{entry.alias || '🕶 Anonymous'}</td>\n                <td className=\"p-2 text-right\">{entry.claims}</td>\n                <td className=\"p-2 text-right\">{entry.referrals}</td>\n                <td className=\"p-2 text-right font-bold\">{entry.claims + entry.referrals}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/hub.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/hub/[handle].tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":19},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":35,"column":13,"nodeType":"JSXOpeningElement","endLine":39,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport Link from 'next/link';\nimport { json } from '@/lib/api/json';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { useEffect, useState } from 'react';\n\nexport default function BlockHub() {\n  const searchParams = useSearchParams();\n  const handle = searchParams?.get('handle') as string;\n  const [blocks, setBlocks] = useState([]);\n\n  useEffect(() => {\n    if (!handle) return;\n    fetch('/api/blocks-by-handle?handle=' + handle)\n      .then((res) => res.json())\n      .then(setBlocks);\n  }, [handle]);\n\n  return (\n    <div className=\"p-6 text-white max-w-3xl mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-6\">📍 Block Hub: @{handle}</h1>\n      <ul className=\"space-y-4\">\n        {blocks.map((b: any) => (\n          <li key={b.id} className=\"bg-zinc-800 rounded p-4\">\n            <div className=\"text-xl\">\n              {b.emoji} {b.title}\n            </div>\n            <div className=\"text-sm text-zinc-400\">{b.message}</div>\n            <Link\n              href={`/hub/${handle}/print`}\n              className=\"inline-block mb-6 text-blue-400 hover:underline text-sm\"\n            >\n              🖨️ Print All Block Labels\n            </Link>\n            <img\n              src={`/api/block-qr?handle=${handle}&blockId=${b.id}`}\n              alt=\"QR code\"\n              className=\"mt-3 w-24 h-24 rounded bg-white p-1\"\n            />\n            <a\n              href={`/world/${handle}#block-${b.id}`}\n              className=\"text-blue-400 text-xs hover:underline\"\n            >\n              View on map\n            </a>\n            <a\n              href={`/api/print-labels-pdf?handle=${handle}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"inline-block text-blue-500 hover:underline text-sm mt-2\"\n            >\n              🧾 Download as PDF\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/hub/[handle]/print.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":2,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":26,"column":11,"nodeType":"JSXOpeningElement","endLine":30,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { json } from '@/lib/api/json';\nimport { useEffect, useState } from 'react';\n\nexport default function PrintLabels() {\n  const searchParams = useSearchParams();\n  const handle = searchParams?.get('handle') as string;\n  const [blocks, setBlocks] = useState([]);\n\n  useEffect(() => {\n    if (!handle) return;\n    fetch('/api/blocks-by-handle?handle=' + handle)\n      .then((res) => res.json())\n      .then(setBlocks);\n  }, [handle]);\n\n  return (\n    <div className=\"p-4 print:p-0 bg-white text-black grid grid-cols-2 sm:grid-cols-3 gap-4\">\n      {blocks.map((b: any) => (\n        <div key={b.id} className=\"border p-3 rounded text-center text-sm break-words\">\n          <div className=\"text-xl\">\n            {b.emoji} {b.title}\n          </div>\n          <p className=\"text-xs text-zinc-600\">{b.message}</p>\n          <img\n            src={`/api/block-qr?handle=${handle}&blockId=${b.id}`}\n            alt=\"QR\"\n            className=\"w-32 h-32 mx-auto my-2\"\n          />\n          <p className=\"text-xs text-zinc-500\">\n            quicksites.ai/world/{handle}#block-{b.id}\n          </p>\n          <div className=\"flex justify-center\">\n            <a\n              href={`/api/print-labels-pdf?handle=${handle}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"inline-block text-blue-500 hover:underline text-sm mt-2\"\n              style={{ border: '1px solid #222' }}\n            >\n              🧾 Download as PDF\n            </a>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/launch.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/leaderboard.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":34,"column":19,"nodeType":"JSXOpeningElement","endLine":38,"endColumn":21}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { NextSeo } from 'next-seo';\nimport { json } from '@/lib/api/json';\nimport { usePageSeo } from '@/lib/usePageSeo';\nimport { useEffect, useState } from 'react';\nimport Link from 'next/link';\n\nexport default function WeeklyLeaderboard() {\n  const [campaigns, setCampaigns] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/weekly-leaderboard')\n      .then((res) => res.json())\n      .then(setCampaigns);\n  }, []);\n\n  return (\n    <>\n      <NextSeo\n        {...usePageSeo({\n          description: 'Leaderboard page.',\n        })}\n      />\n      <div className=\"max-w-3xl mx-auto p-6 text-white\">\n        <h1 className=\"text-3xl font-bold mb-6\">🏆 Weekly Leaderboard</h1>\n        <p className=\"text-zinc-400 mb-4\">\n          Top 10 campaigns this week by cheers, check-ins, echoes, or reflections.\n        </p>\n        <ol className=\"space-y-4\">\n          {campaigns.map((c: any, i: number) => (\n            <li key={c.slug} className=\"bg-zinc-800 rounded p-4 flex justify-between items-center\">\n              <div className=\"flex items-center gap-3\">\n                {i < 3 && (\n                  <img\n                    src={`/api/badge/${c.slug}`}\n                    alt=\"badge\"\n                    className=\"w-12 h-12 rounded border border-zinc-700\"\n                  />\n                )}\n                <div>\n                  <Link\n                    href={`/support/${c.slug}`}\n                    className=\"text-blue-400 font-semibold hover:underline\"\n                  >\n                    {c.headline}\n                  </Link>\n                  <p className=\"text-xs text-zinc-400\">{c.action.toUpperCase()}</p>\n                </div>\n              </div>\n              <span className=\"text-xl font-bold text-green-400\">{c.count}</span>\n            </li>\n          ))}\n        </ol>\n      </div>\n    </>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/manifesto.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/map.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/match.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useState } from 'react';\nimport { json } from '@/lib/api/json';\n\nexport default function MatchPage() {\n  const [tags, setTags] = useState('');\n  const [results, setResults] = useState([]);\n\n  const search = async () => {\n    const res = await fetch('/api/match?tags=' + encodeURIComponent(tags));\n    const json = await res.json();\n    setResults(json);\n  };\n\n  return (\n    <div className=\"max-w-xl mx-auto p-6 text-white space-y-4\">\n      <h1 className=\"text-2xl font-bold\">🔍 Match by Goals</h1>\n      <input\n        value={tags}\n        onChange={(e) => setTags(e.target.value)}\n        placeholder=\"e.g. floss, meditate\"\n        className=\"text-black p-2 w-full rounded\"\n      />\n      <button onClick={search} className=\"bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded\">\n        Match\n      </button>\n\n      <ul className=\"space-y-3 pt-4\">\n        {results.map((r: any) => (\n          <li key={r.user_id} className=\"bg-zinc-800 p-4 rounded\">\n            <div className=\"text-lg\">\n              <a href={`/world/${r.handle}/share`} className=\"text-blue-400 hover:underline\">\n                {r.emoji} @{r.handle}\n              </a>\n            </div>\n            <p className=\"text-sm text-zinc-400\">{r.bio}</p>\n            <div className=\"text-xs text-green-400 uppercase mt-1\">{r.goal_tags?.join(' • ')}</div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/metrics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/portfolio/[handle].tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":2,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'usePageSeo' is defined but never used.","line":5,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":5,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'NextSeo' is defined but never used.","line":6,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":6,"endColumn":17},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useSession' is defined but never used.","line":7,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":7,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useUser' is defined but never used.","line":8,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":8,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { json } from '@/lib/api/json';\nimport { useEffect, useState } from 'react';\nimport { usePageSeo } from '@/lib/usePageSeo';\nimport { NextSeo } from 'next-seo';\nimport { useSession } from '@supabase/auth-helpers-react';\nimport { useUser } from '@supabase/auth-helpers-react';\nimport { Template } from '@/types/template';\n\nexport default function CreatorTemplatesPage() {\n  const searchParams = useSearchParams();\n  const handle = searchParams?.get('handle') as string;\n  const [templates, setTemplates] = useState([]);\n\n  useEffect(() => {\n    if (!handle) return;\n    fetch('/api/templates-by-creator?handle=' + handle)\n      .then((res) => res.json())\n      .then(setTemplates);\n  }, [handle]);\n\n  return (\n    <div className=\"text-white p-6 max-w-3xl mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-6\">🎨 Templates by @{handle}</h1>\n      <ul className=\"space-y-4\">\n        {templates.map((t: Template, i) => (\n          <li key={i} className=\"bg-zinc-800 rounded p-4\">\n            <div className=\"font-semibold\">{t.name}</div>\n            <div className=\"text-zinc-400 text-sm\">{t.headline || t.description}</div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/press.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Link' is defined but never used.","line":5,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":5,"endColumn":12}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { NextSeo } from 'next-seo';\nimport { usePageSeo } from '@/lib/usePageSeo';\nimport Image from 'next/image';\nimport Link from 'next/link';\n\nexport default function PressPage() {\n  return (\n    <>\n      <NextSeo\n        {...usePageSeo({\n          description: 'Press page.',\n        })}\n      />\n      <div className=\"p-6 max-w-3xl mx-auto text-white\">\n        <h1 className=\"text-3xl font-bold mb-4\">📣 QuickSites Press Kit</h1>\n\n        <p className=\"text-zinc-400 mb-6\">\n          QuickSites is a transparent publishing layer for human-centered presence. Open-source,\n          steward-led, and remixable.\n        </p>\n\n        <h2 className=\"text-xl font-semibold mb-2\">🎨 Logos & Media</h2>\n        <div className=\"mb-4 space-x-4\">\n          <a href=\"/press/quicksites-logo.svg\" className=\"underline text-blue-400\" download>\n            Download SVG\n          </a>\n          <a href=\"/press/quicksites-logo.png\" className=\"underline text-blue-400\" download>\n            Download PNG\n          </a>\n        </div>\n        <Image\n          src=\"/press/quicksites-logo.png\"\n          alt=\"QuickSites Logo\"\n          width={200}\n          height={80}\n          className=\"mb-6 bg-white p-2 rounded\"\n        />\n\n        <h2 className=\"text-xl font-semibold mb-2\">📸 Screenshots</h2>\n        <div className=\"mb-6\">\n          <Image\n            src=\"/press/site-preview.png\"\n            alt=\"Site Screenshot\"\n            width={600}\n            height={320}\n            className=\"rounded border border-zinc-700\"\n          />\n        </div>\n\n        <h2 className=\"text-xl font-semibold mb-2\">📰 Description</h2>\n        <p className=\"text-zinc-300 mb-6 text-sm\">\n          QuickSites lets anyone launch a fully transparent site in minutes, remix existing\n          templates, and track civic impact via referral chains and remix trees. Built with\n          simplicity, shared stewardship, and sunlight.\n        </p>\n\n        <h2 className=\"text-xl font-semibold mb-2\">📬 Contact</h2>\n        <p className=\"text-sm text-zinc-400\">\n          For press inquiries or interviews, email:{' '}\n          <code className=\"text-white\">press@quicksites.ai</code>\n        </p>\n      </div>\n    </>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/publish/[slug].tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":19},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":35,"column":11,"nodeType":"JSXOpeningElement","endLine":39,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { Template } from '@/types/template';\n\nexport default function PublishPage() {\n  const searchParams = useSearchParams();\n  const slug = searchParams?.get('slug') as string;\n  const [template, setTemplate] = useState<Template | null>(null);\n  const [status, setStatus] = useState<'idle' | 'publishing' | 'done'>('idle');\n\n  useEffect(() => {\n    if (!slug) return;\n    fetch(`/api/template?domain=${slug}`)\n      .then((res) => res.json())\n      .then((d) => setTemplate(d?.data));\n  }, [slug]);\n\n  const handlePublish = async () => {\n    setStatus('publishing');\n    await fetch('/api/publish-site', {\n      method: 'POST',\n      body: JSON.stringify({ domain: slug }),\n    });\n    setStatus('done');\n  };\n\n  return (\n    <div className=\"max-w-xl mx-auto p-6 text-white text-center\">\n      <h1 className=\"text-2xl font-bold mb-4\">🚀 Publish: {slug}</h1>\n      {template && (\n        <>\n          <p className=\"mb-2 text-sm text-zinc-400\">Template: {template.id}</p>\n          <img\n            src={`/screenshots/${slug}.thumb.png`}\n            alt={`${slug} preview`}\n            className=\"w-full h-32 object-cover rounded mb-4\"\n          />\n        </>\n      )}\n      {status === 'done' ? (\n        <p className=\"text-green-400 font-medium\">🎉 Published! Visit: https://{slug}</p>\n      ) : (\n        <button\n          onClick={handlePublish}\n          className=\"bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-white\"\n        >\n          {status === 'publishing' ? 'Publishing…' : 'Publish Site'}\n        </button>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/remix-map.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport ReactFlow, { Background, Controls } from 'reactflow';\nimport { json } from '@/lib/api/json';\nimport 'reactflow/dist/style.css';\nimport { useEffect, useState } from 'react';\n\nexport default function RemixMap() {\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/remix-dag')\n      .then((res) => res.json())\n      .then(({ nodes, edges }) => {\n        setNodes(nodes);\n        setEdges(edges);\n      });\n  }, []);\n\n  return (\n    <div className=\"h-screen bg-zinc-900 text-white\">\n      <h1 className=\"text-2xl font-bold p-4\">🌐 Remix DAG</h1>\n      <div className=\"h-[90%]\">\n        <ReactFlow nodes={nodes} edges={edges} fitView>\n          <Background />\n          <Controls />\n        </ReactFlow>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/settings/share.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'profile' is assigned a value but never used.","line":11,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":11,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\nimport { useUser, useSession } from '@supabase/auth-helpers-react';\n\nexport default function ShareSettings() {\n  const user = useUser();\n  const session = useSession();\n  const accessToken = session?.access_token;\n\n  const [profile, setProfile] = useState<any>(null);\n  const [bio, setBio] = useState('');\n  const [emoji, setEmoji] = useState('🌱');\n  const [tags, setTags] = useState('');\n  const [visible, setVisible] = useState(false);\n  const [status, setStatus] = useState<'idle' | 'saving' | 'done' | 'error'>('idle');\n\n  useEffect(() => {\n    if (!user) return;\n    fetch('/api/public-profile?handle=' + user.user_metadata.handle)\n      .then((res) => res.json())\n      .then((data) => {\n        setProfile(data);\n        setBio(data.bio || '');\n        setEmoji(data.emoji || '🌱');\n        setTags((data.goal_tags || []).join(', '));\n        setVisible(data.visible);\n      });\n  }, [user]);\n\n  const handleSave = async () => {\n    if (!accessToken || !user) return;\n    setStatus('saving');\n    const res = await fetch('/api/update-profile', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`,\n      },\n      body: JSON.stringify({\n        bio,\n        emoji,\n        visible,\n        goal_tags: tags.split(',').map((t) => t.trim()),\n        handle: user.user_metadata.handle,\n      }),\n    });\n    setStatus(res.ok ? 'done' : 'error');\n  };\n\n  return (\n    <div className=\"p-6 text-white max-w-xl mx-auto space-y-4\">\n      <h1 className=\"text-2xl font-bold\">📡 Share My World</h1>\n      <p className=\"text-zinc-400 text-sm\">\n        This page controls what others can see at /world/[handle]/share\n      </p>\n\n      <div>\n        <label className=\"block text-sm mb-1\">Emoji</label>\n        <input\n          value={emoji}\n          onChange={(e) => setEmoji(e.target.value)}\n          className=\"text-black w-full p-1 rounded\"\n        />\n      </div>\n\n      <div>\n        <label className=\"block text-sm mb-1\">Short Bio</label>\n        <textarea\n          value={bio}\n          onChange={(e) => setBio(e.target.value)}\n          rows={2}\n          className=\"text-black w-full p-1 rounded\"\n        />\n      </div>\n\n      <div>\n        <label className=\"block text-sm mb-1\">Goal Tags (comma separated)</label>\n        <input\n          value={tags}\n          onChange={(e) => setTags(e.target.value)}\n          className=\"text-black w-full p-1 rounded\"\n        />\n      </div>\n\n      <div className=\"flex items-center space-x-2\">\n        <input type=\"checkbox\" checked={visible} onChange={() => setVisible(!visible)} />\n        <label>Make my page public</label>\n      </div>\n\n      <button onClick={handleSave} className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded\">\n        {status === 'saving' ? 'Saving...' : 'Save Changes'}\n      </button>\n      {status === 'done' && <p className=\"text-green-400 text-sm\">✅ Updated</p>}\n      {status === 'error' && <p className=\"text-red-500 text-sm\">⚠️ Something went wrong</p>}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/source.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/start.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\nimport { useRouter } from 'next/navigation';\nimport { useUser, useSession } from '@supabase/auth-helpers-react';\n\nexport default function StartPage() {\n  const user = useUser();\n  const session = useSession();\n  const router = useRouter();\n\n  const [templates, setTemplates] = useState([]);\n  const [loc, setLoc] = useState<GeolocationCoordinates | null>(null);\n  const [selected, setSelected] = useState('');\n  const [status, setStatus] = useState<'idle' | 'saving' | 'done' | 'error'>('idle');\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      (pos) => setLoc(pos.coords),\n      () => setLoc(null)\n    );\n    fetch('/api/habit-templates')\n      .then((_res) => _res.json())\n      .then(setTemplates);\n  }, []);\n\n  const handleAdd = async () => {\n    if (!selected || !user || !session || !loc) return;\n    setStatus('saving');\n\n    const accessToken = session.access_token;\n\n    const res = await fetch('/api/create-block', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`,\n      },\n      body: JSON.stringify({\n        lat: loc.latitude,\n        lon: loc.longitude,\n        title: selected.charAt(0).toUpperCase() + selected.slice(1),\n        message: `Tracking: ${selected}`,\n        emoji: selected === 'floss' ? '🦷' : selected === 'water' ? '💧' : '🧘',\n        slug: selected,\n        type: 'tracking',\n        actions: [{ label: 'Check In', type: 'check-in', target: selected }],\n      }),\n    });\n\n    if (res.ok) {\n      setStatus('done');\n      router.push('/world/me');\n    } else {\n      setStatus('error');\n    }\n  };\n\n  return (\n    <div className=\"text-white p-6 max-w-xl mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-4\">👋 Welcome to Your AR Habit Tracker</h1>\n      <p className=\"text-zinc-400 mb-4\">\n        Choose a habit to start tracking, and we&apos;ll place it in your world:\n      </p>\n      <ul className=\"space-y-3\">\n        {templates.map((t: any) => (\n          <li key={t.slug}>\n            <label className=\"flex items-center space-x-3 cursor-pointer\">\n              <input\n                type=\"radio\"\n                name=\"habit\"\n                value={t.slug}\n                checked={selected === t.slug}\n                onChange={() => setSelected(t.slug)}\n                className=\"form-radio\"\n              />\n              <span>\n                {t.emoji} {t.title}\n              </span>\n            </label>\n          </li>\n        ))}\n      </ul>\n      <button\n        onClick={handleAdd}\n        disabled={!selected || !loc || status === 'saving'}\n        className=\"mt-6 px-4 py-2 rounded bg-blue-600 hover:bg-blue-700 disabled:opacity-50\"\n      >\n        {status === 'saving' ? 'Creating...' : '➕ Add to My World'}\n      </button>\n      {status === 'error' && (\n        <p className=\"text-red-500 mt-4\">Something went wrong. Please try again.</p>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/starter.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··············setSlug(e.target.value.toLowerCase().replace(/[^a-z0-9-]+/g,·'-'))⏎············` with `·setSlug(e.target.value.toLowerCase().replace(/[^a-z0-9-]+/g,·'-'))`","line":190,"column":29,"nodeType":null,"messageId":"replace","endLine":192,"endColumn":13,"fix":{"range":[5707,5801],"text":" setSlug(e.target.value.toLowerCase().replace(/[^a-z0-9-]+/g, '-'))"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use client';\n\nimport { useEffect, useState, useRef } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport Image from 'next/image';\nimport { createClient } from '@supabase/supabase-js';\nimport { generateBaseSlug } from '@/lib/slugHelpers';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nconst copyToClipboard = (text: string) => {\n  navigator.clipboard.writeText(text).then(() => {\n    alert('Link copied to clipboard!');\n  });\n};\n\nexport default function StarterPage() {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n\n  const [bizName, setBizName] = useState('');\n  const [location, setLocation] = useState('');\n  const [slug, setSlug] = useState('');\n  const [domain, setDomain] = useState('');\n  const [template, setTemplate] = useState<any>(null);\n  const [templateVersionId, setTemplateVersionId] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [slugAvailable, setSlugAvailable] = useState<boolean | null>(null);\n  const [generatingSlug, setGeneratingSlug] = useState(false);\n  const [typedDomain, setTypedDomain] = useState('');\n  const bizNameRef = useRef<HTMLInputElement | null>(null);\n\n  useEffect(() => {\n    bizNameRef.current?.focus();\n  }, []);\n\n  useEffect(() => {\n    const name = searchParams?.get('template') || '';\n    if (!name) return;\n\n    supabase\n      .from('template_versions')\n      .select('*')\n      .eq('template_name', name)\n      .order('created_at', { ascending: false })\n      .limit(1)\n      .then(({ data, error }) => {\n        if (error || !data?.length) {\n          console.error('Template version load error:', error);\n          setTemplate(null);\n          setTemplateVersionId(null);\n        } else {\n          setTemplate(data[0]);\n          setTemplateVersionId(data[0].id);\n        }\n      });\n  }, [searchParams]);\n\n  useEffect(() => {\n    if (!slug) return setSlugAvailable(null);\n\n    const delay = setTimeout(async () => {\n      const { data } = await supabase.from('sites').select('id').eq('slug', slug).maybeSingle();\n      setSlugAvailable(!data);\n    }, 400);\n\n    return () => clearTimeout(delay);\n  }, [slug]);\n\n  useEffect(() => {\n    if (!bizName.trim()) return;\n\n    setGeneratingSlug(true);\n    const baseSlug = generateBaseSlug(bizName, location);\n    const fullDomain = `${baseSlug}.com`;\n\n    const delay = setTimeout(() => {\n      setSlug(baseSlug);\n      setDomain(fullDomain);\n\n      let i = 0;\n      const typeInterval = setInterval(() => {\n        setTypedDomain(fullDomain.slice(0, i + 1));\n        i++;\n        if (i === fullDomain.length) {\n          clearInterval(typeInterval);\n          setGeneratingSlug(false);\n        }\n      }, 50);\n    }, 300);\n\n    return () => clearTimeout(delay);\n  }, [bizName, location]);\n\n  const claimIt = async () => {\n    if (!templateVersionId) {\n      alert('Template failed to load. Please choose a different template or try again.');\n      return;\n    }\n\n    if (slugAvailable === false) {\n      alert('That slug is already taken. Please choose another.');\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const res = await fetch('/api/sites/create', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          template_version_id: templateVersionId,\n          business_name: bizName,\n          location,\n          domain,\n          slug,\n        }),\n      });\n\n      if (!res.ok) {\n        const errorText = await res.text();\n        console.error('Create site error:', errorText);\n        alert('Error creating site. Check console for details.');\n        setLoading(false);\n        return;\n      }\n\n      const site = await res.json();\n      const slugToUse = site.slug ?? site.site_id;\n      router.push(`/edit/${slugToUse}`);\n    } catch (err) {\n      console.error('Unexpected error in claimIt:', err);\n      alert('Unexpected error. Please try again.');\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"max-w-xl mx-auto text-white p-6 space-y-6\">\n      <h1 className=\"text-3xl font-bold text-center\">✨ Create Your QuickSite</h1>\n\n      {template ? (\n        <div className=\"bg-zinc-800 p-4 rounded shadow\">\n          <h2 className=\"text-xl font-semibold mb-1\">{template.template_name}</h2>\n          {template.thumbnail_url && (\n            <Image\n              src={template.thumbnail_url}\n              alt=\"Preview\"\n              width={800}\n              height={450}\n              className=\"rounded mb-3\"\n            />\n          )}\n          <p className=\"text-sm text-zinc-400 mb-2\">{template.description}</p>\n        </div>\n      ) : (\n        <p className=\"text-zinc-400 italic\">Loading template preview...</p>\n      )}\n\n      <div className=\"space-y-4\">\n        <div>\n          <label className=\"text-sm text-zinc-400\">Business Name</label>\n          <input\n            ref={bizNameRef}\n            value={bizName}\n            onChange={(e) => setBizName(e.target.value)}\n            className=\"w-full mb-3 p-2 rounded bg-zinc-800 text-white\"\n            placeholder=\"e.g. Towmanz\"\n          />\n        </div>\n\n        <div>\n          <label className=\"text-sm text-zinc-400\">Location (optional)</label>\n          <input\n            value={location}\n            onChange={(e) => setLocation(e.target.value)}\n            className=\"w-full mb-3 p-2 rounded bg-zinc-800 text-white\"\n            placeholder=\"e.g. Auburn, WA\"\n          />\n        </div>\n\n        <div>\n          <label className=\"text-sm text-zinc-400\">Custom Slug (optional)</label>\n          <input\n            value={slug}\n            onChange={(e) =>\n              setSlug(e.target.value.toLowerCase().replace(/[^a-z0-9-]+/g, '-'))\n            }\n            className=\"w-full mb-1 p-2 rounded bg-zinc-800 text-white\"\n            placeholder=\"e.g. mytow-auburn\"\n          />\n          {slug && slugAvailable !== null && (\n            <p className={`text-sm ${slugAvailable ? 'text-green-400' : 'text-red-400'}`}>\n              {slugAvailable ? '✅ Available' : '🚫 Already taken'}\n            </p>\n          )}\n        </div>\n\n        <div className=\"text-center space-y-2\">\n          {domain ? (\n            <>\n              <p className=\"text-zinc-300 text-sm\">Suggested Domain:</p>\n              <div className=\"text-lg font-mono font-bold tracking-wide\">\n                {typedDomain || (generatingSlug ? '...' : domain)}\n              </div>\n\n              {slug && (\n                <>\n                  <div className=\"text-sm text-zinc-400 flex items-center justify-center gap-2\">\n                    <span>Preview:</span>\n                    <code className=\"text-white px-2 py-1 bg-zinc-700 rounded text-sm\">\n                      /edit/{slug}\n                    </code>\n                    <button\n                      onClick={() => copyToClipboard(`${window.location.origin}/edit/${slug}`)}\n                      className=\"text-blue-400 hover:underline text-xs\"\n                    >\n                      Copy\n                    </button>\n                  </div>\n\n                  <div className=\"text-sm text-zinc-400 flex flex-col items-center gap-1 mt-2\">\n                    <span>Public Site:</span>\n                    <code className=\"text-white px-2 py-1 bg-zinc-700 rounded text-sm\">\n                      https://{slug}.quicksites.ai\n                    </code>\n                    <button\n                      onClick={() => copyToClipboard(`https://${slug}.quicksites.ai`)}\n                      className=\"text-blue-400 hover:underline text-xs\"\n                    >\n                      Copy Public Link\n                    </button>\n                  </div>\n                </>\n              )}\n\n              <button\n                onClick={claimIt}\n                disabled={loading}\n                className=\"mt-2 px-4 py-2 bg-green-600 rounded text-white font-medium hover:bg-green-700\"\n              >\n                🚀 Claim It\n              </button>\n            </>\n          ) : (\n            bizName.trim() !== '' && (\n              <p className=\"text-sm text-red-400\">\n                ⚠️ Please complete the business name and location to generate a domain.\n              </p>\n            )\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/support/[slug].tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":14},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'searchParams'. Either include it or remove the dependency array.","line":18,"column":6,"nodeType":"ArrayExpression","endLine":18,"endColumn":33,"suggestions":[{"desc":"Update the dependencies array to be: [searchParams]","fix":{"range":[640,667],"text":"[searchParams]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","line":18,"column":7,"nodeType":"ChainExpression","endLine":18,"endColumn":32},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'searchParams'. Either include it or remove the dependency array.","line":24,"column":6,"nodeType":"ArrayExpression","endLine":24,"endColumn":34,"suggestions":[{"desc":"Update the dependencies array to be: [searchParams]","fix":{"range":[788,816],"text":"[searchParams]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","line":24,"column":7,"nodeType":"ChainExpression","endLine":24,"endColumn":33}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { json } from '@/lib/api/json';\nimport { useEffect, useState } from 'react';\nimport { CelebrationModal } from '@/components/embed/celebration-modal';\n\nexport default function SupportCampaign() {\n  const searchParams = useSearchParams();\n  const [campaign, setCampaign] = useState<any>(null);\n  const [showBadgeCelebration, setShowBadgeCelebration] = useState(false);\n\n  useEffect(() => {\n    if (!searchParams?.get('slug')) return;\n    fetch('/api/campaign?slug=' + searchParams.get('slug'))\n      .then((res) => res.json())\n      .then(setCampaign);\n  }, [searchParams?.get('slug')]);\n\n  useEffect(() => {\n    if (searchParams?.get('badge') === 'done') {\n      setShowBadgeCelebration(true);\n    }\n  }, [searchParams?.get('badge')]);\n\n  if (!campaign) return <div className=\"p-6 text-white\">Loading...</div>;\n\n  const pct = Math.min(100, Math.round((campaign.count / campaign.goal_count) * 100));\n\n  return (\n    <div className=\"max-w-xl mx-auto p-6 text-white space-y-6\">\n      <h1 className=\"text-2xl font-bold\">{campaign.headline}</h1>\n      <p className=\"text-zinc-400 text-sm\">\n        Goal: {campaign.goal_count} {campaign.target_action}s\n      </p>\n      <div className=\"bg-zinc-700 h-4 rounded overflow-hidden\">\n        <div className=\"bg-green-500 h-full\" style={{ width: pct + '%' }}></div>\n      </div>\n      <p className=\"text-sm text-green-300\">\n        {campaign.count} {campaign.target_action}s received\n      </p>\n\n      {showBadgeCelebration && (\n        <CelebrationModal\n          type=\"badge\"\n          slug={searchParams?.get('slug') as string}\n          onClose={() => setShowBadgeCelebration(false)}\n        />\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/support/[slug]/edit.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":19},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'searchParams'. Either include it or remove the dependency array.","line":16,"column":6,"nodeType":"ArrayExpression","endLine":16,"endColumn":33,"suggestions":[{"desc":"Update the dependencies array to be: [searchParams]","fix":{"range":[522,549],"text":"[searchParams]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","line":16,"column":7,"nodeType":"ChainExpression","endLine":16,"endColumn":32}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\nimport { useRouter, useSearchParams } from 'next/navigation';\n\nexport default function EditCampaign() {\n  const searchParams = useSearchParams();\n  const [data, setData] = useState<any>(null);\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    if (!searchParams?.get('slug')) return;\n    fetch('/api/campaign?slug=' + searchParams.get('slug'))\n      .then((res) => res.json())\n      .then(setData);\n  }, [searchParams?.get('slug')]);\n\n  const submit = async () => {\n    const res = await fetch('/api/update-campaign', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data),\n    });\n    const json = await res.json();\n    setMessage(json.error ? 'Error: ' + json.error : '✅ Updated!');\n  };\n\n  if (!data) return <div className=\"p-6 text-white\">Loading...</div>;\n\n  return (\n    <div className=\"max-w-xl mx-auto p-6 text-white space-y-4\">\n      <h1 className=\"text-2xl font-bold\">✏️ Edit Campaign</h1>\n      <input\n        value={data.headline}\n        onChange={(e) => setData({ ...data, headline: e.target.value })}\n        className=\"w-full p-2 text-black rounded\"\n      />\n      <input\n        type=\"number\"\n        value={data.goal_count}\n        onChange={(e) => setData({ ...data, goal_count: parseInt(e.target.value) })}\n        className=\"w-full p-2 text-black rounded\"\n      />\n      <select\n        value={data.target_action}\n        onChange={(e) => setData({ ...data, target_action: e.target.value })}\n        className=\"w-full p-2 text-black rounded\"\n      >\n        <option value=\"cheer\">🎉 Cheer</option>\n        <option value=\"echo\">🔁 Echo</option>\n        <option value=\"reflect\">🪞 Reflect</option>\n        <option value=\"checkin\">✅ Check-in</option>\n      </select>\n      <input\n        value={data.block_id}\n        onChange={(e) => setData({ ...data, block_id: e.target.value })}\n        className=\"w-full p-2 text-black rounded\"\n      />\n      <button onClick={submit} className=\"bg-green-600 hover:bg-green-700 px-4 py-2 rounded\">\n        Save\n      </button>\n      {message && <p className=\"text-green-300 text-sm\">{message}</p>}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/support/create.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useState } from 'react';\nimport { json } from '@/lib/api/json';\n\nexport default function PublicCampaignCreate() {\n  const [slug, setSlug] = useState('');\n  const [headline, setHeadline] = useState('');\n  const [goal, setGoal] = useState(10);\n  const [action, setAction] = useState('cheer');\n  const [blockId, setBlockId] = useState('');\n  const [submitted, setSubmitted] = useState('');\n\n  const submit = async () => {\n    const res = await fetch('/api/create-campaign', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        slug,\n        headline,\n        goal_count: goal,\n        target_action: action,\n        blockId,\n      }),\n    });\n\n    const json = await res.json();\n    setSubmitted(json.error ? 'Error: ' + json.error : '✅ Campaign created!');\n  };\n\n  return (\n    <div className=\"max-w-xl mx-auto p-6 text-white space-y-4\">\n      <h1 className=\"text-2xl font-bold\">📣 Launch a Campaign</h1>\n      <p className=\"text-sm text-zinc-400\">\n        Create a public support goal around a habit or mission.\n      </p>\n      <input\n        value={slug}\n        onChange={(e) => setSlug(e.target.value)}\n        placeholder=\"Slug (e.g. floss)\"\n        className=\"p-2 text-black w-full rounded\"\n      />\n      <input\n        value={headline}\n        onChange={(e) => setHeadline(e.target.value)}\n        placeholder=\"Headline\"\n        className=\"p-2 text-black w-full rounded\"\n      />\n      <input\n        type=\"number\"\n        value={goal}\n        onChange={(e) => setGoal(Number(e.target.value))}\n        className=\"p-2 text-black w-full rounded\"\n      />\n      <select\n        value={action}\n        onChange={(e) => setAction(e.target.value)}\n        className=\"p-2 text-black w-full rounded\"\n      >\n        <option value=\"cheer\">🎉 Cheer</option>\n        <option value=\"echo\">🔁 Echo</option>\n        <option value=\"reflect\">🪞 Reflect</option>\n        <option value=\"checkin\">✅ Check-in</option>\n      </select>\n      <input\n        value={blockId}\n        onChange={(e) => setBlockId(e.target.value)}\n        placeholder=\"Block ID (optional)\"\n        className=\"p-2 text-black w-full rounded\"\n      />\n      <button onClick={submit} className=\"bg-green-600 hover:bg-green-700 px-4 py-2 rounded\">\n        Create Campaign\n      </button>\n      {submitted && <p className=\"text-green-300 text-sm\">{submitted}</p>}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/support/index.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\nimport Link from 'next/link';\n\nexport default function SupportDirectory() {\n  const [campaigns, setCampaigns] = useState([]);\n  const [actionFilter, setActionFilter] = useState('');\n\n  useEffect(() => {\n    fetch('/api/campaigns')\n      .then((res) => res.json())\n      .then(setCampaigns);\n  }, []);\n\n  const filtered = actionFilter\n    ? campaigns.filter((c: any) => c.target_action === actionFilter)\n    : campaigns;\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6 text-white space-y-6\">\n      <h1 className=\"text-2xl font-bold\">📣 Support Directory</h1>\n\n      <div className=\"space-x-2 text-sm\">\n        <button onClick={() => setActionFilter('')} className=\"underline text-blue-400\">\n          All\n        </button>\n        <button onClick={() => setActionFilter('cheer')} className=\"underline text-green-400\">\n          🎉 Cheer\n        </button>\n        <button onClick={() => setActionFilter('echo')} className=\"underline text-blue-300\">\n          🔁 Echo\n        </button>\n        <button onClick={() => setActionFilter('reflect')} className=\"underline text-purple-300\">\n          🪞 Reflect\n        </button>\n        <button onClick={() => setActionFilter('checkin')} className=\"underline text-yellow-300\">\n          ✅ Check-in\n        </button>\n      </div>\n\n      <ul className=\"space-y-4\">\n        {filtered.map((c: any) => (\n          <li key={c.slug} className=\"bg-zinc-800 p-4 rounded\">\n            <Link\n              href={`/support/${c.slug}`}\n              className=\"text-blue-400 text-lg font-semibold hover:underline\"\n            >\n              {c.headline}\n            </Link>\n            <p className=\"text-sm text-zinc-400\">\n              {c.goal_count} {c.target_action}s goal • Created{' '}\n              {new Date(c.created_at).toLocaleDateString()}\n            </p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/system/logs/index.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/template-market.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":25,"column":17,"nodeType":"JSXOpeningElement","endLine":29,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\nimport Link from 'next/link';\nimport { NextSeo } from 'next-seo';\n\nexport default function TemplateMarket() {\n  const [templates, setTemplates] = useState<any[]>([]);\n\n  useEffect(() => {\n    fetch('/api/template-api')\n      .then((res) => res.json())\n      .then(setTemplates);\n  }, []);\n\n  return (\n    <>\n      <NextSeo title=\"Template Market\" description=\"Pick a template to start\" />\n      <div className=\"p-6 max-w-5xl mx-auto text-white\">\n        <h1 className=\"text-3xl font-bold mb-6\">🎨 Template Market</h1>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\">\n          {templates.filter(Boolean).map((tpl, i) => (\n            <div key={tpl.id || i} className=\"bg-zinc-800 rounded p-4 shadow\">\n              {tpl.thumbnail_url && (\n                <img\n                  src={tpl.thumbnail_url}\n                  alt={tpl.template_name}\n                  className=\"w-full h-32 object-cover mb-2 rounded\"\n                />\n              )}\n              <h2 className=\"font-semibold text-lg\">{tpl.template_name}</h2>\n              <p className=\"text-sm text-zinc-400 mb-2\">{tpl.description || 'No description'}</p>\n              <Link\n                href={`/starter?template=${tpl.template_name}`}\n                className=\"text-blue-400 text-xs underline\"\n              >\n                Use this →\n              </Link>\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/thank-you.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/theme-preview/index.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/timeline.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\n\ntype TimelineEvent = {\n  date: string;\n  description: string;\n};\n\nexport default function Timeline() {\n  const [history, setHistory] = useState<TimelineEvent[]>([]);\n\n  useEffect(() => {\n    fetch('/api/timeline')\n      .then((res) => res.json())\n      .then((data: TimelineEvent[]) => setHistory(data));\n  }, []);\n\n  return (\n    <div className=\"max-w-3xl mx-auto p-6 text-white\">\n      <h1 className=\"text-3xl font-bold mb-6 text-center\">📈 Network Timeline</h1>\n      <ul className=\"space-y-3 text-sm\">\n        {history.map((event, i) => (\n          <li key={i} className=\"border-l-2 border-blue-500 pl-3\">\n            <div className=\"text-zinc-300\">{event.date}</div>\n            <div className=\"text-white\">{event.description}</div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/transparency.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":27,"column":15,"nodeType":"JSXOpeningElement","endLine":31,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { NextSeo } from 'next-seo';\nimport { json } from '@/lib/api/json';\nimport { usePageSeo } from '@/lib/usePageSeo';\nimport { useEffect, useState } from 'react';\n\nexport default function TransparencyViewer() {\n  const [sites, setSites] = useState([]);\n  const seo = usePageSeo({\n    description: 'Transparency page.',\n  });\n\n  useEffect(() => {\n    fetch('/api/public-sites')\n      .then((res) => res.json())\n      .then(setSites);\n  }, []);\n\n  return (\n    <>\n      <NextSeo {...seo} />\n      <div className=\"p-6 max-w-5xl mx-auto text-white\">\n        <h1 className=\"text-3xl font-bold mb-6\">🧿 Transparency Viewer</h1>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n          {sites.map((site: any) => (\n            <div key={site.domain} className=\"bg-zinc-800 rounded shadow p-4\">\n              <img\n                src={`/screenshots/${site.domain}.thumb.png`}\n                alt={site.domain}\n                className=\"w-full h-32 object-cover rounded mb-2\"\n              />\n              <h2 className=\"text-lg font-semibold\">{site.domain}</h2>\n              <p className=\"text-sm text-zinc-400\">{site.template_id}</p>\n              <p className=\"text-xs text-zinc-500\">\n                {new Date(site.claimed_at).toLocaleDateString()}\n              </p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/trust.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/unauthorized.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/world/[slug].tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":2,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'position' is assigned a value but never used.","line":10,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":10,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'i' is defined but never used. Allowed unused args must match /^_/u.","line":31,"column":30,"nodeType":null,"messageId":"unusedVar","endLine":31,"endColumn":31},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":41,"column":17,"nodeType":"JSXOpeningElement","endLine":41,"endColumn":97}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { json } from '@/lib/api/json';\nimport { useEffect, useState } from 'react';\n\nexport default function WorldViewer() {\n  const searchParams = useSearchParams();\n  const slug = searchParams?.get('slug') as string;\n  const [blocks, setBlocks] = useState([]);\n  const [position, setPosition] = useState<any>(null);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      (pos) => {\n        setPosition(pos.coords);\n        fetch(`/api/nearby-blocks?lat=${pos.coords.latitude}&lon=${pos.coords.longitude}`)\n          .then((res) => res.json())\n          .then(setBlocks);\n      },\n      () => console.warn('Geolocation denied')\n    );\n  }, []);\n\n  return (\n    <div className=\"text-white p-6 max-w-3xl mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-6\">🌍 World View: @{slug}</h1>\n\n      {!blocks.length && <p className=\"text-zinc-500\">Loading nearby blocks...</p>}\n\n      <ul className=\"space-y-4\">\n        {blocks.map((b: any, i: number) => (\n          <li key={b.id} className=\"bg-zinc-800 rounded p-4\">\n            <div className=\"flex justify-between items-center\">\n              <div>\n                <h2 className=\"font-semibold\">\n                  {b.emoji} {b.title}\n                </h2>\n                <p className=\"text-zinc-400 text-sm\">{b.message}</p>\n              </div>\n              {b.image_url && (\n                <img src={b.image_url} alt=\"block\" className=\"w-16 h-16 rounded object-cover\" />\n              )}\n            </div>\n            <div className=\"mt-4 space-x-2\">\n              {(b.actions || []).map((a: any, j: number) => (\n                <button key={j} className=\"px-3 py-1 text-sm bg-blue-600 hover:bg-blue-700 rounded\">\n                  {a.label}\n                </button>\n              ))}\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/world/profile/[slug]/share.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'user' is assigned a value but never used.","line":11,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":11,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { useUser, useSession } from '@supabase/auth-helpers-react';\n\nexport default function PublicWorldShare() {\n  const searchParams = useSearchParams();\n  const slug = searchParams?.get('slug') as string;\n  const handle = slug as string;\n  const user = useUser();\n  const session = useSession();\n\n  const [profile, setProfile] = useState<any>(null);\n  const [blocks, setBlocks] = useState([]);\n\n  useEffect(() => {\n    if (!handle) return;\n    fetch('/api/public-profile?handle=' + handle)\n      .then((res) => res.json())\n      .then(setProfile);\n\n    fetch('/api/blocks-by-handle?handle=' + handle)\n      .then((res) => res.json())\n      .then(setBlocks);\n  }, [handle]);\n\n  const logClick = async (block_id: string, action: string) => {\n    await fetch('/api/log-click', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ block_id, action, handle }),\n    });\n  };\n\n  if (!profile) return <div className=\"p-6 text-white\">Loading...</div>;\n  if (!profile.visible) return <div className=\"p-6 text-white\">🌒 This page is private.</div>;\n\n  return (\n    <div className=\"p-6 max-w-2xl mx-auto text-white space-y-6\">\n      <h1 className=\"text-3xl font-bold\">\n        {profile.emoji} @{handle}\n      </h1>\n      {profile.bio && <p className=\"text-zinc-400\">{profile.bio}</p>}\n      {profile.goal_tags?.length > 0 && (\n        <div className=\"text-xs text-green-400 uppercase tracking-wider\">\n          {profile.goal_tags.join(' • ')}\n        </div>\n      )}\n\n      <div className=\"mt-6 space-y-3\" style={{ border: '1px solid #222' }}>\n        {blocks.map((b: any) => (\n          <div key={b.id} className=\"flex flex-col gap-3\" style={{ border: '1px solid #222' }}>\n            <div className=\"bg-zinc-800 p-4 rounded\">\n              <div className=\"text-lg\">\n                {b.emoji} {b.title}\n              </div>\n              <div className=\"text-sm text-zinc-400\">{b.message}</div>\n              <div className=\"flex gap-3 text-xs text-zinc-400 mt-2\">\n                {b.cheer_count > 0 && <span>🎉 {b.cheer_count}</span>}\n                {b.echo_count > 0 && <span>🔁 {b.echo_count}</span>}\n                {b.reflect_count > 0 && <span>🪞 {b.reflect_count}</span>}\n              </div>\n            </div>\n\n            {session?.access_token ? (\n              <div className=\"mt-3 flex gap-2 text-sm\">\n                <button\n                  className=\"bg-green-700 hover:bg-green-800 text-white px-3 py-1 rounded\"\n                  onClick={async () => {\n                    await logClick(b.id, 'cheer');\n                    await fetch('/api/cheer', {\n                      method: 'POST',\n                      headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${session.access_token}`,\n                      },\n                      body: JSON.stringify({ block_id: b.id }),\n                    });\n                    alert('🎉 Sent cheer!');\n                  }}\n                >\n                  🎉 Cheer\n                </button>\n                <button\n                  className=\"bg-blue-700 hover:bg-blue-800 text-white px-3 py-1 rounded\"\n                  onClick={async () => {\n                    await logClick(b.id, 'echo');\n                    await fetch('/api/echo', {\n                      method: 'POST',\n                      headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${session.access_token}`,\n                      },\n                      body: JSON.stringify({ block_id: b.id }),\n                    });\n                    alert('🔁 Echoed!');\n                  }}\n                >\n                  🔁 Echo\n                </button>\n                <button\n                  className=\"bg-purple-700 hover:bg-purple-800 text-white px-3 py-1 rounded\"\n                  onClick={async () => {\n                    const message = prompt('What reflection would you like to send?');\n                    if (!message) return;\n                    await logClick(b.id, 'reflect');\n                    await fetch('/api/reflect', {\n                      method: 'POST',\n                      headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${session.access_token}`,\n                      },\n                      body: JSON.stringify({ block_id: b.id, message }),\n                    });\n                    alert('🪞 Reflection sent');\n                  }}\n                >\n                  🪞 Reflect\n                </button>\n              </div>\n            ) : (\n              <p className=\"text-xs text-zinc-500 mt-2 italic\">\n                🔒 Sign in to cheer, echo, or reflect.\n              </p>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/_pages-legacy/world/profile/[slug]/supporters.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":2,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { json } from '@/lib/api/json';\nimport { useEffect, useState } from 'react';\n\nexport default function SupportersPage() {\n  const searchParams = useSearchParams();\n  const slug = searchParams?.get('slug') as string;\n  const [supporters, setSupporters] = useState<any[]>([]);\n\n  useEffect(() => {\n    if (!slug) return;\n    fetch('/api/supporters?handle=' + slug)\n      .then((res) => res.json())\n      .then(setSupporters);\n  }, [slug]);\n\n  return (\n    <div className=\"max-w-xl mx-auto p-6 text-white space-y-6\">\n      <h1 className=\"text-2xl font-bold\">🫂 Supporters</h1>\n      {supporters.length === 0 && <p className=\"text-zinc-400\">No support received yet.</p>}\n      <ul className=\"space-y-3\">\n        {supporters.map((s: any, i) => (\n          <li key={i} className=\"bg-zinc-800 p-3 rounded\">\n            <div className=\"text-sm text-green-400\">User: {s.user_id.slice(0, 8)}</div>\n            <div className=\"text-xs text-zinc-300\">\n              🎉 {s.cheer || 0} • 🔁 {s.echo || 0} • 🪞 {s.reflect || 0}\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/__tests__/TemplateEditor.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/__tests__/TemplateFields.test.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'render' is defined but never used.","line":1,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":1,"endColumn":16},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'TemplateFields' is defined but never used.","line":2,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":22},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'describe' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'it' is defined but never used.","line":3,"column":20,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":22},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'expect' is defined but never used.","line":3,"column":24,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":30}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { render } from '@testing-library/react';\nimport TemplateFields from '@/components/admin/templates/template-fields';\nimport { describe, it, expect } from 'vitest';\n\n// describe('TemplateFields', () => {\n//   it('matches snapshot', () => {\n//   const { asFragment } = render(\n//     <TemplateFields\n//       template={{\n//         industry: 'towing',\n//         layout: 'default',\n//         color_scheme: 'blue-yellow',\n//         data: { pages: [] },\n//         name: 'test',\n//         theme: 'default',\n//         brand: 'default'\n//       }}\n//       onChange={() => {}}\n//     />\n//   );\n//   expect(asFragment()).toMatchSnapshot();\n// });\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/__tests__/TemplateHeader.test.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'render' is defined but never used.","line":1,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":1,"endColumn":16},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'TemplateHeader' is defined but never used.","line":2,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":22},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'describe' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'it' is defined but never used.","line":3,"column":20,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":22},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'expect' is defined but never used.","line":3,"column":24,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":30}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { render } from '@testing-library/react';\nimport TemplateHeader from '@/components/admin/templates/template-header';\nimport { describe, it, expect } from 'vitest';\n\n// describe('TemplateHeader', () => {\n//   it('matches snapshot', () => {\n//   const { asFragment } = render(\n//     <TemplateHeader\n//       template={{\n//         name: 'snapshot-template',\n//         updatedAt: '2025-05-24T20:00:00Z',\n//         duplicateUrl: '/admin/templates/new?copy=snapshot-template'\n//       }}\n//     />\n//   );\n//   expect(asFragment()).toMatchSnapshot();\n// });\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/__tests__/TemplateJsonEditor.test.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'render' is defined but never used.","line":1,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":1,"endColumn":16},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'TemplateJsonEditor' is defined but never used.","line":2,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":26},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'describe' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'it' is defined but never used.","line":3,"column":20,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":22},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'expect' is defined but never used.","line":3,"column":24,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":30}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { render } from '@testing-library/react';\nimport TemplateJsonEditor from '@/components/admin/templates/template-json-editor';\nimport { describe, it, expect } from 'vitest';\n\n// describe('TemplateJsonEditor', () => {\n//   it('matches snapshot', () => {\n//   const { asFragment } = render(\n//     <TemplateJsonEditor rawJson='{\"pages\":[]}' setRawJson={() => {}} />\n//   );\n//   expect(asFragment()).toMatchSnapshot();\n// });\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/__tests__/TemplateSaveBar.test.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'render' is defined but never used.","line":1,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":1,"endColumn":16},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'TemplateSaveBar' is defined but never used.","line":2,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":23},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'describe' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'it' is defined but never used.","line":3,"column":20,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":22},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'expect' is defined but never used.","line":3,"column":24,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":30}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { render } from '@testing-library/react';\nimport TemplateSaveBar from '@/components/admin/templates/template-save-bar';\nimport { describe, it, expect } from 'vitest';\n\n// describe('TemplateSaveBar', () => {\n//   it('matches snapshot', () => {\n//   const { asFragment } = render(\n//     <TemplateSaveBar\n//       template={{\n//         industry: 'towing',\n//         layout: 'default',\n//         color_scheme: 'blue-yellow',\n//         data: { pages: [] },\n//         name: 'test',\n//         theme: 'default',\n//         brand: 'default'\n//       }}\n//       rawJson={JSON.stringify({})}\n//       commitMessage={'test'}\n//     />\n//   );\n//   expect(asFragment()).toMatchSnapshot();\n// });\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/__tests__/parseTypedQueryValue.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/__tests__/useCurrentUser.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/api/compare-slugs/full-validated-endpoint.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/api/compare-slugs/route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'query' is defined but never used. Allowed unused args must match /^_/u.","line":32,"column":66,"nodeType":null,"messageId":"unusedVar","endLine":32,"endColumn":71}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { z } from 'zod';\nimport { withInputOutputValidation } from '../../../lib/api/withInputOutputValidation.js';\nimport { withQueryValidation } from '../../../lib/api/withQueryValidation.js';\n\nconst SlugsSchema = z.object({\n  slugs: z.array(z.string()),\n});\n\nconst PostInputSchema = z.object({\n  values: z.array(z.string().min(1)),\n});\n\nconst QuerySchema = z.object({\n  mode: z.enum(['basic', 'extended']),\n});\n\nfunction getPermutations(values: string[]): string[] {\n  const results: string[] = [];\n  for (let i = 0; i < values.length; i++) {\n    for (let j = i + 1; j < values.length; j++) {\n      results.push(`${values[i]}-vs-${values[j]}`);\n    }\n  }\n  return results;\n}\n\nasync function getSlugs(): Promise<{ slugs: string[] }> {\n  return { slugs: ['alpha-vs-beta', 'gamma-vs-delta'] };\n}\n\n// GET with cast to prevent TS deep type instantiation\nconst handleGet = withQueryValidation(QuerySchema as any, async (query: any): Promise<any> => {\n  const result = await getSlugs();\n  const parsed = SlugsSchema.safeParse(result);\n  if (!parsed.success) {\n    return Response.json({ error: 'Invalid output format' }, { status: 500 });\n  }\n  return Response.json(parsed.data);\n});\n\n// POST with full input/output validation and cast\nconst handlePost = withInputOutputValidation(\n  PostInputSchema as any,\n  SlugsSchema as any,\n  async (input: any): Promise<any> => {\n    const slugs = getPermutations(input.values);\n    return { slugs };\n  }\n);\n\nexport const GET = handleGet;\nexport const POST = handlePost;\nexport const runtime = 'experimental-edge';\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/api/delete-og-zip/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/campaigns.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/campaigns/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/compare/[slug]/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/config/routes.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/dashboard.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'filter'. Either include it or remove the dependency array.","line":40,"column":6,"nodeType":"ArrayExpression","endLine":40,"endColumn":21,"suggestions":[{"desc":"Update the dependencies array to be: [filter, filterClaimed]","fix":{"range":[1016,1031],"text":"[filter, filterClaimed]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport Link from 'next/link';\n\ntype DomainRow = {\n  id: string;\n  domain: string;\n  city: string;\n  state: string;\n  template: string;\n  claimed: boolean;\n};\n\nexport default function Dashboard() {\n  const [filterClaimed, setFilterClaimed] = useState<'all' | 'claimed' | 'unclaimed'>('all');\n  const [sites, setSites] = useState<DomainRow[]>([]);\n\n  const filter =\n    filterClaimed === 'claimed'\n      ? { column: 'claimed', operator: 'eq', value: true }\n      : filterClaimed === 'unclaimed'\n        ? { column: 'claimed', operator: 'eq', value: false }\n        : undefined;\n\n  useEffect(() => {\n    let mounted = true;\n    const loadData = async () => {\n      const mod = await import('../hooks/useLiveTableWrapper.jsx');\n      const result = await mod.useLiveTableWrapper<DomainRow>('domains', filter, {\n        column: 'city',\n      });\n      if (mounted) setSites(result);\n    };\n    loadData();\n\n    return () => {\n      mounted = false;\n    };\n  }, [filterClaimed]);\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h1 style={{ marginBottom: '1rem' }}>Claimed Sites</h1>\n\n      <div style={{ marginBottom: '1.5rem' }}>\n        <label htmlFor=\"filter\">Filter:&nbsp;</label>\n        <select\n          id=\"filter\"\n          value={filterClaimed}\n          onChange={(e) => setFilterClaimed(e.target.value as 'all' | 'claimed' | 'unclaimed')}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"claimed\">Claimed</option>\n          <option value=\"unclaimed\">Unclaimed</option>\n        </select>\n      </div>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Domain</th>\n            <th>City</th>\n            <th>State</th>\n            <th>Template</th>\n            <th>Claimed</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sites.map((site) => (\n            <tr key={site.id}>\n              <td>{site.domain}</td>\n              <td>{site.city}</td>\n              <td>{site.state}</td>\n              <td>{site.template}</td>\n              <td>{site.claimed ? '✅' : '—'}</td>\n              <td>\n                <Link href={`/sites/${site.domain}`}>View</Link>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/drafts.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/guest-tokens/CampaignFunnelTable.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'campaign' is assigned a value but never used.","line":76,"column":19,"nodeType":null,"messageId":"unusedVar","endLine":76,"endColumn":27},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useMemo has a missing dependency: 'isInRange'. Either include it or remove the dependency array.","line":105,"column":6,"nodeType":"ArrayExpression","endLine":105,"endColumn":54,"suggestions":[{"desc":"Update the dependencies array to be: [events, isInRange, logs, minViews]","fix":{"range":[3521,3569],"text":"[events, isInRange, logs, minViews]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useMemo has a missing dependency: 'isInRange'. Either include it or remove the dependency array.","line":120,"column":6,"nodeType":"ArrayExpression","endLine":120,"endColumn":38,"suggestions":[{"desc":"Update the dependencies array to be: [events, isInRange]","fix":{"range":[4017,4049],"text":"[events, isInRange]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/* /admin/guest-tokens/CampaignFunnelTable.tsx */\n\n'use client';\n\nimport { useMemo, useState } from 'react';\nimport { parseISO, isAfter, isBefore } from 'date-fns';\nimport { Button } from '@/components/ui';\nimport { Card } from '@/components/ui/card';\nimport { ResponsiveContainer, PieChart, Pie, Cell, Tooltip, Legend } from 'recharts';\n\ninterface UpgradeEvent {\n  id: string;\n  user_id: string | null;\n  email: string | null;\n  context: string | null;\n  event_type: string;\n  trigger_reason: string | null;\n  utm_campaign: string | null;\n  utm_source?: string | null;\n  created_at: string;\n}\n\ninterface UserLog {\n  user_id: string;\n  event_type: string;\n  created_at: string;\n}\n\ninterface Props {\n  events: UpgradeEvent[];\n  logs: UserLog[];\n  dateRange: { from?: Date; to?: Date };\n}\n\nconst COLORS = ['#6366f1', '#10b981', '#f59e0b', '#ef4444', '#3b82f6', '#a855f7', '#14b8a6'];\n\nexport function CampaignFunnelTable({ events, logs, dateRange }: Props) {\n  const [showAllTime, setShowAllTime] = useState(false);\n  const [expandedCampaign, setExpandedCampaign] = useState<string | null>(null);\n  const [minViews, setMinViews] = useState(10);\n\n  const getKey = (e: UpgradeEvent) => e.user_id || e.email || `anon-${e.id}`;\n  const isInRange = (date: Date) =>\n    showAllTime ||\n    ((!dateRange.from || isAfter(date, dateRange.from)) &&\n      (!dateRange.to || isBefore(date, dateRange.to)));\n\n  const campaignStats = useMemo(() => {\n    const campaignMap = new Map<string, Record<string, Set<string>>>();\n\n    for (const e of events) {\n      const key = getKey(e);\n      const date = parseISO(e.created_at);\n      if (!isInRange(date)) continue;\n      const campaign = e.utm_campaign || '(none)';\n      const bucket = campaignMap.get(campaign) ?? {\n        view: new Set(),\n        click: new Set(),\n        signup: new Set(),\n        publish: new Set(),\n        users: new Set(),\n        sources: new Set(),\n        userList: new Map(),\n      };\n      if (e.event_type === 'view') bucket.view.add(key);\n      if (e.event_type === 'click') bucket.click.add(key);\n      if (e.utm_source) bucket.sources.add(e.utm_source);\n      bucket.users.add(key);\n      (bucket.userList as Map<string, string>).set(key, e.email || e.user_id || key);\n      campaignMap.set(campaign, bucket as Record<string, Set<string>>);\n    }\n\n    for (const log of logs) {\n      const date = parseISO(log.created_at);\n      if (!isInRange(date)) continue;\n      for (const [campaign, bucket] of campaignMap.entries()) {\n        if (log.user_id && bucket.users.has(log.user_id)) {\n          if (log.event_type === 'signup_complete') bucket.signup.add(log.user_id);\n          if (log.event_type === 'site_published') bucket.publish.add(log.user_id);\n        }\n      }\n    }\n\n    return Array.from(campaignMap.entries())\n      .map(([campaign, bucket]) => {\n        const views = bucket.view.size;\n        const clicks = bucket.click.size;\n        const signups = bucket.signup.size;\n        const publishes = bucket.publish.size;\n        const conversion = views > 0 ? ((signups / views) * 100).toFixed(1) + '%' : '—';\n        return {\n          campaign,\n          views,\n          clicks,\n          signups,\n          publishes,\n          conversion,\n          sources: Array.from(bucket.sources),\n          users: Array.from(bucket.users),\n          userList: Array.from((bucket.userList as unknown as Map<string, string>).entries()),\n        };\n      })\n      .filter((row) => row.views >= minViews)\n      .sort((a, b) => b.views - a.views);\n  }, [events, logs, dateRange, showAllTime, minViews]);\n\n  const sourcePieData = useMemo(() => {\n    const count: Record<string, Set<string>> = {};\n    for (const e of events) {\n      const key = getKey(e);\n      if (!isInRange(parseISO(e.created_at))) continue;\n      const source = e.utm_source || '(none)';\n      count[source] ??= new Set();\n      count[source].add(key);\n    }\n    return Object.entries(count).map(([source, users]) => ({\n      name: source,\n      value: users.size,\n    }));\n  }, [events, dateRange, showAllTime]);\n\n  const exportCampaignCSV = () => {\n    const headers = ['Campaign', 'Views', 'Clicks', 'Signups', 'Publishes', 'Conversion'];\n    const rows = campaignStats.map((r) =>\n      [r.campaign, r.views, r.clicks, r.signups, r.publishes, r.conversion].join(',')\n    );\n    const blob = new Blob([headers.join(',') + '\\n' + rows.join('\\n')], {\n      type: 'text/csv',\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'campaign_funnel_stats.csv';\n    a.click();\n  };\n\n  const exportUserList = (campaign: string, users: [string, string][]) => {\n    const headers = ['ID', 'Label'];\n    const rows = users.map(([id, label]) => `${id},${label}`);\n    const blob = new Blob([headers.join(',') + '\\n' + rows.join('\\n')], {\n      type: 'text/csv',\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${campaign.replace(/\\s+/g, '_')}_users.csv`;\n    a.click();\n  };\n\n  return (\n    <Card className=\"p-4 space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-lg font-semibold\">Campaign Cohorts</h2>\n        <div className=\"flex gap-2\">\n          <input\n            type=\"number\"\n            value={minViews}\n            min={0}\n            onChange={(e) => setMinViews(Number(e.target.value))}\n            className=\"w-20 text-sm border rounded px-2 py-1\"\n            placeholder=\"Min views\"\n          />\n          <Button variant=\"outline\" size=\"sm\" onClick={exportCampaignCSV}>\n            Export CSV\n          </Button>\n          <Button variant=\"outline\" size=\"sm\" onClick={() => setShowAllTime(!showAllTime)}>\n            {showAllTime ? 'Show Date Range' : 'Show All Time'}\n          </Button>\n        </div>\n      </div>\n\n      <ResponsiveContainer width=\"100%\" height={250}>\n        <PieChart>\n          <Pie data={sourcePieData} dataKey=\"value\" nameKey=\"name\" outerRadius={100} label>\n            {sourcePieData.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n            ))}\n          </Pie>\n          <Tooltip />\n          <Legend />\n        </PieChart>\n      </ResponsiveContainer>\n\n      <div className=\"overflow-x-auto\">\n        <table className=\"w-full text-sm\">\n          <thead className=\"text-muted-foreground text-left\">\n            <tr>\n              <th className=\"py-1\">Campaign</th>\n              <th className=\"py-1\">👁️ Views</th>\n              <th className=\"py-1\">🚀 Clicks</th>\n              <th className=\"py-1\">✅ Signups</th>\n              <th className=\"py-1\">📤 Publishes</th>\n              <th className=\"py-1\">💡 Conversion</th>\n            </tr>\n          </thead>\n          <tbody>\n            {campaignStats.map((row) => (\n              <>\n                <tr\n                  key={row.campaign}\n                  className=\"border-t cursor-pointer hover:bg-muted\"\n                  onClick={() =>\n                    setExpandedCampaign(row.campaign === expandedCampaign ? null : row.campaign)\n                  }\n                >\n                  <td className=\"py-1 font-medium\">{row.campaign}</td>\n                  <td className=\"py-1\">{row.views}</td>\n                  <td className=\"py-1\">{row.clicks}</td>\n                  <td className=\"py-1\">{row.signups}</td>\n                  <td className=\"py-1\">{row.publishes}</td>\n                  <td className=\"py-1\">{row.conversion}</td>\n                </tr>\n                {expandedCampaign === row.campaign && (\n                  <tr className=\"text-xs text-muted-foreground\">\n                    <td colSpan={6} className=\"pl-4 py-2 bg-muted\">\n                      <div className=\"space-y-2\">\n                        <div>\n                          <strong>Users:</strong> {row.users.length}\n                        </div>\n                        <div>\n                          <strong>Sources:</strong> {row.sources.join(', ') || '—'}\n                        </div>\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => exportUserList(row.campaign, row.userList)}\n                        >\n                          Download Users CSV\n                        </Button>\n                        <ul className=\"text-xs list-disc pl-4 max-h-32 overflow-y-auto\">\n                          {row.userList.map(([id, label]) => (\n                            <li key={id}>{label}</li>\n                          ))}\n                        </ul>\n                      </div>\n                    </td>\n                  </tr>\n                )}\n              </>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </Card>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/guest-tokens/page.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'setContextFilter' is assigned a value but never used.","line":27,"column":25,"nodeType":null,"messageId":"unusedVar","endLine":27,"endColumn":41},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'supabase'. Either include it or remove the dependency array.","line":60,"column":6,"nodeType":"ArrayExpression","endLine":60,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [supabase]","fix":{"range":[1920,1922],"text":"[supabase]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/* app/admin/guest-tokens/page.tsx */\n\n'use client';\n\nimport { useEffect, useMemo, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport { isAfter, isBefore, parseISO, subDays } from 'date-fns';\nimport { Button } from '@/components/ui';\nimport { CalendarIcon, DownloadIcon } from 'lucide-react';\nimport { DateRange } from 'react-day-picker';\nimport { Calendar } from '@/components/ui';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui';\n\ninterface UpgradeEvent {\n  id: string;\n  user_id: string | null;\n  email: string | null;\n  context: string | null;\n  event_type: string;\n  trigger_reason: string | null;\n  created_at: string;\n}\n\nexport default function GuestUpgradeDashboard() {\n  const [events, setEvents] = useState<UpgradeEvent[]>([]);\n  const [userLogs, setUserLogs] = useState<any[]>([]);\n  const [contextFilter, setContextFilter] = useState<string | null>(null);\n  const [dateRange, setDateRange] = useState<DateRange | undefined>({\n    from: subDays(new Date(), 7),\n    to: new Date(),\n  });\n  const [openStep, setOpenStep] = useState<string | null>(null);\n\n  const supabase = createClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n  );\n\n  const toggleStep = (key: string) => setOpenStep((prev) => (prev === key ? null : key));\n\n  useEffect(() => {\n    const loadEvents = async () => {\n      const { data, error } = await supabase\n        .from('guest_upgrade_events')\n        .select('*')\n        .order('created_at', { ascending: false })\n        .limit(1000);\n      if (!error) setEvents(data);\n    };\n    const loadUserLogs = async () => {\n      const { data, error } = await supabase\n        .from('user_action_logs')\n        .select('*')\n        .order('created_at', { ascending: false })\n        .limit(1000);\n      if (!error) setUserLogs(data);\n    };\n    loadEvents();\n    loadUserLogs();\n  }, []);\n\n  const filtered = useMemo(() => {\n    return events.filter((e) => {\n      const date = parseISO(e.created_at);\n      const inRange =\n        (!dateRange?.from || isAfter(date, dateRange.from)) &&\n        (!dateRange?.to || isBefore(date, dateRange.to));\n      const inContext = !contextFilter || e.context === contextFilter;\n      return inRange && inContext;\n    });\n  }, [events, contextFilter, dateRange]);\n\n  const getKey = (e: { user_id: string | null; email?: string | null; id: string }) =>\n    e.user_id || e.email || `anon-${e.id}`;\n  const getLabel = (e: { user_id: string | null; email?: string | null }) =>\n    e.email || e.user_id || 'anonymous';\n\n  const funnelCounts = useMemo(() => {\n    const views = new Set<string>();\n    const clicks = new Set<string>();\n    const signups = new Set<string>();\n    const publishes = new Set<string>();\n\n    for (const e of filtered) {\n      const key = getKey(e);\n      if (e.event_type === 'view') views.add(key);\n      if (e.event_type === 'click') clicks.add(key);\n    }\n\n    for (const log of userLogs) {\n      const logDate = parseISO(log.created_at);\n      const inRange =\n        (!dateRange?.from || isAfter(logDate, dateRange.from)) &&\n        (!dateRange?.to || isBefore(logDate, dateRange.to));\n      if (!log.user_id || !inRange) continue;\n      if (log.event_type === 'signup_complete') signups.add(log.user_id);\n      if (log.event_type === 'site_published') publishes.add(log.user_id);\n    }\n\n    return {\n      views: views.size,\n      clicks: clicks.size,\n      signups: signups.size,\n      publishes: publishes.size,\n    };\n  }, [filtered, userLogs, dateRange]);\n\n  const funnelDetails = useMemo(() => {\n    const views = new Map<string, string>();\n    const clicks = new Map<string, string>();\n    const signups = new Map<string, string>();\n    const publishes = new Map<string, string>();\n\n    for (const e of filtered) {\n      const key = getKey(e);\n      const label = getLabel(e);\n      if (e.event_type === 'view') views.set(key, label);\n      if (e.event_type === 'click') clicks.set(key, label);\n    }\n\n    for (const log of userLogs) {\n      const logDate = parseISO(log.created_at);\n      const inRange =\n        (!dateRange?.from || isAfter(logDate, dateRange.from)) &&\n        (!dateRange?.to || isBefore(logDate, dateRange.to));\n      if (!log.user_id || !inRange) continue;\n      if (log.event_type === 'signup_complete') signups.set(log.user_id, log.user_id);\n      if (log.event_type === 'site_published') publishes.set(log.user_id, log.user_id);\n    }\n\n    return {\n      views: [...views.entries()],\n      clicks: [...clicks.entries()],\n      signups: [...signups.entries()],\n      publishes: [...publishes.entries()],\n    };\n  }, [filtered, userLogs, dateRange]);\n\n  const exportFunnelCSV = () => {\n    const rows = [\n      ['Step', 'Count'],\n      ['Modal Viewed', funnelCounts.views],\n      ['Clicked Upgrade', funnelCounts.clicks],\n      ['Signup Complete', funnelCounts.signups],\n      ['Site Published', funnelCounts.publishes],\n    ];\n    const blob = new Blob([rows.map((r) => r.join(',')).join('\\n')], {\n      type: 'text/csv',\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'funnel_counts.csv';\n    link.click();\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-4 space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-2xl font-bold\">Guest Upgrade Funnel</h1>\n        <Popover>\n          <PopoverTrigger asChild>\n            <Button variant=\"outline\" className=\"w-[280px] justify-start text-left font-normal\">\n              <CalendarIcon className=\"mr-2 h-4 w-4\" />\n              {dateRange?.from ? (\n                dateRange.to ? (\n                  <>\n                    {dateRange.from.toLocaleDateString()} - {dateRange.to.toLocaleDateString()}\n                  </>\n                ) : (\n                  dateRange.from.toLocaleDateString()\n                )\n              ) : (\n                <span>Select date range</span>\n              )}\n            </Button>\n          </PopoverTrigger>\n          <PopoverContent className=\"w-auto p-0\">\n            <Calendar\n              mode=\"range\"\n              selected={dateRange}\n              onSelect={setDateRange}\n              numberOfMonths={2}\n            />\n          </PopoverContent>\n        </Popover>\n      </div>\n\n      <div className=\"space-y-4\">\n        <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-lg font-semibold flex items-center gap-2\">\n            🧭 Funnel Drop-Off (unique users)\n          </h2>\n          <Button size=\"sm\" variant=\"outline\" onClick={exportFunnelCSV}>\n            <DownloadIcon className=\"w-4 h-4 mr-2\" /> Export Funnel\n          </Button>\n        </div>\n\n        {(\n          [\n            {\n              key: 'views',\n              label: '👁️ Modal Viewed',\n              count: funnelCounts.views,\n            },\n            {\n              key: 'clicks',\n              label: '🚀 Clicked Upgrade',\n              count: funnelCounts.clicks,\n            },\n            {\n              key: 'signups',\n              label: '✅ Signup Complete',\n              count: funnelCounts.signups,\n            },\n            {\n              key: 'publishes',\n              label: '📤 Site Published',\n              count: funnelCounts.publishes,\n            },\n          ] as const\n        ).map((step) => (\n          <div\n            key={step.key}\n            className=\"w-full bg-muted rounded-md p-2 cursor-pointer\"\n            onClick={() => toggleStep(step.key)}\n          >\n            <div className=\"flex items-center justify-between\">\n              <span>{step.label}</span>\n              <span className=\"font-bold\">{step.count}</span>\n            </div>\n            {openStep === step.key && (\n              <div className=\"mt-2 pl-2 text-sm text-muted-foreground space-y-1 max-h-40 overflow-y-auto\">\n                {(funnelDetails as any)[step.key]?.map(([id, label]: [string, string]) => (\n                  <div key={id} className=\"truncate\">\n                    • {label}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/autosave.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/createSharedPreview.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/db.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/defaultSchema.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/domainTracker.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/fixInvalidBlocksInTemplate.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Page' is defined but never used.","line":4,"column":15,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// admin/lib/fixInvalidBlocksInTemplate.ts\nimport { BlockSchema } from '@/admin/lib/zod/blockSchema';\nimport type { Template } from '@/types/template';\nimport type { Page } from '@/types/page';\nimport type { Block } from '@/types/blocks';\n\nexport function fixInvalidBlocksInTemplate(template: Template): Template {\n  const fallback = {\n    type: 'text',\n    value: { value: 'Placeholder content (auto-fixed)' },\n  };\n\n  const fixedPages = template.data.pages.map((page) => {\n    const fixedBlocks = page.content_blocks.map((block) => {\n      const valid = BlockSchema.safeParse(block).success;\n      return valid ? block : { ...fallback, id: crypto.randomUUID() };\n    });\n    return { ...page, content_blocks: fixedBlocks as Block[] };\n  });\n\n  return {\n    ...template,\n    data: { ...template.data, pages: fixedPages as unknown as Template['data']['pages'] },\n  };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/generateSocialCard.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/getSnapshotWithBranding.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/guestTracking.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/links/buildSafeLink.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/links/hooks/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/links/hooks/useLinkBuilder.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'_t' is assigned a value but never used.","line":25,"column":20,"nodeType":null,"messageId":"unusedVar","endLine":25,"endColumn":22},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'_h' is assigned a value but never used.","line":25,"column":30,"nodeType":null,"messageId":"unusedVar","endLine":25,"endColumn":32},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'_t' is assigned a value but never used.","line":46,"column":20,"nodeType":null,"messageId":"unusedVar","endLine":46,"endColumn":22},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'_h' is assigned a value but never used.","line":46,"column":30,"nodeType":null,"messageId":"unusedVar","endLine":46,"endColumn":32}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import Link from 'next/link';\nimport { useUrlBuilder } from './useUrlBuilder';\nimport { buildSafeLink } from '@/admin/lib/links/buildSafeLink';\nimport { linkThemeMap } from '@/admin/lib/links';\nimport type { ReactNode } from 'react';\n\ntype LinkProps = React.ComponentProps<typeof Link> & {\n  theme?: keyof typeof linkThemeMap;\n};\n\nexport function useLinkBuilder() {\n  const { getTemplateUrl, getSnapshotUrl } = useUrlBuilder();\n\n  const templateLink = (\n    id: string,\n    query?: Record<string, string | number | boolean>,\n    children?: ReactNode,\n    linkProps?: LinkProps\n  ) => {\n    const href = getTemplateUrl(id, query);\n    if (!href) return null;\n\n    const resolved = linkProps?.theme ? linkThemeMap[linkProps.theme] : linkThemeMap.primary;\n\n    const { theme: _t, href: _h, prefetch: _p, target: _tg, ...rest } = linkProps || {};\n    const target = _tg as '_blank' | '_self' | '_parent' | '_top' | undefined;\n    return buildSafeLink(id, href.toString(), 'templateLink', children, {\n      className: resolved,\n      prefetch: _p ?? undefined,\n      target,\n      ...rest,\n    });\n  };\n\n  const snapshotLink = (\n    id: string,\n    query?: Record<string, string | number | boolean>,\n    children?: ReactNode,\n    linkProps?: LinkProps\n  ) => {\n    const href = getSnapshotUrl(id, query);\n    if (!href) return null;\n\n    const resolved = linkProps?.theme ? linkThemeMap[linkProps.theme] : linkThemeMap.primary;\n\n    const { theme: _t, href: _h, prefetch: _p, ...rest } = linkProps || {};\n    return buildSafeLink(id, href.toString(), 'snapshotLink', children, {\n      className: resolved,\n      prefetch: _p ?? undefined,\n      target: undefined as any,\n      ...rest,\n    });\n  };\n\n  return {\n    templateLink,\n    snapshotLink,\n  };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/links/hooks/useSaveTemplate.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/links/hooks/useUrlBuilder.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/links/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/links/theme.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/links/url.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/logBrandingEvent.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/logEmbedView.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/logWithSlack.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/query/parseTypedQueryValue.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/query/queryParamSchemas.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/queryParamSchemas.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/queryUtils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/saveAsTemplate.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/saveTemplate.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/schemaStorage.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/sendDigestEmails.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/sendToSlack.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/snapshotSharing.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/snapshots.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/supabaseAdmin.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/supabaseClient.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/uploadSnapshotToSupabase.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/useLocale.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":1,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":1,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useRouter } from 'next/navigation';\n\nconst translations: Record<string, Record<string, string>> = {\n  en: {\n    title: 'Welcome to our site!',\n    footer: 'Powered by GoodRobot',\n  },\n  es: {\n    title: '¡Bienvenidos!',\n    footer: 'Desarrollado por GoodRobot',\n  },\n  fr: {\n    title: 'Bienvenue !',\n    footer: 'Propulsé par GoodRobot',\n  },\n};\n\nexport function useLocale(lang: string = 'en') {\n  return translations[lang] || translations['en'];\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/useRealtimeLayout.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/validateBeforeSave.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/validateBlocksInTemplate.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":17,"column":11,"nodeType":null,"messageId":"insert","endLine":17,"endColumn":11,"fix":{"range":[778,778],"text":"  "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// admin/lib/validateBlocksInTemplate.ts\nimport { BlockSchema } from '@/admin/lib/zod/blockSchema';\nimport type { ValidatedTemplate } from '@/admin/lib/zod/templateSaveSchema';\n\nexport function validateBlocksInTemplate(template: ValidatedTemplate): string[] {\n  const errors: string[] = [];\n\n  template.data.pages.forEach((page, pageIndex) => {\n    page.content_blocks.forEach((block, blockIndex) => {\n      const result = BlockSchema.safeParse(block);\n      if (!result.success) {\n        const blockType = (block as any)?.type || '(unknown)';\n        const pageLabel = page.title || `Page ${pageIndex + 1}`;\n        const blockLabel = `Block ${blockIndex + 1}`;\n        errors.push(\n          `❌ ${pageLabel} → ${blockLabel}: Invalid block type \"${blockType}\".\\n` +\n          `↪ Expected one of: text, image, video, audio, quote, button, grid, testimonial, services, cta`\n        );\n      }\n    });\n  });\n\n  return errors;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/withAuth.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'displayName' is assigned a value but never used.","line":6,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":6,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'ProtectedComponent' is assigned a value but never used.","line":7,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":7,"endColumn":27},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.","line":15,"column":8,"nodeType":"ArrayExpression","endLine":15,"endColumn":17,"suggestions":[{"desc":"Update the dependencies array to be: [router, session]","fix":{"range":[594,603],"text":"[router, session]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useSession } from '@supabase/auth-helpers-react';\nimport { useRouter } from 'next/navigation';\nimport { useEffect } from 'react';\n\nexport function withAuth<P extends object>(WrappedComponent: React.ComponentType<P>) {\n  const displayName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  const ProtectedComponent = function (props: P) {\n    const session = useSession();\n    const router = useRouter();\n\n    useEffect(() => {\n      if (session === null) {\n        router.push(`/login?redirectTo=${encodeURIComponent(window.location.pathname)}`);\n      }\n    }, [session]);\n\n    if (session === null) return null;\n    return <WrappedComponent {...props} />;\n  };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/zod/blockSchema.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Insert `,`","line":89,"column":82,"nodeType":null,"messageId":"insert","endLine":89,"endColumn":82,"fix":{"range":[1918,1918],"text":","}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":106,"column":1,"nodeType":null,"messageId":"delete","endLine":106,"endColumn":3,"fix":{"range":[2399,2401],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎`","line":119,"column":1,"nodeType":null,"messageId":"delete","endLine":120,"endColumn":1,"fix":{"range":[2650,2651],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `'type',·BasicBlockSchemas·as·[z.ZodDiscriminatedUnionOption<'type'>,·...z.ZodDiscriminatedUnionOption<'type'>[]]` with `⏎··'type',⏎··BasicBlockSchemas·as·[⏎····z.ZodDiscriminatedUnionOption<'type'>,⏎····...z.ZodDiscriminatedUnionOption<'type'>[],⏎··]⏎`","line":123,"column":65,"nodeType":null,"messageId":"replace","endLine":123,"endColumn":177,"fix":{"range":[2865,2977],"text":"\n  'type',\n  BasicBlockSchemas as [\n    z.ZodDiscriminatedUnionOption<'type'>,\n    ...z.ZodDiscriminatedUnionOption<'type'>[],\n  ]\n"}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎`","line":131,"column":4,"nodeType":null,"messageId":"delete","endLine":132,"endColumn":1,"fix":{"range":[3205,3206],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":5,"source":"import { z } from 'zod';\n\n// Step 1: Define per-block content schemas with metadata\nexport const blockContentSchemaMap = {\n  text: {\n    label: 'Text Block',\n    icon: '📝',\n    schema: z.object({ value: z.string() }),\n  },\n  image: {\n    label: 'Image',\n    icon: '🖼️',\n    schema: z.object({\n      url: z.string().url(),\n      alt: z.string(),\n    }),\n  },\n  video: {\n    label: 'Video',\n    icon: '📹',\n    schema: z.object({\n      url: z.string().url(),\n      caption: z.string().optional(),\n    }),\n  },\n  audio: {\n    label: 'Audio',\n    icon: '🎧',\n    schema: z.object({\n      provider: z.enum(['spotify', 'soundcloud', 'suno']),\n      url: z.string().url(),\n      title: z.string().optional(),\n    }),\n  },\n  quote: {\n    label: 'Quote',\n    icon: '❝',\n    schema: z.object({\n      text: z.string(),\n      author: z.string().optional(),\n    }),\n  },\n  button: {\n    label: 'Button',\n    icon: '🔘',\n    schema: z.object({\n      label: z.string(),\n      href: z.string().url(),\n      style: z.enum(['primary', 'secondary', 'ghost']).optional(),\n    }),\n  },\n  hero: {\n    label: 'Hero',\n    icon: '🎯',\n    schema: z.object({\n      title: z.string(),\n      description: z.string().optional(),\n      cta_label: z.string().optional(),\n      cta_link: z.string().optional(),\n    }),\n  },\n  services: {\n    label: 'Services',\n    icon: '🧰',\n    schema: z.object({\n      items: z.array(z.string()),\n    }),\n  },\n  testimonial: {\n    label: 'Testimonial',\n    icon: '💬',\n    schema: z.object({\n      quote: z.string(),\n      attribution: z.string().optional(),\n    }),\n  },\n  cta: {\n    label: 'Call to Action',\n    icon: '🚀',\n    schema: z.object({\n      label: z.string(),\n      link: z.string().url(),\n    }),\n  },\n} as const;\n\n// Step 2: Factory function to generate block union + UI metadata\nexport function createBlockUnion<\n  T extends Record<string, { label: string; icon: string; schema: z.ZodTypeAny }>\n>(\n  map: T\n): {\n  schemas: z.ZodDiscriminatedUnionOption<'type'>[];\n  meta: Record<keyof T, { label: string; icon: string }>;\n} {\n  const schemas: z.ZodDiscriminatedUnionOption<'type'>[] = [];\n  const meta: Partial<Record<keyof T, { label: string; icon: string }>> = {};\n\n  for (const [type, config] of Object.entries(map)) {\n    schemas.push(\n      z.object({\n        type: z.literal(type),\n        value: config.schema,\n      }) as z.ZodDiscriminatedUnionOption<'type'>\n    );\n  \n    meta[type as keyof T] = {\n      label: config.label,\n      icon: config.icon,\n    };\n  }\n\n  return { schemas, meta } as {\n    schemas: z.ZodDiscriminatedUnionOption<'type'>[];\n    meta: Record<keyof T, { label: string; icon: string }>;\n  };\n}\n\n\n// Step 3: Create base schemas + grid + final union\nconst { schemas: BasicBlockSchemas, meta: blockMeta } = createBlockUnion(blockContentSchemaMap);\n\nexport const BlockSchema: z.ZodType<any> = z.discriminatedUnion('type', BasicBlockSchemas as [z.ZodDiscriminatedUnionOption<'type'>, ...z.ZodDiscriminatedUnionOption<'type'>[]]);\n\nexport const GridBlockSchema = z.object({\n  type: z.literal('grid'),\n  value: z.object({\n    columns: z.number().min(1).max(12),\n    items: z.lazy(() => z.array(BlockSchema).max(4, 'Limit 4 blocks inside a grid')),\n  }),\n});\n\n\n// Step 4: Export schema, helpers, and types\nexport type Block = z.infer<typeof BlockSchema>;\nexport type GridBlock = z.infer<typeof GridBlockSchema>;\n\nexport function isValidBlock(data: unknown): data is Block {\n  return BlockSchema.safeParse(data).success;\n}\n\nexport const blockPreviewFallback: Record<Block['type'], string> = Object.entries(blockMeta).reduce(\n  (acc, [key, val]) => {\n    acc[key as Block['type']] = val.icon + ' ' + val.label;\n    return acc;\n  },\n  {} as Record<Block['type'], string>\n);\n\nexport { blockMeta };\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/lib/zod/templateSaveSchema.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/next-env.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/next.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/not-found.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/og/compare/[slug]/route.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/playwright.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/postcss.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/query-usecases.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/tools/prebuild-og/page.tsx","messages":[{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":110,"column":15,"nodeType":"JSXOpeningElement","endLine":114,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { Button } from '@/components/ui';\n\nexport default function PrebuildOGPage() {\n  const [slugs, setSlugs] = useState<string[]>([]);\n  const [results, setResults] = useState<Record<string, 'pending' | 'success' | 'error'>>({});\n  const [loading, setLoading] = useState(false);\n  const [totalMB, setTotalMB] = useState<string>('0.0');\n\n  const fetchSlugs = async () => {\n    const res = await fetch('/api/compare-slugs');\n    const data = await res.json();\n    setSlugs(data.slugs);\n    setResults(Object.fromEntries(data.slugs.map((slug: string) => [slug, 'pending'])));\n  };\n\n  const fetchStorageInfo = async () => {\n    const res = await fetch('/api/list-og-zips');\n    const data = await res.json();\n    setTotalMB(data.totalMB || '0.0');\n  };\n\n  const triggerBuilds = async () => {\n    setLoading(true);\n    for (const slug of slugs) {\n      try {\n        const res = await fetch(`/og/compare/${slug}`);\n        if (res.ok) {\n          setResults((prev) => ({ ...prev, [slug]: 'success' }));\n        } else {\n          setResults((prev) => ({ ...prev, [slug]: 'error' }));\n        }\n      } catch {\n        setResults((prev) => ({ ...prev, [slug]: 'error' }));\n      }\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchSlugs();\n    fetchStorageInfo();\n  }, []);\n\n  const overQuota = parseFloat(totalMB) > 100;\n\n  return (\n    <main className=\"max-w-4xl mx-auto p-6 space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div className=\"flex flex-col gap-2\">\n          <h1 className=\"text-2xl font-bold\">\n            Prebuild OG Images{' '}\n            {overQuota ? (\n              <span className=\"text-sm text-red-500 ml-2\">({totalMB} MB used – over quota)</span>\n            ) : (\n              <span className=\"text-sm text-muted-foreground ml-2\">({totalMB} MB used)</span>\n            )}\n          </h1>\n          <div className=\"w-full h-3 bg-gray-200 rounded overflow-hidden\">\n            <div\n              className={`h-full ${overQuota ? 'bg-red-500' : 'bg-blue-500'}`}\n              style={{ width: `${Math.min(100, parseFloat(totalMB))}%` }}\n            />\n          </div>\n        </div>\n        <Button\n          variant=\"outline\"\n          onClick={() => {\n            const zipUrl = `/api/download-og-zip?slugs=${encodeURIComponent(\n              slugs.filter((s) => results[s] === 'success').join(',')\n            )}`;\n            window.open(zipUrl, '_blank');\n          }}\n          disabled={!slugs.some((s) => results[s] === 'success')}\n        >\n          Download All as ZIP\n        </Button>\n      </div>\n\n      {overQuota && (\n        <div className=\"text-sm text-yellow-600 bg-yellow-100 border border-yellow-300 rounded px-4 py-2\">\n          Storage limit exceeded. Please delete old exports before generating new ones.\n        </div>\n      )}\n\n      <Button onClick={triggerBuilds} disabled={loading || slugs.length === 0 || overQuota}>\n        {loading ? 'Generating...' : 'Start Prebuild'}\n      </Button>\n\n      <ul className=\"text-sm space-y-4\">\n        {slugs.map((slug) => (\n          <li key={slug} className=\"border p-4 rounded shadow-sm\">\n            <div className=\"flex justify-between mb-2\">\n              <span className=\"font-mono text-sm\">{slug}</span>\n              <span\n                className={\n                  results[slug] === 'success'\n                    ? 'text-green-500'\n                    : results[slug] === 'error'\n                      ? 'text-red-500'\n                      : 'text-muted-foreground'\n                }\n              >\n                {results[slug]}\n              </span>\n            </div>\n            {results[slug] === 'success' && (\n              <img\n                src={`/og/compare/${slug}`}\n                alt={`OG image for ${slug}`}\n                className=\"w-full border rounded\"\n              />\n            )}\n          </li>\n        ))}\n      </ul>\n    </main>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/utils/getSupportEmail.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/utils/jsonSchemaToZod.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/utils/logEvent.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/utils/normalizeTemplate.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/utils/publishSite.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/utils/renderVersionDiff.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/utils/roles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/utils/uploadQRCodeImage.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/utils/zodToJsonSchema.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/admin/views.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/_sites/[slug]/page.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useEffect' is defined but never used.","line":10,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":10,"endColumn":19},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··params,⏎}:·{⏎··params:·{·slug:·string·};⏎` with `·params·}:·{·params:·{·slug:·string·}·`","line":13,"column":41,"nodeType":null,"messageId":"replace","endLine":17,"endColumn":1,"fix":{"range":[474,518],"text":" params }: { params: { slug: string } "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··········.from('public_sites')⏎··········.update({·og_image_url:·finalUrl·})⏎··········` with `.from('public_sites').update({·og_image_url:·finalUrl·})`","line":43,"column":23,"nodeType":null,"messageId":"replace","endLine":46,"endColumn":11,"fix":{"range":[1291,1380],"text":".from('public_sites').update({ og_image_url: finalUrl })"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··········className=\"text-sm·text-zinc-300\"⏎··········dangerouslySetInnerHTML={{·__html:·site.content·}}⏎·······` with `·className=\"text-sm·text-zinc-300\"·dangerouslySetInnerHTML={{·__html:·site.content·}}`","line":80,"column":13,"nodeType":null,"messageId":"replace","endLine":83,"endColumn":8,"fix":{"range":[2599,2712],"text":" className=\"text-sm text-zinc-300\" dangerouslySetInnerHTML={{ __html: site.content }}"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"// /app/_sites/[slug]/page.tsx\nexport const runtime = 'nodejs';\nexport const dynamic = 'force-dynamic';\nexport const preferredRegion = 'iad1';\n\nimport TemplateRenderer from '@/components/template-renderer';\nimport { getSupabase } from '@/lib/supabase/server';\nimport { notFound } from 'next/navigation';\nimport Head from 'next/head';\nimport { useEffect } from 'react';\nimport { DevToolsToggler } from '@/components/DevToolsToggler';\n\nexport default async function SitePage({\n  params,\n}: {\n  params: { slug: string };\n}) {\n  const slug = params.slug;\n  if (!slug) return notFound();\n\n  const supabase = await getSupabase();\n  const { data: site, error } = await supabase\n    .from('public_sites')\n    .select('*')\n    .eq('slug', slug)\n    .maybeSingle();\n\n  if (!site || error) return notFound();\n\n  const ogImageUrl = `https://quicksites.ai/api/og/${slug}/image`;\n\n  let resolvedOgUrl = site.og_image_url || ogImageUrl;\n\n  try {\n    const ogResponse = await fetch(ogImageUrl, {\n      headers: { accept: 'image/*' },\n      next: { revalidate: 60 },\n    });\n    const contentType = ogResponse.headers.get('content-type') || '';\n    if (ogResponse.ok && contentType.includes('image')) {\n      const finalUrl = ogResponse.url;\n      if (finalUrl !== site.og_image_url) {\n        await supabase\n          .from('public_sites')\n          .update({ og_image_url: finalUrl })\n          .eq('slug', slug);\n        resolvedOgUrl = finalUrl;\n      }\n    }\n  } catch (err) {\n    console.warn('⚠️ OG image prefetch failed:', err);\n  }\n\n  // useEffect(() => {\n  //   const minimized = localStorage.getItem('devtools:minimized');\n  //   if (minimized === 'true') {\n  //     document.documentElement.classList.add('devtools-minimized');\n  //   } else {\n  //     document.documentElement.classList.remove('devtools-minimized');\n  //   }\n  // }, []);\n\n  return (\n    <>\n      <DevToolsToggler />\n      <Head>\n        <title>{site.seo_title || site.business_name}</title>\n        <meta name=\"description\" content={site.seo_description || ''} />\n        <link rel=\"canonical\" href={`https://${slug}.quicksites.ai`} />\n\n        <meta property=\"og:title\" content={site.seo_title || site.business_name} />\n        <meta property=\"og:description\" content={site.seo_description || ''} />\n        <meta property=\"og:image\" content={resolvedOgUrl} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:url\" content={`https://${slug}.quicksites.ai`} />\n      </Head>\n\n      <TemplateRenderer siteSlug={slug}>\n        <h1 className=\"text-2xl font-bold mb-4\">{site.business_name}</h1>\n        <div\n          className=\"text-sm text-zinc-300\"\n          dangerouslySetInnerHTML={{ __html: site.content }}\n        />\n      </TemplateRenderer>\n    </>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/actions/setSessionCookie.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/404.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/access-requests.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/analytics.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'GetServerSideProps' is defined but never used.","line":1,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":1,"endColumn":28},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'PieChart' is defined but never used.","line":10,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":10,"endColumn":11},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Pie' is defined but never used.","line":11,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":11,"endColumn":6},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Cell' is defined but never used.","line":12,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":12,"endColumn":7},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'supabase' is assigned a value but never used.","line":16,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":16,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { GetServerSideProps } from 'next';\nimport { createClient } from '@supabase/supabase-js';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell,\n  Legend,\n} from 'recharts';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport default function SharedAnalytics({ domain, views }: { domain: string; views: any[] }) {\n  const byDay: Record<string, number> = {};\n  views.forEach((v) => {\n    const day = new Date(v.viewed_at).toISOString().slice(0, 10);\n    byDay[day] = (byDay[day] || 0) + 1;\n  });\n\n  return (\n    <div className=\"max-w-5xl mx-auto p-6 space-y-6\">\n      <h1 className=\"text-2xl font-bold\">Analytics for {domain}</h1>\n\n      <div className=\"flex items-center gap-4 mb-4\">\n        <button\n          onClick={async () => {\n            const QRCode = await import('qrcode');\n            const url = window.location.href;\n            QRCode.toDataURL(url).then((dataUrl: string) => {\n              const win = window.open();\n              if (win) win.document.write(`<img src='${dataUrl}' /><p>${url}</p>`);\n            });\n          }}\n          className=\"text-sm text-blue-600 underline\"\n        >\n          📸 Generate QR Code\n        </button>\n\n        <form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            const email = (\n              (e.target as HTMLFormElement).querySelector('input[type=email]') as HTMLInputElement\n            )?.value;\n            if (email) {\n              await fetch('/api/subscribe', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ domain, email }),\n              });\n              alert('Subscribed to updates for ' + domain);\n            }\n          }}\n          className=\"flex gap-2 items-center\"\n        >\n          <input\n            type=\"email\"\n            required\n            placeholder=\"you@example.com\"\n            className=\"border rounded px-2 py-1 text-sm\"\n          />\n          <button type=\"submit\" className=\"text-sm text-green-600 underline\">\n            📬 Subscribe to reports\n          </button>\n        </form>\n      </div>\n\n      <section>\n        <h2 className=\"text-lg font-semibold mb-2\">Views per Day</h2>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart data={Object.entries(byDay).map(([day, count]) => ({ day, count }))}>\n            <XAxis dataKey=\"day\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"count\" fill=\"#6366f1\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </section>\n\n      <p className=\"text-sm text-muted-foreground\">Total views: {views.length}</p>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/audit.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/branding.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/branding/[id].tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":19},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":110,"column":13,"nodeType":"JSXOpeningElement","endLine":110,"endColumn":87},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":116,"column":11,"nodeType":"JSXOpeningElement","endLine":120,"endColumn":13},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":126,"column":13,"nodeType":"JSXOpeningElement","endLine":126,"endColumn":80}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport QRCode from 'qrcode';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport default function BrandingProfilePage() {\n  const searchParams = useSearchParams();\n  const id = searchParams?.get('id') as string;\n  const [profile, setProfile] = useState<any>(null);\n  const [qr, setQr] = useState<string | null>(null);\n  const [accessOk, setAccessOk] = useState(false);\n  const [passwordAttempt, setPasswordAttempt] = useState('');\n\n  useEffect(() => {\n    if (!id || typeof id !== 'string') return;\n\n    supabase\n      .from('branding_profiles')\n      .select('*')\n      .eq('id', id)\n      .single()\n      .then(({ data }) => {\n        if (data) {\n          const accessParam = new URLSearchParams(window.location.search).get('access');\n          if (!data.access_token && !data.password) {\n            setAccessOk(true);\n          } else if (data.access_token && accessParam === data.access_token) {\n            setAccessOk(true);\n          } else {\n            setAccessOk(false);\n          }\n          setProfile(data);\n          const previewUrl = `${window.location.origin}/api/og/snapshot?theme=${data.theme}&brand=${data.brand}`;\n          QRCode.toDataURL(previewUrl).then(setQr);\n        }\n      });\n  }, [id]);\n\n  if (!profile) return <p className=\"p-6 text-sm text-muted-foreground\">Loading profile...</p>;\n\n  if (!accessOk && profile?.password) {\n    return (\n      <div className=\"p-6\">\n        <h2 className=\"text-lg font-semibold mb-2\">Password Required</h2>\n        <input\n          className=\"border px-2 py-1 rounded mr-2\"\n          placeholder=\"Enter password\"\n          value={passwordAttempt}\n          onChange={(e) => setPasswordAttempt(e.target.value)}\n        />\n        <button\n          className=\"bg-black text-white px-3 py-1 rounded\"\n          onClick={() => {\n            if (passwordAttempt === profile.password) setAccessOk(true);\n            else alert('Incorrect password');\n          }}\n        >\n          Submit\n        </button>\n      </div>\n    );\n  }\n\n  const previewUrl = `/api/og/snapshot?theme=${profile.theme}&brand=${profile.brand}`;\n\n  async function downloadPDF() {\n    const html2pdf = (await import('html2pdf.js')).default;\n\n    const element = document.getElementById('branding-preview-pdf');\n    if (element) {\n      html2pdf()\n        .set({\n          filename: `${profile.name}-preview.pdf`,\n          margin: 10,\n          html2canvas: { scale: 2 },\n          jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' },\n        })\n        .from(element)\n        .save();\n    }\n  }\n\n  return (\n    <div className=\"max-w-3xl mx-auto p-6 space-y-6\">\n      <div id=\"branding-preview-pdf\" className=\"space-y-6\">\n        <h1 className=\"text-2xl font-bold\">{profile.name}</h1>\n\n        <div className=\"flex items-center gap-4\">\n          <span className=\"text-sm font-medium\">Theme:</span>\n          <span className=\"px-2 py-1 rounded bg-gray-200\">{profile.theme}</span>\n\n          <span className=\"text-sm font-medium\">Brand:</span>\n          <span className=\"px-2 py-1 rounded bg-gray-200\">{profile.brand}</span>\n\n          {profile.accent_color && (\n            <span\n              className=\"w-5 h-5 rounded-full border\"\n              style={{ backgroundColor: profile.accent_color }}\n            />\n          )}\n\n          {profile.logo_url && (\n            <img src={profile.logo_url} alt=\"Logo\" className=\"w-8 h-8 rounded-full\" />\n          )}\n        </div>\n\n        <div>\n          <p className=\"text-sm text-muted-foreground mb-1\">OG Preview:</p>\n          <img\n            src={previewUrl}\n            alt=\"OG Preview\"\n            className=\"w-full max-w-xl border shadow rounded\"\n          />\n        </div>\n\n        {qr && (\n          <div>\n            <p className=\"text-sm text-muted-foreground mb-1\">QR Code:</p>\n            <img src={qr} alt=\"QR Code\" className=\"w-32 h-32 border rounded\" />\n          </div>\n        )}\n\n        <div>\n          <p className=\"text-sm\">Link:</p>\n          <code className=\"text-xs bg-gray-100 p-2 rounded block\">{previewUrl}</code>\n        </div>\n      </div>\n\n      <button className=\"bg-blue-600 text-white px-4 py-2 rounded mt-4\" onClick={downloadPDF}>\n        Download PDF Preview\n      </button>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/branding/import.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":19,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":19,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport default function BrandingImportPage() {\n  const [importData, setImportData] = useState('');\n  const [feedback, setFeedback] = useState('');\n\n  const handleImport = async () => {\n    try {\n      const parsed = JSON.parse(importData);\n      const { error } = await supabase.from('branding_profiles').insert([parsed]);\n      if (error) throw error;\n      setFeedback('✅ Imported successfully');\n    } catch (e) {\n      setFeedback('❌ Invalid JSON or import error');\n    }\n  };\n\n  const handleExport = async () => {\n    const { data } = await supabase.from('branding_profiles').select('*').limit(1);\n    if (data && data.length > 0) {\n      const blob = new Blob([JSON.stringify(data[0], null, 2)], {\n        type: 'application/json',\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'branding-profile.json';\n      a.click();\n      URL.revokeObjectURL(url);\n    }\n  };\n\n  return (\n    <div className=\"max-w-xl mx-auto p-6 space-y-4\">\n      <h1 className=\"text-xl font-bold\">Import / Export Branding Profile</h1>\n\n      <button onClick={handleExport} className=\"bg-blue-600 text-white px-4 py-2 rounded\">\n        Export Sample\n      </button>\n\n      <textarea\n        className=\"w-full border rounded p-2 text-sm h-48\"\n        placeholder=\"Paste exported branding_profile JSON here...\"\n        value={importData}\n        onChange={(e) => setImportData(e.target.value)}\n      />\n\n      <button onClick={handleImport} className=\"bg-green-600 text-white px-4 py-2 rounded\">\n        Import\n      </button>\n\n      {feedback && <p className=\"text-sm\">{feedback}</p>}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/branding/og-editor/[id].tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":1,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":1,"endColumn":19},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":74,"column":11,"nodeType":"JSXOpeningElement","endLine":74,"endColumn":92}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useRouter, useSearchParams } from 'next/navigation';\nimport { useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nconst defaultLayout = [\n  { type: 'hero', active: true },\n  { type: 'features', active: true },\n  { type: 'testimonials', active: true },\n  { type: 'cta', active: true },\n];\n\nexport default function OGLayoutEditor() {\n  const searchParams = useSearchParams();\n  const id = searchParams?.get('id') as string;\n  const [layout, setLayout] = useState(defaultLayout);\n  const [profile, setProfile] = useState<any>(null);\n\n  useEffect(() => {\n    if (!id || typeof id !== 'string') return;\n\n    supabase\n      .from('branding_profiles')\n      .select('*')\n      .eq('id', id)\n      .single()\n      .then(({ data }) => {\n        if (data?.layout) setLayout(data.layout);\n        setProfile(data);\n      });\n  }, [id]);\n\n  const toggleBlock = (type: string) => {\n    setLayout(layout.map((b) => (b.type === type ? { ...b, active: !b.active } : b)));\n  };\n\n  const saveLayout = async () => {\n    await supabase.from('branding_profiles').update({ layout }).eq('id', id);\n    alert('Layout saved!');\n  };\n\n  const previewURL = `/api/og/snapshot?snapshotId=${id}`;\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white px-6 py-10\">\n      <div className=\"max-w-xl mx-auto bg-gray-800 p-6 rounded-lg shadow space-y-6\">\n        <h1 className=\"text-xl font-bold mb-4\">OG Layout Editor: {profile?.name}</h1>\n\n        {layout.map((block, index) => (\n          <label key={index} className=\"flex items-center gap-2 mb-2\">\n            <input\n              type=\"checkbox\"\n              className=\"accent-blue-500\"\n              checked={block.active}\n              onChange={() => toggleBlock(block.type)}\n            />\n            <span className=\"capitalize\">{block.type}</span>\n          </label>\n        ))}\n\n        <button\n          onClick={saveLayout}\n          className=\"bg-blue-600 hover:bg-blue-500 text-white px-4 py-2 rounded\"\n        >\n          Save Layout\n        </button>\n\n        <div className=\"pt-6\">\n          <p className=\"text-sm text-muted-foreground mb-1\">OG Preview:</p>\n          <img src={previewURL} alt=\"Preview\" className=\"rounded border border-gray-700\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/dashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/docs.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'fs' is defined but never used.","line":1,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":1,"endColumn":10},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'path' is defined but never used.","line":2,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":12}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import fs from 'fs';\nimport path from 'path';\nimport React from 'react';\nimport { useEffect, useState } from 'react';\n\nexport default function DocsPage() {\n  const [html, setHtml] = useState('');\n\n  useEffect(() => {\n    fetch('/api/readme')\n      .then((res) => res.text())\n      .then(setHtml);\n  }, []);\n\n  return (\n    <div className=\"prose mx-auto max-w-4xl p-6\">\n      <div dangerouslySetInnerHTML={{ __html: html }} />\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/embed-views.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'views'. Either include it or remove the dependency array.","line":62,"column":6,"nodeType":"ArrayExpression","endLine":62,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [views]","fix":{"range":[2076,2078],"text":"[views]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// pages/admin/embed-views.tsx\nimport { useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport Head from 'next/head';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nfunction getFlagEmoji(countryCode: string) {\n  if (!countryCode || countryCode.length !== 2) return '🌐';\n  return countryCode\n    .toUpperCase()\n    .replace(/./g, (char) => String.fromCodePoint(127397 + char.charCodeAt(0)));\n}\n\nexport default function EmbedViewsDashboard() {\n  const [views, setViews] = useState<any[]>([]);\n  const [locationTotals, setLocationTotals] = useState<Record<string, number>>({});\n  const [startDate, setStartDate] = useState<string>('');\n  const [endDate, setEndDate] = useState<string>('');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const recentCounts = views.reduce(\n      (acc, v) => {\n        const now = new Date();\n        const ts = new Date(v.created_at);\n        const deltaHours = (now.getTime() - ts.getTime()) / 36e5;\n        if (deltaHours <= 24) {\n          acc[v.schema_id] = (acc[v.schema_id] || 0) + 1;\n        }\n        return acc;\n      },\n      {} as Record<string, number>\n    );\n    for (const [schema_id, count] of Object.entries(recentCounts)) {\n      if ((count as number) >= 100) {\n        fetch('/api/slack/embed-alert', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ schema_id, count }),\n        });\n      }\n    }\n    supabase\n      .from('embed_views')\n      .select('*')\n      .order('created_at', { ascending: false })\n      .then(({ data }) => {\n        setViews(data || []);\n        const locs: Record<string, number> = {};\n        (data || []).forEach((v) => {\n          const loc = v.location || 'Unknown';\n          locs[loc] = (locs[loc] || 0) + 1;\n        });\n        setLocationTotals(locs);\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <Head>\n        <title>Embed View Logs</title>\n      </Head>\n      <div className=\"max-w-4xl mx-auto p-6\">\n        <div className=\"flex gap-4 mb-4\">\n          <label className=\"text-sm text-gray-500\">Date Range:</label>\n          <input\n            type=\"date\"\n            className=\"border px-2 py-1 rounded text-sm\"\n            onChange={(e) => setStartDate(e.target.value)}\n          />\n          <span className=\"text-gray-500\">to</span>\n          <input\n            type=\"date\"\n            className=\"border px-2 py-1 rounded text-sm\"\n            onChange={(e) => setEndDate(e.target.value)}\n          />\n        </div>\n        <div className=\"flex flex-col md:flex-row items-start md:items-center justify-between gap-4 mb-4\">\n          <input\n            type=\"text\"\n            placeholder=\"Filter by schema ID, referrer, or date...\"\n            onChange={(e) => {\n              const val = e.target.value.toLowerCase();\n              setViews((prev) =>\n                prev.filter(\n                  (v) =>\n                    v.schema_id.toLowerCase().includes(val) ||\n                    (v.referrer || '').toLowerCase().includes(val) ||\n                    new Date(v.created_at).toLocaleString().toLowerCase().includes(val)\n                )\n              );\n            }}\n            className=\"border text-sm px-2 py-1 rounded w-full md:max-w-xs\"\n          />\n          <button\n            onClick={() => {\n              const csv = [\n                ['schema_id', 'referrer', 'created_at'],\n                ...views.map((v) => [v.schema_id, v.referrer || '', v.created_at]),\n              ]\n                .map((r) => r.join(','))\n                .join('\\n');\n              const blob = new Blob([csv], { type: 'text/csv' });\n              const url = URL.createObjectURL(blob);\n              const a = document.createElement('a');\n              a.href = url;\n              a.download = 'embed-views.csv';\n              a.click();\n              URL.revokeObjectURL(url);\n            }}\n            className=\"bg-blue-700 text-white text-sm px-4 py-1 rounded\"\n          >\n            Export CSV\n          </button>\n        </div>\n        <h1 className=\"text-xl font-bold mb-4\">📊 Embed View Logs</h1>\n        <div className=\"w-full h-64 mb-6\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart\n              data={views.reduce(\n                (acc, v) => {\n                  const day = new Date(v.created_at).toISOString().slice(0, 10);\n                  const ref = v.referrer || 'Other';\n                  const key = `${day}|${ref}`;\n                  const existing = acc.find((d: { key: string }) => d.key === key);\n                  if (existing) existing.count++;\n                  else acc.push({ date: day, referrer: ref, count: 1, key });\n                  return acc;\n                },\n                [] as {\n                  date: string;\n                  referrer: string;\n                  count: number;\n                  key: string;\n                }[]\n              )}\n            >\n              <XAxis dataKey=\"date\" interval=\"preserveStartEnd\" fontSize={12} />\n              <YAxis allowDecimals={false} fontSize={12} />\n              <Tooltip />\n              {[...new Set(views.map((v) => v.referrer || 'Other'))].map((ref, i) => (\n                <Bar\n                  key={ref}\n                  dataKey={(entry) => (entry.referrer === ref ? entry.count : 0)}\n                  name={ref}\n                  stackId=\"a\"\n                  fill={`hsl(${(i * 70) % 360}, 60%, 60%)`}\n                />\n              ))}\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"text-sm text-gray-600\">Filter by country:</label>\n          <select\n            onChange={(e) => {\n              const c = e.target.value;\n              if (c === '') return;\n              setViews((prev) => prev.filter((v) => v.country_code === c));\n            }}\n            className=\"border px-2 py-1 text-sm rounded w-full md:max-w-sm\"\n          >\n            <option value=\"\">-- All Countries --</option>\n            {[...new Set(views.map((v) => v.country_code).filter(Boolean))].map((code) => (\n              <option key={code} value={code}>\n                {code}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"text-sm text-gray-600\">Filter by schema ID:</label>\n          <select\n            onChange={(e) => {\n              const id = e.target.value;\n              if (id === '') return;\n              setViews((prev) => prev.filter((v) => v.schema_id === id));\n            }}\n            className=\"border px-2 py-1 text-sm rounded w-full md:max-w-sm\"\n          >\n            <option value=\"\">-- All Schemas --</option>\n            {[...new Set(views.map((v) => v.schema_id))].map((id) => (\n              <option key={id} value={id}>\n                {id}\n              </option>\n            ))}\n          </select>\n        </div>\n        <input\n          type=\"text\"\n          placeholder=\"Filter by schema ID, referrer, or date...\"\n          onChange={(e) => {\n            const val = e.target.value.toLowerCase();\n            setViews((prev) =>\n              prev.filter(\n                (v) =>\n                  v.schema_id.toLowerCase().includes(val) ||\n                  (v.referrer || '').toLowerCase().includes(val) ||\n                  new Date(v.created_at).toLocaleString().toLowerCase().includes(val)\n              )\n            );\n          }}\n          className=\"border text-sm px-2 py-1 rounded w-full mb-4\"\n        />\n        {loading && <p className=\"text-gray-400\">Loading...</p>}\n        {!loading && views.length === 0 && <p>No embed views recorded.</p>}\n        <table className=\"w-full text-sm border mt-4\">\n          <thead>\n            <tr className=\"bg-gray-100 text-left\">\n              <th className=\"p-2\">Schema ID</th>\n              <th className=\"p-2\">Country</th>\n              <th className=\"p-2\">Region</th>\n              <th className=\"p-2\">Schema ID</th>\n              <th className=\"p-2\">Referrer</th>\n              <th className=\"p-2\">Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {views\n              .filter((v) => {\n                const created = new Date(v.created_at);\n                const start = startDate ? new Date(startDate) : null;\n                const end = endDate ? new Date(endDate + 'T23:59:59') : null;\n                return (!start || created >= start) && (!end || created <= end);\n              })\n              .map((v) => (\n                <tr key={v.id} className=\"border-t\">\n                  <td className=\"p-2 text-blue-600\">\n                    <a\n                      href={`/admin/zod-playground?schema_id=${v.schema_id}`}\n                      className=\"underline\"\n                    >\n                      {v.schema_id}\n                    </a>\n                  </td>\n                  <td className=\"p-2 text-gray-600\">{v.country_code || '—'}</td>\n                  <td className=\"p-2 text-gray-600\">{v.region || '—'}</td>\n                  <td className=\"p-2 text-gray-600\">{v.referrer || '—'}</td>\n                  <td className=\"p-2 text-gray-500\">{new Date(v.created_at).toLocaleString()}</td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n\n        <div className=\"mt-8\">\n          <h2 className=\"text-lg font-semibold mb-2\">🌍 Views by Location</h2>\n          <ul className=\"text-sm text-gray-600 list-disc pl-5\">\n            {Object.entries(locationTotals).map(([loc, count]) => (\n              <li key={loc}>\n                {loc}: {count}\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"mt-8\">\n          <h2 className=\"text-lg font-semibold mb-2\">🌐 Views by Country</h2>\n          <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4 text-sm text-gray-600\">\n            {Object.entries(locationTotals).map(([loc, count]) => (\n              <div key={loc} className=\"flex items-center gap-2\">\n                <span className=\"text-xl\">{getFlagEmoji(loc)}</span>\n                <span>\n                  {loc}: {count}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <button\n          onClick={() => {\n            const csv = [\n              ['schema_id', 'referrer', 'created_at'],\n              ...views.map((v) => [v.schema_id, v.referrer || '', v.created_at]),\n            ]\n              .map((r) => r.join(','))\n              .join('\\n');\n            const blob = new Blob([csv], { type: 'text/csv' });\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = 'embed-views.csv';\n            a.click();\n            URL.revokeObjectURL(url);\n          }}\n          className=\"mt-6 bg-blue-700 text-white px-4 py-1 rounded\"\n        >\n          Export CSV\n        </button>\n      </div>\n    </>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/links.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/logs.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'setFilterType' is assigned a value but never used.","line":24,"column":22,"nodeType":null,"messageId":"unusedVar","endLine":24,"endColumn":35},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'setFilterUser' is assigned a value but never used.","line":25,"column":22,"nodeType":null,"messageId":"unusedVar","endLine":25,"endColumn":35},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'setStartDate' is assigned a value but never used.","line":26,"column":21,"nodeType":null,"messageId":"unusedVar","endLine":26,"endColumn":33},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'setEndDate' is assigned a value but never used.","line":27,"column":19,"nodeType":null,"messageId":"unusedVar","endLine":27,"endColumn":29}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\nimport { useCurrentUser } from '@/hooks/useCurrentUser';\nimport { Bar, Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { supabase } from '@/admin/lib/supabaseClient';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nexport default function AdminLogsPage() {\n  const { user } = useCurrentUser();\n  const [logs, setLogs] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [filterType, setFilterType] = useState('');\n  const [filterUser, setFilterUser] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  const isAdmin = user?.role === 'admin';\n\n  useEffect(() => {\n    if (!isAdmin) return;\n    const fetchLogs = async () => {\n      let query = supabase\n        .from('site_events')\n        .select('*')\n        .order('created_at', { ascending: false });\n      if (filterType) query = query.eq('type', filterType);\n      if (filterUser) query = query.ilike('payload->>user_email', `%${filterUser}%`);\n      if (startDate) query = query.gte('created_at', startDate);\n      if (endDate) query = query.lte('created_at', endDate + 'T23:59:59Z');\n      const { data, error } = await query;\n      if (error) console.error(error);\n      else setLogs(data || []);\n      setLoading(false);\n    };\n    fetchLogs();\n  }, [filterType, filterUser, startDate, endDate, isAdmin]);\n\n  const exportCSV = () => {\n    const rows = logs.map((log) => ({\n      created_at: log.created_at,\n      type: log.type,\n      user_email: log.payload?.user_email || '',\n      payload: JSON.stringify(log.payload),\n    }));\n    const csv =\n      'created_at,type,user_email,payload\\n' +\n      rows\n        .map((r) => `${r.created_at},${r.type},${r.user_email},\"${r.payload.replace(/\"/g, '\"\"')}\"`)\n        .join('\\n');\n    const blob = new Blob([csv], { type: 'text/csv' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'logs.csv';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const downloadPayload = (payload: any, id: string) => {\n    const blob = new Blob([JSON.stringify(payload, null, 2)], {\n      type: 'application/json',\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `payload-${id}.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const chartData = (() => {\n    const counts: Record<string, number> = {};\n    logs.forEach((log) => {\n      const date = new Date(log.created_at).toISOString().split('T')[0];\n      counts[date] = (counts[date] || 0) + 1;\n    });\n    const labels = Object.keys(counts).sort();\n    return {\n      labels,\n      datasets: [\n        {\n          label: 'Logs per Day',\n          data: labels.map((label) => counts[label]),\n          backgroundColor: 'rgba(59, 130, 246, 0.7)',\n        },\n      ],\n    };\n  })();\n\n  const exportChartImage = (canvasId: string, filename: string) => {\n    const canvas = document.getElementById(canvasId) as HTMLCanvasElement;\n    if (!canvas) return;\n    const url = canvas.toDataURL('image/png');\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    a.click();\n  };\n\n  const exportWeeklySummaryPDF = async () => {\n    const html2pdf = (await import('html2pdf.js')).default;\n    const element = document.getElementById('weekly-summary-container');\n    if (!element) return;\n    html2pdf()\n      .set({\n        margin: 0.5,\n        filename: 'weekly-summary.pdf',\n        html2canvas: { scale: 2 },\n        jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' },\n      })\n      .from(element)\n      .save();\n  };\n\n  const emailWeeklySummary = async () => {\n    const session = await supabase.auth.getSession();\n    const accessToken = session.data.session?.access_token;\n    const userEmail = session.data.session?.user?.user_metadata?.email;\n\n    const res = await fetch('https://<your-project>.functions.supabase.co/email-weekly-summary', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`,\n      },\n      body: JSON.stringify({ summary: chartData, userEmail }),\n    });\n\n    const result = await res.json();\n    alert(result.message || 'Email request sent');\n  };\n\n  if (!user?.id) return <p className=\"p-6 text-center\">🔒 You must be signed in to view logs.</p>;\n  if (!isAdmin)\n    return <p className=\"p-6 text-center text-red-600\">⛔ Access denied. Admins only.</p>;\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-6 space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-3xl font-bold\">📜 Deployment Logs</h1>\n        <button onClick={exportCSV} className=\"bg-gray-800 text-white px-4 py-2 rounded text-sm\">\n          Export CSV\n        </button>\n      </div>\n\n      <div className=\"flex gap-4\">\n        <button onClick={exportCSV} className=\"text-sm text-green-700 underline\">\n          Export CSV\n        </button>\n        <button\n          onClick={() => exportChartImage('weekly-summary-canvas', 'weekly-summary.png')}\n          className=\"text-sm text-blue-600 underline\"\n        >\n          Export Chart as Image\n        </button>\n        <button onClick={exportWeeklySummaryPDF} className=\"text-sm text-purple-700 underline\">\n          Download Weekly PDF\n        </button>\n        <button onClick={emailWeeklySummary} className=\"text-sm text-amber-700 underline\">\n          Email Summary\n        </button>\n      </div>\n\n      <div id=\"weekly-summary-container\" className=\"bg-white p-4 border rounded shadow space-y-4\">\n        <h2 className=\"text-lg font-semibold\">📊 Log Breakdown</h2>\n        <Bar\n          id=\"weekly-summary-canvas\"\n          data={chartData}\n          options={{\n            responsive: true,\n            plugins: { legend: { position: 'top' } },\n          }}\n        />\n        <h2 className=\"text-lg font-semibold\">📈 Total Logs Over Time</h2>\n        <Line\n          data={chartData}\n          options={{\n            responsive: true,\n            plugins: { legend: { position: 'top' } },\n          }}\n        />\n      </div>\n\n      {loading && <p>Loading...</p>}\n      {!loading && logs.length === 0 && <p>No logs found.</p>}\n      <div className=\"space-y-4\">\n        {logs.map((log) => (\n          <div key={log.id} className=\"bg-white p-4 border rounded shadow text-sm\">\n            <p className=\"text-gray-500\">🕒 {new Date(log.created_at).toLocaleString()}</p>\n            <p className=\"font-semibold text-blue-700\">{log.type}</p>\n            <p className=\"text-xs text-gray-600\">👤 {log.payload?.user_email || 'N/A'}</p>\n            <pre className=\"overflow-auto max-h-64 bg-gray-100 mt-2 p-2 rounded\">\n              {JSON.stringify(log.payload, null, 2)}\n            </pre>\n            <button\n              onClick={() => downloadPayload(log.payload, log.id)}\n              className=\"mt-2 text-xs text-blue-600 underline\"\n            >\n              Download Payload JSON\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/param-lab.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'summarizeQuery' is defined but never used.","line":8,"column":23,"nodeType":null,"messageId":"unusedVar","endLine":8,"endColumn":37},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'deletePreset' is assigned a value but never used.","line":113,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":113,"endColumn":21},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'handleApply' is assigned a value but never used.","line":125,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":125,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'handleShare' is assigned a value but never used.","line":131,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":131,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'query' is defined but never used. Allowed unused args must match /^_/u.","line":190,"column":24,"nodeType":null,"messageId":"unusedVar","endLine":190,"endColumn":29}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// pages/admin/param-lab.tsx\nimport { useSearchParams } from 'next/navigation';\nimport { useEffect, useState } from 'react';\nimport QRCode from 'react-qr-code';\nimport { createClient } from '@supabase/supabase-js';\n\nimport { queryParamSchemas } from '@/admin/lib/queryParamSchemas';\nimport { extractTags, summarizeQuery } from '@/admin/lib/queryUtils';\nimport QueryParamEditor from '@/components/admin/query-param-editor';\nimport TagFilterControls from '@/components/admin/tag-filter-controls';\nimport { useCurrentUser } from '@/hooks/useCurrentUser';\n// import PresetCard from '@/components/admin/preset-card';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport default function ParamLabPage() {\n  const searchParams = useSearchParams();\n  const { user } = useCurrentUser();\n  const slug = (searchParams?.get('slug') || 'campaign') as string;\n  const schema = queryParamSchemas[slug];\n\n  const [paramsString, setParamsString] = useState('');\n  const [shareUrl, setShareUrl] = useState('');\n  const [presets, setPresets] = useState<Record<string, string>>({});\n  const [presetName, setPresetName] = useState('');\n  const [tagFilter, setTagFilter] = useState<string[]>(() => {\n    if (typeof window !== 'undefined') {\n      const url = new URL(window.location.href);\n      const param = url.searchParams.get('tags');\n      return param\n        ? param\n            .split(',')\n            .map((t) => t.trim().toLowerCase())\n            .filter(Boolean)\n        : [];\n    }\n    return [];\n  });\n  const [tagMatchMode, setTagMatchMode] = useState<'any' | 'all'>(() => {\n    if (typeof window !== 'undefined') {\n      const url = new URL(window.location.href);\n      const mode = url.searchParams.get('tagMode');\n      return mode === 'any' ? 'any' : 'all';\n    }\n    return 'all';\n  });\n\n  const updateShareInfo = () => {\n    const url = new URL(window.location.href);\n    const paramEntries = Array.from(url.searchParams.entries()).filter(([k]) => k !== 'slug');\n    const query = paramEntries.map(([k, v]) => `${k}=${encodeURIComponent(v)}`).join('&');\n    setParamsString(query);\n    setShareUrl(window.location.href);\n  };\n\n  useEffect(() => {\n    updateShareInfo();\n  }, [slug, searchParams]);\n\n  useEffect(() => {\n    if (!user?.id) return;\n    supabase\n      .from('param_presets')\n      .select('*')\n      .eq('slug', slug)\n      .eq('user_id', user.id)\n      .then(({ data }) => {\n        const fromCloud = data?.reduce(\n          (acc, curr) => {\n            acc[`☁️ ${curr.name}`] = curr.query;\n            return acc;\n          },\n          {} as Record<string, string>\n        );\n        const local = JSON.parse(localStorage.getItem('param-presets') || '{}');\n        setPresets({ ...fromCloud, ...local });\n      });\n  }, [slug, user]);\n\n  const allTags = Object.entries(\n    Object.values(presets)\n      .flatMap((query) => extractTags(query))\n      .reduce(\n        (acc, tag) => {\n          const key = tag.toLowerCase();\n          acc[key] = (acc[key] || 0) + 1;\n          return acc;\n        },\n        {} as Record<string, number>\n      )\n  )\n    .filter(([_, count]) => count >= 2)\n    .sort((a, b) => b[1] - a[1]);\n\n  const savePreset = async () => {\n    const updated = { ...presets, [presetName]: paramsString };\n    setPresets(updated);\n    localStorage.setItem('param-presets', JSON.stringify(updated));\n    if (user?.id) {\n      await supabase.from('param_presets').upsert({\n        slug,\n        name: presetName,\n        query: paramsString,\n        user_id: user.id,\n      });\n    }\n    alert('Preset saved!');\n  };\n\n  const deletePreset = async (name: string) => {\n    if (!confirm(`Delete preset \"${name}\"?`)) return;\n    const updated = { ...presets };\n    delete updated[name];\n    setPresets(updated);\n    localStorage.setItem('param-presets', JSON.stringify(updated));\n    await supabase\n      .from('param_presets')\n      .delete()\n      .match({ slug, name: name.replace(/^☁️ /, ''), user_id: user?.id });\n  };\n\n  const handleApply = (query: string) => {\n    const url = new URL(window.location.href);\n    url.search = `?slug=${slug}&${query}`;\n    window.location.href = url.pathname + url.search;\n  };\n\n  const handleShare = (name: string, query: string) => {\n    const url = `${window.location.origin}/admin/param-lab?slug=${slug}&${query}`;\n    navigator.clipboard.writeText(url);\n    alert(`Copied shareable link for \"${name}\"!`);\n  };\n\n  if (!schema) return <div className=\"p-4 text-red-600\">Unknown schema: {slug}</div>;\n\n  return (\n    <div className=\"max-w-3xl mx-auto p-6 space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-2xl font-bold\">🧪 Param Lab</h1>\n        <select\n          className=\"border px-2 py-1 rounded\"\n          value={slug}\n          onChange={(e) => (window.location.href = `/admin/param-lab?slug=${e.target.value}`)}\n        >\n          {Object.keys(queryParamSchemas).map((key) => (\n            <option key={key} value={key}>\n              {key}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className=\"text-sm text-gray-500 space-y-2\">\n        <p>\n          <strong>Query Preview:</strong> {paramsString || '(none)'}\n        </p>\n        <div className=\"border p-2 inline-block bg-white\">\n          <QRCode value={shareUrl} />\n        </div>\n      </div>\n      <TagFilterControls\n        tagFilter={tagFilter}\n        setTagFilter={setTagFilter}\n        tagMatchMode={tagMatchMode}\n        setTagMatchMode={setTagMatchMode}\n        allTags={allTags}\n      />\n      <div className=\"flex gap-2\">\n        <input\n          value={presetName}\n          onChange={(e) => setPresetName(e.target.value)}\n          placeholder=\"Preset name\"\n          className=\"border px-2 py-1 rounded w-full\"\n        />\n        <button onClick={savePreset} className=\"text-sm bg-green-600 text-white px-4 py-1 rounded\">\n          Save Preset\n        </button>\n      </div>\n      <ul className=\"space-y-2\">\n        {Object.entries(presets)\n          .sort(([a], [b]) => a.localeCompare(b))\n          .filter(([_, query]) => {\n            const tags = extractTags(query).map((t) => t.toLowerCase());\n            return tagMatchMode === 'all'\n              ? tagFilter.every((f) => tags.includes(f))\n              : tagFilter.length === 0 || tagFilter.some((f) => tags.includes(f));\n          })\n          .map(([name, query]) => (\n            // <PresetCard\n            //   key={name}\n            //   name={name}\n            //   query={query}\n            //   slug={slug}\n            //   onDelete={deletePreset}\n            //   onShare={handleShare}\n            //   onApply={handleApply}\n            // />\n            <div key={name}>{name}</div>\n          ))}\n      </ul>\n      <QueryParamEditor schema={schema as any} slug={slug} />\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/schemas.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/screenshots.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\n\nexport default function ScreenshotQueuePage() {\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/screenshot/queue')\n      .then((res) => res.json())\n      .then(setItems);\n  }, []);\n\n  return (\n    <div className=\"p-6 text-white\">\n      <h1 className=\"text-2xl font-bold mb-4\">📸 Screenshot Queue</h1>\n      <table className=\"w-full text-sm text-left border-collapse\">\n        <thead>\n          <tr>\n            <th className=\"border-b p-2\">Domain</th>\n            <th className=\"border-b p-2\">Status</th>\n            <th className=\"border-b p-2\">Requested</th>\n            <th className=\"border-b p-2\">Completed</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((item: any) => (\n            <tr key={item.id}>\n              <td className=\"p-2\">{item.domain}</td>\n              <td className=\"p-2\">{item.status}</td>\n              <td className=\"p-2\">{new Date(item.requested_at).toLocaleString()}</td>\n              <td className=\"p-2\">\n                {item.completed_at ? new Date(item.completed_at).toLocaleString() : '-'}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/share/[id].tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":1,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":1,"endColumn":19},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":61,"column":11,"nodeType":"JSXOpeningElement","endLine":61,"endColumn":94}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useRouter, useSearchParams } from 'next/navigation';\nimport { useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport default function SharePage() {\n  const searchParams = useSearchParams();\n  const id = searchParams?.get('id') as string;\n  const [profile, setProfile] = useState<any>(null);\n\n  useEffect(() => {\n    if (!id || typeof id !== 'string') return;\n\n    supabase\n      .from('branding_profiles')\n      .select('*')\n      .eq('id', id)\n      .single()\n      .then(({ data }) => {\n        if (data) setProfile(data);\n      });\n  }, [id]);\n\n  const handleExport = async () => {\n    const html2pdf = (await import('html2pdf.js')).default;\n    const el = document.getElementById('pdf-container');\n    if (el) {\n      html2pdf()\n        .set({\n          filename: `${profile.name}-preview.pdf`,\n          margin: 10,\n          html2canvas: { scale: 2 },\n          jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' },\n        })\n        .from(el)\n        .save();\n    }\n  };\n\n  if (!profile) return <p className=\"p-6\">Loading profile...</p>;\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6 space-y-6\">\n      <div id=\"pdf-container\" className=\"space-y-6 p-6 bg-white rounded shadow\">\n        <h1 className=\"text-xl font-bold\">{profile.name}</h1>\n\n        <div className=\"flex items-center gap-4\">\n          <p className=\"text-sm\">\n            Theme: <strong>{profile.theme}</strong>\n          </p>\n          <p className=\"text-sm\">\n            Brand: <strong>{profile.brand}</strong>\n          </p>\n        </div>\n\n        {profile.logo_url && (\n          <img src={profile.logo_url} alt=\"Logo\" className=\"h-10 w-10 rounded-full border\" />\n        )}\n\n        <p className=\"text-xs text-gray-400 text-right\">Powered by QuickSites Studio</p>\n      </div>\n\n      <button className=\"bg-blue-600 text-white px-4 py-2 rounded\" onClick={handleExport}>\n        Download PDF\n      </button>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/sites.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/sites/new.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/smartlinks/debug.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/smartlinks/gallery.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/smartlinks/grid-view.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useMemo' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":17},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useState' is defined but never used.","line":4,"column":19,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":27},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'parseISO' is defined but never used.","line":5,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":5,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'isAfter' is defined but never used.","line":5,"column":20,"nodeType":null,"messageId":"unusedVar","endLine":5,"endColumn":27},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'isBefore' is defined but never used.","line":5,"column":29,"nodeType":null,"messageId":"unusedVar","endLine":5,"endColumn":37}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useRouter } from 'next/navigation.js';\nimport { useMemo, useState } from 'react';\nimport { parseISO, isAfter, isBefore } from 'date-fns';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport SmartLinkGrid from '@/components/admin/smart-link-grid';\nimport SmartLinkGallery from '@/components/admin/smart-link-gallery';\nimport { SmartLinkProvider } from '@/components/admin/smart-link-provider';\nimport { mockSmartLinks } from '@/tests/mocks/mocks/mockSmartLinks';\nimport type { SmartLinkItem } from '@/types/SmartLinkItem';\n\nexport default function SmartLinkGridPage() {\n  const items: SmartLinkItem[] = mockSmartLinks;\n  const router = useRouter();\n\n  const searchParams = new URLSearchParams(\n    typeof window !== 'undefined' ? window.location.search : ''\n  );\n  const sort = searchParams.get('sort') || '';\n  const view = searchParams.get('view') || 'grid';\n  const tag = searchParams.get('tag') || '';\n\n  const updateSearchParam = (key: string, value: string) => {\n    const params = new URLSearchParams(window.location.search);\n    params.set(key, value);\n    return `?${params.toString()}`;\n  };\n\n  const sorted = [...items].sort((a, b) => {\n    if (sort === 'type') return a.type.localeCompare(b.type);\n    if (sort === 'theme') return (a.theme || '').localeCompare(b.theme || '');\n    return 0;\n  });\n\n  return (\n    <SmartLinkProvider>\n      <main className=\"p-6\">\n        <div className=\"flex items-center justify-between flex-wrap gap-4 mb-4\">\n          <h1 className=\"text-xl font-bold text-white\">🧱 SmartLink Grid View</h1>\n          <div className=\"flex flex-wrap gap-2 items-center\">\n            <button\n              className=\"text-xs px-3 py-1 rounded bg-zinc-800 hover:bg-zinc-700 border border-zinc-700\"\n              onClick={() => router.push(updateSearchParam('sort', 'type'))}\n            >\n              Sort by Type\n            </button>\n            <button\n              className=\"text-xs px-3 py-1 rounded bg-zinc-800 hover:bg-zinc-700 border border-zinc-700\"\n              onClick={() => router.push(updateSearchParam('sort', 'theme'))}\n            >\n              Sort by Theme\n            </button>\n          </div>\n\n          <div className=\"flex gap-2 flex-wrap\">\n            {['template', 'snapshot'].map((t) => (\n              <button\n                key={t}\n                className={`text-xs px-3 py-1 rounded border border-zinc-600 hover:bg-zinc-700 ${\n                  tag === t ? 'bg-blue-600 text-white' : 'bg-zinc-800 text-zinc-300'\n                }`}\n                onClick={() => router.push(updateSearchParam('tag', t))}\n              >\n                {t}\n              </button>\n            ))}\n            <button\n              className={`text-xs px-3 py-1 rounded border ${\n                view === 'grid' ? 'bg-blue-700 text-white' : 'bg-zinc-800 text-zinc-300'\n              } border-zinc-600`}\n              onClick={() => router.push(updateSearchParam('view', 'grid'))}\n            >\n              Grid\n            </button>\n            <button\n              className={`text-xs px-3 py-1 rounded border ${\n                view === 'gallery' ? 'bg-blue-700 text-white' : 'bg-zinc-800 text-zinc-300'\n              } border-zinc-600`}\n              onClick={() => router.push(updateSearchParam('view', 'gallery'))}\n            >\n              Gallery\n            </button>\n          </div>\n        </div>\n\n        <AnimatePresence mode=\"wait\">\n          {view === 'gallery' ? (\n            <motion.div\n              key=\"gallery\"\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -10 }}\n              transition={{ duration: 0.2 }}\n            >\n              <SmartLinkGallery items={sorted} />\n            </motion.div>\n          ) : (\n            <motion.div\n              key=\"grid\"\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -10 }}\n              transition={{ duration: 0.2 }}\n            >\n              <SmartLinkGrid items={sorted} />\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </main>\n    </SmartLinkProvider>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/smartlinks/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/templates/[name]/activity.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'GetServerSideProps' is defined but never used.","line":2,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":28},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'supabase' is assigned a value but never used.","line":4,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { createClient } from '@supabase/supabase-js';\nimport { GetServerSideProps } from 'next';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport default function TemplateActivity({ logs, name }: { logs: any[]; name: string }) {\n  return (\n    <div className=\"max-w-4xl mx-auto p-6\">\n      <h1 className=\"text-2xl font-bold mb-4\">Activity for: {name}</h1>\n      <div className=\"space-y-3\">\n        {logs.map((log) => (\n          <div key={log.id} className=\"border p-3 rounded bg-white shadow-sm\">\n            <p className=\"text-sm\">\n              <strong>{log.action}</strong> by {log.actor || 'unknown'}\n            </p>\n            <p className=\"text-xs text-muted-foreground\">\n              {new Date(log.timestamp).toLocaleString()}\n            </p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/templates/[name]/publish.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'GetServerSideProps' is defined but never used.","line":1,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":1,"endColumn":28},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'supabase' is assigned a value but never used.","line":8,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":8,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { GetServerSideProps } from 'next';\nimport { createClient } from '@supabase/supabase-js';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { useState } from 'react';\nimport QRCode from 'react-qr-code';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport default function PublishTemplate({\n  initialDomain,\n  template_name,\n}: {\n  initialDomain: string;\n  template_name: string;\n}) {\n  const [domain, setDomain] = useState(initialDomain);\n  const [status, setStatus] = useState('idle');\n\n  const handlePublish = async () => {\n    const res = await fetch('/api/templates/publish', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ template_name, domain }),\n    });\n    if (res.ok) {\n      setStatus('success');\n    } else {\n      setStatus('error');\n    }\n  };\n\n  return (\n    <div className=\"max-w-xl mx-auto p-6\">\n      <h1 className=\"text-xl font-bold mb-4\">Publish Template: {template_name}</h1>\n      <Input\n        placeholder=\"e.g. demo.quicksite.io/my-tow\"\n        value={domain}\n        onChange={(e) => setDomain(e.target.value)}\n        className=\"mb-4\"\n      />\n      <Button onClick={handlePublish} disabled={!domain}>\n        Publish\n      </Button>\n      {domain && (\n        <div className=\"mt-4\">\n          <p className=\"text-sm mb-2\">Scan to view live site:</p>\n          <QRCode\n            value={`https://yourdomain.com/sites/${domain}`}\n            size={128}\n            style={{ height: 'auto', maxWidth: '128px', width: '128px' }}\n            viewBox={`0 0 128 128`}\n          />\n        </div>\n      )}\n      {status === 'success' && (\n        <p className=\"text-green-600 text-sm mt-2\">✅ Template published to {domain}</p>\n      )}\n      {status === 'error' && (\n        <p className=\"text-red-600 text-sm mt-2\">❌ Failed to publish template</p>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/trash.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'GetServerSideProps' is defined but never used.","line":2,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":28},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'supabase' is assigned a value but never used.","line":5,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":5,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { createClient } from '@supabase/supabase-js';\nimport { GetServerSideProps } from 'next';\nimport { Button } from '@/components/ui';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport default function Trash({ templates }: { templates: any[] }) {\n  const restoreTemplate = async (template_name: string) => {\n    const toast = (await import('react-hot-toast')).default;\n\n    const res = await fetch('/api/templates/restore', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ template_name }),\n    });\n\n    if (res.ok) {\n      toast.success('Template restored.');\n      setTimeout(() => window.location.reload(), 1000);\n    } else {\n      toast.error('Restore failed.');\n    }\n  };\n\n  return (\n    <div className=\"max-w-5xl mx-auto p-6 space-y-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">Deleted Templates</h1>\n      {templates.map((t) => (\n        <div\n          key={t.template_name}\n          className=\"flex justify-between items-center border p-4 rounded bg-white shadow-sm\"\n        >\n          <div>\n            <h2 className=\"text-lg font-semibold\">{t.template_name}</h2>\n            <p className=\"text-sm text-muted-foreground\">Industry: {t.industry}</p>\n          </div>\n          <Button size=\"sm\" variant=\"secondary\" onClick={() => restoreTemplate(t.template_name)}>\n            Restore\n          </Button>\n        </div>\n      ))}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/admin/views.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··Table,⏎··TableBody,⏎··TableCell,⏎··TableHead,⏎··TableHeader,⏎··TableRow,⏎` with `·Table,·TableBody,·TableCell,·TableHead,·TableHeader,·TableRow·`","line":4,"column":9,"nodeType":null,"messageId":"replace","endLine":11,"endColumn":1,"fix":{"range":[154,230],"text":" Table, TableBody, TableCell, TableHead, TableHeader, TableRow "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import { useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport { Input } from '@/components/ui/input';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport default function ViewsDashboard() {\n  const [views, setViews] = useState<any[]>([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    supabase\n      .from('snapshot_views')\n      .select('*')\n      .order('viewed_at', { ascending: false })\n      .then(({ data, error }) => {\n        if (data) setViews(data);\n        else console.error(error);\n      });\n  }, []);\n\n  const filtered = views.filter((v) =>\n    v.template_name?.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <div className=\"p-6 max-w-5xl mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-4\">Snapshot Views</h1>\n      <Input\n        placeholder=\"Filter by template name\"\n        value={filter}\n        onChange={(e) => setFilter(e.target.value)}\n        className=\"mb-4 max-w-md\"\n      />\n      <div className=\"rounded border overflow-x-auto\">\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead>Template</TableHead>\n              <TableHead>IP</TableHead>\n              <TableHead>User Agent</TableHead>\n              <TableHead>Viewed At</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {filtered.map((v) => (\n              <TableRow key={v.id}>\n                <TableCell>{v.template_name}</TableCell>\n                <TableCell>{v.ip_address}</TableCell>\n                <TableCell className=\"text-xs max-w-sm truncate\">{v.user_agent}</TableCell>\n                <TableCell className=\"text-xs\">{new Date(v.viewed_at).toLocaleString()}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/analytics.exportable.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has an unnecessary dependency: 'supabase'. Either exclude it or remove the dependency array. Outer scope values like 'supabase' aren't valid dependencies because mutating them doesn't re-render the component.","line":27,"column":6,"nodeType":"ArrayExpression","endLine":27,"endColumn":16,"suggestions":[{"desc":"Update the dependencies array to be: []","fix":{"range":[945,955],"text":"[]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'siteId'. Either include it or remove the dependency array. Outer scope values like 'supabase' aren't valid dependencies because mutating them doesn't re-render the component.","line":64,"column":6,"nodeType":"ArrayExpression","endLine":64,"endColumn":40,"suggestions":[{"desc":"Update the dependencies array to be: [dateFrom, dateTo, mode, siteId]","fix":{"range":[2020,2054],"text":"[dateFrom, dateTo, mode, siteId]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useState, useEffect } from 'react';\nimport { supabase } from '@/lib/supabase/client';\n\nimport { Modal } from '@/components/ui/modal';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Bar } from 'react-chartjs-2';\n\nexport default function AnalyticsPage() {\n  const [showModal, setShowModal] = useState(false);\n  const [dateFrom, setDateFrom] = useState('');\n  const [dateTo, setDateTo] = useState('');\n  const [mode, setMode] = useState<'views' | 'events'>('views');\n  const [siteId, setSiteId] = useState('');\n  const [siteOptions, setSiteOptions] = useState<{ id: string; domain?: string; name?: string }[]>(\n    []\n  );\n\n  useEffect(() => {\n    supabase\n      .from('public_sites')\n      .select('id, domain, name')\n      .then(({ data }: { data: { id: string; domain?: string; name?: string }[] | null }) => {\n        if (data) setSiteOptions(data);\n      });\n  }, [supabase]);\n\n  const [dataByDay, setDataByDay] = useState<Record<string, number>>({});\n\n  useEffect(() => {\n    if (!dateFrom || !dateTo) return;\n\n    const load = async () => {\n      const table = mode === 'views' ? 'published_site_views' : 'site_events';\n      const column = mode === 'views' ? 'viewed_at' : 'created_at';\n\n      const { data, error } = await supabase.from(table).select(`${column},site_id`);\n\n      if (error) return console.error(error);\n\n      // filter by site ID if necessary\n      const filtered = (data || []).filter((row: any) => {\n        if (mode === 'views' && siteId) {\n          return row.site_id === siteId;\n        }\n        return true;\n      });\n\n      // count by day\n      const counts: Record<string, number> = {};\n      for (const row of filtered) {\n        const value = row[column as keyof typeof row];\n        if (typeof value === 'string') {\n          const dayKey = value.slice(0, 10); // \"YYYY-MM-DD\"\n          counts[dayKey] = (counts[dayKey] || 0) + 1;\n        }\n      }\n\n      setDataByDay(counts);\n    };\n\n    load();\n  }, [dateFrom, dateTo, mode, supabase]);\n\n  const chartData = {\n    labels: Object.keys(dataByDay),\n    datasets: [\n      {\n        label: mode === 'views' ? 'Page Views' : 'Event Count',\n        data: Object.values(dataByDay),\n        backgroundColor: 'var(--color-accent)',\n      },\n    ],\n  };\n\n  return (\n    <div className=\"min-h-screen bg-surface text-text p-6 space-y-6\">\n      <h1 className=\"text-2xl font-bold\">📊 Analytics Dashboard</h1>\n\n      <div className=\"flex gap-4 items-end\">\n        <div>\n          <Label>Site ID</Label>\n          <select\n            value={siteId}\n            onChange={(e) => setSiteId(e.target.value)}\n            className=\"bg-zinc-800 text-white border border-zinc-600 rounded px-2 py-1\"\n          >\n            <option value=\"\">All</option>\n            {siteOptions.map((site) => (\n              <option key={site.id} value={site.id}>\n                {site.domain || site.name || site.id.slice(0, 6)}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div>\n          <Label>Date From</Label>\n          <Input type=\"date\" value={dateFrom} onChange={(e) => setDateFrom(e.target.value)} />\n        </div>\n        <div>\n          <Label>Date To</Label>\n          <Input type=\"date\" value={dateTo} onChange={(e) => setDateTo(e.target.value)} />\n        </div>\n        <div>\n          <Label>Mode</Label>\n          <select\n            value={mode}\n            onChange={(e) => setMode(e.target.value as 'views' | 'events')}\n            className=\"bg-zinc-800 text-white border border-zinc-600 rounded px-2 py-1\"\n          >\n            <option value=\"views\">Page Views</option>\n            <option value=\"events\">Events</option>\n          </select>\n        </div>\n      </div>\n\n      <div className=\"bg-zinc-900 rounded p-4 shadow\">\n        <Bar data={chartData} options={{ responsive: true }} />\n      </div>\n\n      <button\n        onClick={() => setShowModal(true)}\n        className=\"mt-4 px-4 py-2 bg-brand text-white rounded hover:opacity-90\"\n      >\n        Share / Export\n      </button>\n\n      <button\n        onClick={() => {\n          const rows = Object.entries(dataByDay).map(([date, value]) => ({\n            date,\n            count: value,\n          }));\n          const csv = ['Date,Count', ...rows.map((row) => `${row.date},${row.count}`)].join('\\n');\n          const blob = new Blob([csv], { type: 'text/csv' });\n          const url = URL.createObjectURL(blob);\n          const link = document.createElement('a');\n          link.href = url;\n          link.download = `analytics_${mode}_${siteId || 'all'}.csv`;\n          link.click();\n          URL.revokeObjectURL(url);\n        }}\n        className=\"ml-4 px-4 py-2 border border-zinc-600 text-text rounded hover:opacity-80\"\n      >\n        Export CSV\n      </button>\n\n      <Modal show={showModal} onClose={() => setShowModal(false)}>\n        <h2 className=\"text-lg font-semibold mb-2\">🔗 Share this report</h2>\n        <p className=\"text-sm text-zinc-300\">\n          Coming soon: PDF export, link share, and filters by domain.\n        </p>\n      </Modal>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/analytics.supabase.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎`","line":10,"column":1,"nodeType":null,"messageId":"delete","endLine":11,"endColumn":1,"fix":{"range":[332,333],"text":""}},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has an unnecessary dependency: 'supabase'. Either exclude it or remove the dependency array. Outer scope values like 'supabase' aren't valid dependencies because mutating them doesn't re-render the component.","line":40,"column":6,"nodeType":"ArrayExpression","endLine":40,"endColumn":40,"suggestions":[{"desc":"Update the dependencies array to be: [dateFrom, dateTo, mode]","fix":{"range":[1334,1368],"text":"[dateFrom, dateTo, mode]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use client';\nimport { useState, useEffect } from 'react';\nimport { Modal } from '@/components/ui/modal';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Bar } from 'react-chartjs-2';\nimport { supabase } from '@/lib/supabase/client';\n\nexport default function AnalyticsPage() {\n\n  const [showModal, setShowModal] = useState(false);\n  const [dateFrom, setDateFrom] = useState('');\n  const [dateTo, setDateTo] = useState('');\n  const [mode, setMode] = useState<'views' | 'events'>('views');\n  const [dataByDay, setDataByDay] = useState<Record<string, number>>({});\n\n  useEffect(() => {\n    if (!dateFrom || !dateTo) return;\n\n    const load = async () => {\n      const table = mode === 'views' ? 'published_site_views' : 'site_events';\n      const column = mode === 'views' ? 'viewed_at' : 'created_at';\n\n      const { data, error } = await supabase\n        .from(table)\n        .select(column)\n        .gte(column, dateFrom)\n        .lte(column, dateTo);\n\n      if (error) return console.error(error);\n\n      const counts: Record<string, number> = {};\n      for (const row of data || []) {\n        const key = (row as Record<string, any>)[column]?.slice(0, 10); // yyyy-mm-dd\n        counts[key] = (counts[key] || 0) + 1;\n      }\n      setDataByDay(counts);\n    };\n    load();\n  }, [dateFrom, dateTo, mode, supabase]);\n\n  const chartData = {\n    labels: Object.keys(dataByDay),\n    datasets: [\n      {\n        label: mode === 'views' ? 'Page Views' : 'Event Count',\n        data: Object.values(dataByDay),\n        backgroundColor: 'var(--color-accent)',\n      },\n    ],\n  };\n\n  return (\n    <div className=\"min-h-screen bg-surface text-text p-6 space-y-6\">\n      <h1 className=\"text-2xl font-bold\">📊 Analytics Dashboard</h1>\n\n      <div className=\"flex gap-4 items-end\">\n        <div>\n          <Label>Date From</Label>\n          <Input type=\"date\" value={dateFrom} onChange={(e) => setDateFrom(e.target.value)} />\n        </div>\n        <div>\n          <Label>Date To</Label>\n          <Input type=\"date\" value={dateTo} onChange={(e) => setDateTo(e.target.value)} />\n        </div>\n        <div>\n          <Label>Mode</Label>\n          <select\n            value={mode}\n            onChange={(e) => setMode(e.target.value as 'views' | 'events')}\n            className=\"bg-zinc-800 text-white border border-zinc-600 rounded px-2 py-1\"\n          >\n            <option value=\"views\">Page Views</option>\n            <option value=\"events\">Events</option>\n          </select>\n        </div>\n      </div>\n\n      <div className=\"bg-zinc-900 rounded p-4 shadow\">\n        <Bar data={chartData} options={{ responsive: true }} />\n      </div>\n\n      <button\n        onClick={() => setShowModal(true)}\n        className=\"mt-4 px-4 py-2 bg-brand text-white rounded hover:opacity-90\"\n      >\n        Share / Export\n      </button>\n\n      <Modal show={showModal} onClose={() => setShowModal(false)}>\n        <h2 className=\"text-lg font-semibold mb-2\">🔗 Share this report</h2>\n        <p className=\"text-sm text-zinc-300\">\n          Coming soon: PDF export, link share, and filters by domain.\n        </p>\n      </Modal>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/analytics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/analytics/[slug].tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'GetServerSideProps' is defined but never used.","line":1,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":1,"endColumn":28},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'PieChart' is defined but never used.","line":10,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":10,"endColumn":11},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Pie' is defined but never used.","line":11,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":11,"endColumn":6},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Cell' is defined but never used.","line":12,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":12,"endColumn":7},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'supabase' is assigned a value but never used.","line":16,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":16,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { GetServerSideProps } from 'next';\nimport { createClient } from '@supabase/supabase-js';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell,\n  Legend,\n} from 'recharts';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport default function SharedAnalytics({ domain, views }: { domain: string; views: any[] }) {\n  const byDay: Record<string, number> = {};\n  views.forEach((v) => {\n    const day = new Date(v.viewed_at).toISOString().slice(0, 10);\n    byDay[day] = (byDay[day] || 0) + 1;\n  });\n\n  return (\n    <div className=\"max-w-5xl mx-auto p-6 space-y-6\">\n      <h1 className=\"text-2xl font-bold\">Analytics for {domain}</h1>\n\n      <section>\n        <h2 className=\"text-lg font-semibold mb-2\">Views per Day</h2>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart data={Object.entries(byDay).map(([day, count]) => ({ day, count }))}>\n            <XAxis dataKey=\"day\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"count\" fill=\"#6366f1\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </section>\n\n      <p className=\"text-sm text-muted-foreground\">Total views: {views.length}</p>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/analytics/archive.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":23,"column":17,"nodeType":"JSXOpeningElement","endLine":27,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\n\nexport default function AnalyticsArchivePage() {\n  const [files, setFiles] = useState<string[]>([]);\n  const [selectedFile, setSelectedFile] = useState<string | null>(null);\n\n  useEffect(() => {\n    fetch('/reports/analytics/index.json')\n      .then((res) => res.json())\n      .then(setFiles);\n  }, []);\n\n  return (\n    <div className=\"p-6 text-text\">\n      <h1 className=\"text-xl font-bold mb-4\">📂 Archived Analytics Reports</h1>\n      <ul className=\"space-y-4\">\n        {files.map((file) => (\n          <li key={file}>\n            {file.endsWith('.pdf') ? (\n              <div className=\"flex gap-4 items-start\">\n                <img\n                  src={`/previews/${file.replace('.pdf', '.png')}`}\n                  alt=\"Preview\"\n                  className=\"w-40 rounded border border-zinc-600 shadow\"\n                />\n                <div>\n                  <button\n                    onClick={() => setSelectedFile(file)}\n                    className=\"text-green-400 hover:underline text-left font-mono\"\n                  >\n                    {file}\n                  </button>\n                </div>\n              </div>\n            ) : (\n              <a\n                href={`/reports/analytics/${file}`}\n                className=\"text-blue-400 hover:underline\"\n                download\n              >\n                {file}\n              </a>\n            )}\n          </li>\n        ))}\n      </ul>\n\n      {selectedFile && selectedFile.endsWith('.pdf') && (\n        <div className=\"mt-6 border rounded bg-white p-2\">\n          <iframe\n            src={`/reports/analytics/${selectedFile}`}\n            className=\"w-full h-[80vh]\"\n            title=\"PDF Preview\"\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/audit.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\n\nexport default function AuditLog() {\n  const [logs, setLogs] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/audit-logs')\n      .then((res) => res.json())\n      .then(setLogs);\n  }, []);\n\n  return (\n    <div className=\"p-6 text-white max-w-4xl mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-4\">📜 Audit Log</h1>\n      <table className=\"w-full text-sm\">\n        <thead>\n          <tr>\n            <th className=\"border-b p-2\">Type</th>\n            <th className=\"border-b p-2\">Details</th>\n            <th className=\"border-b p-2\">Time</th>\n          </tr>\n        </thead>\n        <tbody>\n          {logs.map((log: any, i) => (\n            <tr key={i}>\n              <td className=\"p-2\">{log.type}</td>\n              <td className=\"p-2 text-zinc-300\">{JSON.stringify(log.payload)}</td>\n              <td className=\"p-2 text-zinc-500\">{new Date(log.created_at).toLocaleString()}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/campaigns/page.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `process.env.NEXT_PUBLIC_SUPABASE_URL!,·process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!` with `⏎····process.env.NEXT_PUBLIC_SUPABASE_URL!,⏎····process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!⏎··`","line":14,"column":43,"nodeType":null,"messageId":"replace","endLine":14,"endColumn":124,"fix":{"range":[556,637],"text":"\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n  "}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'setNow' is assigned a value but never used.","line":18,"column":15,"nodeType":null,"messageId":"unusedVar","endLine":18,"endColumn":21},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎········.from('leads')⏎········` with `.from('leads')`","line":29,"column":48,"nodeType":null,"messageId":"replace","endLine":31,"endColumn":9,"fix":{"range":[1318,1350],"text":".from('leads')"}},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'supabase'. Either include it or remove the dependency array.","line":46,"column":6,"nodeType":"ArrayExpression","endLine":46,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [supabase]","fix":{"range":[1724,1726],"text":"[supabase]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"// app/admin/campaigns/page.tsx\n'use client';\n\nimport { useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport CampaignPanel from '@/components/admin/campaigns/campaign-panel';\nimport { CampaignType } from '@/types/campaign.types';\nimport { Lead } from '@/types/lead.types';\nimport dayjs from 'dayjs';\nimport EditCampaignModal from '@/components/admin/campaigns/edit-campaign-modal';\nimport { Database } from '@/types/supabase';\n\nexport default function CampaignsPage() {\n  const supabase = createClient<Database>(process.env.NEXT_PUBLIC_SUPABASE_URL!, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!);\n  const [campaigns, setCampaigns] = useState<CampaignType[]>([]);\n  const [leadsByCampaign, setLeadsByCampaign] = useState<Record<string, Lead[]>>({});\n  const [expanded, setExpanded] = useState<Record<string, boolean>>({});\n  const [now, setNow] = useState(dayjs());\n  const [editingCampaign, setEditingCampaign] = useState<CampaignType | null>(null);\n  const [selectedLeadIds, setSelectedLeadIds] = useState<string[]>([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const { data: campaignData } = await supabase\n        .from('campaigns')\n        .select('*')\n        .order('starts_at', { ascending: false });\n\n      const { data: leadData } = await supabase\n        .from('leads')\n        .select('*');\n\n      const grouped: Record<string, Lead[]> = {};\n      for (const lead of leadData || []) {\n        const cid = lead.current_campaign_id;\n        if (!cid) continue;\n        if (!grouped[cid]) grouped[cid] = [];\n        grouped[cid].push(lead);\n      }\n\n      setCampaigns(campaignData || []);\n      setLeadsByCampaign(grouped);\n    }\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"p-6\">\n      {editingCampaign && (\n        <EditCampaignModal\n          campaign={editingCampaign}\n          allLeads={Object.values(leadsByCampaign).flat()}\n          selectedLeadIds={selectedLeadIds}\n          setSelectedLeadIds={setSelectedLeadIds}\n          leadsByCampaign={leadsByCampaign}\n          setEditingCampaign={setEditingCampaign}\n        />\n      )}\n      {campaigns.map((c) => (\n        <CampaignPanel\n          key={c.id}\n          campaign={c}\n          leads={leadsByCampaign[c.id] || []}\n          now={now}\n          expanded={expanded[c.id] ?? true}\n          setExpanded={(v) => setExpanded((prev) => ({ ...prev, [c.id]: v }))}\n          setEditingCampaign={setEditingCampaign}\n          setSelectedLeadIds={setSelectedLeadIds}\n        />\n      ))}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/click-analytics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/dashboard/page.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'BlockSettingsModal' is defined but never used.","line":13,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":13,"endColumn":26},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'loaded' is assigned a value but never used.","line":39,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":39,"endColumn":11},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'router' and 'searchParams'. Either include them or remove the dependency array.","line":50,"column":6,"nodeType":"ArrayExpression","endLine":50,"endColumn":25,"suggestions":[{"desc":"Update the dependencies array to be: [activeDashboardId, router, searchParams]","fix":{"range":[1932,1951],"text":"[activeDashboardId, router, searchParams]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.","line":68,"column":6,"nodeType":"ArrayExpression","endLine":68,"endColumn":12,"suggestions":[{"desc":"Update the dependencies array to be: [role, router]","fix":{"range":[2504,2510],"text":"[role, router]"}}]},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `·`","line":87,"column":42,"nodeType":null,"messageId":"delete","endLine":87,"endColumn":43,"fix":{"range":[3072,3073],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `·`","line":88,"column":46,"nodeType":null,"messageId":"delete","endLine":88,"endColumn":47,"fix":{"range":[3119,3120],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `·`","line":89,"column":44,"nodeType":null,"messageId":"delete","endLine":89,"endColumn":45,"fix":{"range":[3164,3165],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":3,"source":"// app/admin/dashboard/page.tsx\n'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport Link from 'next/link';\nimport { useCurrentUser } from '@/hooks/useCurrentUser';\nimport { useCanonicalRole } from '@/hooks/useCanonicalRole';\nimport AdminTabs from '@/components/admin/admin-tabs';\nimport { DashboardSelector } from '@/components/admin/dashboard-selector';\nimport { useDashboardLayout } from '@/hooks/useDashboardLayout';\nimport DashboardGridDraggable from '@/components/admin/dashboard-grid-draggable';\nimport BlockSettingsModal from '@/components/admin/block-settings-modal';\nimport type { DomainEntry } from '@/types/domain.types';\nimport ActivityWidget from '@/components/admin/admin/blocks/activity-widget';\nimport EngagementWidget from '@/components/admin/admin/blocks/engagement-widget';\nimport RetentionWidget from '@/components/admin/admin/blocks/retention-widget';\nimport TrafficWidget from '@/components/admin/admin/blocks/traffic-widget';\n\nfunction Dashboard() {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const dashboardFromURL = searchParams?.get('dashboard') as string | undefined;\n\n  const { user } = useCurrentUser();\n  const { role } = useCanonicalRole();\n\n  const [domains, setDomains] = useState<DomainEntry[]>([]);\n  const [previewing, setPreviewing] = useState<string | null>(null);\n\n  const {\n    dashboards,\n    activeDashboardId,\n    setActiveDashboardId,\n    createDashboard,\n    order,\n    hidden,\n    save,\n    loaded,\n    loading,\n    settings,\n    updateBlockSetting,\n  } = useDashboardLayout(user?.id || null, dashboardFromURL);\n\n  useEffect(() => {\n    if (activeDashboardId && searchParams?.get('dashboard') !== activeDashboardId) {\n      console.log('🔐 [dashboard] Redirecting to dashboard (Reason: Active dashboard ID)');\n      router.replace(`?dashboard=${activeDashboardId}`);\n    }\n  }, [activeDashboardId]);\n\n  useEffect(() => {\n    if (!role) return;\n    if (role === 'viewer') {\n      router.push('/viewer');\n    } else if (!['admin', 'reseller', 'owner'].includes(role)) {\n      console.log('🔐 [dashboard] Redirecting to login (Reason: Unauthorized)');\n      router.push('/login?error=unauthorized');\n    }\n\n    import('@/admin/lib/supabaseClient').then(({ supabase }) => {\n      supabase\n        .from('domains')\n        .select('*')\n        .order('date_created', { ascending: false })\n        .then(({ data }) => setDomains(data || []));\n    });\n  }, [role]);\n\n  if (loading) {\n    return <p className=\"text-gray-500 text-sm p-6\">Loading dashboard layout…</p>;\n  }\n\n  return (\n    <>\n      <AdminTabs />\n      <div className=\"p-6\">\n        <h1 className=\"text-2xl font-bold mb-4 text-white\">My Dashboard</h1>\n        <DashboardSelector\n          dashboards={dashboards}\n          activeDashboardId={activeDashboardId}\n          setActiveDashboardId={setActiveDashboardId}\n          onCreateNew={createDashboard}\n        />\n        <DashboardGridDraggable\n          renderers={{\n            activity: <ActivityWidget />, \n            engagement: <EngagementWidget />, \n            retention: <RetentionWidget />, \n            traffic: <TrafficWidget />,\n          }}\n          order={order}\n          hidden={hidden}\n          onSave={(o, h) => save(o, h)}\n          onAddBlock={(b) => {\n            if (!order.find((x) => x.id === b.id)) {\n              save([...order, b], hidden);\n            }\n          }}\n          settings={settings}\n          updateBlockSetting={updateBlockSetting}\n        />\n      </div>\n      <div className=\"p-6\">\n        <h2 className=\"text-xl font-bold mb-4 text-white\">Claimed Sites</h2>\n        <table className=\"w-full text-sm text-left text-gray-300 bg-gray-800 rounded overflow-hidden\">\n          <thead className=\"bg-gray-700 text-gray-100 uppercase text-xs tracking-wide\">\n            <tr>\n              <th className=\"px-4 py-2\">Domain</th>\n              <th className=\"px-4 py-2\">City</th>\n              <th className=\"px-4 py-2\">State</th>\n              <th className=\"px-4 py-2\">Template</th>\n              <th className=\"px-4 py-2\">Claimed</th>\n              <th className=\"px-4 py-2\">Preview</th>\n              <th className=\"px-4 py-2\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {domains.map((d, i) => (\n              <>\n                <tr key={d.id} className={i % 2 === 0 ? 'bg-gray-800' : 'bg-gray-900'}>\n                  <td className=\"px-4 py-2\">{d.domain}</td>\n                  <td className=\"px-4 py-2\">{d.city}</td>\n                  <td className=\"px-4 py-2\">{d.state}</td>\n                  <td className=\"px-4 py-2\">{d.template_id}</td>\n                  <td className=\"px-4 py-2\">{d.is_claimed ? 'Yes' : 'No'}</td>\n                  <td className=\"px-4 py-2\">\n                    <button\n                      className=\"text-blue-400 hover:underline text-xs\"\n                      onClick={() => setPreviewing(previewing === d.domain ? null : d.domain)}\n                    >\n                      {previewing === d.domain ? 'Hide' : 'Show'}\n                    </button>\n                    <a\n                      href={`https://${d.domain}`}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"ml-2 text-blue-400 hover:underline text-xs\"\n                    >\n                      Open\n                    </a>\n                  </td>\n                  <td className=\"px-4 py-2\">\n                    <Link href={`/domain/${d.domain}`}>\n                      <span className=\"text-blue-400 hover:underline\">View</span>\n                    </Link>\n                  </td>\n                </tr>\n                {previewing === d.domain && (\n                  <tr className=\"bg-black\">\n                    <td colSpan={7} className=\"p-4 text-center\">\n                      <iframe\n                        src={`https://${d.domain}`}\n                        className=\"w-full h-96 border rounded\"\n                        onError={(e) => {\n                          const img = document.createElement('img');\n                          img.src = `/screenshots/${d.domain}.png`;\n                          img.alt = 'Screenshot fallback';\n                          img.className = 'mx-auto max-w-full max-h-96 rounded';\n                          e.currentTarget.replaceWith(img);\n                        }}\n                      />\n                    </td>\n                  </tr>\n                )}\n              </>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default Dashboard;\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/demo/[slug].tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/demo/list.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/domain/[slug].tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { useCanonicalRole } from '@/hooks/useCanonicalRole';\nimport { supabase } from '@/admin/lib/supabaseClient';\n\nexport default function DomainDetail() {\n  const searchParams = useSearchParams();\n  const slug = searchParams?.get('slug') as string;\n  const [domain, setDomain] = useState<any>(null);\n  const { role } = useCanonicalRole();\n\n  useEffect(() => {\n    if (!slug) return;\n\n    supabase\n      .from('domains')\n      .select('*')\n      .eq('domain', slug)\n      .single()\n      .then(({ data }) => setDomain(data));\n  }, [slug]);\n\n  const toggleClaim = async () => {\n    if (!domain) return;\n    await supabase.from('domains').update({ is_claimed: !domain.is_claimed }).eq('id', domain.id);\n\n    await supabase.from('user_action_logs').insert([\n      {\n        domain_id: domain.id,\n        action_type: 'site_claimed',\n        triggered_by: role,\n      },\n    ]);\n\n    setDomain({ ...domain, is_claimed: !domain.is_claimed });\n  };\n\n  return domain ? (\n    <div className=\"p-6 text-white\">\n      <h1 className=\"text-2xl font-bold mb-4\">{domain.domain}</h1>\n      <p>City: {domain.city}</p>\n      <p>Claimed: {domain.is_claimed ? 'Yes' : 'No'}</p>\n      {role === 'admin' && (\n        <button onClick={toggleClaim} className=\"mt-4 bg-blue-600 px-4 py-2 rounded\">\n          Toggle Claim\n        </button>\n      )}\n    </div>\n  ) : (\n    <p className=\"p-6 text-white\">Loading...</p>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/embed/[id].tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/gallery.tsx","messages":[{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":36,"column":17,"nodeType":"JSXOpeningElement","endLine":36,"endColumn":95},{"ruleId":"jsx-a11y/alt-text","severity":1,"message":"img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","line":36,"column":17,"nodeType":"JSXOpeningElement","endLine":36,"endColumn":95}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport Link from 'next/link';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport default function GalleryPage() {\n  const [sites, setSites] = useState<any[]>([]);\n\n  useEffect(() => {\n    supabase\n      .from('published_sites')\n      .select('*, branding_profiles(name, logo_url)')\n      .eq('status', 'published')\n      .eq('is_public', true)\n      .order('published_at', { ascending: false })\n      .then(({ data }) => setSites(data || []));\n  }, []);\n\n  return (\n    <div className=\"max-w-5xl mx-auto p-6\">\n      <h1 className=\"text-2xl font-bold mb-4\">🌐 GoodRobot Gallery</h1>\n      <div className=\"grid md:grid-cols-2 gap-4\">\n        {sites.map((site) => (\n          <Link\n            key={site.id}\n            href={`/sites/${site.slug}`}\n            className=\"block border rounded p-4 hover:shadow transition\"\n          >\n            <div className=\"flex justify-between items-center mb-2\">\n              <strong>{site.branding_profiles?.name}</strong>\n              {site.branding_profiles?.logo_url && (\n                <img src={site.branding_profiles.logo_url} className=\"w-8 h-8 rounded-full\" />\n              )}\n            </div>\n            <p className=\"text-xs text-muted-foreground mb-1\">{site.slug}.quicksites.ai</p>\n            <p className=\"text-xs italic text-gray-400\">Language: {site.language || 'en'}</p>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/heatmap.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/launch.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'SitePreview' is assigned a value but never used.","line":10,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":10,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'router' is assigned a value but never used.","line":16,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":16,"endColumn":15},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'err' is defined but never used.","line":31,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":31,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// pages/launch.tsx\n'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useSearchParams, useRouter } from 'next/navigation';\nimport { publishSite } from '@/admin/utils/publishSite';\nimport { logEvent } from '@/admin/utils/logEvent';\nimport dynamic from 'next/dynamic';\n\nconst SitePreview = dynamic(() => import('@/components/admin/site-preview'), {\n  ssr: false,\n});\n\nexport default function LaunchPage() {\n  const params = useSearchParams();\n  const router = useRouter();\n  const [status, setStatus] = useState<'idle' | 'confirm' | 'publishing' | 'done' | 'error'>(\n    'idle'\n  );\n  const [siteParams, setSiteParams] = useState<Record<string, any> | null>(null);\n  const [resultUrl, setResultUrl] = useState<string | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const raw = params?.get('params');\n    if (!raw) return;\n    try {\n      const parsed = JSON.parse(decodeURIComponent(raw));\n      setSiteParams(parsed);\n      setStatus('confirm');\n    } catch (err: any) {\n      setError('Invalid parameters.');\n      setStatus('error');\n    }\n  }, [params]);\n\n  const handlePublish = async () => {\n    if (!siteParams) return;\n    setStatus('publishing');\n    try {\n      const url = await publishSite(siteParams as any);\n      await logEvent('deploy_site', {\n        params: siteParams,\n        resultUrl: url,\n      });\n      setResultUrl(url);\n      setStatus('done');\n    } catch (err: any) {\n      setError(err.message || 'Failed to publish');\n      setStatus('error');\n    }\n  };\n\n  return (\n    <div className=\"p-10 max-w-2xl mx-auto text-center space-y-6\">\n      <h1 className=\"text-3xl font-bold\">🚀 Launch QuickSite</h1>\n\n      {status === 'confirm' && siteParams && (\n        <div className=\"space-y-6\">\n          <p className=\"text-gray-700\">Please confirm the following parameters:</p>\n          <pre className=\"text-left text-sm bg-gray-100 p-4 rounded border overflow-auto max-h-96\">\n            {JSON.stringify(siteParams, null, 2)}\n          </pre>\n\n          <div className=\"border rounded bg-white p-4 shadow\">\n            <p className=\"text-left text-sm font-medium mb-2\">Preview:</p>\n            <div className=\"border rounded overflow-hidden\">\n              {/* <SitePreview params={siteParams} /> */}\n              <iframe\n                src={`/admin/preview?params=${encodeURIComponent(JSON.stringify(siteParams))}`}\n                className=\"w-full h-full\"\n              />\n            </div>\n          </div>\n\n          <button\n            onClick={handlePublish}\n            className=\"bg-purple-600 text-white px-4 py-2 rounded text-sm\"\n          >\n            ✅ Confirm and Deploy\n          </button>\n        </div>\n      )}\n\n      {status === 'publishing' && <p>Publishing your site, please wait...</p>}\n\n      {status === 'done' && resultUrl && (\n        <div className=\"space-y-4\">\n          <p className=\"text-green-600 font-semibold\">Site published successfully!</p>\n          <a\n            href={resultUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"underline text-blue-600 hover:text-blue-800\"\n          >\n            View your live site\n          </a>\n        </div>\n      )}\n\n      {status === 'error' && <p className=\"text-red-600\">Error: {error}</p>}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/layout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/leads/page.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'createLeadFromPhoto' is defined but never used.","line":7,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":7,"endColumn":29},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Papa' is defined but never used.","line":9,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":9,"endColumn":12},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Image' is defined but never used.","line":10,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":10,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'CONFIDENCE_THRESHOLD' is assigned a value but never used.","line":13,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":13,"endColumn":27},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `⏎····`","line":43,"column":34,"nodeType":null,"messageId":"insert","endLine":43,"endColumn":34,"fix":{"range":[1591,1591],"text":"\n    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":44,"column":1,"nodeType":null,"messageId":"insert","endLine":44,"endColumn":1,"fix":{"range":[1618,1618],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":45,"column":1,"nodeType":null,"messageId":"insert","endLine":45,"endColumn":1,"fix":{"range":[1654,1654],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `let·query·=·supabase⏎······.from('leads')⏎······.select('*')⏎······` with `··let·query·=·supabase.from('leads').select('*')`","line":47,"column":5,"nodeType":null,"messageId":"replace","endLine":50,"endColumn":7,"fix":{"range":[1681,1748],"text":"  let query = supabase.from('leads').select('*')"}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":52,"column":1,"nodeType":null,"messageId":"insert","endLine":52,"endColumn":1,"fix":{"range":[1793,1793],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `······`","line":53,"column":1,"nodeType":null,"messageId":"replace","endLine":53,"endColumn":5,"fix":{"range":[1867,1871],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":54,"column":1,"nodeType":null,"messageId":"insert","endLine":54,"endColumn":1,"fix":{"range":[1941,1941],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":56,"column":1,"nodeType":null,"messageId":"insert","endLine":56,"endColumn":1,"fix":{"range":[2022,2022],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":57,"column":5,"nodeType":null,"messageId":"insert","endLine":57,"endColumn":5,"fix":{"range":[2096,2096],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":58,"column":1,"nodeType":null,"messageId":"insert","endLine":58,"endColumn":1,"fix":{"range":[2134,2134],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":60,"column":5,"nodeType":null,"messageId":"insert","endLine":60,"endColumn":5,"fix":{"range":[2196,2196],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":61,"column":1,"nodeType":null,"messageId":"insert","endLine":61,"endColumn":1,"fix":{"range":[2209,2209],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":62,"column":7,"nodeType":null,"messageId":"insert","endLine":62,"endColumn":7,"fix":{"range":[2268,2268],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":63,"column":1,"nodeType":null,"messageId":"insert","endLine":63,"endColumn":1,"fix":{"range":[2287,2287],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":64,"column":5,"nodeType":null,"messageId":"insert","endLine":64,"endColumn":5,"fix":{"range":[2305,2305],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":66,"column":1,"nodeType":null,"messageId":"insert","endLine":66,"endColumn":1,"fix":{"range":[2308,2308],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `········`","line":67,"column":1,"nodeType":null,"messageId":"replace","endLine":67,"endColumn":7,"fix":{"range":[2359,2365],"text":"        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":68,"column":1,"nodeType":null,"messageId":"insert","endLine":68,"endColumn":1,"fix":{"range":[2374,2374],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `······`","line":69,"column":1,"nodeType":null,"messageId":"replace","endLine":69,"endColumn":5,"fix":{"range":[2420,2424],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":71,"column":1,"nodeType":null,"messageId":"insert","endLine":71,"endColumn":1,"fix":{"range":[2430,2430],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `········`","line":72,"column":1,"nodeType":null,"messageId":"replace","endLine":72,"endColumn":7,"fix":{"range":[2447,2453],"text":"        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":73,"column":1,"nodeType":null,"messageId":"insert","endLine":73,"endColumn":1,"fix":{"range":[2473,2473],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `······`","line":74,"column":1,"nodeType":null,"messageId":"replace","endLine":74,"endColumn":5,"fix":{"range":[2507,2511],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":75,"column":1,"nodeType":null,"messageId":"insert","endLine":75,"endColumn":1,"fix":{"range":[2520,2520],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":76,"column":1,"nodeType":null,"messageId":"insert","endLine":76,"endColumn":1,"fix":{"range":[2570,2570],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":77,"column":5,"nodeType":null,"messageId":"insert","endLine":77,"endColumn":5,"fix":{"range":[2609,2609],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":79,"column":1,"nodeType":null,"messageId":"insert","endLine":79,"endColumn":1,"fix":{"range":[2612,2612],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `······`","line":80,"column":1,"nodeType":null,"messageId":"replace","endLine":80,"endColumn":5,"fix":{"range":[2678,2682],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `},·[filterSource,·filterStatus,·filterIndustry,·hasMore]` with `··},⏎····[filterSource,·filterStatus,·filterIndustry,·hasMore]⏎··`","line":81,"column":3,"nodeType":null,"messageId":"replace","endLine":81,"endColumn":59,"fix":{"range":[2703,2759],"text":"  },\n    [filterSource, filterStatus, filterIndustry, hasMore]\n  "}},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'fetchLeads' and 'fetchTotalCount'. Either include them or remove the dependency array.","line":91,"column":6,"nodeType":"ArrayExpression","endLine":91,"endColumn":50,"suggestions":[{"desc":"Update the dependencies array to be: [filterSource, filterStatus, filterIndustry, fetchLeads, fetchTotalCount]","fix":{"range":[3049,3093],"text":"[filterSource, filterStatus, filterIndustry, fetchLeads, fetchTotalCount]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has an unnecessary dependency: 'loaderRef.current'. Either exclude it or remove the dependency array. Mutable values like 'loaderRef.current' aren't valid dependencies because mutating them doesn't re-render the component.","line":101,"column":6,"nodeType":"ArrayExpression","endLine":101,"endColumn":55,"suggestions":[{"desc":"Update the dependencies array to be: [loading, hasMore, fetchLeads]","fix":{"range":[3382,3431],"text":"[loading, hasMore, fetchLeads]"}}]},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `⏎····`","line":103,"column":33,"nodeType":null,"messageId":"insert","endLine":103,"endColumn":33,"fix":{"range":[3467,3467],"text":"\n    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":104,"column":1,"nodeType":null,"messageId":"insert","endLine":104,"endColumn":1,"fix":{"range":[3474,3474],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":105,"column":1,"nodeType":null,"messageId":"insert","endLine":105,"endColumn":1,"fix":{"range":[3543,3543],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `⏎····`","line":108,"column":35,"nodeType":null,"messageId":"insert","endLine":108,"endColumn":35,"fix":{"range":[3648,3648],"text":"\n    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":109,"column":5,"nodeType":null,"messageId":"insert","endLine":109,"endColumn":5,"fix":{"range":[3669,3669],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":110,"column":5,"nodeType":null,"messageId":"insert","endLine":110,"endColumn":5,"fix":{"range":[3720,3720],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":111,"column":1,"nodeType":null,"messageId":"insert","endLine":111,"endColumn":1,"fix":{"range":[3765,3765],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":112,"column":5,"nodeType":null,"messageId":"insert","endLine":112,"endColumn":5,"fix":{"range":[3807,3807],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":113,"column":5,"nodeType":null,"messageId":"insert","endLine":113,"endColumn":5,"fix":{"range":[3857,3857],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `······`","line":114,"column":1,"nodeType":null,"messageId":"replace","endLine":114,"endColumn":5,"fix":{"range":[3886,3890],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `},·{}·as·Record<string,·Record<string,·Lead[]>>` with `··},⏎····{}·as·Record<string,·Record<string,·Lead[]>>⏎··`","line":115,"column":3,"nodeType":null,"messageId":"replace","endLine":115,"endColumn":50,"fix":{"range":[3904,3951],"text":"  },\n    {} as Record<string, Record<string, Lead[]>>\n  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `⏎····`","line":131,"column":45,"nodeType":null,"messageId":"insert","endLine":131,"endColumn":45,"fix":{"range":[4578,4578],"text":"\n    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":132,"column":1,"nodeType":null,"messageId":"insert","endLine":132,"endColumn":1,"fix":{"range":[4593,4593],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `(sum,·g)·=>·sum·+·g.leads.length·*·ESTIMATED_VALUE_PER_LEAD,·0` with `⏎····(sum,·g)·=>·sum·+·g.leads.length·*·ESTIMATED_VALUE_PER_LEAD,⏎····0⏎··`","line":135,"column":46,"nodeType":null,"messageId":"replace","endLine":135,"endColumn":108,"fix":{"range":[4741,4803],"text":"\n    (sum, g) => sum + g.leads.length * ESTIMATED_VALUE_PER_LEAD,\n    0\n  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·value={filterIndustry}·onChange={(e)·=>·setFilterIndustry(e.target.value)}·className=\"px-2·py-1·rounded·bg-gray-900·text-white·border·border-gray-700\"` with `⏎··········value={filterIndustry}⏎··········onChange={(e)·=>·setFilterIndustry(e.target.value)}⏎··········className=\"px-2·py-1·rounded·bg-gray-900·text-white·border·border-gray-700\"⏎········`","line":154,"column":16,"nodeType":null,"messageId":"replace","endLine":154,"endColumn":167,"fix":{"range":[5459,5610],"text":"\n          value={filterIndustry}\n          onChange={(e) => setFilterIndustry(e.target.value)}\n          className=\"px-2 py-1 rounded bg-gray-900 text-white border border-gray-700\"\n        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·value={filterSource}·onChange={(e)·=>·setFilterSource(e.target.value)}·className=\"px-2·py-1·rounded·bg-gray-900·text-white·border·border-gray-700\"` with `⏎··········value={filterSource}⏎··········onChange={(e)·=>·setFilterSource(e.target.value)}⏎··········className=\"px-2·py-1·rounded·bg-gray-900·text-white·border·border-gray-700\"⏎········`","line":159,"column":16,"nodeType":null,"messageId":"replace","endLine":159,"endColumn":163,"fix":{"range":[5801,5948],"text":"\n          value={filterSource}\n          onChange={(e) => setFilterSource(e.target.value)}\n          className=\"px-2 py-1 rounded bg-gray-900 text-white border border-gray-700\"\n        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·value={filterStatus}·onChange={(e)·=>·setFilterStatus(e.target.value)}·className=\"px-2·py-1·rounded·bg-gray-900·text-white·border·border-gray-700\"` with `⏎··········value={filterStatus}⏎··········onChange={(e)·=>·setFilterStatus(e.target.value)}⏎··········className=\"px-2·py-1·rounded·bg-gray-900·text-white·border·border-gray-700\"⏎········`","line":164,"column":16,"nodeType":null,"messageId":"replace","endLine":164,"endColumn":163,"fix":{"range":[6124,6271],"text":"\n          value={filterStatus}\n          onChange={(e) => setFilterStatus(e.target.value)}\n          className=\"px-2 py-1 rounded bg-gray-900 text-white border border-gray-700\"\n        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `{city},·{state}·({leads.length}·leads)` with `⏎··················{city},·{state}·({leads.length}·leads)⏎················`","line":199,"column":23,"nodeType":null,"messageId":"replace","endLine":199,"endColumn":61,"fix":{"range":[7859,7897],"text":"\n                  {city}, {state} ({leads.length} leads)\n                "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `⏎·············`","line":217,"column":95,"nodeType":null,"messageId":"insert","endLine":217,"endColumn":95,"fix":{"range":[8634,8634],"text":"\n             "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·onClick={()·=>·setShowConfirm(false)}·className=\"px-4·py-2·bg-gray-700·rounded·hover:bg-gray-600\">Cancel` with `⏎················onClick={()·=>·setShowConfirm(false)}⏎················className=\"px-4·py-2·bg-gray-700·rounded·hover:bg-gray-600\"⏎··············>⏎················Cancel⏎··············`","line":220,"column":22,"nodeType":null,"messageId":"replace","endLine":220,"endColumn":127,"fix":{"range":[8789,8894],"text":"\n                onClick={() => setShowConfirm(false)}\n                className=\"px-4 py-2 bg-gray-700 rounded hover:bg-gray-600\"\n              >\n                Cancel\n              "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·onClick={batchStartCampaigns}·className=\"px-4·py-2·bg-green-600·rounded·hover:bg-green-700\">Yes,·Start` with `⏎················onClick={batchStartCampaigns}⏎················className=\"px-4·py-2·bg-green-600·rounded·hover:bg-green-700\"⏎··············>⏎················Yes,·Start⏎··············`","line":221,"column":22,"nodeType":null,"messageId":"replace","endLine":221,"endColumn":125,"fix":{"range":[8925,9028],"text":"\n                onClick={batchStartCampaigns}\n                className=\"px-4 py-2 bg-green-600 rounded hover:bg-green-700\"\n              >\n                Yes, Start\n              "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `{city}·({leadsInCity.length})` with `⏎··················{city}·({leadsInCity.length})⏎················`","line":233,"column":55,"nodeType":null,"messageId":"replace","endLine":233,"endColumn":84,"fix":{"range":[9506,9535],"text":"\n                  {city} ({leadsInCity.length})\n                "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·?·'Loading·more·leads…'·:·hasMore·?·'Scroll·to·load·more'` with `⏎··········?·'Loading·more·leads…'⏎··········:·hasMore⏎············?·'Scroll·to·load·more'⏎···········`","line":250,"column":17,"nodeType":null,"messageId":"replace","endLine":250,"endColumn":75,"fix":{"range":[10149,10207],"text":"\n          ? 'Loading more leads…'\n          : hasMore\n            ? 'Scroll to load more'\n           "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":58,"fixableErrorCount":0,"fixableWarningCount":52,"source":"// app/admin/leads/page.tsx\n'use client';\n\nimport { useEffect, useState, useRef, useCallback } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { supabase } from '@/admin/lib/supabaseClient';\nimport { createLeadFromPhoto } from '@/lib/leads/photoProcessor';\nimport type { Lead } from '@/types/lead.types';\nimport Papa from 'papaparse';\nimport Image from 'next/image';\nimport LeadsTable from '@/components/admin/leads-table';\n\nconst CONFIDENCE_THRESHOLD = 0.85;\nconst LEADS_PER_PAGE = 100;\nconst ESTIMATED_VALUE_PER_LEAD = 49;\n\nexport default function LeadsPage() {\n  const router = useRouter();\n  const [toastMessage, setToastMessage] = useState<string | null>(null);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [industryFilterForBatch, setIndustryFilterForBatch] = useState<string>('all');\n\n  useEffect(() => {\n    if (toastMessage) {\n      const timeout = setTimeout(() => setToastMessage(null), 3000);\n      return () => clearTimeout(timeout);\n    }\n  }, [toastMessage]);\n\n  const [leads, setLeads] = useState<Lead[]>([]);\n  const [totalCount, setTotalCount] = useState<number>(0);\n  const [loading, setLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const [search, setSearch] = useState('');\n\n  const [filterSource, setFilterSource] = useState<string>('all');\n  const [filterStatus, setFilterStatus] = useState<string>('all');\n  const [filterIndustry, setFilterIndustry] = useState<string>('all');\n\n  const loaderRef = useRef<HTMLDivElement>(null);\n  const currentPageRef = useRef(0);\n\n  const fetchLeads = useCallback(async (reset = false) => {\n    if (!reset && !hasMore) return;\n    setLoading(true);\n\n    let query = supabase\n      .from('leads')\n      .select('*')\n      .order('created_at', { ascending: false });\n\n    if (filterSource !== 'all') query = query.eq('source', filterSource);\n    if (filterStatus !== 'all') query = query.eq('status', filterStatus);\n    if (filterIndustry !== 'all') query = query.eq('industry', filterIndustry);\n\n    const from = reset ? 0 : currentPageRef.current * LEADS_PER_PAGE;\n    const to = from + LEADS_PER_PAGE - 1;\n    const { data, error } = await query.range(from, to);\n\n    if (error) {\n      console.error('Error fetching leads:', error);\n      setLoading(false);\n      return;\n    }\n\n    const enriched = (data || []).map((lead) => ({\n      ...lead,\n      inCampaign: !!lead.current_campaign_id,\n    }));\n\n    if (reset) {\n      setLeads(enriched);\n      currentPageRef.current = 1;\n    } else {\n      setLeads((prev) => [...prev, ...enriched]);\n      currentPageRef.current += 1;\n    }\n\n    if (!data || data.length < LEADS_PER_PAGE) setHasMore(false);\n    setLoading(false);\n  }, [filterSource, filterStatus, filterIndustry, hasMore]);\n\n  const fetchTotalCount = useCallback(async () => {\n    const { count } = await supabase.from('leads').select('*', { count: 'exact', head: true });\n    if (typeof count === 'number') setTotalCount(count);\n  }, []);\n\n  useEffect(() => {\n    fetchLeads(true);\n    fetchTotalCount();\n  }, [filterSource, filterStatus, filterIndustry]);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting && !loading && hasMore) {\n        fetchLeads();\n      }\n    });\n    if (loaderRef.current) observer.observe(loaderRef.current);\n    return () => observer.disconnect();\n  }, [loaderRef.current, loading, hasMore, fetchLeads]);\n\n  const filtered = leads.filter((l) =>\n    l.business_name?.toLowerCase().includes(search.toLowerCase()) ||\n    l.address_city?.toLowerCase().includes(search.toLowerCase())\n  );\n\n  const grouped = filtered.reduce((acc, lead) => {\n    const state = lead.address_state || 'Unknown';\n    const city = lead.address_city || 'Unknown';\n    if (!acc[state]) acc[state] = {};\n    if (!acc[state][city]) acc[state][city] = [];\n    acc[state][city].push(lead);\n    return acc;\n  }, {} as Record<string, Record<string, Lead[]>>);\n\n  function startCampaignForCity(city: string, leadsInCity: Lead[]) {\n    const leadIds = leadsInCity.map((l) => l.id);\n    router.push(`/admin/start-campaign?city=${city}&leadIds=${leadIds.join(',')}`);\n  }\n\n  const readyToStart: { city: string; state: string; leads: Lead[] }[] = [];\n  for (const [state, cities] of Object.entries(grouped)) {\n    for (const [city, leadsInCity] of Object.entries(cities)) {\n      if (leadsInCity.length >= 2 && !leadsInCity.some((l) => l.current_campaign_id)) {\n        readyToStart.push({ state, city, leads: leadsInCity });\n      }\n    }\n  }\n\n  const filteredReady = readyToStart.filter(({ leads }) =>\n    industryFilterForBatch === 'all' || leads.some((l) => l.industry === industryFilterForBatch)\n  );\n\n  const totalEstValue = filteredReady.reduce((sum, g) => sum + g.leads.length * ESTIMATED_VALUE_PER_LEAD, 0);\n\n  const batchStartCampaigns = () => {\n    const allLeadIds = filteredReady.flatMap(({ leads }) => leads.map((l) => l.id));\n    router.push(`/admin/start-campaign?leadIds=${allLeadIds.join(',')}`);\n  };\n\n  readyToStart.sort((a, b) => b.leads.length - a.leads.length);\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      <div className=\"flex flex-wrap gap-2 items-center\">\n        <input\n          type=\"text\"\n          placeholder=\"Search business or city...\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          className=\"px-2 py-1 rounded bg-gray-900 text-white border border-gray-700\"\n        />\n        <select value={filterIndustry} onChange={(e) => setFilterIndustry(e.target.value)} className=\"px-2 py-1 rounded bg-gray-900 text-white border border-gray-700\">\n          <option value=\"all\">All Industries</option>\n          <option value=\"towing\">Towing</option>\n          <option value=\"concrete\">Concrete</option>\n        </select>\n        <select value={filterSource} onChange={(e) => setFilterSource(e.target.value)} className=\"px-2 py-1 rounded bg-gray-900 text-white border border-gray-700\">\n          <option value=\"all\">All Sources</option>\n          <option value=\"photo\">Photo</option>\n          <option value=\"csv\">CSV</option>\n        </select>\n        <select value={filterStatus} onChange={(e) => setFilterStatus(e.target.value)} className=\"px-2 py-1 rounded bg-gray-900 text-white border border-gray-700\">\n          <option value=\"all\">All Statuses</option>\n          <option value=\"reviewed\">Reviewed</option>\n          <option value=\"needs_review\">Needs Review</option>\n        </select>\n        <span className=\"text-sm text-gray-400\">\n          Showing {filtered.length} / {totalCount} total\n        </span>\n      </div>\n\n      {filteredReady.length > 0 && (\n        <div className=\"bg-gray-800 p-4 rounded border border-gray-700\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <h2 className=\"text-lg font-semibold text-green-400\">Campaigns Ready to Start</h2>\n            <div className=\"flex gap-4 items-center\">\n              <select\n                value={industryFilterForBatch}\n                onChange={(e) => setIndustryFilterForBatch(e.target.value)}\n                className=\"text-sm bg-gray-900 text-white border border-gray-700 rounded px-2 py-1\"\n              >\n                <option value=\"all\">All Industries</option>\n                <option value=\"towing\">Towing</option>\n                <option value=\"concrete\">Concrete</option>\n              </select>\n              <button\n                onClick={() => setShowConfirm(true)}\n                className=\"text-green-400 text-sm hover:underline\"\n              >\n                ➕ Start All ({filteredReady.length})\n              </button>\n            </div>\n          </div>\n          <ul className=\"space-y-1\">\n            {filteredReady.map(({ state, city, leads }) => (\n              <li key={`${state}-${city}`} className=\"flex justify-between items-center\">\n                <span>{city}, {state} ({leads.length} leads)</span>\n                <button\n                  className=\"text-green-400 hover:underline text-sm\"\n                  onClick={() => startCampaignForCity(city, leads)}\n                >\n                  ➕ Start\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      {showConfirm && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\">\n          <div className=\"bg-gray-900 text-white p-6 rounded shadow-lg max-w-md w-full\">\n            <h3 className=\"text-lg font-bold mb-4\">Confirm Campaign Launch</h3>\n            <p className=\"mb-4\">\n              You are about to start <strong>{filteredReady.length}</strong> campaigns with an estimated value of <strong>${totalEstValue}</strong>. Proceed?\n            </p>\n            <div className=\"flex justify-end gap-4\">\n              <button onClick={() => setShowConfirm(false)} className=\"px-4 py-2 bg-gray-700 rounded hover:bg-gray-600\">Cancel</button>\n              <button onClick={batchStartCampaigns} className=\"px-4 py-2 bg-green-600 rounded hover:bg-green-700\">Yes, Start</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {Object.entries(grouped).map(([state, cities]) => (\n        <div key={state} className=\"mt-6\">\n          <h2 className=\"text-xl text-blue-400 font-semibold\">{state}</h2>\n          {Object.entries(cities).map(([city, leadsInCity]) => (\n            <div key={city} className=\"mt-2\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg text-blue-300\">{city} ({leadsInCity.length})</h3>\n                {leadsInCity.length >= 2 && !leadsInCity.some((l) => l.current_campaign_id) && (\n                  <button\n                    className=\"text-green-500 text-sm hover:underline\"\n                    onClick={() => startCampaignForCity(city, leadsInCity)}\n                  >\n                    ➕ Start Campaign in {city}\n                  </button>\n                )}\n              </div>\n              <LeadsTable leads={leadsInCity} />\n            </div>\n          ))}\n        </div>\n      ))}\n\n      <div ref={loaderRef} className=\"text-center text-sm py-6 text-gray-400\">\n        {loading ? 'Loading more leads…' : hasMore ? 'Scroll to load more' : 'No more leads to load.'}\n      </div>\n\n      {toastMessage && (\n        <div className=\"fixed bottom-4 left-1/2 transform -translate-x-1/2 bg-blue-600 text-white px-4 py-2 rounded shadow-lg z-50\">\n          {toastMessage}\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/logs.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'error' is assigned a value but never used.","line":8,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":8,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useEffect, useState } from 'react';\nimport { supabase } from '@/admin/lib/supabaseClient';\nimport AdminTabs from '@/components/admin/admin-tabs';\n\nexport default function LogsPage() {\n  const [logs, setLogs] = useState<any[]>([]);\n  const [filter, setFilter] = useState('');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    supabase\n      .from('user_action_logs')\n      .select('*')\n      .order('timestamp', { ascending: false })\n      .then(({ data, error }) => {\n        if (error) setError(error.message);\n        else setLogs(data || []);\n      });\n  }, []);\n\n  const filtered = logs.filter(\n    (log) =>\n      log.action_type.toLowerCase().includes(filter.toLowerCase()) ||\n      (log.triggered_by || '').toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const exportCSV = () => {\n    const rows = filtered.map(\n      (log) =>\n        `\"${log.timestamp}\",\"${log.action_type}\",\"${log.triggered_by || ''}\",\"${log.lead_id}\",\"${log.domain_id}\"`\n    );\n    const csv = 'Timestamp,Action,User,Lead,Domain\\n' + rows.join('\\n');\n    const blob = new Blob([csv], { type: 'text/csv' });\n    const a = document.createElement('a');\n    a.href = URL.createObjectURL(blob);\n    a.download = 'user_action_logs.csv';\n    a.click();\n  };\n\n  return (\n    <>\n      <AdminTabs />\n      <div className=\"p-6 text-white\">\n        <h1 className=\"text-xl font-bold mb-4\">Lead Logs</h1>\n        <div className=\"mb-4 flex items-center gap-3\">\n          <input\n            type=\"text\"\n            placeholder=\"Search logs...\"\n            value={filter}\n            onChange={(e) => setFilter(e.target.value)}\n            className=\"px-2 py-1 rounded bg-gray-700 border border-gray-500 text-sm\"\n          />\n          <button\n            onClick={exportCSV}\n            className=\"bg-blue-600 hover:bg-blue-700 px-3 py-1 rounded text-sm text-white\"\n          >\n            Export CSV\n          </button>\n        </div>\n        <table className=\"w-full text-sm text-left text-gray-300 bg-gray-800 rounded overflow-hidden\">\n          <thead className=\"bg-gray-700 text-gray-100 uppercase text-xs tracking-wide\">\n            <tr>\n              <th className=\"px-4 py-2\">Time</th>\n              <th className=\"px-4 py-2\">Action</th>\n              <th className=\"px-4 py-2\">User</th>\n              <th className=\"px-4 py-2\">Lead ID</th>\n              <th className=\"px-4 py-2\">Domain ID</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filtered.map((log, i) => (\n              <tr key={log.id} className={i % 2 === 0 ? 'bg-gray-800' : 'bg-gray-900'}>\n                <td className=\"px-4 py-2\">{new Date(log.timestamp).toLocaleString()}</td>\n                <td className=\"px-4 py-2\">{log.action_type}</td>\n                <td className=\"px-4 py-2\">{log.triggered_by || '—'}</td>\n                <td className=\"px-4 py-2 text-xs\">{log.lead_id}</td>\n                <td className=\"px-4 py-2 text-xs\">{log.domain_id || '—'}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/logs/checkins.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\nimport { useRouter, useSearchParams } from 'next/navigation';\n\nexport default function CheckinLog() {\n  const searchParams = useSearchParams();\n  const date = searchParams?.get('date');\n  const [rows, setRows] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/logs/checkins')\n      .then((res) => res.json())\n      .then((data) => {\n        if (date) {\n          setRows(data.filter((r: any) => r.viewed_at?.startsWith(date)));\n        } else {\n          setRows(data);\n        }\n      });\n  }, [date]);\n\n  return (\n    <div className=\"p-6 max-w-5xl mx-auto text-white\">\n      <h1 className=\"text-2xl font-bold mb-4\">\n        📍 Check-in Log {date ? `(Filtered: ${date})` : ''}\n      </h1>\n      <div className=\"bg-zinc-800 p-4 rounded overflow-x-auto\">\n        <table className=\"text-sm w-full\">\n          <thead className=\"text-zinc-400 border-b border-zinc-600\">\n            <tr>\n              <th>Site</th>\n              <th>Referrer</th>\n              <th>User Agent</th>\n              <th>Viewed At</th>\n            </tr>\n          </thead>\n          <tbody>\n            {rows.map((r: any) => (\n              <tr key={r.id} className=\"border-b border-zinc-700\">\n                <td className=\"py-1\">{r.site_id}</td>\n                <td className=\"py-1\">{r.referrer}</td>\n                <td className=\"py-1 text-xs text-zinc-400\">{r.user_agent?.slice(0, 64)}…</td>\n                <td className=\"py-1 text-zinc-400\">{new Date(r.viewed_at).toLocaleString()}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/logs/dashboard.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··⏎`","line":32,"column":1,"nodeType":null,"messageId":"delete","endLine":33,"endColumn":1,"fix":{"range":[852,855],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// /app/admin/logs/dashboard.tsx\nexport const dynamic = 'force-dynamic';\nexport const runtime = 'nodejs';\n\nimport { createClient } from '@supabase/supabase-js';\nimport { createServerClient } from '@supabase/ssr';\n\nimport { cookies } from 'next/headers';\nimport { redirect } from 'next/navigation';\nimport Link from 'next/link';\n\nconst supabaseAdmin = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n);\n\nexport default async function Page() {\n  const cookieStore = cookies() as unknown as {\n    get(name: string): { value: string } | undefined;\n  };\n  const supa = createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        get(name: string) {\n          return cookieStore.get(name)?.value;\n        },\n      },\n    }\n  );\n  \n\n  const {\n    data: { session },\n  } = await supa.auth.getSession();\n\n  const user = session?.user;\n  const userId = user?.id;\n\n  if (!userId) {\n    redirect('/');\n  }\n\n  // Fetch canonical role from user_profiles\n  const { data: profile } = await supabaseAdmin\n    .from('user_profiles')\n    .select('role')\n    .eq('user_id', userId)\n    .maybeSingle();\n\n  if (profile?.role !== 'admin') {\n    redirect('/');\n  }\n\n  const { data: logs } = await supabaseAdmin\n    .from('dashboard_access_log')\n    .select('*')\n    .order('timestamp', { ascending: false })\n    .limit(100);\n\n  return <DashboardLog logs={logs || []} user={user} />;\n}\n\nexport function DashboardLog({ logs, user }: { logs: any[]; user: any }) {\n  return (\n    <div className=\"p-6\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h1 className=\"text-2xl font-bold\">Dashboard Access Logs</h1>\n        <Link href=\"/admin/sites/dashboard\" className=\"text-sm text-blue-600 hover:underline\">\n          ← Back to Dashboard\n        </Link>\n      </div>\n      <p className=\"text-sm text-gray-500 mb-6\">Viewing as {user.email}</p>\n      <table className=\"min-w-full text-sm border\">\n        <thead>\n          <tr className=\"border-b bg-gray-100 text-left\">\n            <th className=\"p-2\">Timestamp</th>\n            <th className=\"p-2\">User ID</th>\n            <th className=\"p-2\">Email</th>\n            <th className=\"p-2\">IP</th>\n            <th className=\"p-2\">City</th>\n            <th className=\"p-2\">Region</th>\n            <th className=\"p-2\">Country</th>\n            <th className=\"p-2\">Agent</th>\n          </tr>\n        </thead>\n        <tbody>\n          {logs.map((log) => (\n            <tr key={log.id} className=\"border-b\">\n              <td className=\"p-2\">{new Date(log.timestamp).toLocaleString()}</td>\n              <td className=\"p-2 text-xs\">{log.user_id}</td>\n              <td className=\"p-2\">{log.email}</td>\n              <td className=\"p-2 text-xs\">{log.ip_address || '-'}</td>\n              <td className=\"p-2\">{log.city || '-'}</td>\n              <td className=\"p-2\">{log.region || '-'}</td>\n              <td className=\"p-2\">{log.country || '-'}</td>\n              <td className=\"p-2 text-xs max-w-xs truncate\">\n                {log.user_agent?.slice(0, 40) || '-'}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/logs/feedback.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\nimport { useRouter, useSearchParams } from 'next/navigation';\n\nexport default function FeedbackLog() {\n  const searchParams = useSearchParams();\n  const date = searchParams?.get('date');\n  const [rows, setRows] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/logs/feedback')\n      .then((res) => res.json())\n      .then((data) => {\n        if (date) {\n          setRows(data.filter((r: any) => r.created_at?.startsWith(date)));\n        } else {\n          setRows(data);\n        }\n      });\n  }, [date]);\n\n  return (\n    <div className=\"p-6 max-w-5xl mx-auto text-white\">\n      <h1 className=\"text-2xl font-bold mb-4\">\n        🗣️ Feedback Log {date ? `(Filtered: ${date})` : ''}\n      </h1>\n      <div className=\"bg-zinc-800 p-4 rounded overflow-x-auto\">\n        <table className=\"text-sm w-full\">\n          <thead className=\"text-zinc-400 border-b border-zinc-600\">\n            <tr>\n              <th>Block</th>\n              <th>Action</th>\n              <th>Comment</th>\n              <th>Created</th>\n            </tr>\n          </thead>\n          <tbody>\n            {rows.map((r: any) => (\n              <tr key={r.id} className=\"border-b border-zinc-700\">\n                <td className=\"py-1\">{r.block_id}</td>\n                <td className=\"py-1 text-green-400\">{r.action}</td>\n                <td className=\"py-1\">{r.comment}</td>\n                <td className=\"py-1 text-zinc-400\">{new Date(r.created_at).toLocaleString()}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/logs/notifications.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\n\nexport default function NotificationLog() {\n  const [logs, setLogs] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/notification-logs')\n      .then((res) => res.json())\n      .then(setLogs);\n  }, []);\n\n  return (\n    <div className=\"p-6 max-w-4xl mx-auto text-white space-y-4\">\n      <h1 className=\"text-2xl font-bold\">📨 Notification Failures</h1>\n      <p className=\"text-sm text-zinc-400\">\n        Logged entries from Supabase when creator emails fail to deliver.\n      </p>\n      <div className=\"bg-zinc-800 rounded p-4 overflow-x-auto\">\n        <table className=\"w-full text-sm\">\n          <thead className=\"text-zinc-400 border-b border-zinc-600\">\n            <tr>\n              <th className=\"text-left py-1\">Slug</th>\n              <th className=\"text-left py-1\">Event</th>\n              <th className=\"text-left py-1\">Timestamp</th>\n            </tr>\n          </thead>\n          <tbody>\n            {logs.map((log: any) => (\n              <tr key={log.id} className=\"border-b border-zinc-700\">\n                <td className=\"py-1\">{log.slug}</td>\n                <td className=\"py-1 text-yellow-400\">{log.event}</td>\n                <td className=\"py-1 text-zinc-400\">{new Date(log.timestamp).toLocaleString()}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/logs/sessions.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/page.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `(⏎····<p·className=\"text-center·p-6·text-sm·text-gray-400\">⏎······Redirecting·to·the·right·place...⏎····</p>⏎··)` with `<p·className=\"text-center·p-6·text-sm·text-gray-400\">Redirecting·to·the·right·place...</p>`","line":18,"column":10,"nodeType":null,"messageId":"replace","endLine":22,"endColumn":4,"fix":{"range":[414,526],"text":"<p className=\"text-center p-6 text-sm text-gray-400\">Redirecting to the right place...</p>"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// /app/admin/page.tsx\n'use client';\n\nimport { useAutoRedirectByRole } from '@/hooks/useAutoRedirectByRole';\n\nexport default function AdminHomeRedirect() {\n  useAutoRedirectByRole({\n    roleRoutes: {\n      admin: '/admin/dashboard',\n      owner: '/admin/dashboard',\n      reseller: '/admin/dashboard',\n      viewer: '/viewer',\n    },\n    fallbackRoute: '/unauthorized',\n    enableTestBypass: true,\n  });\n\n  return (\n    <p className=\"text-center p-6 text-sm text-gray-400\">\n      Redirecting to the right place...\n    </p>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/people-analytics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/people-chart.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/people-heatmap.download.tsx","messages":[{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":128,"column":15,"nodeType":"JSXOpeningElement","endLine":131,"endColumn":17},{"ruleId":"jsx-a11y/alt-text","severity":1,"message":"img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","line":128,"column":15,"nodeType":"JSXOpeningElement","endLine":131,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { supabase } from '@/admin/lib/supabaseClient';\n\ntype UserEntry = {\n  user_id: string;\n  avatar_url: string | null;\n  last_seen_at: string;\n  role: string;\n};\n\ntype UserMapEntry = {\n  avatar_url: string | null;\n  role: string;\n  days: Set<string>;\n};\n\ntype HeatmapUser = {\n  user_id: string;\n  avatar_url: string | null;\n  role: string;\n  active_days: Set<string>;\n};\n\nfunction getDayKey(date: string | Date): string {\n  return new Date(date).toISOString().split('T')[0];\n}\n\nfunction getDateArray(daysBack = 90): string[] {\n  const result: string[] = [];\n  const today = new Date();\n  for (let i = daysBack; i >= 0; i--) {\n    const d = new Date(today);\n    d.setDate(d.getDate() - i);\n    result.push(getDayKey(d));\n  }\n  return result;\n}\n\nexport default function UserHeatmapDownloadable() {\n  const [users, setUsers] = useState<HeatmapUser[]>([]);\n  const [role, setRole] = useState('');\n  const [days] = useState<string[]>(getDateArray());\n\n  useEffect(() => {\n    (async () => {\n      const { data: raw } = await supabase\n        .from('user_profiles')\n        .select('user_id, avatar_url, last_seen_at, role')\n        .not('last_seen_at', 'is', null);\n\n      const userMap: Record<string, UserMapEntry> = {};\n\n      raw?.forEach((entry: UserEntry) => {\n        const id = entry.user_id;\n        const day = getDayKey(entry.last_seen_at);\n        if (!userMap[id]) {\n          userMap[id] = {\n            avatar_url: entry.avatar_url,\n            role: entry.role,\n            days: new Set<string>(),\n          };\n        }\n        userMap[id].days.add(day);\n      });\n\n      const formatted: HeatmapUser[] = Object.entries(userMap).map(([id, info]) => ({\n        user_id: id,\n        avatar_url: info.avatar_url,\n        role: info.role,\n        active_days: info.days,\n      }));\n\n      setUsers(formatted);\n    })();\n  }, []);\n\n  const filteredUsers = role ? users.filter((u) => u.role === role) : users;\n\n  const handleDownload = () => {\n    const csv = [\n      ['user_id', 'role', 'active_day_count', 'days'],\n      ...filteredUsers.map((u) => [\n        u.user_id,\n        u.role,\n        u.active_days.size,\n        Array.from(u.active_days).join(';'),\n      ]),\n    ]\n      .map((row) => row.join(','))\n      .join('\\n');\n\n    const blob = new Blob([csv], { type: 'text/csv' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'user-activity.csv';\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"p-6 max-w-6xl mx-auto\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h1 className=\"text-xl font-bold\">User Activity Overview</h1>\n        <button\n          className=\"text-sm bg-blue-600 text-white px-3 py-1 rounded\"\n          onClick={handleDownload}\n        >\n          Export CSV\n        </button>\n      </div>\n\n      <div className=\"mb-4 flex gap-3 items-center\">\n        <label className=\"text-sm\">Filter by Role:</label>\n        <select className=\"text-sm\" value={role} onChange={(e) => setRole(e.target.value)}>\n          <option value=\"\">All</option>\n          <option value=\"admin\">Admin</option>\n          <option value=\"user\">User</option>\n        </select>\n      </div>\n\n      <div className=\"grid gap-6 grid-cols-1 sm:grid-cols-2 md:grid-cols-3\">\n        {filteredUsers.map((user) => (\n          <div key={user.user_id} className=\"bg-white border rounded p-4 shadow\">\n            <div className=\"flex items-center gap-3 mb-3\">\n              <img\n                src={user.avatar_url || '/default-avatar.png'}\n                className=\"w-10 h-10 rounded-full border\"\n              />\n              <span className=\"text-xs text-gray-500\">{user.role || 'user'}</span>\n            </div>\n            <div className=\"grid grid-cols-27 gap-[2px] text-xs\">\n              {days.map((date) => (\n                <div\n                  key={date}\n                  title={date}\n                  style={{\n                    width: '10px',\n                    height: '10px',\n                    backgroundColor: user.active_days.has(date) ? '#2563eb' : '#e5e7eb',\n                    borderRadius: '2px',\n                  }}\n                />\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/people-heatmap.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/people-heatmap.users.tsx","messages":[{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":77,"column":15,"nodeType":"JSXOpeningElement","endLine":80,"endColumn":17},{"ruleId":"jsx-a11y/alt-text","severity":1,"message":"img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","line":77,"column":15,"nodeType":"JSXOpeningElement","endLine":80,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { supabase } from '@/admin/lib/supabaseClient';\n\nfunction getDayKey(date: Date) {\n  return new Date(date).toISOString().split('T')[0];\n}\n\nfunction getDateArray(daysBack = 90) {\n  const result = [];\n  const today = new Date();\n  for (let i = daysBack; i >= 0; i--) {\n    const d = new Date(today);\n    d.setDate(d.getDate() - i);\n    result.push(getDayKey(d));\n  }\n  return result;\n}\n\nexport default function MiniHeatmapsByUser() {\n  const [users, setUsers] = useState([]);\n  const days = getDateArray();\n\n  useEffect(() => {\n    (async () => {\n      const { data } = await supabase\n        .from('user_profiles')\n        .select('user_id, avatar_url, last_seen_at')\n        .not('last_seen_at', 'is', null);\n\n      const userMap: Record<string, { avatar_url: string | null; days: Set<string> }> = {};\n      data?.forEach((entry: any) => {\n        const id = entry.user_id;\n        const day = getDayKey(entry.last_seen_at);\n        if (!userMap[id]) {\n          userMap[id] = { avatar_url: entry.avatar_url, days: new Set() };\n        }\n        userMap[id].days.add(day);\n      });\n\n      const formatted = Object.entries(userMap).map(\n        ([id, info]: [string, { avatar_url: string | null; days: Set<string> }]) => {\n          const weekMap: Record<string, number> = {};\n          Array.from(info.days).forEach((day) => {\n            const week = day.slice(0, 7); // YYYY-MM\n            weekMap[week] = (weekMap[week] || 0) + 1;\n          });\n          const avgPerWeek = (\n            Object.values(weekMap).reduce((a: number, b: number) => a + b, 0) /\n            Object.keys(weekMap).length\n          ).toFixed(1);\n\n          return {\n            user_id: id,\n            avatar_url: info.avatar_url,\n            active_days: info.days,\n            avg: avgPerWeek,\n          };\n        }\n      );\n\n      setUsers(formatted as any);\n    })();\n  }, []);\n\n  return (\n    <div className=\"p-6 max-w-6xl mx-auto\">\n      <h1 className=\"text-xl font-bold mb-6\">User Activity Heatmaps</h1>\n      <p className=\"text-sm text-gray-500 mb-4\">\n        Past 90 days · Weekly average activity shown next to avatar\n      </p>\n      <div className=\"grid gap-6 grid-cols-1 sm:grid-cols-2 md:grid-cols-3\">\n        {users.map((user: any) => (\n          <div key={user.user_id} className=\"bg-white border rounded p-4 shadow\">\n            <div className=\"flex items-center gap-3 mb-3\">\n              <img\n                src={user.avatar_url || '/default-avatar.png'}\n                className=\"w-10 h-10 rounded-full border\"\n              />\n              <span className=\"text-xs text-gray-500\">Avg: {user.avg}/week</span>\n            </div>\n            <div className=\"grid grid-cols-27 gap-[2px] text-xs\">\n              {days.map((date) => (\n                <div\n                  key={date}\n                  title={date}\n                  style={{\n                    width: '10px',\n                    height: '10px',\n                    backgroundColor: user.active_days.has(date) ? '#2563eb' : '#e5e7eb',\n                    borderRadius: '2px',\n                  }}\n                />\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/people-stats.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'GetServerSideProps' is defined but never used.","line":1,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":1,"endColumn":28},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'supabase' is assigned a value but never used.","line":4,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":15},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'UserProfileRow' is defined but never used.","line":15,"column":6,"nodeType":null,"messageId":"unusedVar","endLine":15,"endColumn":20}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { GetServerSideProps } from 'next';\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\ntype ActivityMap = Record<string, number>;\n\ntype Props = {\n  stats: ActivityMap;\n};\n\ntype UserProfileRow = {\n  user_id: string;\n  last_seen_at: string;\n};\n\nexport default function PeopleStats({ stats }: Props) {\n  const days = Object.keys(stats).sort();\n  return (\n    <div className=\"p-6 max-w-4xl mx-auto\">\n      <h1 className=\"text-xl font-bold mb-4\">Activity Heatmap (Last Seen by Day)</h1>\n      <div className=\"grid grid-cols-5 gap-2\">\n        {days.map((day) => (\n          <div\n            key={day}\n            className=\"flex items-center justify-between border p-2 rounded bg-gray-50\"\n          >\n            <span className=\"text-xs text-gray-600\">{day}</span>\n            <span className=\"font-semibold text-blue-600\">{stats[day]}</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/people.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `(⏎··················<img·src={p.avatar_url}·className=\"w-8·h-8·rounded-full\"·/>⏎················)·:·(⏎··················'—'⏎················)` with `<img·src={p.avatar_url}·className=\"w-8·h-8·rounded-full\"·/>·:·'—'`","line":46,"column":33,"nodeType":null,"messageId":"replace","endLine":50,"endColumn":18,"fix":{"range":[1629,1770],"text":"<img src={p.avatar_url} className=\"w-8 h-8 rounded-full\" /> : '—'"}},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":47,"column":19,"nodeType":"JSXOpeningElement","endLine":47,"endColumn":78},{"ruleId":"jsx-a11y/alt-text","severity":1,"message":"img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","line":47,"column":19,"nodeType":"JSXOpeningElement","endLine":47,"endColumn":78},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎`","line":59,"column":1,"nodeType":null,"messageId":"delete","endLine":60,"endColumn":1,"fix":{"range":[1874,1875],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"'use server';\n\nimport { cookies } from 'next/headers';\nimport { createServerClient } from '@supabase/ssr';\nimport { Database } from '@/types/supabase';\n\nexport default async function PeoplePage() {\n  const cookieStore = cookies();\n\n  const supabase = createServerClient<Database>(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        async get(name: string) {\n          const cookie = await cookieStore;\n          return cookie.get(name)?.value;\n        },\n      },\n    }\n  );\n\n  const { data: profiles } = await supabase.from('user_profiles').select('*');\n\n  return (\n    <div className=\"p-6 max-w-4xl mx-auto\">\n      <h1 className=\"text-xl font-bold mb-4\">People Directory</h1>\n      <table className=\"min-w-full text-sm border\">\n        <thead>\n          <tr className=\"border-b bg-gray-100 text-left\">\n            <th className=\"p-2\">User ID</th>\n            <th className=\"p-2\">Last Seen</th>\n            <th className=\"p-2\">IP</th>\n            <th className=\"p-2\">Agent</th>\n            <th className=\"p-2\">Avatar</th>\n          </tr>\n        </thead>\n        <tbody>\n          {(profiles ?? []).map((p) => (\n            <tr key={p.user_id} className=\"border-b\">\n              <td className=\"p-2 text-xs text-gray-600\">{p.user_id}</td>\n              <td className=\"p-2\">{new Date(p.last_seen_at).toLocaleString()}</td>\n              <td className=\"p-2 text-xs\">{p.last_seen_ip ?? '-'}</td>\n              <td className=\"p-2 text-xs truncate\">{p.last_seen_agent?.slice(0, 40) ?? '-'}</td>\n              <td className=\"p-2\">\n                {p.avatar_url ? (\n                  <img src={p.avatar_url} className=\"w-8 h-8 rounded-full\" />\n                ) : (\n                  '—'\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/pitch.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/presets/edit/[id]/page.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"use·client\"` with `'use·client'`","line":1,"column":1,"nodeType":null,"messageId":"replace","endLine":1,"endColumn":13,"fix":{"range":[0,12],"text":"'use client'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"react\"` with `'react'`","line":3,"column":37,"nodeType":null,"messageId":"replace","endLine":3,"endColumn":44,"fix":{"range":[51,58],"text":"'react'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"next/navigation\"` with `'next/navigation'`","line":4,"column":38,"nodeType":null,"messageId":"replace","endLine":4,"endColumn":55,"fix":{"range":[97,114],"text":"'next/navigation'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@/components/ui/input\"` with `'@/components/ui/input'`","line":5,"column":23,"nodeType":null,"messageId":"replace","endLine":5,"endColumn":46,"fix":{"range":[138,161],"text":"'@/components/ui/input'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@/components/ui/button\"` with `'@/components/ui/button'`","line":6,"column":24,"nodeType":null,"messageId":"replace","endLine":6,"endColumn":48,"fix":{"range":[186,210],"text":"'@/components/ui/button'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@/components/admin/templates/sortable-grid-block\"` with `'@/components/admin/templates/sortable-grid-block'`","line":7,"column":31,"nodeType":null,"messageId":"replace","endLine":7,"endColumn":81,"fix":{"range":[242,292],"text":"'@/components/admin/templates/sortable-grid-block'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@/types/blocks\"` with `'@/types/blocks'`","line":8,"column":32,"nodeType":null,"messageId":"replace","endLine":8,"endColumn":48,"fix":{"range":[325,341],"text":"'@/types/blocks'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@/types/blocks\"` with `'@/types/blocks'`","line":9,"column":28,"nodeType":null,"messageId":"replace","endLine":9,"endColumn":44,"fix":{"range":[370,386],"text":"'@/types/blocks'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@supabase/supabase-js\"` with `'@supabase/supabase-js'`","line":10,"column":30,"nodeType":null,"messageId":"replace","endLine":10,"endColumn":53,"fix":{"range":[417,440],"text":"'@supabase/supabase-js'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@/types/supabase\"` with `'@/types/supabase'`","line":11,"column":31,"nodeType":null,"messageId":"replace","endLine":11,"endColumn":49,"fix":{"range":[472,490],"text":"'@/types/supabase'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@/components/admin/templates/template-preview\"` with `'@/components/admin/templates/template-preview'`","line":12,"column":29,"nodeType":null,"messageId":"replace","endLine":12,"endColumn":76,"fix":{"range":[520,567],"text":"'@/components/admin/templates/template-preview'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@/types/grid-presets\"` with `'@/types/grid-presets'`","line":13,"column":36,"nodeType":null,"messageId":"replace","endLine":13,"endColumn":58,"fix":{"range":[604,626],"text":"'@/types/grid-presets'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@/components/admin/templates/grid-thumbnail-renderer\"` with `'@/components/admin/templates/grid-thumbnail-renderer'`","line":14,"column":35,"nodeType":null,"messageId":"replace","endLine":14,"endColumn":89,"fix":{"range":[662,716],"text":"'@/components/admin/templates/grid-thumbnail-renderer'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `process.env.NEXT_PUBLIC_SUPABASE_URL!,·process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!` with `⏎····process.env.NEXT_PUBLIC_SUPABASE_URL!,⏎····process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!⏎··`","line":20,"column":43,"nodeType":null,"messageId":"replace","endLine":20,"endColumn":124,"fix":{"range":[935,1016],"text":"\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"\"` with `''`","line":22,"column":36,"nodeType":null,"messageId":"replace","endLine":22,"endColumn":38,"fix":{"range":[1055,1057],"text":"''"}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":25,"column":1,"nodeType":null,"messageId":"delete","endLine":25,"endColumn":3,"fix":{"range":[1158,1160],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"string\"` with `'string'`","line":27,"column":30,"nodeType":null,"messageId":"replace","endLine":27,"endColumn":38,"fix":{"range":[1210,1218],"text":"'string'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"grid_presets\"` with `'grid_presets'`","line":29,"column":13,"nodeType":null,"messageId":"replace","endLine":29,"endColumn":27,"fix":{"range":[1253,1267],"text":"'grid_presets'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"*\"` with `'*'`","line":30,"column":15,"nodeType":null,"messageId":"replace","endLine":30,"endColumn":18,"fix":{"range":[1283,1286],"text":"'*'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"id\"` with `'id'`","line":31,"column":11,"nodeType":null,"messageId":"replace","endLine":31,"endColumn":15,"fix":{"range":[1298,1302],"text":"'id'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"Failed·to·load·preset:\"` with `'Failed·to·load·preset:'`","line":39,"column":34,"nodeType":null,"messageId":"replace","endLine":39,"endColumn":58,"fix":{"range":[1527,1551],"text":"'Failed to load preset:'"}},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'supabase'. Either include it or remove the dependency array.","line":41,"column":6,"nodeType":"ArrayExpression","endLine":41,"endColumn":10,"suggestions":[{"desc":"Update the dependencies array to be: [id, supabase]","fix":{"range":[1584,1588],"text":"[id, supabase]"}}]},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"string\"` with `'string'`","line":44,"column":39,"nodeType":null,"messageId":"replace","endLine":44,"endColumn":47,"fix":{"range":[1667,1675],"text":"'string'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"grid_presets\"` with `'grid_presets'`","line":46,"column":13,"nodeType":null,"messageId":"replace","endLine":46,"endColumn":27,"fix":{"range":[1734,1748],"text":"'grid_presets'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"id\"` with `'id'`","line":48,"column":11,"nodeType":null,"messageId":"replace","endLine":48,"endColumn":15,"fix":{"range":[1828,1832],"text":"'id'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"/admin/presets\"` with `'/admin/presets'`","line":50,"column":19,"nodeType":null,"messageId":"replace","endLine":50,"endColumn":35,"fix":{"range":[1875,1891],"text":"'/admin/presets'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"Failed·to·update·preset:·\"` with `'Failed·to·update·preset:·'`","line":52,"column":13,"nodeType":null,"messageId":"replace","endLine":52,"endColumn":40,"fix":{"range":[1919,1946],"text":"'Failed to update preset: '"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"grid_presets\"` with `'grid_presets'`","line":57,"column":43,"nodeType":null,"messageId":"replace","endLine":57,"endColumn":57,"fix":{"range":[2059,2073],"text":"'grid_presets'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"/admin/presets\"` with `'/admin/presets'`","line":62,"column":29,"nodeType":null,"messageId":"replace","endLine":62,"endColumn":45,"fix":{"range":[2206,2222],"text":"'/admin/presets'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"Failed·to·duplicate:·\"` with `'Failed·to·duplicate:·'`","line":63,"column":16,"nodeType":null,"messageId":"replace","endLine":63,"endColumn":39,"fix":{"range":[2240,2263],"text":"'Failed to duplicate: '"}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":73,"column":1,"nodeType":null,"messageId":"insert","endLine":73,"endColumn":1,"fix":{"range":[2518,2518],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":74,"column":1,"nodeType":null,"messageId":"insert","endLine":74,"endColumn":1,"fix":{"range":[2584,2584],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":76,"column":1,"nodeType":null,"messageId":"insert","endLine":76,"endColumn":1,"fix":{"range":[2613,2613],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":77,"column":1,"nodeType":null,"messageId":"insert","endLine":77,"endColumn":1,"fix":{"range":[2643,2643],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":78,"column":1,"nodeType":null,"messageId":"insert","endLine":78,"endColumn":1,"fix":{"range":[2665,2665],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":79,"column":1,"nodeType":null,"messageId":"insert","endLine":79,"endColumn":1,"fix":{"range":[2690,2690],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":80,"column":1,"nodeType":null,"messageId":"insert","endLine":80,"endColumn":1,"fix":{"range":[2727,2727],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":81,"column":1,"nodeType":null,"messageId":"insert","endLine":81,"endColumn":1,"fix":{"range":[2749,2749],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":82,"column":1,"nodeType":null,"messageId":"insert","endLine":82,"endColumn":1,"fix":{"range":[2774,2774],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":83,"column":1,"nodeType":null,"messageId":"insert","endLine":83,"endColumn":1,"fix":{"range":[2796,2796],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":84,"column":1,"nodeType":null,"messageId":"insert","endLine":84,"endColumn":1,"fix":{"range":[2885,2885],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":85,"column":1,"nodeType":null,"messageId":"insert","endLine":85,"endColumn":1,"fix":{"range":[2974,2974],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":86,"column":1,"nodeType":null,"messageId":"insert","endLine":86,"endColumn":1,"fix":{"range":[2990,2990],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":87,"column":1,"nodeType":null,"messageId":"insert","endLine":87,"endColumn":1,"fix":{"range":[3004,3004],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":88,"column":1,"nodeType":null,"messageId":"insert","endLine":88,"endColumn":1,"fix":{"range":[3016,3016],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":89,"column":1,"nodeType":null,"messageId":"insert","endLine":89,"endColumn":1,"fix":{"range":[3032,3032],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":90,"column":1,"nodeType":null,"messageId":"insert","endLine":90,"endColumn":1,"fix":{"range":[3054,3054],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":91,"column":1,"nodeType":null,"messageId":"insert","endLine":91,"endColumn":1,"fix":{"range":[3094,3094],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":92,"column":1,"nodeType":null,"messageId":"insert","endLine":92,"endColumn":1,"fix":{"range":[3131,3131],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":93,"column":1,"nodeType":null,"messageId":"insert","endLine":93,"endColumn":1,"fix":{"range":[3153,3153],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":94,"column":1,"nodeType":null,"messageId":"insert","endLine":94,"endColumn":1,"fix":{"range":[3196,3196],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":95,"column":1,"nodeType":null,"messageId":"insert","endLine":95,"endColumn":1,"fix":{"range":[3210,3210],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":96,"column":1,"nodeType":null,"messageId":"insert","endLine":96,"endColumn":1,"fix":{"range":[3222,3222],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":98,"column":1,"nodeType":null,"messageId":"insert","endLine":98,"endColumn":1,"fix":{"range":[3232,3232],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":99,"column":1,"nodeType":null,"messageId":"insert","endLine":99,"endColumn":1,"fix":{"range":[3268,3268],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":100,"column":1,"nodeType":null,"messageId":"insert","endLine":100,"endColumn":1,"fix":{"range":[3311,3311],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":101,"column":1,"nodeType":null,"messageId":"insert","endLine":101,"endColumn":1,"fix":{"range":[3338,3338],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··········placeholder=\"Preset·Name\"⏎··········value={name}⏎··········onChange={(e)·=>·setName(e.target.value)}⏎·······` with `·placeholder=\"Preset·Name\"·value={name}·onChange={(e)·=>·setName(e.target.value)}`","line":108,"column":15,"nodeType":null,"messageId":"replace","endLine":112,"endColumn":8,"fix":{"range":[3550,3669],"text":" placeholder=\"Preset Name\" value={name} onChange={(e) => setName(e.target.value)}"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"s\"·:·\"\"` with `'s'·:·''`","line":120,"column":36,"nodeType":null,"messageId":"replace","endLine":120,"endColumn":44,"fix":{"range":[3967,3975],"text":"'s' : ''"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·pages:·[{·id:·id·as·string,·title:·name,·slug:·\"preview\",·content_blocks:·blocks·}]` with `⏎··············pages:·[{·id:·id·as·string,·title:·name,·slug:·'preview',·content_blocks:·blocks·}],⏎···········`","line":156,"column":20,"nodeType":null,"messageId":"replace","endLine":156,"endColumn":104,"fix":{"range":[5205,5289],"text":"\n              pages: [{ id: id as string, title: name, slug: 'preview', content_blocks: blocks }],\n           "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":60,"fixableErrorCount":0,"fixableWarningCount":59,"source":"\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { useParams, useRouter } from \"next/navigation\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport SortableGridBlock from \"@/components/admin/templates/sortable-grid-block\";\nimport { normalizeBlock } from \"@/types/blocks\";\nimport type { Block } from \"@/types/blocks\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport type { Database } from \"@/types/supabase\";\nimport TemplatePreview from \"@/components/admin/templates/template-preview\";\nimport { defaultGridPresets } from \"@/types/grid-presets\";\nimport GridThumbnailRenderer from \"@/components/admin/templates/grid-thumbnail-renderer\";\nimport { createDefaultBlock } from '@/lib/create-default-block';\n\nexport default function AdminPresetsEditPage() {\n  const { id } = useParams();\n  const router = useRouter();\n  const supabase = createClient<Database>(process.env.NEXT_PUBLIC_SUPABASE_URL!, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!);\n\n  const [name, setName] = useState(\"\");\n  const [columns, setColumns] = useState(2);\n  const [blocks, setBlocks] = useState<Block[]>([]);\n  \n  useEffect(() => {\n    if (!id || typeof id !== \"string\") return;\n    supabase\n      .from(\"grid_presets\")\n      .select(\"*\")\n      .eq(\"id\", id)\n      .single()\n      .then(({ data, error }) => {\n        if (data) {\n          setName(data.name);\n          setColumns(data.columns);\n          setBlocks(data.items || []);\n        }\n        if (error) console.error(\"Failed to load preset:\", error.message);\n      });\n  }, [id]);\n\n  const handleUpdate = async () => {\n    if (!name.trim() || typeof id !== \"string\") return;\n    const { error } = await supabase\n      .from(\"grid_presets\")\n      .update({ name, columns, items: blocks.map(normalizeBlock) })\n      .eq(\"id\", id);\n    if (!error) {\n      router.push(\"/admin/presets\");\n    } else {\n      alert(\"Failed to update preset: \" + error.message);\n    }\n  };\n\n  const handleDuplicate = async () => {\n    const { error } = await supabase.from(\"grid_presets\").insert({\n      name: `${name} (copy)`,\n      columns,\n      items: blocks.map(normalizeBlock),\n    });\n    if (!error) router.push(\"/admin/presets\");\n    else alert(\"Failed to duplicate: \" + error.message);\n  };\n\n  const handleInsertBlock = (index: number, type: string) => {\n    const newBlock = createDefaultBlock(type as Block['type']);\n    const updated = [...blocks];\n    updated.splice(index, 0, newBlock);\n    setBlocks(updated);\n  };\n\n//   const handleInsertBlock = (index: number, type: string) => {\n//     let newBlock: Block;\n\n//     if (type === \"grid\") {\n//       newBlock = {\n//         type: \"grid\",\n//         _id: crypto.randomUUID(),\n//         content: {\n//           columns: 2,\n//           items: [\n//             { type: \"text\", content: { value: \"Item 1\" }, _id: crypto.randomUUID() },\n//             { type: \"text\", content: { value: \"Item 2\" }, _id: crypto.randomUUID() },\n//           ],\n//         },\n//       };\n//     } else {\n//       newBlock = {\n//         type: type as Block['type'],\n//         _id: crypto.randomUUID(),\n//         content: {\n//             value: `New ${type} block`,\n//         },\n//       };\n//     }\n\n//     const updated = [...blocks];\n//     updated.splice(index, 0, newBlock);\n//     setBlocks(updated);\n//   };\n\n  return (\n    <div className=\"max-w-7xl mx-auto py-8 space-y-6\">\n      <h1 className=\"text-2xl font-bold text-white\">Edit Grid Preset</h1>\n\n      <div className=\"flex gap-4 items-center\">\n        <Input\n          placeholder=\"Preset Name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <select\n          value={columns}\n          onChange={(e) => setColumns(Number(e.target.value))}\n          className=\"rounded bg-muted px-2 py-1 text-white text-sm\"\n        >\n          {[1, 2, 3, 4].map((n) => (\n            <option key={n} value={n}>\n              {n} Column{n !== 1 ? \"s\" : \"\"}\n            </option>\n          ))}\n        </select>\n        <Button onClick={handleUpdate}>Update Preset</Button>\n        <Button variant=\"ghost\" onClick={handleDuplicate}>\n          Duplicate Preset\n        </Button>\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-2\">\n        {defaultGridPresets.map((preset) => (\n          <button\n            key={preset.name}\n            className=\"rounded border border-white/10 hover:border-white/30 p-2 text-left text-white text-sm\"\n            onClick={() => {\n              setBlocks((prev) => [...prev, ...preset.items.map(normalizeBlock)]);\n            }}\n          >\n            <div className=\"font-medium mb-1\">{preset.name}</div>\n            <GridThumbnailRenderer preset={preset} />\n          </button>\n        ))}\n      </div>\n\n      <div className=\"grid md:grid-cols-2 gap-8\">\n        <SortableGridBlock\n          items={blocks}\n          columns={columns}\n          onChange={setBlocks}\n          onInsert={(index) => handleInsertBlock(index, 'text')}\n        />\n\n        <div className=\"bg-white/5 rounded p-4 border border-white/10\">\n          <h3 className=\"text-sm text-white font-semibold mb-2\">Live Preview</h3>\n          <TemplatePreview\n            data={{ pages: [{ id: id as string, title: name, slug: \"preview\", content_blocks: blocks }] }}\n            colorScheme=\"blue\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/presets/new/page.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"use·client\"` with `'use·client'`","line":1,"column":1,"nodeType":null,"messageId":"replace","endLine":1,"endColumn":13,"fix":{"range":[0,12],"text":"'use client'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"react\"` with `'react'`","line":3,"column":26,"nodeType":null,"messageId":"replace","endLine":3,"endColumn":33,"fix":{"range":[40,47],"text":"'react'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@/components/ui/input\"` with `'@/components/ui/input'`","line":4,"column":23,"nodeType":null,"messageId":"replace","endLine":4,"endColumn":46,"fix":{"range":[71,94],"text":"'@/components/ui/input'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@/components/ui/button\"` with `'@/components/ui/button'`","line":5,"column":24,"nodeType":null,"messageId":"replace","endLine":5,"endColumn":48,"fix":{"range":[119,143],"text":"'@/components/ui/button'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@/components/admin/templates/sortable-grid-block\"` with `'@/components/admin/templates/sortable-grid-block'`","line":6,"column":31,"nodeType":null,"messageId":"replace","endLine":6,"endColumn":81,"fix":{"range":[175,225],"text":"'@/components/admin/templates/sortable-grid-block'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@/types/blocks\"` with `'@/types/blocks'`","line":7,"column":32,"nodeType":null,"messageId":"replace","endLine":7,"endColumn":48,"fix":{"range":[258,274],"text":"'@/types/blocks'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@/types/blocks\"` with `'@/types/blocks'`","line":8,"column":28,"nodeType":null,"messageId":"replace","endLine":8,"endColumn":44,"fix":{"range":[303,319],"text":"'@/types/blocks'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"next/navigation\"` with `'next/navigation'`","line":9,"column":27,"nodeType":null,"messageId":"replace","endLine":9,"endColumn":44,"fix":{"range":[347,364],"text":"'next/navigation'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@supabase/supabase-js\"` with `'@supabase/supabase-js'`","line":10,"column":30,"nodeType":null,"messageId":"replace","endLine":10,"endColumn":53,"fix":{"range":[395,418],"text":"'@supabase/supabase-js'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@/types/supabase\"` with `'@/types/supabase'`","line":11,"column":31,"nodeType":null,"messageId":"replace","endLine":11,"endColumn":49,"fix":{"range":[450,468],"text":"'@/types/supabase'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"\"` with `''`","line":14,"column":36,"nodeType":null,"messageId":"replace","endLine":14,"endColumn":38,"fix":{"range":[554,556],"text":"''"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `process.env.NEXT_PUBLIC_SUPABASE_URL!,·process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!` with `⏎····process.env.NEXT_PUBLIC_SUPABASE_URL!,⏎····process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!⏎··`","line":18,"column":43,"nodeType":null,"messageId":"replace","endLine":18,"endColumn":124,"fix":{"range":[729,810],"text":"\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"Name·is·required\"` with `'Name·is·required'`","line":21,"column":36,"nodeType":null,"messageId":"replace","endLine":21,"endColumn":54,"fix":{"range":[884,902],"text":"'Name is required'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"grid_presets\"` with `'grid_presets'`","line":23,"column":43,"nodeType":null,"messageId":"replace","endLine":23,"endColumn":57,"fix":{"range":[948,962],"text":"'grid_presets'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"Failed·to·save·preset:·\"` with `'Failed·to·save·preset:·'`","line":30,"column":13,"nodeType":null,"messageId":"replace","endLine":30,"endColumn":38,"fix":{"range":[1079,1104],"text":"'Failed to save preset: '"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"/admin/presets\"` with `'/admin/presets'`","line":34,"column":17,"nodeType":null,"messageId":"replace","endLine":34,"endColumn":33,"fix":{"range":[1160,1176],"text":"'/admin/presets'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··········placeholder=\"Preset·Name\"⏎··········value={name}⏎··········onChange={(e)·=>·setName(e.target.value)}⏎·······` with `·placeholder=\"Preset·Name\"·value={name}·onChange={(e)·=>·setName(e.target.value)}`","line":42,"column":15,"nodeType":null,"messageId":"replace","endLine":46,"endColumn":8,"fix":{"range":[1387,1506],"text":" placeholder=\"Preset Name\" value={name} onChange={(e) => setName(e.target.value)}"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"s\"·:·\"\"` with `'s'·:·''`","line":54,"column":36,"nodeType":null,"messageId":"replace","endLine":54,"endColumn":44,"fix":{"range":[1804,1812],"text":"'s' : ''"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"text\"` with `'text'`","line":67,"column":19,"nodeType":null,"messageId":"replace","endLine":67,"endColumn":25,"fix":{"range":[2128,2134],"text":"'text'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"New·block...\"` with `'New·block...'`","line":68,"column":31,"nodeType":null,"messageId":"replace","endLine":68,"endColumn":45,"fix":{"range":[2166,2180],"text":"'New block...'"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":20,"source":"\"use client\";\n\nimport { useState } from \"react\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport SortableGridBlock from \"@/components/admin/templates/sortable-grid-block\";\nimport { normalizeBlock } from \"@/types/blocks\";\nimport type { Block } from \"@/types/blocks\";\nimport { useRouter } from \"next/navigation\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport type { Database } from \"@/types/supabase\";\n\nexport default function AdminPresetsNewPage() {\n  const [name, setName] = useState(\"\");\n  const [columns, setColumns] = useState(2);\n  const [blocks, setBlocks] = useState<Block[]>([]);\n  const router = useRouter();\n  const supabase = createClient<Database>(process.env.NEXT_PUBLIC_SUPABASE_URL!, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!);\n\n  const handleSave = async () => {\n    if (!name.trim()) return alert(\"Name is required\");\n\n    const { error } = await supabase.from(\"grid_presets\").insert({\n      name,\n      columns,\n      items: blocks.map(normalizeBlock),\n    });\n\n    if (error) {\n      alert(\"Failed to save preset: \" + error.message);\n      return;\n    }\n\n    router.push(\"/admin/presets\");\n  };\n\n  return (\n    <div className=\"max-w-5xl mx-auto py-8 space-y-6\">\n      <h1 className=\"text-2xl font-bold text-white\">New Grid Preset</h1>\n\n      <div className=\"flex gap-4 items-center\">\n        <Input\n          placeholder=\"Preset Name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <select\n          value={columns}\n          onChange={(e) => setColumns(Number(e.target.value))}\n          className=\"rounded bg-muted px-2 py-1 text-white text-sm\"\n        >\n          {[1, 2, 3, 4].map((n) => (\n            <option key={n} value={n}>\n              {n} Column{n !== 1 ? \"s\" : \"\"}\n            </option>\n          ))}\n        </select>\n        <Button onClick={handleSave}>Save Preset</Button>\n      </div>\n\n      <SortableGridBlock\n        items={blocks}\n        columns={columns}\n        onChange={setBlocks}\n        onInsert={(index) => {\n          const fallback: Block = {\n            type: \"text\",\n            content: { value: \"New block...\" },\n            _id: crypto.randomUUID(),\n          };\n          const updated = [...blocks];\n          updated.splice(index, 0, fallback);\n          setBlocks(updated);\n        }}\n      />\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/presets/page.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"use·client\"` with `'use·client'`","line":1,"column":1,"nodeType":null,"messageId":"replace","endLine":1,"endColumn":13,"fix":{"range":[0,12],"text":"'use client'"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"\"use client\";\n\nimport GridTemplateManager from '@/components/admin/templates/grid-template-manager';\n\nexport default function AdminPresetsPage() {\n  return (\n    <div className=\"max-w-5xl mx-auto py-8 space-y-6\">\n      <h1 className=\"text-2xl font-bold text-white\">Grid Layout Templates</h1>\n      <p className=\"text-sm text-muted-foreground\">\n        Browse, insert, export, or import reusable block layouts for your editor.\n      </p>\n\n      <GridTemplateManager showPreview />\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/print/[id].tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { supabase } from '@/admin/lib/supabaseClient';\nimport QRCode from 'react-qr-code';\nimport Image from 'next/image';\n\nexport default function PrintCard() {\n  const searchParams = useSearchParams();\n  const id = searchParams?.get('id') as string;\n  const [lead, setLead] = useState<any>(null);\n  const [logs, setLogs] = useState<any[]>([]);\n\n  useEffect(() => {\n    if (!id) return;\n\n    supabase\n      .from('leads')\n      .select('*, domains(domain)')\n      .eq('id', id)\n      .single()\n      .then(({ data }) => setLead(data));\n\n    supabase\n      .from('user_action_logs')\n      .select('*')\n      .eq('lead_id', id)\n      .order('timestamp', { ascending: false })\n      .then(({ data }) => setLogs(data || []));\n  }, [id]);\n\n  const claimUrl = lead?.domains?.domain\n    ? `https://${lead.domains.domain}`\n    : 'https://quicksites.ai/claim';\n\n  return lead ? (\n    <div className=\"p-6 max-w-lg mx-auto text-black bg-white print:bg-white print:text-black\">\n      <h1 className=\"text-2xl font-bold mb-4\">You&apos;ve Got a Site!</h1>\n      <p className=\"mb-2\">\n        Hey <strong>{lead.business_name}</strong>,\n      </p>\n      <p className=\"mb-2\">We built you a website and it&apos;s ready to preview or claim at:</p>\n      <p className=\"mb-2 text-blue-600\">{claimUrl}</p>\n\n      <div className=\"mt-4 w-full border rounded overflow-hidden\">\n        <Image\n          src={`/screenshots/${lead.domains?.domain || 'default'}.png`}\n          alt=\"Site preview\"\n          width={800}\n          height={450}\n          className=\"w-full h-auto\"\n          priority\n        />\n      </div>\n\n      <div className=\"mt-6 text-center\">\n        <p className=\"text-sm mb-1\">Scan this to preview or claim:</p>\n        <QRCode\n          value={claimUrl}\n          size={128}\n          style={{ height: 'auto', maxWidth: '128px', width: '128px' }}\n          viewBox={`0 0 128 128`}\n        />\n      </div>\n\n      {logs.length > 0 && (\n        <div className=\"mt-6 border-t pt-4 text-xs\">\n          <h2 className=\"font-bold text-gray-600 mb-2\">Recent Activity</h2>\n          <ul className=\"text-gray-700\">\n            {logs.map((log, idx) => (\n              <li key={idx}>\n                [{new Date(log.timestamp).toLocaleString()}] {log.action_type} by{' '}\n                {log.triggered_by || '—'}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  ) : (\n    <p className=\"p-6\">Loading...</p>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/profile.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/queue.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/referrals.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.","line":50,"column":6,"nodeType":"ArrayExpression","endLine":50,"endColumn":12,"suggestions":[{"desc":"Update the dependencies array to be: [role, router]","fix":{"range":[1532,1538],"text":"[role, router]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useCanonicalRole } from '@/hooks/useCanonicalRole';\nimport { useRouter } from 'next/navigation';\nimport { supabase } from '@/admin/lib/supabaseClient';\n\nconst DEBUG = process.env.NEXT_PUBLIC_DEBUG_AUTH === 'true';\n\nexport default function ReferralsPage() {\n  const [users, setUsers] = useState<any[]>([]);\n  const [profiles, setProfiles] = useState<Record<string, any>>({});\n  const [error, setError] = useState('');\n  const { role } = useCanonicalRole();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (role === null) return;\n\n    if (role !== 'admin') {\n      console.log('🔐 [referrals] Redirecting to login (Reason: Unauthorized)');\n      router.push('/login?error=unauthorized');\n      return;\n    }\n\n    const fetchData = async () => {\n      if (DEBUG) console.log('[👥 Fetching Users + Profiles]');\n\n      const { data: userData, error: userError } = await supabase.auth.admin.listUsers();\n      if (userError) {\n        setError(userError.message);\n        return;\n      }\n      setUsers(userData?.users || []);\n\n      const { data: profileData } = await supabase\n        .from('user_profiles')\n        .select('user_id, role, referrer_id');\n\n      const profileMap: Record<string, any> = {};\n      profileData?.forEach((p) => {\n        profileMap[p.user_id] = { role: p.role, referrer_id: p.referrer_id };\n      });\n      setProfiles(profileMap);\n\n      if (DEBUG) console.log('[✅ Profiles Loaded]', profileMap);\n    };\n\n    fetchData();\n  }, [role]);\n\n  const referrers = users.filter((u) => profiles[u.id]?.role === 'affiliate_referrer');\n\n  return (\n    <div className=\"p-6 text-white\">\n      <h1 className=\"text-2xl font-bold mb-4\">Referral Dashboard</h1>\n      {error && <p className=\"text-red-500 text-sm mb-4\">{error}</p>}\n      <table className=\"w-full text-sm text-left text-gray-300 bg-gray-800 rounded overflow-hidden\">\n        <thead className=\"bg-gray-700 text-gray-100 uppercase text-xs tracking-wide\">\n          <tr>\n            <th className=\"px-4 py-2\">Referrer</th>\n            <th className=\"px-4 py-2\">Resellers Referred</th>\n            <th className=\"px-4 py-2\">Est. Sites Claimed</th>\n            <th className=\"px-4 py-2\">Est. Earnings</th>\n          </tr>\n        </thead>\n        <tbody>\n          {referrers.map((r, i) => {\n            const refId = r.id;\n            const resellers = users.filter(\n              (u) => profiles[u.id]?.referrer_id === refId && profiles[u.id]?.role === 'reseller'\n            );\n            const estimatedSites = resellers.length * 10;\n            const estimatedEarnings = estimatedSites * 49 * 0.1;\n\n            return (\n              <tr key={r.id} className={i % 2 === 0 ? 'bg-gray-800' : 'bg-gray-900'}>\n                <td className=\"px-4 py-2\">{r.email}</td>\n                <td className=\"px-4 py-2\">{resellers.length}</td>\n                <td className=\"px-4 py-2\">{estimatedSites}</td>\n                <td className=\"px-4 py-2\">${estimatedEarnings.toFixed(2)}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/register.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'router' is assigned a value but never used.","line":6,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":6,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { supabase } from '@/admin/lib/supabaseClient';\n\nexport default function RegisterPage() {\n  const router = useRouter();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [referrerId, setReferrerId] = useState<string | null>(null);\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    const ref = new URLSearchParams(window.location.search).get('ref');\n    if (ref) {\n      localStorage.setItem('referrer_id', ref);\n      setReferrerId(ref);\n    }\n  }, []);\n\n  const register = async (e: any) => {\n    e.preventDefault();\n\n    const { error } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: {\n          role: 'reseller',\n          referrer_id: localStorage.getItem('referrer_id') || null,\n        },\n      },\n    });\n\n    if (error) {\n      setMessage(error.message);\n    } else {\n      setMessage('Registration successful! Check your email.');\n      setEmail('');\n      setPassword('');\n    }\n  };\n\n  return (\n    <div className=\"p-6 max-w-md mx-auto text-white\">\n      <h1 className=\"text-2xl font-bold mb-4\">Register</h1>\n      <form onSubmit={register} className=\"space-y-4\">\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          className=\"w-full px-3 py-2 rounded bg-gray-700 border border-gray-600\"\n          required\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          className=\"w-full px-3 py-2 rounded bg-gray-700 border border-gray-600\"\n          required\n        />\n        {referrerId && (\n          <p className=\"text-xs text-gray-400\">Signing up via referral: {referrerId}</p>\n        )}\n        <button\n          type=\"submit\"\n          className=\"w-full bg-blue-600 hover:bg-blue-700 px-3 py-2 rounded text-white\"\n        >\n          Create Account\n        </button>\n        {message && <p className=\"text-sm text-green-400 mt-2\">{message}</p>}\n      </form>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/reports/page.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\n\nexport default function ReportsDashboardExtended() {\n  const [log, setLog] = useState('');\n  const [storage, setStorage] = useState<{ [key: string]: number }>({});\n  const [dates, setDates] = useState<{ oldest: string; newest: string }>({\n    oldest: '',\n    newest: '',\n  });\n  const [email, setEmail] = useState('analytics@quicksites.ai');\n  const [nightly, setNightly] = useState(true);\n  const [weekly, setWeekly] = useState(true);\n\n  useEffect(() => {\n    fetch('/reports/activity.log')\n      .then((res) => res.text())\n      .then(setLog);\n\n    fetch('/reports/analytics/index.json')\n      .then((res) => res.json())\n      .then((files) => {\n        const csvs = files.filter((f: string) => f.endsWith('.csv')).length;\n        const pdfs = files.filter((f: string) => f.endsWith('.pdf')).length;\n        const sorted = files.filter((f: string) => f.match(/_(\\d{4}-\\d{2}-\\d{2})/)).sort();\n        const oldest = sorted[0]?.match(/_(\\d{4}-\\d{2}-\\d{2})/)?.[1] || '';\n        const newest = sorted.at(-1)?.match(/_(\\d{4}-\\d{2}-\\d{2})/)?.[1] || '';\n        setStorage({ csvs, pdfs });\n        setDates({ oldest, newest });\n      });\n  }, []);\n\n  const confirmDelete = () => {\n    if (window.confirm('Are you sure? This will delete all CSVs, PDFs, and previews.')) {\n      // You would replace this with a server call to delete files\n      console.log('🧹 Deleting all archive files...');\n    }\n  };\n\n  return (\n    <div className=\"p-6 text-text\">\n      <h1 className=\"text-2xl font-bold mb-6\">📁 Reports Dashboard</h1>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"bg-zinc-800 p-4 rounded shadow\">\n          <h2 className=\"text-lg font-semibold mb-2\">📋 Activity Log</h2>\n          <pre className=\"text-sm overflow-auto whitespace-pre-wrap max-h-[300px] bg-black p-3 rounded\">\n            {log || 'Loading...'}\n          </pre>\n        </div>\n\n        <div className=\"bg-zinc-800 p-4 rounded shadow space-y-3\">\n          <h2 className=\"text-lg font-semibold\">📦 Storage Summary</h2>\n          <ul className=\"text-sm space-y-1\">\n            <li>CSV Files: {storage.csvs ?? '—'}</li>\n            <li>PDF Summaries: {storage.pdfs ?? '—'}</li>\n            <li>Oldest Entry: {dates.oldest}</li>\n            <li>Newest Entry: {dates.newest}</li>\n          </ul>\n\n          <h3 className=\"pt-4 font-semibold\">⚙️ Automation Settings</h3>\n          <div className=\"space-y-2\">\n            <label className=\"flex items-center gap-2\">\n              <input type=\"checkbox\" checked={nightly} onChange={() => setNightly(!nightly)} />\n              Enable Nightly Exports\n            </label>\n            <label className=\"flex items-center gap-2\">\n              <input type=\"checkbox\" checked={weekly} onChange={() => setWeekly(!weekly)} />\n              Enable Weekly Summary\n            </label>\n            <label className=\"block text-sm mt-2\">Recipient Email</label>\n            <input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"w-full px-2 py-1 rounded bg-zinc-900 border border-zinc-700\"\n            />\n            <button className=\"text-sm px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 mt-1\">\n              Save Email\n            </button>\n          </div>\n\n          <div className=\"pt-4\">\n            <button\n              className=\"text-sm px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700\"\n              onClick={confirmDelete}\n            >\n              🗑 Delete All Archives\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/request-access.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/reset.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'session' is defined but never used. Allowed unused args must match /^_/u.","line":13,"column":51,"nodeType":null,"messageId":"unusedVar","endLine":13,"endColumn":58}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// admin/pages/reset.tsx\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { supabase } from '@/admin/lib/supabaseClient';\n\nexport default function ResetPassword() {\n  const [password, setPassword] = useState('');\n  const [status, setStatus] = useState('');\n  const router = useRouter();\n\n  useEffect(() => {\n    supabase.auth.onAuthStateChange(async (event, session) => {\n      if (event === 'PASSWORD_RECOVERY') {\n        setStatus('Ready to reset password.');\n      }\n    });\n  }, []);\n\n  const updatePassword = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const { error } = await supabase.auth.updateUser({ password });\n    if (error) {\n      setStatus(`Error: ${error.message}`);\n    } else {\n      setStatus('Password updated! Redirecting...');\n      setTimeout(() => router.push('/login'), 2000);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 px-4\">\n      <form onSubmit={updatePassword} className=\"bg-white p-6 rounded shadow-md w-full max-w-sm\">\n        <h2 className=\"text-xl font-bold mb-4\">Reset Password</h2>\n        <p className=\"text-sm mb-4 text-gray-600\">{status}</p>\n        <input\n          type=\"password\"\n          placeholder=\"New password\"\n          className=\"w-full border px-3 py-2 mb-4 rounded\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n        <button type=\"submit\" className=\"w-full bg-blue-600 text-white py-2 rounded\">\n          Update Password\n        </button>\n      </form>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/roles.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/security/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/security/timeline.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/seed.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/settings/nav.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/shared/[id].tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":1,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":1,"endColumn":19},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":75,"column":13,"nodeType":"JSXOpeningElement","endLine":79,"endColumn":15},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·variant=\"outline\"·onClick={()·=>·(window.location.href·=·`/templates/new?from=${id}`)}` with `⏎··········variant=\"outline\"⏎··········onClick={()·=>·(window.location.href·=·`/templates/new?from=${id}`)}⏎········`","line":97,"column":16,"nodeType":null,"messageId":"replace","endLine":97,"endColumn":103,"fix":{"range":[3048,3135],"text":"\n          variant=\"outline\"\n          onClick={() => (window.location.href = `/templates/new?from=${id}`)}\n        "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import { useRouter, useSearchParams } from 'next/navigation';\nimport { useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport QRCode from 'qrcode';\nimport Image from 'next/image';\nimport TemplatePreview from '@/components/admin/templates/template-preview';\nimport { Button } from '@/components/ui';\nimport { generateSocialCard } from '@/admin/lib/generateSocialCard';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport default function SharedSnapshotPage() {\n  const searchParams = useSearchParams();\n  const id = searchParams?.get('id') as string;\n  const v = searchParams?.get('v') as string;\n\n  const [template, setTemplate] = useState<any>(null);\n  const [qrDataUrl, setQrDataUrl] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!id) return;\n\n    QRCode.toDataURL(`${window.location.origin}/shared/${id}`).then(setQrDataUrl);\n\n    const loadData = async () => {\n      let res;\n      if (v) {\n        res = await supabase\n          .from('template_versions')\n          .select('full_data, template_name, commit_message')\n          .eq('id', v)\n          .single();\n      } else {\n        res = await supabase\n          .from('snapshots')\n          .select(\n            'data, template_name, editor_email, shared_at, thumbnail_url, theme, brand, color_scheme'\n          )\n          .eq('id', id)\n          .single();\n      }\n      if (res.data) setTemplate(res.data);\n    };\n\n    loadData();\n  }, [id, v]);\n\n  const isDark = template?.theme === 'dark';\n  const brand = template?.brand || 'blue';\n\n  const themeClasses = isDark ? 'bg-gray-900 text-white' : 'bg-white text-gray-900';\n\n  const brandClass =\n    brand === 'green' ? 'text-green-400' : brand === 'red' ? 'text-red-400' : 'text-blue-400';\n\n  if (!template) return <div className=\"text-white p-10\">Loading shared preview...</div>;\n\n  return (\n    <div\n      className={`min-h-screen px-4 sm:px-6 py-10 max-w-screen-lg mx-auto space-y-6 ${themeClasses}`}\n    >\n      <h1 className={`text-2xl font-bold ${brandClass}`}>Shared Snapshot</h1>\n\n      <div className=\"flex flex-wrap items-center gap-6\">\n        {qrDataUrl && (\n          <div>\n            <Image src={qrDataUrl} alt=\"QR code\" width={120} height={120} />\n          </div>\n        )}\n        {template?.thumbnail_url && (\n          <div className=\"max-w-[320px]\">\n            <img\n              src={template.thumbnail_url}\n              alt=\"Snapshot preview\"\n              className=\"rounded shadow border border-gray-600\"\n            />\n          </div>\n        )}\n      </div>\n\n      <div\n        className=\"border rounded bg-white dark:bg-gray-800 shadow-md overflow-x-auto p-4\"\n        id=\"preview-capture\"\n      >\n        <TemplatePreview\n          data={template.data}\n          theme={template.theme}\n          brand={template.brand}\n          colorScheme={template.color_scheme}\n        />\n      </div>\n\n      <div className=\"flex flex-wrap gap-3 mt-6 justify-between\">\n        <Button variant=\"outline\" onClick={() => (window.location.href = `/templates/new?from=${id}`)}>\n          Remix This\n        </Button>\n        <Button onClick={() => generateSocialCard({})} variant=\"secondary\">\n          Download PNG\n        </Button>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/sites/[slug]/page.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··params,⏎}:·{⏎··params:·{·slug:·string·};⏎` with `·params·}:·{·params:·{·slug:·string·}·`","line":14,"column":37,"nodeType":null,"messageId":"replace","endLine":18,"endColumn":1,"fix":{"range":[404,448],"text":" params }: { params: { slug: string } "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎······'*,·snapshots(data),·branding_profiles(name,·theme,·brand,·accent_color,·logo_url)'⏎····` with `'*,·snapshots(data),·branding_profiles(name,·theme,·brand,·accent_color,·logo_url)'`","line":23,"column":13,"nodeType":null,"messageId":"replace","endLine":25,"endColumn":5,"fix":{"range":[562,657],"text":"'*, snapshots(data), branding_profiles(name, theme, brand, accent_color, logo_url)'"}},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":42,"column":13,"nodeType":"JSXOpeningElement","endLine":46,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"// app/admin/sites/[slug]/page.tsx\n\nimport { createClient } from '@supabase/supabase-js';\n\nexport const runtime = 'nodejs';\nexport const dynamic = 'force-dynamic';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\n// ✅ Type directly and do not try to match PageProps — Next infers this correctly\nexport default async function Page({\n  params,\n}: {\n  params: { slug: string };\n}) {\n  const { slug } = params;\n\n  const { data: site } = await supabase\n    .from('published_sites')\n    .select(\n      '*, snapshots(data), branding_profiles(name, theme, brand, accent_color, logo_url)'\n    )\n    .eq('slug', slug)\n    .eq('status', 'published')\n    .single();\n\n  if (!site) {\n    return <p className=\"p-6 text-red-600\">Site not found</p>;\n  }\n\n  const themeColor = site.branding_profiles?.accent_color || '#111';\n\n  return (\n    <div className=\"min-h-screen p-6\" style={{ backgroundColor: `${themeColor}15` }}>\n      <div className=\"max-w-3xl mx-auto bg-white p-6 rounded shadow\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h1 className=\"text-xl font-bold\">{site.branding_profiles?.name}</h1>\n          {site.branding_profiles?.logo_url && (\n            <img\n              src={site.branding_profiles.logo_url}\n              className=\"w-10 h-10 rounded-full\"\n              alt=\"Logo\"\n            />\n          )}\n        </div>\n\n        <pre className=\"text-sm bg-gray-100 p-4 rounded whitespace-pre-wrap\">\n          {JSON.stringify(site.snapshots?.data, null, 2)}\n        </pre>\n\n        <p className=\"mt-4 text-xs text-gray-400 text-right\">\n          quicksites.ai — viewed {new Date().toLocaleDateString()}\n        </p>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/sites/dashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/sites/page.tsx","messages":[{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":44,"column":15,"nodeType":"JSXOpeningElement","endLine":48,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\n// import Page from '@/components/layout/page';\n// import AdminLayout from '@/components/admin/admin-layout';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport default function SiteDirectory() {\n  const [sites, setSites] = useState<any[]>([]);\n\n  useEffect(() => {\n    supabase\n      .from('public_sites') // ⚠️ was 'published_sites' before — confirm table name\n      .select('*, branding_profiles(name, logo_url)')\n      .eq('status', 'published')\n      .eq('is_public', true)\n      .order('published_at', { ascending: false })\n      .then(({ data }) => setSites(data || []));\n  }, []);\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6\">\n      <h1 className=\"text-2xl font-bold mb-4\">Live Public Sites</h1>\n      <ul className=\"space-y-4\">\n        {sites.map((site) => (\n          <li key={site.id} className=\"border p-4 rounded flex items-center justify-between\">\n            <div>\n              <div className=\"text-sm font-semibold\">{site.branding_profiles?.name}</div>\n              <a\n                className=\"text-blue-600 text-sm\"\n                href={`/sites/${site.slug}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {site.slug}.quicksites.ai\n              </a>\n            </div>\n            {site.branding_profiles?.logo_url && (\n              <img\n                src={site.branding_profiles.logo_url}\n                alt=\"Logo\"\n                className=\"w-10 h-10 rounded-full object-cover\"\n              />\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\n// 👇 Integrate with sidebar layout\n// SiteDirectory.getLayout = (page: React.ReactNode) => (\n//   <AdminSidebarLayout>{page}</AdminSidebarLayout>\n// );\n// SiteDirectory.getLayout = (page: any) => <AdminLayout>{page}</AdminLayout>;\nSiteDirectory.getLayout = (page: any) => <>{page}</>;\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/start-campaign/page.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `process.env.NEXT_PUBLIC_SUPABASE_URL!,·process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!` with `⏎··process.env.NEXT_PUBLIC_SUPABASE_URL!,⏎··process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!⏎`","line":16,"column":31,"nodeType":null,"messageId":"replace","endLine":16,"endColumn":112,"fix":{"range":[751,832],"text":"\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n"}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'clearDraft' is assigned a value but never used.","line":26,"column":30,"nodeType":null,"messageId":"unusedVar","endLine":26,"endColumn":40},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `draft.industry·||·industryParam·?·industryParam.charAt(0).toUpperCase()·+·industryParam.slice(1)·:·''` with `⏎····draft.industry·||·industryParam⏎······?·industryParam.charAt(0).toUpperCase()·+·industryParam.slice(1)⏎······:·''⏎··`","line":30,"column":44,"nodeType":null,"messageId":"replace","endLine":30,"endColumn":145,"fix":{"range":[1501,1602],"text":"\n    draft.industry || industryParam\n      ? industryParam.charAt(0).toUpperCase() + industryParam.slice(1)\n      : ''\n  "}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'validationErrors' is assigned a value but never used.","line":49,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":49,"endColumn":21},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'submit' is assigned a value but never used.","line":50,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":50,"endColumn":11},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'leadsLoading' is assigned a value but never used.","line":54,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":54,"endColumn":17},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'setName'. Either include it or remove the dependency array.","line":71,"column":6,"nodeType":"ArrayExpression","endLine":71,"endColumn":32,"suggestions":[{"desc":"Update the dependencies array to be: [city, nameWasManuallySet, setName]","fix":{"range":[2792,2818],"text":"[city, nameWasManuallySet, setName]"}}]},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `⏎····`","line":101,"column":34,"nodeType":null,"messageId":"insert","endLine":101,"endColumn":34,"fix":{"range":[3539,3539],"text":"\n    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `······`","line":102,"column":1,"nodeType":null,"messageId":"replace","endLine":102,"endColumn":5,"fix":{"range":[3548,3552],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `:·leads` with `··:·leads⏎··`","line":103,"column":5,"nodeType":null,"messageId":"replace","endLine":103,"endColumn":12,"fix":{"range":[3646,3653],"text":"  : leads\n  "}},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'filteredLeads'. Either include it or remove the dependency array.","line":107,"column":6,"nodeType":"ArrayExpression","endLine":107,"endColumn":23,"suggestions":[{"desc":"Update the dependencies array to be: [filteredLeads, industry, leads]","fix":{"range":[3775,3792],"text":"[filteredLeads, industry, leads]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'toggleLead'. Either include it or remove the dependency array.","line":121,"column":6,"nodeType":"ArrayExpression","endLine":121,"endColumn":62,"suggestions":[{"desc":"Update the dependencies array to be: [filteredLeads, cityLat, cityLon, radius, selectedLeads, toggleLead]","fix":{"range":[4184,4240],"text":"[filteredLeads, cityLat, cityLon, radius, selectedLeads, toggleLead]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'industry' and 'updateDraft'. Either include them or remove the dependency array.","line":132,"column":6,"nodeType":"ArrayExpression","endLine":132,"endColumn":13,"suggestions":[{"desc":"Update the dependencies array to be: [industry, leads, updateDraft]","fix":{"range":[4595,4602],"text":"[industry, leads, updateDraft]"}}]},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎`","line":176,"column":1,"nodeType":null,"messageId":"delete","endLine":177,"endColumn":1,"fix":{"range":[6008,6009],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `{ind.charAt(0).toUpperCase()·+·ind.slice(1)}` with `⏎··············{ind.charAt(0).toUpperCase()·+·ind.slice(1)}⏎············`","line":189,"column":43,"nodeType":null,"messageId":"replace","endLine":189,"endColumn":87,"fix":{"range":[6468,6512],"text":"\n              {ind.charAt(0).toUpperCase() + ind.slice(1)}\n            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `········`","line":192,"column":1,"nodeType":null,"messageId":"delete","endLine":192,"endColumn":9,"fix":{"range":[6554,6562],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎`","line":217,"column":1,"nodeType":null,"messageId":"delete","endLine":218,"endColumn":1,"fix":{"range":[7310,7311],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `········`","line":235,"column":1,"nodeType":null,"messageId":"delete","endLine":235,"endColumn":9,"fix":{"range":[7907,7915],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":10,"source":"// app/admin/start-campaign/page.tsx\n'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'next/navigation';\nimport { useCampaignForm } from '@/hooks/useCampaignForm';\nimport { useSelectedLeadsWrapper } from '@/hooks/useSelectedLeadsWrapper';\nimport { useRadiusFilter } from '@/hooks/useRadiusFilter';\nimport { useSavedCampaignDraft } from '@/hooks/useSavedCampaignDraft';\nimport LeadSelectorWithRadius from '@/components/admin/campaigns/lead-selector-with-radius';\nimport { getLatLonForCityState } from '@/lib/utils/geocode';\nimport { Lead } from '@/types/lead.types';\nimport { getDistanceMiles } from '@/lib/utils/distance';\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabase = createClient(process.env.NEXT_PUBLIC_SUPABASE_URL!, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!);\n\nexport default function StartCampaign() {\n  const searchParams = useSearchParams();\n\n  const cityParam = searchParams?.get('city') || '';\n  const stateParam = searchParams?.get('state')?.trim().toUpperCase() || '';\n  const industryParam = searchParams?.get('industry')?.trim().toLowerCase() || '';\n  const initialLeadIds = searchParams?.get('initialLeadIds')?.split(',').filter(Boolean) || [];\n\n  const [draft, updateDraft, clearDraft] = useSavedCampaignDraft();\n\n  const [city, setCity] = useState(draft.city || cityParam);\n  const [state, setState] = useState(draft.state || stateParam ? stateParam.toUpperCase() : '');\n  const [industry, setIndustry] = useState(draft.industry || industryParam ? industryParam.charAt(0).toUpperCase() + industryParam.slice(1) : '');\n  const [alt1, setAlt1] = useState(draft.alt1 || '');\n  const [alt2, setAlt2] = useState(draft.alt2 || '');\n  const [silentMode, setSilentMode] = useState(draft.silentMode ?? false);\n  const [published, setPublished] = useState(false);\n  const [cityLat, setCityLat] = useState<number | null>(null);\n  const [cityLon, setCityLon] = useState<number | null>(null);\n  const [availableIndustries, setAvailableIndustries] = useState<string[]>([]);\n\n  const {\n    name,\n    setName,\n    nameWasManuallySet,\n    setNameWasManuallySet,\n    startsAt,\n    setStartsAt,\n    endsAt,\n    setEndsAt,\n    error,\n    validationErrors,\n    submit,\n    leads,\n    selectedLeads,\n    toggleLead,\n    leadsLoading,\n  } = useCampaignForm(city, state, initialLeadIds);\n\n  const { setSelectedLeadIds } = useSelectedLeadsWrapper(selectedLeads, (id) => {\n    toggleLead(id);\n    const updated = selectedLeads.includes(id)\n      ? selectedLeads.filter((x) => x !== id)\n      : [...selectedLeads, id];\n    updateDraft({ selectedLeadIds: updated });\n  });\n\n  const { radius, setRadius } = useRadiusFilter(50);\n\n  useEffect(() => {\n    if (!nameWasManuallySet && city) {\n      setName(`${city} Campaign`);\n    }\n  }, [city, nameWasManuallySet]);\n\n  useEffect(() => {\n    async function fetchLatLon() {\n      if (city && state) {\n        const coords = await getLatLonForCityState(city, state);\n        if (coords) {\n          setCityLat(coords.lat);\n          setCityLon(coords.lon);\n        }\n      }\n    }\n    fetchLatLon();\n  }, [city, state]);\n\n  useEffect(() => {\n    async function fetchIndustries() {\n      try {\n        const res = await fetch('/api/industries');\n        const data = await res.json();\n        if (Array.isArray(data)) {\n          setAvailableIndustries(data.sort());\n        }\n      } catch (err) {\n        console.error('Failed to load industries:', err);\n      }\n    }\n    fetchIndustries();\n  }, []);\n\n  const filteredLeads: Lead[] = (industry\n    ? leads.filter((l) => l.industry?.trim().toLowerCase() === industry.trim().toLowerCase())\n    : leads) as Lead[];\n\n  useEffect(() => {\n    console.log('[🔍 Leads Debug]', { industry, allLeads: leads, filteredLeads });\n  }, [industry, leads]);\n\n  useEffect(() => {\n    if (filteredLeads.length > 0 && cityLat && cityLon && selectedLeads.length === 0) {\n      const inRadius = filteredLeads.find(\n        (l) =>\n          l.address_lat &&\n          l.address_lon &&\n          getDistanceMiles(l.address_lat, l.address_lon, cityLat, cityLon) <= radius\n      );\n      if (inRadius) {\n        toggleLead(inRadius.id);\n      }\n    }\n  }, [filteredLeads, cityLat, cityLon, radius, selectedLeads]);\n\n  useEffect(() => {\n    if ((!industry || industry.length < 2) && leads.length > 0) {\n      const firstWithIndustry = leads.find((l) => l.industry);\n      if (firstWithIndustry?.industry) {\n        const normalized = firstWithIndustry.industry.trim();\n        setIndustry(normalized);\n        updateDraft({ industry: normalized });\n      }\n    }\n  }, [leads]);\n\n  const user_id = supabase.auth.getUser().then(({ data: { user } }) => user?.id || '');\n  return (\n    <div className=\"p-6 max-w-3xl mx-auto text-white\">\n      <h1 className=\"text-2xl font-bold mb-4\">Start Campaign</h1>\n      <form\n        onSubmit={async (e) => {\n          e.preventDefault();\n          try {\n            const res = await fetch('/api/campaigns/create', {\n              method: 'POST',\n              body: JSON.stringify({\n                name,\n                city,\n                state,\n                industry,\n                starts_at: startsAt,\n                ends_at: endsAt,\n                alt_domains: [alt1, alt2].filter(Boolean),\n                lead_ids: selectedLeads,\n                city_lat: cityLat,\n                city_lon: cityLon,\n                silent_mode: silentMode,\n                status: published ? 'published' : 'draft',\n                created_by: user_id,\n                owner_id: user_id,\n              }),\n            });\n\n            const json = await res.json();\n\n            if (!res.ok || json.error) {\n              console.error('❌ Launch failed:', json.error || 'Unknown error');\n              return;\n            }\n\n            window.location.href = '/admin/campaigns';\n          } catch (err) {\n            console.error('❌ Network error while launching campaign:', err);\n          }\n        }}\n        className=\"space-y-4\"\n      >\n\n        {/* // industry */}\n        <select\n          value={industry}\n          onChange={(e) => {\n            const val = e.target.value;\n            setIndustry(val);\n            updateDraft({ industry: val });\n          }}\n          className=\"w-full px-3 py-2 rounded bg-zinc-800 border border-zinc-600\"\n        >\n          <option value=\"\">Select Industry</option>\n          {availableIndustries.map((ind) => (\n            <option key={ind} value={ind}>{ind.charAt(0).toUpperCase() + ind.slice(1)}</option>\n          ))}\n        </select>\n        \n        {/* // city and state */}\n        <div className=\"flex gap-4\">\n          <input\n            placeholder=\"City\"\n            value={city}\n            onChange={(e) => {\n              const val = e.target.value;\n              setCity(val);\n              updateDraft({ city: val });\n            }}\n            className=\"w-full px-3 py-2 rounded bg-zinc-800 border border-zinc-600\"\n          />\n          <input\n            placeholder=\"State\"\n            value={state}\n            onChange={(e) => {\n              const val = e.target.value;\n              setState(val);\n              updateDraft({ state: val });\n            }}\n            className=\"w-full px-3 py-2 rounded bg-zinc-800 border border-zinc-600\"\n          />\n        </div>\n\n\n        {/* // lead selector */}\n        {filteredLeads.length > 0 ? (\n          <LeadSelectorWithRadius\n            leads={filteredLeads}\n            selectedLeadIds={selectedLeads}\n            setSelectedLeadIds={setSelectedLeadIds}\n            cityLat={cityLat}\n            cityLon={cityLon}\n            radius={radius}\n            setRadius={setRadius}\n            industry={industry}\n          />\n        ) : (\n          <p className=\"text-sm text-zinc-400 border border-zinc-700 rounded p-3 bg-zinc-800\">\n            No leads found for this location and industry.\n          </p>\n        )}\n        \n        {/* // campaign name */}\n        <input\n          placeholder=\"Campaign Name\"\n          value={name}\n          onChange={(e) => {\n            setName(e.target.value);\n            setNameWasManuallySet(true);\n          }}\n          className=\"w-full px-3 py-2 rounded bg-zinc-800 border border-zinc-600\"\n        />\n\n        {/* // alt domains */}\n        <div className=\"flex gap-4\">\n          <input\n            placeholder=\"Alt Domain 1\"\n            value={alt1}\n            onChange={(e) => {\n              const val = e.target.value;\n              setAlt1(val);\n              updateDraft({ alt1: val });\n            }}\n            className=\"w-full px-3 py-2 rounded bg-zinc-800 border border-zinc-600\"\n          />\n          <input\n            placeholder=\"Alt Domain 2\"\n            value={alt2}\n            onChange={(e) => {\n              const val = e.target.value;\n              setAlt2(val);\n              updateDraft({ alt2: val });\n            }}\n            className=\"w-full px-3 py-2 rounded bg-zinc-800 border border-zinc-600\"\n          />\n        </div>\n\n        {/* // starts at and ends at */}\n        <div className=\"flex gap-4\">\n          <input\n            type=\"datetime-local\"\n            value={startsAt}\n            onChange={(e) => setStartsAt(e.target.value)}\n            className=\"w-full px-3 py-2 rounded bg-zinc-800 border border-zinc-600\"\n          />\n          <input\n            type=\"datetime-local\"\n            value={endsAt}\n            onChange={(e) => setEndsAt(e.target.value)}\n            className=\"w-full px-3 py-2 rounded bg-zinc-800 border border-zinc-600\"\n          />\n        </div>\n\n        {/* // silent mode */}\n        <label className=\"flex items-center gap-2 text-sm\">\n          <input\n            type=\"checkbox\"\n            checked={silentMode}\n            onChange={(e) => {\n              const checked = e.target.checked;\n              setSilentMode(checked);\n              updateDraft({ silentMode: checked });\n            }}\n          />\n          Silent Mode (no notifications)\n        </label>\n\n        {/* // published */}\n        <label className=\"flex items-center gap-2 text-sm\">\n          <input\n            type=\"checkbox\"\n            checked={published}\n            onChange={(e) => setPublished(e.target.checked)}\n          />\n          Published\n        </label>\n\n        {/* // error */}\n        {error && (\n          <div className=\"text-red-400 text-sm border border-red-600 p-2 rounded\">⚠️ {error}</div>\n        )}\n\n        {/* // launch campaign */}\n        <button\n          type=\"submit\"\n          className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n        >\n          Launch Campaign\n        </button>\n      </form>\n    </div>\n  );\n}\n\nStartCampaign.getLayout = function getLayout(page: React.ReactNode) {\n  return <>{page}</>;\n};\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/templates/[slug]/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/templates/new/page.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":68,"column":5,"nodeType":null,"messageId":"delete","endLine":68,"endColumn":7,"fix":{"range":[1676,1678],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":69,"column":1,"nodeType":null,"messageId":"delete","endLine":69,"endColumn":3,"fix":{"range":[1694,1696],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":70,"column":1,"nodeType":null,"messageId":"delete","endLine":70,"endColumn":3,"fix":{"range":[1730,1732],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":71,"column":5,"nodeType":null,"messageId":"delete","endLine":71,"endColumn":7,"fix":{"range":[1800,1802],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `⏎`","line":73,"column":2,"nodeType":null,"messageId":"insert","endLine":73,"endColumn":2,"fix":{"range":[1811,1811],"text":"\n"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":5,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'next/navigation';\nimport { createClient } from '@supabase/supabase-js';\nimport TemplateEditor from '@/components/admin/templates/template-editor';\nimport { TemplateSnapshot } from '@/types/template';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\ntype Snapshot = {\n  data: any;\n  theme?: string;\n  brand?: string;\n  color_scheme?: string;\n  template_name?: string;\n};\n\nexport default function NewTemplatePage() {\n  const searchParams = useSearchParams();\n  const from = searchParams?.get('from') ?? '';\n  const [initialData, setInitialData] = useState<Snapshot | null>(null);\n\n  useEffect(() => {\n    async function loadSnapshot() {\n      if (!from) return;\n\n      const { data: snapshot, error } = await supabase\n        .from('snapshots')\n        .select('data, theme, brand, color_scheme')\n        .eq('id', from)\n        .maybeSingle();\n\n      if (error || !snapshot) {\n        console.warn('⚠️ Could not load snapshot:', error?.message);\n        return;\n      }\n\n      const {\n        data: { user },\n      } = await supabase.auth.getUser();\n\n      if (user?.id) {\n        await supabase.from('remix_events').insert([\n          {\n            original_snapshot_id: from,\n            user_id: user.id,\n          },\n        ]);\n      }\n\n      setInitialData({\n        template_name: 'Untitled (Remix)',\n        color_scheme: snapshot.color_scheme,\n        theme: snapshot.theme,\n        brand: snapshot.brand,\n        data: snapshot.data,\n      });\n    }\n\n    loadSnapshot();\n  }, [from]);\n\n  return (\n      <TemplateEditor\n        templateName=\"new-template\"\n        initialData={initialData as TemplateSnapshot | undefined}\n      />\n  );\n}","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/templates/page.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·searchParams·}:·{·searchParams:·Promise<{·date?:·string·}>·` with `⏎··searchParams,⏎}:·{⏎··searchParams:·Promise<{·date?:·string·}>;⏎`","line":7,"column":51,"nodeType":null,"messageId":"replace","endLine":7,"endColumn":111,"fix":{"range":[254,314],"text":"\n  searchParams,\n}: {\n  searchParams: Promise<{ date?: string }>;\n"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎····.from('templates')⏎····.select('*')⏎····` with `.from('templates').select('*')`","line":15,"column":23,"nodeType":null,"messageId":"replace","endLine":18,"endColumn":5,"fix":{"range":[610,655],"text":".from('templates').select('*')"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `(⏎····<TemplatesIndexTable⏎······templates={templates·||·[]}⏎······selectedFilter={dateParam}⏎····/>⏎··)` with `<TemplatesIndexTable·templates={templates·||·[]}·selectedFilter={dateParam}·/>`","line":30,"column":10,"nodeType":null,"messageId":"replace","endLine":35,"endColumn":4,"fix":{"range":[926,1030],"text":"<TemplatesIndexTable templates={templates || []} selectedFilter={dateParam} />"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"'use server';\n\nimport { getFromDate } from '@/lib/getFromDate';\nimport TemplatesIndexTable from '@/components/admin/templates/templates-index-table';\nimport { getSupabase } from '@/lib/supabase/server';\n\nexport default async function TemplatesIndexPage({ searchParams }: { searchParams: Promise<{ date?: string }> }) {\n  // const supabase = createServerComponentClient<Database>({ cookies: () => undefined });\n  const supabase = await getSupabase();\n\n  const resolvedParams = await searchParams;\n  const dateParam = resolvedParams?.date || '';\n  const fromDate = getFromDate(dateParam);\n\n  let query = supabase\n    .from('templates')\n    .select('*')\n    .order('updated_at', { ascending: false });\n\n  if (fromDate) {\n    query = query.gte('updated_at', fromDate.toISOString());\n  }\n\n  const { data: templates, error } = await query;\n\n  if (error) {\n    console.error('Error loading templates:', error.message);\n  }\n\n  return (\n    <TemplatesIndexTable\n      templates={templates || []}\n      selectedFilter={dateParam}\n    />\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/the-grid/page.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":14,"column":5,"nodeType":null,"messageId":"delete","endLine":14,"endColumn":7,"fix":{"range":[347,349],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":15,"column":7,"nodeType":null,"messageId":"delete","endLine":15,"endColumn":9,"fix":{"range":[388,390],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":16,"column":1,"nodeType":null,"messageId":"delete","endLine":16,"endColumn":3,"fix":{"range":[405,407],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"// app/admin/the-grid/page.tsx\n'use client';\n\nimport dynamic from 'next/dynamic';\n// import AuthGuard from '@/components/admin/auth-guard';\n\nconst DynamicMap = dynamic(() => import('@/components/admin/grid-map'), {\n  ssr: false,\n});\n\nexport default function TheGridPage() {\n  return (\n    // <AuthGuard roles={['admin', 'owner', 'reseller']}>\n      <div className=\"p-6 text-white\">\n        <DynamicMap />\n      </div>\n    // </AuthGuard>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/theme-editor/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/tokens/logs.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has an unnecessary dependency: 'supabase'. Either exclude it or remove the dependency array. Outer scope values like 'supabase' aren't valid dependencies because mutating them doesn't re-render the component.","line":22,"column":6,"nodeType":"ArrayExpression","endLine":22,"endColumn":16,"suggestions":[{"desc":"Update the dependencies array to be: []","fix":{"range":[653,663],"text":"[]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { supabase } from '@/lib/supabase/client';\n\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Tooltip } from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Tooltip);\n\nexport default function TokenLogsDashboard() {\n  const [logs, setLogs] = useState<any[]>([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    supabase\n      .from('token_logs')\n      .select('*')\n      .order('downloaded_at', { ascending: false })\n      .then(({ data }) => {\n        setLogs(data || []);\n      });\n  }, [supabase]);\n\n  const tokenCounts = logs.reduce((acc: any, log: any) => {\n    acc[log.token_hash] = (acc[log.token_hash] || 0) + 1;\n    return acc;\n  }, {});\n\n  const isSuspicious = (hash: string) => tokenCounts[hash] > 5;\n\n  const filtered = logs.filter(\n    (log) =>\n      log.file_name.toLowerCase().includes(filter.toLowerCase()) ||\n      log.token_hash.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const dateCounts = filtered.reduce((acc: any, log: any) => {\n    const day = log.downloaded_at?.slice(0, 10);\n    acc[day] = (acc[day] || 0) + 1;\n    return acc;\n  }, {});\n\n  const chartData = {\n    labels: Object.keys(dateCounts),\n    datasets: [\n      {\n        label: 'Downloads',\n        data: Object.values(dateCounts),\n        backgroundColor: 'var(--color-accent)',\n      },\n    ],\n  };\n\n  const exportCSV = () => {\n    const rows = filtered.map((log) => ({\n      file: log.file_name,\n      time: log.downloaded_at,\n      token: log.token_hash,\n      user_agent: log.user_agent,\n      suspicious: isSuspicious(log.token_hash),\n    }));\n    const csv = ['file,time,token,user_agent,suspicious']\n      .concat(rows.map((r) => `${r.file},${r.time},${r.token},\"${r.user_agent}\",${r.suspicious}`))\n      .join('\\n');\n    const blob = new Blob([csv], { type: 'text/csv' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'token_logs.csv';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"p-6 text-text\">\n      <h1 className=\"text-2xl font-bold mb-4\">📊 Token Download Logs</h1>\n\n      <input\n        type=\"text\"\n        placeholder=\"Filter by file or token hash\"\n        value={filter}\n        onChange={(e) => setFilter(e.target.value)}\n        className=\"w-full max-w-md mb-2 px-3 py-2 rounded bg-zinc-900 border border-zinc-700 text-sm\"\n      />\n\n      <button\n        onClick={exportCSV}\n        className=\"mb-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n      >\n        Download CSV\n      </button>\n\n      <div className=\"bg-black p-4 rounded shadow mb-6\">\n        <Bar data={chartData} options={{ responsive: true }} />\n      </div>\n\n      <table className=\"w-full text-sm text-left bg-zinc-900 text-zinc-300 rounded overflow-hidden\">\n        <thead className=\"bg-zinc-700 text-xs uppercase text-zinc-100\">\n          <tr>\n            <th className=\"p-2\">File</th>\n            <th className=\"p-2\">Time</th>\n            <th className=\"p-2\">Token Hash</th>\n            <th className=\"p-2\">User Agent</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filtered.map((log, i) => (\n            <tr key={i} className=\"border-b border-zinc-800\">\n              <td className=\"p-2\">{log.file_name}</td>\n              <td className=\"p-2\">{new Date(log.downloaded_at).toLocaleString()}</td>\n              <td className=\"p-2 text-xs truncate\">\n                {isSuspicious(log.token_hash) && <span className=\"text-yellow-400\">⚠️ </span>}\n                {log.token_hash}\n              </td>\n              <td className=\"p-2 text-xs truncate\">{log.user_agent}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/tokens/page.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎`","line":6,"column":1,"nodeType":null,"messageId":"delete","endLine":7,"endColumn":1,"fix":{"range":[151,152],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { supabase } from '@/lib/supabase/client';\n\nexport default function TokenManager() {\n\n  const [tokens, setTokens] = useState<any[]>([]);\n  const [fileName, setFileName] = useState('');\n  const [expiresAt, setExpiresAt] = useState('');\n\n  const loadTokens = async () => {\n    const { data } = await supabase\n      .from('report_tokens')\n      .select('*')\n      .order('expires_at', { ascending: false })\n      .limit(20);\n    setTokens(data || []);\n  };\n\n  useEffect(() => {\n    loadTokens();\n  }, []);\n\n  const createToken = async () => {\n    const raw = Math.random().toString(36).slice(2) + Date.now().toString(36);\n    const hash = await crypto.subtle.digest('SHA-256', new TextEncoder().encode(raw));\n    const tokenHash = Array.from(new Uint8Array(hash))\n      .map((b) => b.toString(16).padStart(2, '0'))\n      .join('');\n\n    await supabase.from('report_tokens').insert({\n      file_name: fileName,\n      token_hash: tokenHash,\n      expires_at: expiresAt,\n    });\n\n    alert(`✅ Token created! Link: /api/reports/download?file=${fileName}&token=${raw}`);\n    setFileName('');\n    setExpiresAt('');\n    loadTokens();\n  };\n\n  return (\n    <div className=\"p-6 text-text max-w-3xl mx-auto space-y-6\">\n      <h1 className=\"text-2xl font-bold\">🔐 Report Access Tokens</h1>\n\n      <div className=\"space-y-2\">\n        <label className=\"block text-sm\">File Name (e.g. summary_2025-06-05.pdf)</label>\n        <input\n          type=\"text\"\n          value={fileName}\n          onChange={(e) => setFileName(e.target.value)}\n          className=\"w-full px-2 py-1 rounded bg-zinc-900 border border-zinc-700\"\n        />\n\n        <label className=\"block text-sm mt-2\">Expires At</label>\n        <input\n          type=\"datetime-local\"\n          value={expiresAt}\n          onChange={(e) => setExpiresAt(e.target.value)}\n          className=\"w-full px-2 py-1 rounded bg-zinc-900 border border-zinc-700\"\n        />\n\n        <button\n          onClick={createToken}\n          className=\"mt-3 px-4 py-2 bg-emerald-600 text-white rounded hover:bg-emerald-700\"\n        >\n          Generate Token\n        </button>\n      </div>\n\n      <div className=\"pt-6\">\n        <h2 className=\"font-semibold mb-2\">🧾 Recent Tokens</h2>\n        <ul className=\"text-sm bg-zinc-900 rounded p-4 space-y-2\">\n          {tokens.map((t, i) => (\n            <li key={i} className=\"flex justify-between\">\n              <span>{t.file_name}</span>\n              <span className=\"text-zinc-400\">{new Date(t.expires_at).toLocaleString()}</span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/tools/chart.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","line":63,"column":6,"nodeType":"ArrayExpression","endLine":63,"endColumn":24,"suggestions":[{"desc":"Update the dependencies array to be: [view, start, end, fetchData]","fix":{"range":[1734,1752],"text":"[view, start, end, fetchData]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\nimport { AdminAnalyticsToolbar } from '@/components/admin/analytics/admin-analytics-toolbar';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  CartesianGrid,\n} from 'recharts';\nimport { useDateRange } from '@/hooks/useDateRange';\n\ntype SignalDataPoint = {\n  date: string;\n  views: number;\n  feedback: number;\n};\n\nexport default function AnalyticsChartView() {\n  const [view, setView] = useState<'daily' | 'weekly' | 'monthly'>('daily');\n  const [stats, setStats] = useState<{ label: string; value: number }[]>([]);\n  const [data, setData] = useState<SignalDataPoint[]>([]);\n  const { start, end } = useDateRange();\n\n  const fetchData = async () => {\n    if (!start || !end) return;\n\n    const res = await fetch(`/api/analytics/signals?start=${start}&end=${end}`);\n    const rows: SignalDataPoint[] = await res.json();\n    setData(rows);\n\n    const totals = rows.reduce(\n      (acc, row) => {\n        acc.views += row.views;\n        acc.feedback += row.feedback;\n        return acc;\n      },\n      { views: 0, feedback: 0 }\n    );\n\n    setStats([\n      { label: 'Views', value: totals.views },\n      { label: 'Feedback', value: totals.feedback },\n    ]);\n  };\n\n  const downloadCSV = () => {\n    const rows = ['Date,Views,Feedback', ...data.map((r) => `${r.date},${r.views},${r.feedback}`)];\n    const blob = new Blob([rows.join('\\n')], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'signals.csv';\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [view, start, end]);\n\n  return (\n    <div className=\"p-6 max-w-6xl mx-auto text-white\">\n      <AdminAnalyticsToolbar\n        title=\"Odessa Daily Signals\"\n        view={view}\n        setView={setView}\n        onRefresh={fetchData}\n        stats={stats}\n      >\n        <button\n          onClick={downloadCSV}\n          className=\"px-3 py-1 bg-blue-700 hover:bg-blue-600 rounded text-white\"\n        >\n          ⬇️ Export CSV\n        </button>\n      </AdminAnalyticsToolbar>\n\n      <div className=\"bg-zinc-800 rounded p-6 mt-6\">\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <LineChart\n            data={data}\n            onClick={(e) => {\n              const clicked = e?.activeLabel;\n              if (clicked) alert(`Drilldown for ${clicked}`);\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#444\" />\n            <XAxis dataKey=\"date\" stroke=\"#999\" />\n            <YAxis stroke=\"#999\" />\n            <Tooltip\n              contentStyle={{ backgroundColor: '#222', borderColor: '#555' }}\n              labelStyle={{ color: '#fff' }}\n              formatter={(val, key) => [val, key === 'views' ? 'Views' : 'Feedback']}\n            />\n            <Line type=\"monotone\" dataKey=\"views\" stroke=\"#8884d8\" strokeWidth={2} />\n            <Line type=\"monotone\" dataKey=\"feedback\" stroke=\"#82ca9d\" strokeWidth={2} />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/tools/digest.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\n\nexport default function AdminDigestPage() {\n  const [logs, setLogs] = useState<any[]>([]);\n  const [sending, setSending] = useState(false);\n\n  const fetchLogs = async () => {\n    const res = await fetch('/api/digest-log');\n    const json = await res.json();\n    setLogs(json || []);\n  };\n\n  const triggerDigest = async () => {\n    setSending(true);\n    await fetch('/api/send-weekly-digest');\n    await fetchLogs();\n    setSending(false);\n  };\n\n  useEffect(() => {\n    fetchLogs();\n  }, []);\n\n  return (\n    <div className=\"p-6 max-w-3xl mx-auto text-white space-y-6\">\n      <h1 className=\"text-2xl font-bold\">📡 Weekly Digest Admin</h1>\n      <button\n        onClick={triggerDigest}\n        className=\"bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded\"\n        disabled={sending}\n      >\n        {sending ? 'Sending...' : 'Send All Now'}\n      </button>\n\n      <div className=\"pt-6\">\n        <h2 className=\"text-lg font-semibold mb-2\">Last Sent</h2>\n        <ul className=\"space-y-4\">\n          {logs.map((l: any) => (\n            <li key={l.id} className=\"bg-zinc-800 p-4 rounded text-sm\">\n              <div className=\"text-xs text-zinc-400\">{l.sent_at}</div>\n              <pre className=\"whitespace-pre-wrap mt-2 text-green-300\">{l.summary}</pre>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/tools/print-all.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":63,"column":13,"nodeType":"JSXOpeningElement","endLine":67,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useEffect, useState } from 'react';\nimport { json } from '@/lib/api/json';\n\nexport default function AdminPrintAll() {\n  const [campaigns, setCampaigns] = useState([]);\n  const [filterAction, setFilterAction] = useState('');\n  const [filterCreator, setFilterCreator] = useState('');\n\n  useEffect(() => {\n    fetch('/api/campaigns')\n      .then((res) => res.json())\n      .then(setCampaigns);\n  }, []);\n\n  const filtered = campaigns.filter(\n    (c: any) =>\n      (!filterAction || c.target_action === filterAction) &&\n      (!filterCreator || c.created_by === filterCreator)\n  );\n\n  const creators = Array.from(new Set(campaigns.map((c: any) => c.created_by))).sort();\n\n  return (\n    <div className=\"p-6 text-white max-w-6xl mx-auto space-y-6\">\n      <h1 className=\"text-2xl font-bold\">📦 All Campaign Posters</h1>\n      <a\n        href=\"/api/all-campaign-posters\"\n        className=\"inline-block bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded\"\n      >\n        ⬇️ Download ZIP (All Posters)\n      </a>\n\n      <div className=\"flex gap-4 text-sm pt-4\">\n        <select\n          value={filterAction}\n          onChange={(e) => setFilterAction(e.target.value)}\n          className=\"text-black p-2 rounded\"\n        >\n          <option value=\"\">All Actions</option>\n          <option value=\"cheer\">🎉 Cheer</option>\n          <option value=\"echo\">🔁 Echo</option>\n          <option value=\"reflect\">🪞 Reflect</option>\n          <option value=\"checkin\">✅ Check-in</option>\n        </select>\n        <select\n          value={filterCreator}\n          onChange={(e) => setFilterCreator(e.target.value)}\n          className=\"text-black p-2 rounded\"\n        >\n          <option value=\"\">All Creators</option>\n          {creators.map((id) => (\n            <option key={id} value={id}>\n              {id.slice(0, 8)}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n        {filtered.map((c: any) => (\n          <div key={c.slug} className=\"bg-zinc-800 p-4 rounded\">\n            <img\n              src={`/posters/${c.slug}`}\n              alt={c.headline}\n              className=\"w-full rounded shadow border border-zinc-700\"\n            />\n            <div className=\"mt-2 text-sm text-zinc-300 truncate\">{c.headline}</div>\n            <p className=\"text-xs text-zinc-500\">By {c.created_by?.slice(0, 8) || 'anon'}</p>\n            <a\n              href={`/posters/${c.slug}`}\n              download={`${c.slug}-poster.png`}\n              className=\"text-blue-400 hover:underline text-xs\"\n            >\n              Download\n            </a>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/traces/[traceId]/page.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `(⏎····<TraceInspector·traceId={params.traceId}·entries={data}·/>⏎··)` with `<TraceInspector·traceId={params.traceId}·entries={data}·/>`","line":26,"column":10,"nodeType":null,"messageId":"replace","endLine":28,"endColumn":4,"fix":{"range":[899,967],"text":"<TraceInspector traceId={params.traceId} entries={data} />"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import { createServerComponentClient } from '@supabase/auth-helpers-nextjs';\nimport { cookies } from 'next/headers';\nimport type { Database } from '@/types/supabase';\nimport { notFound } from 'next/navigation';\nimport { TraceInspector } from '@/components/admin/traces/trace-inspector';\n\nexport const dynamic = 'force-dynamic';\n\nexport default async function TracePage({ params }: { params: { traceId: string } }) {\n  const supabase = createServerComponentClient<Database>({ cookies });\n  const { data, error } = await supabase\n    .from('client_errors')\n    .select('*')\n    .eq('trace_id', params.traceId)\n    .order('created_at', { ascending: false });\n\n  if (error) {\n    console.error('[tracePage] Supabase error', error.message);\n    return notFound();\n  }\n\n  if (!data || data.length === 0) {\n    return <div className=\"p-6 text-zinc-400\">No events found for this trace.</div>;\n  }\n\n  return (\n    <TraceInspector traceId={params.traceId} entries={data} />\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/unauthorized.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'email' and 'role'. Either include them or remove the dependency array.","line":24,"column":6,"nodeType":"ArrayExpression","endLine":24,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [email, role]","fix":{"range":[643,645],"text":"[email, role]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// pages/unauthorized.tsx\n'use client';\n\nimport * as Sentry from '@sentry/nextjs';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { useCurrentUser } from '@/hooks/useCurrentUser';\nimport { useEffect } from 'react';\n\nexport default function UnauthorizedPage() {\n  const { session, email, role } = useCurrentUser() as any;\n\n  useEffect(() => {\n    Sentry.captureEvent({\n      level: 'info',\n      message: 'User viewed /unauthorized',\n      tags: { route: '/unauthorized' },\n      extra: {\n        email: email || 'unknown',\n        role: role || 'unknown',\n        timestamp: new Date().toISOString(),\n      },\n    });\n  }, []);\n\n  const supportEmail =\n    session?.user?.app_metadata?.org_support_email ||\n    process.env.NEXT_PUBLIC_SUPPORT_EMAIL ||\n    'support@example.com';\n\n  return (\n    <>\n      <Head>\n        <title>403 – Unauthorized</title>\n      </Head>\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-950 text-white\">\n        <div className=\"text-center space-y-4\">\n          <h1 className=\"text-5xl font-bold\">403 - Forbidden</h1>\n          <p className=\"text-gray-400\">\n            You do not have access to this page.\n            {role && (\n              <span className=\"block text-sm mt-1 text-gray-500\">\n                You are currently signed in as{' '}\n                <span className=\"font-semibold text-white\">{role}</span>.\n              </span>\n            )}\n          </p>\n          {role === 'viewer' && (\n            <p className=\"text-sm text-yellow-400 mt-2\">\n              Looking for more access? Contact an admin or\n              <Link href=\"/request-access\" className=\"underline hover:text-yellow-300\">\n                {' '}\n                request an upgrade\n              </Link>\n              .\n            </p>\n          )}\n          <Link\n            href=\"/\"\n            className=\"inline-block mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          >\n            Return to Dashboard\n          </Link>\n          <p className=\"text-sm text-gray-500\">\n            Need help?{' '}\n            <a href={`mailto:${supportEmail}`} className=\"underline text-blue-400\">\n              Contact Support\n            </a>\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/unsubscribe/[token].tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'GetServerSideProps' is defined but never used.","line":1,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":1,"endColumn":28},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'supabase' is assigned a value but never used.","line":4,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { GetServerSideProps } from 'next';\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport default function UnsubscribePage({ success }: { success: boolean }) {\n  return (\n    <div className=\"max-w-xl mx-auto p-6 text-center\">\n      <h1 className=\"text-2xl font-bold mb-2\">Unsubscribe</h1>\n      {success ? (\n        <p className=\"text-green-600\">✅ You’ve been unsubscribed successfully.</p>\n      ) : (\n        <p className=\"text-red-600\">❌ We couldn’t process your unsubscribe request.</p>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/upload.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/users.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.","line":46,"column":6,"nodeType":"ArrayExpression","endLine":46,"endColumn":12,"suggestions":[{"desc":"Update the dependencies array to be: [role, router]","fix":{"range":[1456,1462],"text":"[role, router]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useCanonicalRole } from '@/hooks/useCanonicalRole';\nimport { supabase } from '@/admin/lib/supabaseClient';\n\nexport default function UsersPage() {\n  const router = useRouter();\n  const [users, setUsers] = useState<any[]>([]);\n  const [profiles, setProfiles] = useState<Record<string, string>>({});\n  const [error, setError] = useState('');\n  const { role } = useCanonicalRole();\n\n  useEffect(() => {\n    if (role === null) return;\n\n    if (role !== 'admin') {\n      console.log('🔐 [users] Redirecting to login (Reason: Unauthorized)');\n      router.push('/login?error=unauthorized');\n      return;\n    }\n\n    const loadUsersAndRoles = async () => {\n      try {\n        const { data: userList, error: userError } = await supabase.auth.admin.listUsers();\n        if (userError) {\n          setError(userError.message);\n          return;\n        }\n        setUsers(userList.users || []);\n\n        const { data: profileList } = await supabase.from('user_profiles').select('user_id, role');\n        const profileMap: Record<string, string> = {};\n        profileList?.forEach((p) => {\n          profileMap[p.user_id] = p.role;\n        });\n        setProfiles(profileMap);\n      } catch (err) {\n        console.error('❌ Failed to load users or profiles', err);\n        setError('Failed to load users');\n      }\n    };\n\n    loadUsersAndRoles();\n  }, [role]);\n\n  const updateRole = async (userId: string, newRole: string) => {\n    await supabase\n      .from('user_profiles')\n      .upsert({ user_id: userId, role: newRole }, { onConflict: 'user_id' });\n\n    setProfiles((prev) => ({ ...prev, [userId]: newRole }));\n  };\n\n  return (\n    <div className=\"p-6 text-white\">\n      <h1 className=\"text-2xl font-bold mb-4\">Users</h1>\n      {error && <p className=\"text-red-500\">{error}</p>}\n      <table className=\"w-full text-sm text-left text-gray-300 bg-gray-800 rounded overflow-hidden\">\n        <thead className=\"bg-gray-700 text-gray-100 uppercase text-xs tracking-wide\">\n          <tr>\n            <th className=\"px-4 py-2\">Email</th>\n            <th className=\"px-4 py-2\">Role</th>\n            <th className=\"px-4 py-2\">Created</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map((u, i) => (\n            <tr key={u.id} className={i % 2 === 0 ? 'bg-gray-800' : 'bg-gray-900'}>\n              <td className=\"px-4 py-2\">{u.email}</td>\n              <td className=\"px-4 py-2\">\n                <select\n                  value={profiles[u.id] || 'viewer'}\n                  onChange={(e) => updateRole(u.id, e.target.value)}\n                  className=\"bg-gray-700 border border-gray-600 rounded px-2 py-1 text-xs\"\n                >\n                  <option value=\"admin\">admin</option>\n                  <option value=\"reseller\">reseller</option>\n                  <option value=\"affiliate_referrer\">affiliate_referrer</option>\n                  <option value=\"viewer\">viewer</option>\n                </select>\n              </td>\n              <td className=\"px-4 py-2 text-xs\">{new Date(u.created_at).toLocaleString()}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/vector-explorer/page.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `<strong>Collection:</strong>·{summary.name}` with `⏎··············<strong>Collection:</strong>·{summary.name}⏎············`","line":33,"column":16,"nodeType":null,"messageId":"replace","endLine":33,"endColumn":59,"fix":{"range":[992,1035],"text":"\n              <strong>Collection:</strong> {summary.name}\n            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `<strong>Status:</strong>·{summary.status}` with `⏎··············<strong>Status:</strong>·{summary.status}⏎············`","line":34,"column":16,"nodeType":null,"messageId":"replace","endLine":34,"endColumn":57,"fix":{"range":[1055,1096],"text":"\n              <strong>Status:</strong> {summary.status}\n            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `<strong>Total·Vectors:</strong>·{summary.vectorsCount}` with `⏎··············<strong>Total·Vectors:</strong>·{summary.vectorsCount}⏎············`","line":35,"column":16,"nodeType":null,"messageId":"replace","endLine":35,"endColumn":70,"fix":{"range":[1116,1170],"text":"\n              <strong>Total Vectors:</strong> {summary.vectorsCount}\n            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `<strong>Vector·Size:</strong>·{summary.vectorSize}` with `⏎··············<strong>Vector·Size:</strong>·{summary.vectorSize}⏎············`","line":36,"column":16,"nodeType":null,"messageId":"replace","endLine":36,"endColumn":66,"fix":{"range":[1190,1240],"text":"\n              <strong>Vector Size:</strong> {summary.vectorSize}\n            "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\n\nexport default function VectorExplorerPage() {\n  const [summary, setSummary] = useState<any>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function fetchSummary() {\n      try {\n        const res = await fetch('/api/vector/summary');\n        if (!res.ok) throw new Error('Failed to load vector summary');\n        const data = await res.json();\n        setSummary(data);\n      } catch (err: any) {\n        setError(err.message);\n      }\n    }\n    fetchSummary();\n  }, []);\n\n  return (\n    <div className=\"max-w-4xl mx-auto px-4 py-8\">\n      <h1 className=\"text-2xl font-bold mb-4\">🧠 Vector Explorer</h1>\n\n      {error && <p className=\"text-red-500\">Error: {error}</p>}\n      {!summary && !error && <p className=\"text-muted-foreground\">Loading...</p>}\n\n      {summary && (\n        <div className=\"space-y-4\">\n          <div className=\"border p-4 rounded bg-white/5\">\n            <p><strong>Collection:</strong> {summary.name}</p>\n            <p><strong>Status:</strong> {summary.status}</p>\n            <p><strong>Total Vectors:</strong> {summary.vectorsCount}</p>\n            <p><strong>Vector Size:</strong> {summary.vectorSize}</p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <ExplorerPanel title=\"Block Types\" data={summary.typeCounts} />\n            <ExplorerPanel title=\"Industries\" data={summary.industryCounts} />\n            <ExplorerPanel title=\"Tones\" data={summary.toneCounts} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction ExplorerPanel({ title, data }: { title: string; data: Record<string, number> }) {\n  return (\n    <div className=\"border p-4 rounded bg-white/5\">\n      <h2 className=\"font-semibold mb-2 text-lg\">{title}</h2>\n      <ul className=\"text-sm space-y-1\">\n        {Object.entries(data).map(([key, count]) => (\n          <li key={key}>\n            <span className=\"font-medium\">{key}</span>: {count}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/vector-query/page.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·className=\"bg-white/5·border·rounded·px-2·py-1\"·value={type}·onChange={(e)·=>·setType(e.target.value)}` with `⏎············className=\"bg-white/5·border·rounded·px-2·py-1\"⏎············value={type}⏎············onChange={(e)·=>·setType(e.target.value)}⏎··········`","line":85,"column":18,"nodeType":null,"messageId":"replace","endLine":85,"endColumn":121,"fix":{"range":[2474,2577],"text":"\n            className=\"bg-white/5 border rounded px-2 py-1\"\n            value={type}\n            onChange={(e) => setType(e.target.value)}\n          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·className=\"bg-white/5·border·rounded·px-2·py-1\"·value={industry}·onChange={(e)·=>·setIndustry(e.target.value)}` with `⏎············className=\"bg-white/5·border·rounded·px-2·py-1\"⏎············value={industry}⏎············onChange={(e)·=>·setIndustry(e.target.value)}⏎··········`","line":92,"column":18,"nodeType":null,"messageId":"replace","endLine":92,"endColumn":129,"fix":{"range":[2812,2923],"text":"\n            className=\"bg-white/5 border rounded px-2 py-1\"\n            value={industry}\n            onChange={(e) => setIndustry(e.target.value)}\n          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·className=\"bg-white/5·border·rounded·px-2·py-1\"·value={tone}·onChange={(e)·=>·setTone(e.target.value)}` with `⏎············className=\"bg-white/5·border·rounded·px-2·py-1\"⏎············value={tone}⏎············onChange={(e)·=>·setTone(e.target.value)}⏎··········`","line":98,"column":18,"nodeType":null,"messageId":"replace","endLine":98,"endColumn":121,"fix":{"range":[3118,3221],"text":"\n            className=\"bg-white/5 border rounded px-2 py-1\"\n            value={tone}\n            onChange={(e) => setTone(e.target.value)}\n          "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"'use client';\n\nimport { useState } from 'react';\n\nexport default function VectorQueryPage({\n  onUseBlock,\n}: {\n  onUseBlock?: (text: string, mode?: 'insert' | 'replace', index?: number) => void;\n}) {\n  const [query, setQuery] = useState('');\n  const [type, setType] = useState('');\n  const [industry, setIndustry] = useState('');\n  const [tone, setTone] = useState('');\n  const [results, setResults] = useState<string[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [rewritingIndex, setRewritingIndex] = useState<number | null>(null);\n\n  async function handleSearch() {\n    setLoading(true);\n    setError(null);\n    setResults([]);\n\n    try {\n      const res = await fetch('/api/blocks/search', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ query, type, industry, tone, topK: 5 }),\n      });\n\n      if (!res.ok) throw new Error('Failed to search vector DB');\n      const data = await res.json();\n      setResults(data.matches || []);\n    } catch (err: any) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  async function rewriteBlock(originalText: string, index: number) {\n    setRewritingIndex(index);\n\n    try {\n      const res = await fetch('/api/blocks/rag/complete', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          userPrompt: query,\n          originalText,\n          blockType: type,\n          industry,\n          tone,\n        }),\n      });\n\n      if (!res.ok) throw new Error('Rewrite failed');\n\n      const data = await res.json();\n      if (data.rewritten) {\n        if (onUseBlock) onUseBlock(data.rewritten);\n        else navigator.clipboard.writeText(data.rewritten);\n        alert('Rewritten block ready and copied!');\n      }\n    } catch (err: any) {\n      alert(err.message);\n    } finally {\n      setRewritingIndex(null);\n    }\n  }\n\n  return (\n    <div className=\"max-w-3xl mx-auto px-4 py-8\">\n      <h1 className=\"text-2xl font-bold mb-4\">🧠 Vector Query + RAG Rewriter</h1>\n\n      <div className=\"space-y-4\">\n        <input\n          className=\"w-full border rounded px-3 py-2 bg-white/5\"\n          placeholder=\"Type a query...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n\n        <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2\">\n          <select className=\"bg-white/5 border rounded px-2 py-1\" value={type} onChange={(e) => setType(e.target.value)}>\n            <option value=\"\">All Types</option>\n            <option value=\"hero\">hero</option>\n            <option value=\"cta\">cta</option>\n            <option value=\"services\">services</option>\n          </select>\n\n          <select className=\"bg-white/5 border rounded px-2 py-1\" value={industry} onChange={(e) => setIndustry(e.target.value)}>\n            <option value=\"\">All Industries</option>\n            <option value=\"towing\">towing</option>\n            <option value=\"bakery\">bakery</option>\n          </select>\n\n          <select className=\"bg-white/5 border rounded px-2 py-1\" value={tone} onChange={(e) => setTone(e.target.value)}>\n            <option value=\"\">All Tones</option>\n            <option value=\"confident\">confident</option>\n            <option value=\"urgent\">urgent</option>\n            <option value=\"neutral\">neutral</option>\n          </select>\n        </div>\n\n        <button\n          className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          onClick={handleSearch}\n          disabled={loading || !query}\n        >\n          {loading ? 'Searching...' : 'Search'}\n        </button>\n\n        {error && <p className=\"text-red-500 mt-2\">Error: {error}</p>}\n\n        {results.length > 0 && (\n          <div className=\"mt-6 space-y-4\">\n            <h2 className=\"text-lg font-semibold\">Top Matches</h2>\n            {results.map((text, idx) => (\n              <div key={idx} className=\"bg-white/5 p-3 rounded border text-sm space-y-2\">\n                <p>{text}</p>\n                <div className=\"flex gap-2\">\n                  <button\n                    className=\"text-sm bg-green-600 text-white px-3 py-1 rounded hover:bg-green-700\"\n                    onClick={() => {\n                      if (onUseBlock) onUseBlock(text);\n                      else {\n                        navigator.clipboard.writeText(text);\n                        alert('Copied to clipboard');\n                      }\n                    }}\n                  >\n                    {onUseBlock ? 'Use this block' : 'Copy to clipboard'}\n                  </button>\n\n                  <button\n                    className=\"text-sm bg-purple-600 text-white px-3 py-1 rounded hover:bg-purple-700\"\n                    onClick={() => rewriteBlock(text, idx)}\n                    disabled={rewritingIndex === idx}\n                  >\n                    {rewritingIndex === idx ? 'Rewriting...' : 'Rewrite with GPT'}\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/viewer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/admin/zod-playground.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎················Slack·Username·(optional)⏎··············` with `Slack·Username·(optional)`","line":103,"column":67,"nodeType":null,"messageId":"replace","endLine":105,"endColumn":15,"fix":{"range":[3340,3397],"text":"Slack Username (optional)"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use client';\n\nimport QueryParamEditor from '@/components/admin/query-param-editor';\nimport VisualSchema from '@/components/admin/visual-schema';\nimport SitePreview from '@/components/admin/site-preview';\nimport { useZodPlaygroundState } from '@/hooks/useZodPlaygroundState';\n\nexport default function ZodPlaygroundPage() {\n  const {\n    schema,\n    setSchema,\n    error,\n    setError,\n    jsonExport,\n    setJsonExport,\n    shortLink,\n    slackUsername,\n    setSlackUsername,\n    exportJsonSchema,\n    handleCreateShortLink,\n    handleDeploy,\n    isEmbed,\n  } = useZodPlaygroundState();\n\n  return (\n    <div className=\"p-6 space-y-6 max-w-screen-xl mx-auto\">\n      <h1 className=\"text-3xl font-bold\">🧪 Zod Playground</h1>\n\n      {error && <p className=\"text-red-600 text-sm\">{error}</p>}\n\n      <QueryParamEditor schema={schema} slug=\"\" />\n\n      {!isEmbed && (\n        <>\n          <div className=\"space-y-2\">\n            <button\n              onClick={exportJsonSchema}\n              className=\"bg-green-600 text-white px-4 py-2 rounded\"\n            >\n              Export JSON Schema\n            </button>\n\n            {jsonExport && (\n              <textarea\n                className=\"w-full h-64 mt-2 p-2 border rounded bg-gray-100 font-mono text-sm\"\n                value={jsonExport}\n                onChange={(e) => setJsonExport(e.target.value)}\n              />\n            )}\n\n            <button\n              onClick={() => {\n                try {\n                  if (!jsonExport) return;\n                  const parsed = JSON.parse(jsonExport);\n                  setSchema(parsed);\n                  setError(null);\n                } catch (err: any) {\n                  setError('Failed to apply edited schema: ' + err.message);\n                }\n              }}\n              className=\"bg-purple-600 text-white px-4 py-2 rounded\"\n            >\n              Apply Edited Schema\n            </button>\n          </div>\n\n          <div className=\"space-y-2\">\n            <label className=\"font-semibold\">🧱 Schema Visualizer</label>\n            <VisualSchema schema={schema} onDeployClick={handleDeploy} />\n          </div>\n\n          <div className=\"space-y-2 border-t pt-4\">\n            <label className=\"font-semibold\">🔗 Shareable Playground Link</label>\n            <div className=\"flex gap-2 flex-wrap\">\n              <input\n                value={\n                  shortLink ||\n                  `${window.location.origin}/admin/zod-playground?schema=${encodeURIComponent(\n                    jsonExport || ''\n                  )}`\n                }\n                readOnly\n                className=\"flex-1 text-sm border px-2 py-1 rounded\"\n              />\n              <button\n                onClick={() => {\n                  navigator.clipboard.writeText(\n                    shortLink ||\n                      `${window.location.origin}/admin/zod-playground?schema=${encodeURIComponent(\n                        jsonExport || ''\n                      )}`\n                  );\n                  alert('Link copied to clipboard!');\n                }}\n                className=\"bg-blue-700 text-white px-3 py-1 rounded\"\n              >\n                Copy Link\n              </button>\n            </div>\n\n            <div className=\"mt-2\">\n              <label className=\"text-sm text-gray-400 block mb-1\">\n                Slack Username (optional)\n              </label>\n              <input\n                value={slackUsername}\n                onChange={(e) => setSlackUsername(e.target.value)}\n                placeholder=\"e.g. jon.doe\"\n                className=\"text-sm border px-2 py-1 rounded w-full\"\n              />\n\n              <button\n                onClick={handleCreateShortLink}\n                className=\"mt-2 bg-zinc-800 text-white px-3 py-1 rounded\"\n              >\n                Create Short Link\n              </button>\n            </div>\n          </div>\n\n          <SitePreview />\n        </>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/admin/campaign-data/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/admin/delete-branding/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/admin/delete-snapshot/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/admin/run-next-job/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/admin/seed-template/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/admin/upload-template-image/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/analytics/signals.ts/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/analytics/signals/route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'res' is defined but never used. Allowed unused args must match /^_/u.","line":19,"column":60,"nodeType":null,"messageId":"unusedVar","endLine":19,"endColumn":63}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { createClient } from '@supabase/supabase-js';\nimport { json } from '@/lib/api/json';\nimport { NextApiRequest, NextApiResponse } from 'next';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n);\n\nfunction groupByDate(data: any[], field: string) {\n  const groups: Record<string, number> = {};\n  for (const row of data) {\n    const date = row[field].slice(0, 10); // YYYY-MM-DD\n    groups[date] = (groups[date] || 0) + 1;\n  }\n  return Object.entries(groups).map(([date, count]) => ({ date, count }));\n}\n\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\n  const { start, end } = req.query;\n\n  const viewRange = {\n    from: start ? new Date(start as string).toISOString() : undefined,\n    to: end ? new Date(end as string).toISOString() : undefined,\n  };\n\n  const [views, feedback] = await Promise.all([\n    supabase\n      .from('published_site_views')\n      .select('viewed_at')\n      .gte('viewed_at', viewRange.from || '')\n      .lte('viewed_at', viewRange.to || ''),\n    supabase\n      .from('block_feedback')\n      .select('created_at')\n      .gte('created_at', viewRange.from || '')\n      .lte('created_at', viewRange.to || ''),\n  ]);\n\n  if (views.error || feedback.error) {\n    return json({ error: 'Error loading analytics' });\n  }\n\n  const byViews = groupByDate(views.data, 'viewed_at');\n  const byFeedback = groupByDate(feedback.data, 'created_at');\n\n  const merged: Record<string, any> = {};\n  byViews.forEach(({ date, count }) => {\n    merged[date] = { date, views: count, feedback: 0 };\n  });\n  byFeedback.forEach(({ date, count }) => {\n    merged[date] = { ...(merged[date] || { date, views: 0 }), feedback: count };\n  });\n\n  const result = Object.values(merged).sort((a, b) => a.date.localeCompare(b.date));\n  json(result);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/ask-assistant.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/badge/[slug].ts/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/badge/[slug]/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/block-qr/preview/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/block-qr/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/block-qr/save/route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'hash' is defined but never used.","line":19,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":19,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { createCanvas, registerFont } from 'canvas';\nimport QRCode from 'qrcode';\nimport crypto from 'node:crypto';\nimport path from 'node:path';\nimport fs from 'node:fs/promises';\nimport { mkdirSync } from 'node:fs';\nimport { NextRequest } from 'next/server';\n\nexport const runtime = 'nodejs';\n\n// Load fonts if present\ntry {\n  registerFont(path.resolve('./public/fonts/Inter.ttf'), { family: 'Inter' });\n  registerFont(path.resolve('./public/fonts/Arial.ttf'), { family: 'Arial' });\n} catch (err) {\n  console.warn('⚠️ Font registration failed:', err);\n}\n\nfunction hash(input: string): string {\n  return crypto.createHash('sha1').update(input).digest('hex');\n}\n\nexport async function POST(req: NextRequest) {\n  const {\n    blockId,\n    handle,\n    label = `block-${blockId}`,\n    size = 512,\n    font = 'Inter',\n    fontSize = 20,\n    color = '#000000',\n    background = '#ffffff',\n    format = 'png',\n  } = await req.json();\n\n  if (!blockId || !handle) {\n    return new Response(JSON.stringify({ error: 'Missing blockId or handle' }), {\n      status: 400,\n      headers: { 'Content-Type': 'application/json' },\n    });\n  }\n\n  const url = `https://quicksites.ai/world/${handle}#block-${blockId}`;\n  const qrCanvas = createCanvas(size, size);\n  await QRCode.toCanvas(qrCanvas, url, {\n    margin: 1,\n    width: size,\n    color: {\n      dark: color,\n      light: background,\n    },\n  });\n\n  const canvas = createCanvas(size, size + fontSize + 20);\n  const ctx = canvas.getContext('2d');\n\n  ctx.fillStyle = background;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.drawImage(qrCanvas, 0, 0, size, size);\n  ctx.fillStyle = color;\n  ctx.font = `${fontSize}px \"${font}\"`;\n  ctx.textAlign = 'center';\n  ctx.fillText(label, canvas.width / 2, canvas.height - 10);\n\n  const buffer =\n    format === 'png'\n      ? canvas.toBuffer()\n      : (() => {\n          throw new Error(`Unsupported format: ${format}`);\n        })();\n\n  // 🔒 Save to disk\n  const dir = path.resolve('public', 'generated-qr', handle);\n  mkdirSync(dir, { recursive: true });\n  const filename = `${blockId}.${format}`;\n  const filepath = path.join(dir, filename);\n  await fs.writeFile(filepath, buffer);\n\n  const publicUrl = `/generated-qr/${handle}/${filename}`;\n  return new Response(JSON.stringify({ ok: true, path: publicUrl }), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/blocks-by-handle/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/blocks/index/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/blocks/rag/complete/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/blocks/search/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/campaign-analytics/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/campaign/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/campaigns/[id]/leads/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/campaigns/create/route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'created_by' is assigned a value but never used.","line":31,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":31,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// app/api/campaigns/create/route.ts\nexport const runtime = 'nodejs';\n\nimport { NextRequest } from 'next/server';\nimport { createClient } from '@supabase/supabase-js';\n\nfunction getSupabaseClient() {\n  return createClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.SUPABASE_SERVICE_ROLE_KEY!\n  );\n}\n\nexport async function POST(req: NextRequest): Promise<Response> {\n  const supabase = getSupabaseClient();\n  const body = await req.json();\n\n  const {\n    name,\n    city,\n    state,\n    industry,\n    status = 'draft',\n    starts_at,\n    ends_at,\n    alt_domains,\n    lead_ids,\n    city_lat,\n    city_lon,\n    silent_mode,\n    created_by,\n  } = body;\n\n  if (!name || !city || !state || !industry || !starts_at || !ends_at) {\n    return Response.json({ error: 'Missing required fields' }, { status: 400 });\n  }\n\n  // Try to extract user info from headers if present\n  const userId = req.headers.get('x-user-id') || null;\n\n  // Step 1: Create campaign\n  const { data: campaign, error: campaignError } = await supabase\n    .from('campaigns')\n    .insert({\n      name,\n      city,\n      state,\n      industry,\n      status,\n      starts_at,\n      ends_at,\n      alt_domains,\n      city_lat,\n      city_lon,\n      silent_mode,\n      owner_id: userId,\n      created_by: userId,\n    })\n    .select()\n    .single();\n\n  if (campaignError) {\n    console.error('[❌ create campaign]', campaignError);\n    return Response.json({ error: campaignError.message }, { status: 500 });\n  }\n\n  // Step 2: Link leads (via join table)\n  if (Array.isArray(lead_ids) && lead_ids.length > 0) {\n    const leadLinks = lead_ids.map((lead_id) => ({ campaign_id: campaign.id, lead_id }));\n    const { error: linkError } = await supabase.from('campaign_leads').insert(leadLinks);\n    if (linkError) {\n      console.error('[❌ link leads]', linkError);\n      return Response.json({ error: linkError.message }, { status: 500 });\n    }\n\n    // Step 3: Update leads with campaign_id + expiration\n    const { error: updateLeadsError } = await supabase\n      .from('leads')\n      .update({\n        current_campaign_id: campaign.id,\n        current_campaign_expires_at: ends_at,\n      })\n      .in('id', lead_ids);\n\n    if (updateLeadsError) {\n      console.error('[❌ update leads]', updateLeadsError);\n      return Response.json({ error: updateLeadsError.message }, { status: 500 });\n    }\n  }\n\n  return Response.json({ success: true, campaign_id: campaign.id });\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/campaigns/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/campaigns/update/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/checkin-map/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/checkins-trend/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/cheer/route.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎`","line":63,"column":1,"nodeType":null,"messageId":"delete","endLine":64,"endColumn":1,"fix":{"range":[1853,1854],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// app/api/cheer/route.ts\n// Use cheer() when you need to cheer a block\n// Use getUserFromRequest() when you need the user context\n\nexport const runtime = 'nodejs';\n\nimport { createClient } from '@supabase/supabase-js';\nimport { NextRequest } from 'next/server';\nimport type { Database } from '@/types/supabase';\n\nconst supabase = createClient<Database>(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n);\n\nexport async function POST(req: NextRequest) {\n  try {\n    const token = req.headers.get('authorization')?.replace('Bearer ', '')?.trim();\n    if (!token) {\n      return Response.json(\n        { error: 'Missing token' },\n        { status: 401, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const { block_id, message } = await req.json();\n    if (!block_id) {\n      return Response.json(\n        { error: 'Missing block_id' },\n        { status: 400, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const {\n      data: { user },\n      error: authError,\n    } = await supabase.auth.getUser(token);\n\n    if (authError || !user?.id) {\n      console.warn('[❌ Auth Error]', authError?.message);\n      return Response.json(\n        { error: 'Unauthorized' },\n        { status: 401, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const { error: insertError } = await supabase.from('block_feedback').insert({\n      block_id,\n      user_id: user.id,\n      action: 'cheer',\n      message: message || null,\n    });\n\n    if (insertError) {\n      console.error('[❌ Insert Error]', insertError.message);\n      return Response.json(\n        { error: insertError.message },\n        { status: 500, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    return Response.json({ success: true }, { headers: { 'Content-Type': 'application/json' } });\n\n  } catch (err: any) {\n    console.error('[❌ Unexpected Cheer Error]', err);\n    return Response.json(\n      { error: err?.message || 'Internal Server Error' },\n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/claim-campaign/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/claim-site/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/clone-block/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/create-block/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/delete-campaign/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/deploy-webhook/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/digest-log/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/discover/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/docs/route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'err' is defined but never used.","line":16,"column":12,"nodeType":null,"messageId":"unusedVar","endLine":16,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export const runtime = 'nodejs';\n\nimport { readFileSync } from 'node:fs';\nimport { join } from 'node:path';\n\nexport async function GET() {\n  try {\n    const spec = readFileSync(join(process.cwd(), 'openapi.json'), 'utf8');\n    return new Response(spec, {\n      status: 200,\n      headers: {\n        'Content-Type': 'application/json',\n        'Cache-Control': 'no-cache',\n      },\n    });\n  } catch (err) {\n    return new Response(JSON.stringify({ error: 'Failed to load openapi.json' }), { status: 500 });\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/echo/route.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `{·error:·'Missing·auth·token'·},` with `⏎········{·error:·'Missing·auth·token'·},⏎·······`","line":21,"column":28,"nodeType":null,"messageId":"replace","endLine":21,"endColumn":60,"fix":{"range":[550,582],"text":"\n        { error: 'Missing auth token' },\n       "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":22,"column":1,"nodeType":null,"messageId":"insert","endLine":22,"endColumn":1,"fix":{"range":[585,585],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":23,"column":1,"nodeType":null,"messageId":"insert","endLine":23,"endColumn":1,"fix":{"range":[606,606],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `}` with `··}⏎······`","line":24,"column":7,"nodeType":null,"messageId":"replace","endLine":24,"endColumn":8,"fix":{"range":[669,670],"text":"  }\n      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `{·error:·'Missing·block_id'·},` with `⏎········{·error:·'Missing·block_id'·},⏎·······`","line":30,"column":28,"nodeType":null,"messageId":"replace","endLine":30,"endColumn":58,"fix":{"range":[781,811],"text":"\n        { error: 'Missing block_id' },\n       "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":31,"column":1,"nodeType":null,"messageId":"insert","endLine":31,"endColumn":1,"fix":{"range":[814,814],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":32,"column":1,"nodeType":null,"messageId":"insert","endLine":32,"endColumn":1,"fix":{"range":[835,835],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `}` with `··}⏎······`","line":33,"column":7,"nodeType":null,"messageId":"replace","endLine":33,"endColumn":8,"fix":{"range":[898,899],"text":"  }\n      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `{·error:·'Unauthorized'·},` with `⏎········{·error:·'Unauthorized'·},⏎·······`","line":42,"column":28,"nodeType":null,"messageId":"replace","endLine":42,"endColumn":54,"fix":{"range":[1073,1099],"text":"\n        { error: 'Unauthorized' },\n       "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":43,"column":9,"nodeType":null,"messageId":"insert","endLine":43,"endColumn":9,"fix":{"range":[1110,1110],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":44,"column":1,"nodeType":null,"messageId":"insert","endLine":44,"endColumn":1,"fix":{"range":[1123,1123],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `}` with `··}⏎······`","line":45,"column":7,"nodeType":null,"messageId":"replace","endLine":45,"endColumn":8,"fix":{"range":[1186,1187],"text":"  }\n      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `{·error:·'Rate·check·failed'·},` with `⏎········{·error:·'Rate·check·failed'·},⏎·······`","line":60,"column":28,"nodeType":null,"messageId":"replace","endLine":60,"endColumn":59,"fix":{"range":[1653,1684],"text":"\n        { error: 'Rate check failed' },\n       "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":61,"column":1,"nodeType":null,"messageId":"insert","endLine":61,"endColumn":1,"fix":{"range":[1687,1687],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":62,"column":9,"nodeType":null,"messageId":"insert","endLine":62,"endColumn":9,"fix":{"range":[1716,1716],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `}` with `··}⏎······`","line":63,"column":7,"nodeType":null,"messageId":"replace","endLine":63,"endColumn":8,"fix":{"range":[1771,1772],"text":"  }\n      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `{·error:·'Rate·limit·exceeded.·Try·again·later.'·},` with `⏎········{·error:·'Rate·limit·exceeded.·Try·again·later.'·},⏎·······`","line":67,"column":28,"nodeType":null,"messageId":"replace","endLine":67,"endColumn":79,"fix":{"range":[1856,1907],"text":"\n        { error: 'Rate limit exceeded. Try again later.' },\n       "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":68,"column":1,"nodeType":null,"messageId":"insert","endLine":68,"endColumn":1,"fix":{"range":[1910,1910],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":69,"column":1,"nodeType":null,"messageId":"insert","endLine":69,"endColumn":1,"fix":{"range":[1931,1931],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······}` with `········}⏎······`","line":70,"column":1,"nodeType":null,"messageId":"replace","endLine":70,"endColumn":8,"fix":{"range":[1988,1995],"text":"        }\n      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎······.from('block_feedback')⏎······` with `.from('block_feedback')`","line":73,"column":50,"nodeType":null,"messageId":"replace","endLine":75,"endColumn":7,"fix":{"range":[2054,2091],"text":".from('block_feedback')"}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":76,"column":1,"nodeType":null,"messageId":"delete","endLine":76,"endColumn":3,"fix":{"range":[2101,2103],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `······`","line":77,"column":1,"nodeType":null,"messageId":"replace","endLine":77,"endColumn":9,"fix":{"range":[2119,2127],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":78,"column":7,"nodeType":null,"messageId":"delete","endLine":78,"endColumn":9,"fix":{"range":[2151,2153],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `······`","line":79,"column":1,"nodeType":null,"messageId":"replace","endLine":79,"endColumn":9,"fix":{"range":[2169,2177],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":80,"column":1,"nodeType":null,"messageId":"delete","endLine":80,"endColumn":3,"fix":{"range":[2203,2205],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `{·error:·insertError.message·},` with `⏎········{·error:·insertError.message·},⏎·······`","line":84,"column":28,"nodeType":null,"messageId":"replace","endLine":84,"endColumn":59,"fix":{"range":[2326,2357],"text":"\n        { error: insertError.message },\n       "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":85,"column":1,"nodeType":null,"messageId":"insert","endLine":85,"endColumn":1,"fix":{"range":[2360,2360],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":86,"column":1,"nodeType":null,"messageId":"insert","endLine":86,"endColumn":1,"fix":{"range":[2381,2381],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `}` with `··}⏎······`","line":87,"column":7,"nodeType":null,"messageId":"replace","endLine":87,"endColumn":8,"fix":{"range":[2444,2445],"text":"  }\n      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `{·success:·true·},` with `⏎······{·success:·true·},⏎·····`","line":90,"column":26,"nodeType":null,"messageId":"replace","endLine":90,"endColumn":44,"fix":{"range":[2480,2498],"text":"\n      { success: true },\n     "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":91,"column":1,"nodeType":null,"messageId":"insert","endLine":91,"endColumn":1,"fix":{"range":[2501,2501],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":92,"column":1,"nodeType":null,"messageId":"insert","endLine":92,"endColumn":1,"fix":{"range":[2520,2520],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····});⏎` with `······}⏎····);`","line":93,"column":1,"nodeType":null,"messageId":"replace","endLine":94,"endColumn":1,"fix":{"range":[2575,2583],"text":"      }\n    );"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `{·error:·err?.message·??·'Unknown·error'·},` with `⏎······{·error:·err?.message·??·'Unknown·error'·},⏎·····`","line":97,"column":26,"nodeType":null,"messageId":"replace","endLine":97,"endColumn":69,"fix":{"range":[2685,2728],"text":"\n      { error: err?.message ?? 'Unknown error' },\n     "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":98,"column":1,"nodeType":null,"messageId":"insert","endLine":98,"endColumn":1,"fix":{"range":[2731,2731],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":99,"column":1,"nodeType":null,"messageId":"insert","endLine":99,"endColumn":1,"fix":{"range":[2750,2750],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `}` with `··}⏎····`","line":100,"column":5,"nodeType":null,"messageId":"replace","endLine":100,"endColumn":6,"fix":{"range":[2809,2810],"text":"  }\n    "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":38,"source":"// app/api/echo/route.ts\n// Use echo() when you need to echo a message\n// Use getUserFromRequest() when you need the user context\n\nexport const runtime = 'nodejs';\n\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n);\n\nconst MAX_ECHOES_PER_HOUR = 3;\n\nexport async function POST(req: Request) {\n  try {\n    const token = req.headers.get('Authorization')?.replace('Bearer ', '')?.trim();\n\n    if (!token) {\n      return Response.json({ error: 'Missing auth token' }, {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' },\n      });\n    }\n\n    const { block_id, message } = await req.json();\n\n    if (!block_id) {\n      return Response.json({ error: 'Missing block_id' }, {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' },\n      });\n    }\n\n    const {\n      data: { user },\n      error: userError,\n    } = await supabase.auth.getUser(token);\n\n    if (userError || !user?.id) {\n      return Response.json({ error: 'Unauthorized' }, {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' },\n      });\n    }\n\n    const oneHourAgo = new Date(Date.now() - 60 * 60 * 1000).toISOString();\n\n    const { count, error: rateError } = await supabase\n      .from('block_feedback')\n      .select('id', { count: 'exact', head: true })\n      .eq('block_id', block_id)\n      .eq('user_id', user.id)\n      .eq('action', 'echo')\n      .gte('created_at', oneHourAgo);\n\n    if (rateError) {\n      console.error('[⚠️ Rate check error]', rateError.message);\n      return Response.json({ error: 'Rate check failed' }, {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' },\n      });\n    }\n\n    if ((count ?? 0) >= MAX_ECHOES_PER_HOUR) {\n      return Response.json({ error: 'Rate limit exceeded. Try again later.' }, {\n        status: 429,\n        headers: { 'Content-Type': 'application/json' },\n      });\n    }\n\n    const { error: insertError } = await supabase\n      .from('block_feedback')\n      .insert({\n        block_id,\n        user_id: user.id,\n        action: 'echo',\n        message: message || null,\n      });\n\n    if (insertError) {\n      console.error('[❌ Insert error]', insertError.message);\n      return Response.json({ error: insertError.message }, {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' },\n      });\n    }\n\n    return Response.json({ success: true }, {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' },\n    });\n\n  } catch (err: any) {\n    console.error('[❌ Unexpected echo error]', err);\n    return Response.json({ error: err?.message ?? 'Unknown error' }, {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' },\n    });\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/email-weekly-summary/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/embed/[slug]/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/feedback-history/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/feedback-summary/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/geocode/route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'fetchError' is assigned a value but never used.","line":20,"column":32,"nodeType":null,"messageId":"unusedVar","endLine":20,"endColumn":42}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export const runtime = 'nodejs';\n\nimport { supabase } from '@/admin/lib/supabaseClient';\nimport { json } from '@/lib/api/json';\nimport { NextRequest } from 'next/server';\n\nexport async function GET(req: NextRequest) {\n  const { searchParams } = new URL(req.url);\n  const city = searchParams.get('city');\n  const state = searchParams.get('state');\n\n  if (!city || !state) {\n    return json({ error: 'Missing city or state' }, { status: 400 });\n  }\n\n  const cleanCity = city.trim();\n  const cleanState = state.trim();\n\n  // 1. Try cache\n  const { data: cached, error: fetchError } = await supabase\n    .from('geo_cache')\n    .select('lat, lon')\n    .eq('city', cleanCity)\n    .eq('state', cleanState)\n    .maybeSingle();\n\n  if (cached) {\n    console.log(`🌍 Cache hit for ${cleanCity}, ${cleanState}`);\n    return json({ lat: Number(cached.lat), lon: Number(cached.lon) });\n  }\n\n  // 2. Fallback to OpenStreetMap's Nominatim\n  const query = `${cleanCity}, ${cleanState}, USA`;\n  const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}`;\n\n  try {\n    const geoRes = await fetch(url, {\n      headers: {\n        'User-Agent': 'QuickSites/1.0 (admin@quicksites.ai)',\n      },\n    });\n\n    const results = await geoRes.json();\n\n    if (!Array.isArray(results) || results.length === 0) {\n      return json({ lat: 0, lon: 0, error: 'Not found' }, { status: 404 });\n    }\n\n    const { lat, lon } = results[0];\n    const parsedLat = parseFloat(lat);\n    const parsedLon = parseFloat(lon);\n\n    // 3. Cache result\n    await supabase.from('geo_cache').insert([\n      {\n        city: cleanCity,\n        state: cleanState,\n        lat: parsedLat,\n        lon: parsedLon,\n      },\n    ]);\n\n    console.log(`🌍 Cached ${cleanCity}, ${cleanState} → ${parsedLat}, ${parsedLon}`);\n    return json({ lat: parsedLat, lon: parsedLon });\n  } catch (err) {\n    console.error('🌍 Geocode error:', err);\n    return json({ lat: 0, lon: 0, error: 'Internal error' }, { status: 500 });\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/habit-leaderboard/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/habit-templates/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/industries/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/ip/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/log-click/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/log-client-error/route.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎····message·=·'No·message',⏎····context·=·{},⏎····route·=·req.headers.get('referer')·??·'',⏎·` with `·message·=·'No·message',·context·=·{},·route·=·req.headers.get('referer')·??·''`","line":9,"column":10,"nodeType":null,"messageId":"replace","endLine":13,"endColumn":2,"fix":{"range":[283,377],"text":" message = 'No message', context = {}, route = req.headers.get('referer') ?? ''"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// app/api/log-client-error/route.ts\nimport { NextRequest, NextResponse } from 'next/server';\nimport { getRequestContext } from '@/lib/request/getRequestContext';\nimport crypto from 'crypto';\n\nexport async function POST(req: NextRequest) {\n  const body = await req.json();\n\n  const {\n    message = 'No message',\n    context = {},\n    route = req.headers.get('referer') ?? '',\n  } = body;\n\n  const {\n    supabase,\n    userId,\n    role = 'guest',\n    ip,\n    userAgent,\n    sessionId,\n    abVariant,\n    headers,\n  } = await getRequestContext(true); // withSupabase = true\n\n  const traceId = crypto.randomUUID(); // Optional correlation ID\n\n  const payload = {\n    message,\n    context,\n    route,\n    user_id: userId ?? null,\n    role,\n    ip,\n    user_agent: userAgent,\n    session_id: sessionId,\n    ab_variant: abVariant,\n    trace_id: traceId,\n    referrer: headers.get('referer') ?? '',\n    path: req.nextUrl.pathname,\n    created_at: new Date().toISOString(),\n  };\n\n  // Dev visibility\n  if (process.env.NODE_ENV === 'development') {\n    console.table(payload);\n  }\n\n  const { error } = await supabase!.client.from('client_errors').insert(payload);\n\n  if (error) {\n    console.warn('[log-client-error] Supabase insert failed', error);\n    return NextResponse.json({ status: 'fail', error: error.message, traceId }, { status: 500 });\n  }\n\n  return NextResponse.json({ status: 'ok', traceId });\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/log-event/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/logout/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/logs/checkins.csv/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/logs/checkins/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/logs/feedback.csv/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/logs/feedback/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/match/route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'json' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export const runtime = 'nodejs';\n\nimport { createClient } from '@supabase/supabase-js';\nimport { json } from '@/lib/api/json';\nimport { NextRequest } from 'next/server';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n);\n\nexport async function GET(req: NextRequest) {\n  const { searchParams } = new URL(req.url);\n  const tags = searchParams.get('tags');\n\n  if (!tags || typeof tags !== 'string') {\n    return Response.json({ error: 'Missing or invalid tags' }, { status: 400 });\n  }\n\n  const tagArray = tags.split(',').map((t) => t.trim());\n\n  const { data, error } = await supabase\n    .from('public_profiles')\n    .select('*')\n    .contains('goal_tags', tagArray)\n    .eq('visible', true)\n    .limit(50);\n\n  if (error) {\n    return Response.json({ error: error.message }, { status: 500 });\n  }\n\n  return Response.json(data);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/me/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/metrics/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/my-campaigns/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/nav-badges/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/nav/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/nearby-blocks/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/notifications/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/notify-creator/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/og/[slug]/image/route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'ImageResponse' is defined but never used.","line":2,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":23}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// app/api/og/[slug]/image/route.ts\nimport { ImageResponse } from '@vercel/og';\nimport { renderOgImage } from '@/lib/og/renderOgImage';\nimport { createClient } from '@supabase/supabase-js';\n// import { Resvg } from '@resvg/resvg-js';\n\nexport const runtime = 'nodejs';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport async function GET(request: Request, { params }: { params: { slug: string } }) {\n  const slug = params.slug;\n  const bucket = 'og-cache';\n  const path = `snapshots/${slug}.png`;\n\n  // ✅ Try serving cached image (data is a Blob)\n  const { data: cached } = await supabase.storage.from(bucket).download(path);\n  if (cached) {\n    return new Response(cached, {\n      headers: {\n        'Content-Type': 'image/png',\n        'Cache-Control': 'public, max-age=86400',\n      },\n    });\n  }\n\n  // 🧠 Fetch site branding\n  const { data: site } = await supabase\n    .from('published_sites')\n    .select('*, branding_profiles(name, theme, brand, logo_url)')\n    .eq('slug', slug)\n    .eq('status', 'published')\n    .single();\n\n  const title = site?.branding_profiles?.name || slug;\n  const theme = site?.branding_profiles?.theme || 'dark';\n  const brand = site?.branding_profiles?.brand || 'green';\n  const logoUrl = site?.branding_profiles?.logo_url;\n\n  // 🎨 Render OG SVG\n  const svgResponse = await renderOgImage({\n    title,\n    content: `${slug}.quicksites.ai`,\n    theme,\n    brand,\n    logoUrl,\n  });\n\n  const svg = await svgResponse.text();\n\n  return new Response(svg, {\n    headers: {\n      'Content-Type': 'image/svg+xml',\n      'Cache-Control': 'public, max-age=86400',\n    },\n  });\n  // const png = new Resvg(svg).render().asPng();\n\n  // 💾 Upload to Supabase Storage\n  await supabase.storage.from(bucket).upload(path, svg, {\n    contentType: 'image/png',\n    upsert: true,\n  });\n\n  // 🌐 Update og_image_url in DB\n  const publicUrl = `${process.env.NEXT_PUBLIC_SUPABASE_URL}/storage/v1/object/public/${bucket}/${path}`;\n  await supabase.from('published_sites').update({ og_image_url: publicUrl }).eq('slug', slug);\n\n  return new Response(svg, {\n    headers: {\n      'Content-Type': 'image/svg+xml',\n      'Cache-Control': 'public, max-age=86400',\n    },\n  });\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/posters/[slug]/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/print-labels-pdf/route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Readable' is defined but never used.","line":6,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":6,"endColumn":18}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// app/api/print-labels-pdf/route.ts\n\nimport { createClient } from '@supabase/supabase-js';\nimport { chromium } from 'playwright';\nimport { NextRequest } from 'next/server';\nimport { Readable } from 'stream';\n\nexport const runtime = 'nodejs'; // 👈 important: edge runtimes can't use fs or playwright\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n);\n\nexport async function POST(req: NextRequest) {\n  const { handle } = await req.json();\n\n  if (!handle || typeof handle !== 'string') {\n    return new Response('Missing or invalid handle', { status: 400 });\n  }\n\n  const { data: user } = await supabase\n    .from('users')\n    .select('id')\n    .eq('user_metadata->>handle', handle)\n    .single();\n\n  if (!user) {\n    return Response.json({ error: 'User not found' }, { status: 404 });\n  }\n\n  const { data: blocks } = await supabase.from('blocks').select('*').eq('owner_id', user.id);\n\n  const html = `\n    <html>\n      <head>\n        <style>\n          body { font-family: sans-serif; font-size: 12px; }\n          .grid { display: grid; grid-template-columns: repeat(3, 1fr); gap: 10px; }\n          .block { padding: 12px; border: 1px solid #ccc; border-radius: 4px; text-align: center; }\n          img { width: 90px; height: 90px; }\n        </style>\n      </head>\n      <body>\n        <h1>Block QR Labels: @${handle}</h1>\n        <div class=\"grid\">\n          ${blocks\n            ?.map(\n              (b) => `\n            <div class=\"block\">\n              <div style=\"font-size: 18px\">${b.emoji} ${b.title}</div>\n              <div style=\"margin: 6px 0;\">${b.message}</div>\n              <img src=\"https://quicksites.ai/api/block-qr?handle=${handle}&blockId=${b.id}\" />\n              <div style=\"font-size: 10px;\">/world/${handle}#block-${b.id}</div>\n            </div>\n          `\n            )\n            .join('')}\n        </div>\n      </body>\n    </html>\n  `;\n\n  const browser = await chromium.launch();\n  const page = await browser.newPage();\n  await page.setContent(html, { waitUntil: 'networkidle' });\n\n  const pdfBuffer = await page.pdf({\n    format: 'A4',\n    printBackground: true,\n    margin: { top: '20mm', bottom: '20mm', left: '10mm', right: '10mm' },\n  });\n\n  await browser.close();\n\n  return new Response(pdfBuffer, {\n    headers: {\n      'Content-Type': 'application/pdf',\n      'Content-Disposition': `inline; filename=\"${handle}-qr-labels.pdf\"`,\n    },\n  });\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/public-profile/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/publish-site/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/qr-poster/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/query-usecases/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/readme/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/recent-feedback/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/reflect/route.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎····req.headers.get('x-forwarded-for')·||⏎····req.headers.get('x-real-ip')·||⏎···` with `·req.headers.get('x-forwarded-for')·||·req.headers.get('x-real-ip')·||`","line":21,"column":13,"nodeType":null,"messageId":"replace","endLine":24,"endColumn":4,"fix":{"range":[616,698],"text":" req.headers.get('x-forwarded-for') || req.headers.get('x-real-ip') ||"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// app/api/reflect/route.ts\n// Use reflect() when you need to reflect on a block\n// Use getUserFromRequest() when you need the user context\n\nexport const runtime = 'nodejs';\n\nimport { createClient } from '@supabase/supabase-js';\nimport { json } from '@/lib/api/json';\n\nfunction getSupabaseClient() {\n  return createClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.SUPABASE_SERVICE_ROLE_KEY!\n  );\n}\n\nexport async function POST(req: Request): Promise<Response> {\n  const supabase = getSupabaseClient();\n\n  const token = req.headers.get('authorization')?.replace(/^Bearer\\s+/i, '') || '';\n  const ip =\n    req.headers.get('x-forwarded-for') ||\n    req.headers.get('x-real-ip') ||\n    'unknown';\n\n  const { block_id, message } = await req.json();\n\n  if (!token || !block_id) {\n    return json({ error: 'Missing token or block_id' }, { status: 400 });\n  }\n\n  const {\n    data: { user },\n    error: authError,\n  } = await supabase.auth.getUser(token);\n\n  if (authError || !user) {\n    return json({ error: 'Unauthorized' }, { status: 403 });\n  }\n\n  // ⏱️ Enforce rate limit: 1 reflection per user/block every 5 minutes\n  const fiveMinutesAgo = new Date(Date.now() - 5 * 60 * 1000).toISOString();\n\n  const { count: recentCount, error: rateError } = await supabase\n    .from('block_feedback')\n    .select('id', { count: 'exact', head: true })\n    .eq('block_id', block_id)\n    .eq('user_id', user.id)\n    .eq('action', 'reflect')\n    .gt('created_at', fiveMinutesAgo);\n\n  if (rateError) {\n    return json({ error: 'Rate check failed' }, { status: 500 });\n  }\n\n  if ((recentCount ?? 0) > 0) {\n    return json({ error: 'Rate limit: Please wait before reflecting again.' }, { status: 429 });\n  }\n\n  const { error: insertError } = await supabase.from('block_feedback').insert({\n    block_id,\n    user_id: user.id,\n    action: 'reflect',\n    message: message || null,\n    metadata: {\n      ip,\n      timestamp: new Date().toISOString(),\n    },\n  });\n\n  if (insertError) {\n    return json({ error: insertError.message }, { status: 500 });\n  }\n\n  return json({ success: true });\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/remix-dag/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/reports/download/route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'createClient' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":22}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { serviceClient as supabase } from '@/lib/supabase/service';\nexport const runtime = 'nodejs';\n\nimport { createClient } from '@supabase/supabase-js';\nimport crypto from 'node:crypto';\nimport fs from 'node:fs';\nimport path from 'node:path';\nimport { Readable } from 'node:stream';\nimport { NextRequest } from 'next/server';\n\nexport async function GET(req: NextRequest) {\n  const { searchParams } = new URL(req.url);\n  const file = searchParams.get('file');\n  const token = searchParams.get('token');\n\n  if (!file || !token) {\n    return Response.json({ error: 'Missing file or token' }, { status: 400 });\n  }\n\n  const hash = crypto.createHash('sha256').update(token).digest('hex');\n\n  const { data, error } = await supabase\n    .from('report_tokens')\n    .select('*')\n    .eq('file_name', file)\n    .eq('token_hash', hash)\n    .lte('expires_at', new Date().toISOString())\n    .maybeSingle();\n\n  if (error || !data) {\n    return Response.json({ error: 'Invalid or expired token' }, { status: 403 });\n  }\n\n  const filePath = path.resolve(`./reports/analytics/${file}`);\n  if (!fs.existsSync(filePath)) {\n    return Response.json({ error: 'File not found' }, { status: 404 });\n  }\n\n  const fileStream = fs.createReadStream(filePath);\n  const readable = new Readable().wrap(fileStream);\n\n  return new Response(readable as any, {\n    headers: {\n      'Content-Disposition': `attachment; filename=\"${file}\"`,\n      'Content-Type': 'application/pdf',\n    },\n  });\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/request-support/route.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `{·success:·true·},·{·status:·200,·headers:·{·'Content-Type':·'application/json'·}·});⏎` with `⏎······{·success:·true·},⏎······{·status:·200,·headers:·{·'Content-Type':·'application/json'·}·}⏎····);`","line":56,"column":26,"nodeType":null,"messageId":"replace","endLine":57,"endColumn":1,"fix":{"range":[1643,1729],"text":"\n      { success: true },\n      { status: 200, headers: { 'Content-Type': 'application/json' } }\n    );"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// app/api/request-support/route.ts\n// Use requestSupport() when you need to request support\n// Use getUserFromRequest() when you need the user context\n\nexport const runtime = 'nodejs';\n\nimport { createClient } from '@supabase/supabase-js';\nimport { NextRequest } from 'next/server';\nimport type { Database } from '@/types/supabase';\n\nconst supabase = createClient<Database>(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n);\n\nexport async function POST(req: NextRequest) {\n  try {\n    const token = req.headers.get('authorization')?.replace('Bearer ', '')?.trim();\n    const { receiver_handle, slug, message } = await req.json();\n\n    if (!token || !receiver_handle) {\n      return Response.json(\n        { error: 'Unauthorized' },\n        { status: 401, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const {\n      data: { user },\n      error: authError,\n    } = await supabase.auth.getUser(token);\n\n    if (authError || !user?.id) {\n      console.warn('[❌ Auth Error]', authError?.message);\n      return Response.json(\n        { error: 'Unauthorized' },\n        { status: 401, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const { error: insertError } = await supabase.from('support_requests').insert({\n      requester_id: user.id,\n      receiver_handle,\n      slug,\n      message,\n    });\n\n    if (insertError) {\n      console.error('[❌ Insert Error]', insertError.message);\n      return Response.json(\n        { error: insertError.message },\n        { status: 500, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    return Response.json({ success: true }, { status: 200, headers: { 'Content-Type': 'application/json' } });\n\n  } catch (err: any) {\n    console.error('[❌ Unexpected Error]', err);\n    return Response.json(\n      { error: err?.message || 'Unknown server error' },\n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/resend-welcome-email/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/reverse-geocode/route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'err' is defined but never used.","line":25,"column":12,"nodeType":null,"messageId":"unusedVar","endLine":25,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export const runtime = 'nodejs';\n\nimport { NextRequest } from 'next/server';\n\nexport async function GET(req: NextRequest) {\n  const { searchParams } = new URL(req.url);\n  const lat = searchParams.get('lat');\n  const lon = searchParams.get('lon');\n\n  if (!lat || !lon) {\n    return Response.json({ error: 'Missing lat or lon' }, { status: 400 });\n  }\n\n  try {\n    const result = await fetch(\n      `https://api.opencagedata.com/geocode/v1/json?q=${lat}+${lon}&key=${process.env.OPENCAGE_KEY}`\n    );\n    const data = await result.json();\n    const components = data.results?.[0]?.components || {};\n\n    return Response.json({\n      city: components.city || components.town || components.village || null,\n      state: components.state || null,\n    });\n  } catch (err: any) {\n    return Response.json({ error: 'Failed to reverse geocode' }, { status: 500 });\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/screenshot/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/send-lead-email/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/send-thanks/route.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎`","line":57,"column":1,"nodeType":null,"messageId":"delete","endLine":58,"endColumn":1,"fix":{"range":[1779,1780],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// app/api/send-thanks/route.ts\n// Use sendThanks() when you need to send a thank you note\n// Use getUserFromRequest() when you need the user context\n\nexport const runtime = 'nodejs';\n\nimport { createClient } from '@supabase/supabase-js';\nimport { NextRequest } from 'next/server';\nimport type { Database } from '@/types/supabase';\n\nconst supabase = createClient<Database>(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n);\n\nexport async function POST(req: NextRequest) {\n  try {\n    const token = req.headers.get('Authorization')?.replace('Bearer ', '')?.trim();\n    const { recipient_id, block_id, message } = await req.json();\n\n    if (!token || !recipient_id || !block_id || !message) {\n      return Response.json(\n        { error: 'Missing fields: token, recipient_id, block_id, or message' },\n        { status: 400, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const {\n      data: { user },\n      error: authError,\n    } = await supabase.auth.getUser(token);\n\n    if (authError || !user?.id) {\n      console.warn('[❌ Auth Error]', authError?.message);\n      return Response.json(\n        { error: 'Unauthorized' },\n        { status: 401, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const { error: insertError } = await supabase.from('thank_you_notes').insert({\n      sender_id: user.id,\n      recipient_id,\n      block_id,\n      message,\n    });\n\n    if (insertError) {\n      console.error('[❌ Insert Error]', insertError.message);\n      return Response.json(\n        { error: insertError.message },\n        { status: 500, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    return Response.json({ success: true }, { headers: { 'Content-Type': 'application/json' } });\n\n  } catch (err: any) {\n    console.error('[❌ Unexpected sendThanks Error]', err);\n    return Response.json(\n      { error: err?.message || 'Internal Server Error' },\n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/send-weekly-digest/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/session-log/route.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·data:·{·user·}` with `⏎····data:·{·user·},⏎·`","line":9,"column":10,"nodeType":null,"messageId":"replace","endLine":9,"endColumn":25,"fix":{"range":[361,376],"text":"\n    data: { user },\n "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎····.from('user_profiles')⏎····.update({·last_seen_at:·now·})⏎····` with `.from('user_profiles').update({·last_seen_at:·now·})`","line":19,"column":17,"nodeType":null,"messageId":"replace","endLine":22,"endColumn":5,"fix":{"range":[712,779],"text":".from('user_profiles').update({ last_seen_at: now })"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"// app/api/session-log/route.ts\nimport { createRouteHandlerClient } from '@supabase/auth-helpers-nextjs';\nimport { cookies } from 'next/headers';\nimport { NextResponse } from 'next/server';\nimport type { Database } from '@/types/supabase';\n\nexport async function POST(req: Request) {\n  const supabase = createRouteHandlerClient<Database>({ cookies });\n  const { data: { user } } = await supabase.auth.getUser();\n\n  if (!user) {\n    return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n  }\n\n  const now = new Date().toISOString();\n  const userAgent = req.headers.get('user-agent') ?? 'unknown';\n  const ip = req.headers.get('x-forwarded-for')?.split(',')[0].trim() ?? 'unknown';\n\n  await supabase\n    .from('user_profiles')\n    .update({ last_seen_at: now })\n    .eq('user_id', user.id);\n\n  await supabase.from('session_logs').insert({\n    type: 'login_callback',\n    email: user.email,\n    user_id: user.id,\n    user_agent: userAgent,\n    ip,\n    timestamp: now,\n  });\n\n  return NextResponse.json({ success: true });\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/session/route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'req' is defined but never used. Allowed unused args must match /^_/u.","line":9,"column":27,"nodeType":null,"messageId":"unusedVar","endLine":9,"endColumn":30}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// app/api/session/route.ts\nimport { createRouteHandlerClient } from '@supabase/auth-helpers-nextjs';\nimport { cookies } from 'next/headers';\nimport type { NextRequest } from 'next/server';\nimport type { Database } from '@/types/supabase';\n\nexport const runtime = 'nodejs';\n\nexport async function GET(req: NextRequest) {\n  const supabase = createRouteHandlerClient<Database>({ cookies });\n\n  const {\n    data: { user },\n    error,\n  } = await supabase.auth.getUser();\n\n  if (error) {\n    return Response.json({ error: error.message }, { status: 401 });\n  }\n\n  if (!user) {\n    return Response.json({ error: 'No session found' }, { status: 401 });\n  }\n\n  return Response.json({\n    user: {\n      id: user.id,\n      email: user.email,\n      role: user.user_metadata?.role ?? 'viewer',\n    },\n  });\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/sitemap-index.xml/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/sitemap.hreflang.xml/route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'base' is defined but never used. Allowed unused args must match /^_/u.","line":29,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":29,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export const runtime = 'nodejs';\n\nimport { supabase } from '@/admin/lib/supabaseClient';\nimport { NextRequest } from 'next/server';\n\nexport async function GET(_req: NextRequest) {\n  const baseUrl = 'https://quicksites.ai';\n\n  const { data: domains } = await supabase\n    .from('domains')\n    .select('domain, lang')\n    .eq('is_claimed', true);\n\n  const langGroups = (domains || []).reduce<\n    Record<string, Array<{ domain: string; lang: string }>>\n  >((acc, d) => {\n    const base = d.domain.replace(/\\.[a-z]+$/, '');\n    if (!acc[base]) acc[base] = [];\n    acc[base].push({ ...d, lang: d.lang || 'en' });\n    return acc;\n  }, {});\n\n  const xml = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<urlset\n  xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\"\n  xmlns:xhtml=\"http://www.w3.org/1999/xhtml\"\n>\n${Object.entries(langGroups)\n  .map(([base, versions]) => {\n    const defaultLang = versions.find((v) => v.lang === 'en') || versions[0];\n    const loc = `${baseUrl}/${defaultLang.lang}/site/${defaultLang.domain}`;\n    const links = versions\n      .map(\n        (v) =>\n          `<xhtml:link rel=\"alternate\" hreflang=\"${v.lang}\" href=\"${baseUrl}/${v.lang}/site/${v.domain}\" />`\n      )\n      .join('\\n    ');\n    return `<url>\n  <loc>${loc}</loc>\n  ${links}\n</url>`;\n  })\n  .join('\\n')}\n</urlset>`;\n\n  return new Response(xml, {\n    headers: {\n      'Content-Type': 'application/xml',\n    },\n  });\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/sitemap.xml/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/sites/[id]/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/sites/create/route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'baseSlug' is defined but never used.","line":12,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":12,"endColumn":18},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·location?.toLowerCase().split(',')[0]` with `⏎····location⏎······?.toLowerCase()⏎······.split(',')[0]⏎······`","line":14,"column":14,"nodeType":null,"messageId":"replace","endLine":14,"endColumn":52,"fix":{"range":[539,577],"text":"\n    location\n      ?.toLowerCase()\n      .split(',')[0]\n      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎····template_version_id,⏎····business_name,⏎····location,⏎····domain,⏎····slug:·clientSlug,⏎····email,⏎·` with `·template_version_id,·business_name,·location,·domain,·slug:·clientSlug,·email`","line":21,"column":10,"nodeType":null,"messageId":"replace","endLine":28,"endColumn":2,"fix":{"range":[792,897],"text":" template_version_id, business_name, location, domain, slug: clientSlug, email"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··base:·string,⏎··supabase:·SupabaseClient⏎` with `base:·string,·supabase:·SupabaseClient`","line":144,"column":35,"nodeType":null,"messageId":"replace","endLine":147,"endColumn":1,"fix":{"range":[3876,3920],"text":"base: string, supabase: SupabaseClient"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎······.from('sites')⏎······.select('id')⏎······.eq('slug',·slug)⏎······` with `.from('sites').select('id').eq('slug',·slug)`","line":151,"column":36,"nodeType":null,"messageId":"replace","endLine":155,"endColumn":7,"fix":{"range":[4031,4103],"text":".from('sites').select('id').eq('slug', slug)"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":4,"source":"// app/api/sites/create/route.ts\n// Use createSite() when you need to create a site\n// Use getUserFromRequest() when you need the user context\n\nexport const runtime = 'nodejs';\n\nimport { json } from '@/lib/api/json';\nimport { generateBaseSlug } from '@/lib/slugHelpers';\nimport { getSupabase } from '@/lib/supabase/server';\nimport type { SupabaseClient } from '@supabase/supabase-js';\n\nfunction baseSlug(businessName: string, location?: string): string {\n  const name = businessName.toLowerCase().replace(/[^a-z0-9]+/g, '-');\n  const loc = location?.toLowerCase().split(',')[0].replace(/[^a-z0-9]+/g, '-') || '';\n  const raw = `${name}-${loc}`.replace(/^-+|-+$/g, '');\n  return raw.replace(/--+/g, '-');\n}\n\nexport async function POST(req: Request) {\n  const body = await req.json();\n  const {\n    template_version_id,\n    business_name,\n    location,\n    domain,\n    slug: clientSlug,\n    email,\n  } = body;\n\n  const supabase = await getSupabase();\n\n  const base = generateBaseSlug(business_name, location);\n  const slug = clientSlug || (await generateUniqueSlug(base, supabase));\n\n  const {\n    data: { user },\n    error: authError,\n  } = await supabase.auth.getUser();\n\n  if (authError || !user) {\n    return json({ error: 'Unauthorized' }, { status: 401 });\n  }\n\n  // ⏳ Rate limiting: one site every 10 minutes per user\n  const recent = await supabase\n    .from('sites')\n    .select('created_at')\n    .eq('created_by', user.id)\n    .order('created_at', { ascending: false })\n    .limit(1)\n    .maybeSingle();\n\n  if (recent?.data && Date.now() - new Date(recent.data.created_at).getTime() < 10 * 60 * 1000) {\n    return json({ error: 'Too soon — please wait 10 minutes before creating another site.' });\n  }\n\n  // 🧱 Fetch template version\n  const { data: versions, error: fetchError } = await supabase\n    .from('template_versions')\n    .select('*')\n    .eq('id', template_version_id)\n    .limit(1);\n\n  if (fetchError || !versions?.length) {\n    return json({ error: 'Template not found' });\n  }\n\n  const version = versions[0];\n  const full_data = version.full_data;\n\n  if (!full_data) {\n    return json({ error: 'Template data missing' });\n  }\n\n  try {\n    const { data: newSite, error: insertError } = await supabase\n      .from('sites')\n      .insert([\n        {\n          slug,\n          domain,\n          business_name,\n          location,\n          template_version_id,\n          content: full_data,\n          created_by: user.id,\n          claimed_email: email || null,\n        },\n      ])\n      .select()\n      .single();\n\n    if (insertError) {\n      throw insertError;\n    }\n\n    // ✉️ Send welcome email if provided\n    if (email) {\n      try {\n        const res = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL}/api/resend-welcome-email`, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            email,\n            name: business_name,\n            slug: newSite.slug,\n            templateName: version.template_name || 'a QuickSites template',\n          }),\n        });\n\n        if (!res.ok) {\n          console.warn('⚠️ Failed to send welcome email:', await res.text());\n        }\n      } catch (err) {\n        console.warn('⚠️ Welcome email error:', err);\n      }\n    }\n\n    return json(newSite);\n  } catch (insertError: any) {\n    console.error('Insert failed:', insertError.message);\n\n    await supabase.from('deploy_errors').insert({\n      context: 'site_create',\n      payload: {\n        email,\n        domain,\n        business_name,\n        location,\n        template_version_id,\n        error: insertError.message,\n        user_id: user.id,\n      },\n    });\n\n    return json({ error: 'Failed to create site' }, { status: 500 });\n  }\n}\n\nexport async function GET() {\n  return json({ message: '👋 POST to this endpoint to create a site.' });\n}\n\nasync function generateUniqueSlug(\n  base: string,\n  supabase: SupabaseClient\n): Promise<string> {\n  let slug = base;\n  let attempt = 1;\n  while (true) {\n    const { data } = await supabase\n      .from('sites')\n      .select('id')\n      .eq('slug', slug)\n      .maybeSingle();\n\n    if (!data) break;\n    attempt += 1;\n    slug = `${base}-${attempt}`;\n  }\n  return slug;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/sites/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/sites/save/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/supporters/route.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `typeof·supportMap` with `(typeof·supportMap)`","line":68,"column":39,"nodeType":null,"messageId":"replace","endLine":68,"endColumn":56,"fix":{"range":[2255,2272],"text":"(typeof supportMap)"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎····(profiles·??·[]).map((u)·=>·[u.id,·u.user_metadata·??·{}])⏎··` with `(profiles·??·[]).map((u)·=>·[u.id,·u.user_metadata·??·{}])`","line":93,"column":41,"nodeType":null,"messageId":"replace","endLine":95,"endColumn":3,"fix":{"range":[2956,3022],"text":"(profiles ?? []).map((u) => [u.id, u.user_metadata ?? {}])"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"// app/api/supporters/route.ts\n// Use supporters() when you need to get the supporters of a block\n// Use getUserFromRequest() when you need the user context\n\nexport const runtime = 'nodejs';\n\nimport { createClient } from '@supabase/supabase-js';\nimport { json } from '@/lib/api/json';\nimport type { Database } from '@/types/supabase';\n\nconst supabase = createClient<Database>(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n);\n\nexport async function GET(req: Request) {\n  const { searchParams } = new URL(req.url || '');\n  const handle = searchParams.get('handle');\n  const actionFilter = searchParams.get('action'); // optional: cheer, reflect, echo\n  const since = searchParams.get('since'); // optional: ISO timestamp\n\n  // ✅ 1. Require auth\n  const token = req.headers.get('authorization')?.replace('Bearer ', '').trim();\n  if (!token) return json({ error: 'Unauthorized' }, { status: 401 });\n\n  const {\n    data: { user },\n    error: authError,\n  } = await supabase.auth.getUser(token);\n\n  if (authError || !user) return json({ error: 'Unauthorized' }, { status: 401 });\n\n  // ✅ 2. Validate input\n  if (!handle) return json({ error: 'Missing handle' }, { status: 400 });\n\n  // ✅ 3. Lookup blocks owned by the handle\n  const { data: blocks, error: blocksError } = await supabase\n    .from('blocks')\n    .select('id')\n    .eq('owner_handle', handle);\n\n  if (blocksError) return json({ error: blocksError.message }, { status: 500 });\n\n  const blockIds = blocks?.map((b) => b.id) ?? [];\n  if (blockIds.length === 0) return json([]);\n\n  // ✅ 4. Build filtered feedback query\n  let query = supabase\n    .from('block_feedback')\n    .select('user_id, action, created_at')\n    .in('block_id', blockIds);\n\n  if (actionFilter) query = query.eq('action', actionFilter);\n  if (since) query = query.gte('created_at', since);\n\n  const { data: feedback, error: feedbackError } = await query;\n\n  if (feedbackError) return json({ error: feedbackError.message }, { status: 500 });\n\n  // ✅ 5. Aggregate support counts\n  const supportMap: Record<\n    string,\n    { cheer: number; reflect: number; echo: number; latest: string }\n  > = {};\n\n  for (const fb of feedback) {\n    const uid = fb.user_id;\n    const action = fb.action as keyof typeof supportMap[string];\n\n    if (!supportMap[uid]) {\n      supportMap[uid] = { cheer: 0, reflect: 0, echo: 0, latest: fb.created_at };\n    }\n\n    if (supportMap[uid][action] !== undefined) {\n      supportMap[uid][action]++;\n    }\n\n    if (new Date(fb.created_at) > new Date(supportMap[uid].latest)) {\n      supportMap[uid].latest = fb.created_at;\n    }\n  }\n\n  const userIds = Object.keys(supportMap);\n\n  // ✅ 6. Fetch user profiles\n  const { data: profiles, error: profileError } = await supabase\n    .from('users')\n    .select('id, user_metadata')\n    .in('id', userIds);\n\n  if (profileError) return json({ error: profileError.message }, { status: 500 });\n\n  const profileMap = Object.fromEntries(\n    (profiles ?? []).map((u) => [u.id, u.user_metadata ?? {}])\n  );\n\n  // ✅ 7. Compose final output\n  const result = userIds.map((uid) => ({\n    user_id: uid,\n    username: profileMap[uid]?.username ?? null,\n    avatar_url: profileMap[uid]?.avatar_url ?? null,\n    ...supportMap[uid],\n  }));\n\n  return json(result);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/template-api/index/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/template-api/route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'res' is defined but never used. Allowed unused args must match /^_/u.","line":11,"column":61,"nodeType":null,"messageId":"unusedVar","endLine":11,"endColumn":64}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// pages/api/template-api/index.ts\nimport { createClient } from '@supabase/supabase-js';\nimport { json } from '@/lib/api/json';\nimport { NextApiRequest, NextApiResponse } from 'next';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport default async function handler(_req: NextApiRequest, res: NextApiResponse) {\n  console.log('[API] /api/template-api hit');\n\n  const { data, error } = await supabase.rpc('get_latest_template_versions');\n\n  if (error) {\n    console.error('[API ERROR]', error.message);\n    return json({ error: error.message });\n  }\n\n  const enriched = (data || []).map((item: any) => ({\n    ...item,\n    description: item.commit_message || 'No description provided',\n  }));\n\n  console.log(`[API] returning ${enriched.length} templates`);\n  json(enriched);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/templates/history.ts/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/templates/history/route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'res' is defined but never used. Allowed unused args must match /^_/u.","line":11,"column":60,"nodeType":null,"messageId":"unusedVar","endLine":11,"endColumn":63}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// /api/templates/history?name=towing-basic\nimport { createClient } from '@supabase/supabase-js';\nimport { json } from '@/lib/api/json';\nimport { NextApiRequest, NextApiResponse } from 'next';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\n  const { name } = req.query;\n\n  if (!name || typeof name !== 'string') {\n    return json({ error: 'Missing or invalid template name.' });\n  }\n\n  const { data, error } = await supabase\n    .from('template_versions')\n    .select('*')\n    .eq('template_name', name)\n    .order('saved_at', { ascending: false });\n\n  if (error) {\n    console.error('[Supabase] Error fetching template_versions:', error);\n    return json({ error: error.message });\n  }\n\n  json(data);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/templates/list/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/templates/rename/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/templates/seed/route.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·createTemplateFromPresetWithBlocks,·templatePresets·` with `⏎··createTemplateFromPresetWithBlocks,⏎··templatePresets,⏎`","line":4,"column":9,"nodeType":null,"messageId":"replace","endLine":4,"endColumn":62,"fix":{"range":[141,194],"text":"\n  createTemplateFromPresetWithBlocks,\n  templatePresets,\n"}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `······`","line":12,"column":1,"nodeType":null,"messageId":"delete","endLine":12,"endColumn":7,"fix":{"range":[445,451],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎····.from('templates')⏎····.insert(templates)⏎····` with `.from('templates').insert(templates)`","line":26,"column":41,"nodeType":null,"messageId":"replace","endLine":29,"endColumn":5,"fix":{"range":[904,955],"text":".from('templates').insert(templates)"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"// app/api/templates/seed/route.ts\nimport { NextResponse } from 'next/server';\nimport { createClient } from '@supabase/supabase-js';\nimport { createTemplateFromPresetWithBlocks, templatePresets } from '@/lib/createTemplateFromPreset';\n//  import type { Database } from '@/types/supabase';\n\nexport async function POST() {\n  const supabase = createClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.SUPABASE_SERVICE_ROLE_KEY!\n  );\n      \n  // Optional: check for auth\n  const {\n    data: { user },\n  } = await supabase.auth.getUser();\n\n  if (!user) {\n    return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n  }\n\n  // Seed all available presets\n  const industryList = Object.keys(templatePresets) as (keyof typeof templatePresets)[];\n  const templates = industryList.map((industry) => createTemplateFromPresetWithBlocks(industry));\n\n  const { data, error } = await supabase\n    .from('templates')\n    .insert(templates)\n    .select();\n\n  if (error) {\n    return NextResponse.json({ error: error.message }, { status: 500 });\n  }\n\n  return NextResponse.json({ success: true, count: data.length, templates: data });\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/test-login/route.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `process.env.NEXT_PUBLIC_SUPABASE_URL!,·process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!` with `⏎····process.env.NEXT_PUBLIC_SUPABASE_URL!,⏎····process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!⏎··`","line":4,"column":33,"nodeType":null,"messageId":"replace","endLine":4,"endColumn":114,"fix":{"range":[148,229],"text":"\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n  "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// /app/api/test-login/route.ts\nimport { createClient } from '@supabase/supabase-js';\nexport async function GET() {\n  const supabase = createClient(process.env.NEXT_PUBLIC_SUPABASE_URL!, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!);\n  const { error } = await supabase.auth.signInWithOtp({\n    email: 'sandonjurowski@gmail.com',\n    options: { emailRedirectTo: 'http://localhost:3000/login' },\n  });\n  return new Response(JSON.stringify({ error }), { status: 200 });\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/update-campaign/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/update-profile/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/user-referrals/route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'logs' is assigned a value but never used.","line":20,"column":17,"nodeType":null,"messageId":"unusedVar","endLine":20,"endColumn":21}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export const runtime = 'nodejs';\n\nimport { createClient } from '@supabase/supabase-js';\nimport { getBadgeForReferrals } from '@/lib/getBadgeForReferrer';\nimport { json } from '@/lib/api/json';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n);\n\nexport async function GET(req: Request) {\n  const { searchParams } = new URL(req.url);\n  const email = searchParams.get('email');\n\n  if (!email) {\n    return json({ error: 'Missing email' }, { status: 400 });\n  }\n\n  const { data: logs, count } = await supabase\n    .from('referral_logs')\n    .select('*', { count: 'exact', head: false }) // explicitly return count\n    .eq('ref', email);\n\n  const { data: user } = await supabase\n    .from('users')\n    .select('user_metadata')\n    .eq('email', email)\n    .maybeSingle();\n\n  const badge = getBadgeForReferrals(count ?? 0);\n\n  return json({\n    count: count ?? 0,\n    avatar: user?.user_metadata?.avatar_url || '',\n    bio: user?.user_metadata?.bio || '',\n    badge,\n  });\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/vector/summary/route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'req' is defined but never used. Allowed unused args must match /^_/u.","line":4,"column":27,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":30},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `⏎·······`","line":24,"column":29,"nodeType":null,"messageId":"insert","endLine":24,"endColumn":29,"fix":{"range":[808,808],"text":"\n       "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import { NextRequest, NextResponse } from 'next/server';\nimport { qdrant, COLLECTION } from '@/lib/useVectorDB';\n\nexport async function GET(req: NextRequest) {\n  try {\n    const info = await qdrant.getCollection(COLLECTION);\n\n    const scroll = await qdrant.scroll(COLLECTION, {\n      limit: 500, // adjust if you want to scan more\n      with_payload: true,\n      with_vector: false,\n    });\n\n    const tally = {\n      total: scroll.points.length,\n      typeCounts: {} as Record<string, number>,\n      industryCounts: {} as Record<string, number>,\n      toneCounts: {} as Record<string, number>,\n    };\n\n    scroll.points.forEach((p) => {\n      const payload = p.payload as any;\n      if (payload?.type) tally.typeCounts[payload.type] = (tally.typeCounts[payload.type] || 0) + 1;\n      if (payload?.industry) tally.industryCounts[payload.industry] = (tally.industryCounts[payload.industry] || 0) + 1;\n      if (payload?.tone) tally.toneCounts[payload.tone] = (tally.toneCounts[payload.tone] || 0) + 1;\n    });\n\n    return NextResponse.json({\n      name: COLLECTION,\n      vectorsCount: info.vectors_count,\n      vectorSize: info.config?.params?.vectors?.size,\n      status: info.status,\n      sampleSize: scroll.points.length,\n      ...tally,\n    });\n  } catch (err: any) {\n    console.error('❌ Vector summary error:', err);\n    return NextResponse.json({ error: err.message || 'Unexpected error' }, { status: 500 });\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/verify-recaptcha/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/weekly-digest-live/route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'supabase' is assigned a value but never used.","line":7,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":7,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// app/api/weekly-digest-live/route.ts\n\nimport { createClient } from '@supabase/supabase-js';\nimport { NextRequest } from 'next/server';\nimport OpenAI from 'openai';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n);\n\nconst openai = new OpenAI({\n  apiKey: process.env.OPENAI_API_KEY!,\n});\n\nexport async function GET(req: NextRequest) {\n  const { searchParams } = new URL(req.url);\n  const user_id = searchParams.get('user_id');\n\n  if (!user_id) {\n    return Response.json({ error: 'Missing user_id' }, { status: 400 });\n  }\n\n  const feedbackRes = await fetch(\n    `${process.env.NEXT_PUBLIC_SITE_URL || 'http://localhost:3000'}/api/feedback-summary?user_id=${user_id}`\n  );\n  const summary = await feedbackRes.json();\n\n  const prompt = `\nYou are an encouraging coach AI. Write a 2-3 paragraph weekly summary of this user's behavior.\nHighlight check-in trends, mention positive feedback received, and encourage further progress.\n\nCheck-ins:\n${summary.checkin_history.map((c: any) => `• ${c.slug} at ${c.created_at}`).join('\\n')}\n\nFeedback:\n${summary.received_feedback.map((f: any) => `• ${f.action} on ${f.block_id.slice(0, 8)}: ${f.message || ''}`).join('\\n')}\n`;\n\n  const chat = await openai.chat.completions.create({\n    model: 'gpt-4',\n    messages: [\n      { role: 'system', content: 'You generate weekly coaching summaries from activity logs.' },\n      { role: 'user', content: prompt },\n    ],\n  });\n\n  const digest = chat.choices[0].message.content;\n  return Response.json({ digest });\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/api/weekly-digest/route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'supabase' is assigned a value but never used.","line":7,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":7,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export const runtime = 'nodejs';\n\nimport { createClient } from '@supabase/supabase-js';\nimport { json } from '@/lib/api/json';\nimport { NextRequest } from 'next/server';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n);\n\n// Mocked digest message generator\nfunction generateDigestMock(summary: any) {\n  const feedbackCount = summary.received_feedback.length;\n  const checkinCount = summary.checkin_history.length;\n  const topHabit = summary.checkin_history[0]?.slug || 'your habit';\n\n  return `This week, you checked in ${checkinCount} times, with a focus on \"${topHabit}\". You've received ${feedbackCount} supportive gestures. Keep up the great momentum — you're building a powerful rhythm. 🌱`;\n}\n\nexport async function GET(req: NextRequest) {\n  const { searchParams } = new URL(req.url);\n  const user_id = searchParams.get('user_id');\n\n  if (!user_id) {\n    return json({ error: 'Missing user_id' }, { status: 400 });\n  }\n\n  try {\n    const base = process.env.NEXT_PUBLIC_BASE_URL || 'https://quicksites.ai';\n    const response = await fetch(`${base}/api/feedback-summary?user_id=${user_id}`);\n    const summary = await response.json();\n\n    const digest = generateDigestMock(summary);\n    return json({ digest });\n  } catch (err: any) {\n    console.error('Digest generation failed:', err);\n    return json({ error: 'Failed to generate digest' }, { status: 500 });\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/auth/callback/page.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `(⏎····<div·className=\"p-4·text-white\">⏎······Logging·you·in...⏎····</div>⏎··)` with `<div·className=\"p-4·text-white\">Logging·you·in...</div>`","line":34,"column":10,"nodeType":null,"messageId":"replace","endLine":38,"endColumn":4,"fix":{"range":[924,1001],"text":"<div className=\"p-4 text-white\">Logging you in...</div>"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use client';\n\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { supabase } from '@/lib/supabase/client';\n\nexport default function AuthCallback() {\n  const router = useRouter();\n\n  useEffect(() => {\n    const run = async () => {\n      const hash = window.location.hash;\n      const fullUrl = `${window.location.origin}/auth/callback${hash}`;\n\n      if (!hash.includes('access_token') && process.env.NODE_ENV !== 'development') {\n        console.warn('[⚠️ Missing access_token in hash]');\n        router.replace('/login?error=missing_token');\n        return;\n      }\n\n      const { error } = await supabase.auth.exchangeCodeForSession(fullUrl);\n\n      if (error) {\n        console.error('[❌ Exchange Failed]', error);\n        router.replace('/login?error=exchange_failed');\n      } else {\n        router.replace('/admin/dashboard');\n      }\n    };\n\n    run();\n  }, [router]);\n\n  return (\n    <div className=\"p-4 text-white\">\n      Logging you in...\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/blog/page.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎····getStaticBlogParams,⏎····stringifyBlogParams,⏎····blogQuerySchema,⏎·` with `·getStaticBlogParams,·stringifyBlogParams,·blogQuerySchema`","line":2,"column":9,"nodeType":null,"messageId":"replace","endLine":6,"endColumn":2,"fix":{"range":[29,102],"text":" getStaticBlogParams, stringifyBlogParams, blogQuerySchema"}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'stringifyBlogParams' is defined but never used.","line":4,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":24},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":7,"column":1,"nodeType":null,"messageId":"delete","endLine":7,"endColumn":3,"fix":{"range":[137,139],"text":""}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'QueryButton' is defined but never used.","line":7,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":7,"endColumn":21},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":8,"column":1,"nodeType":null,"messageId":"delete","endLine":8,"endColumn":3,"fix":{"range":[192,194],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":9,"column":1,"nodeType":null,"messageId":"delete","endLine":9,"endColumn":3,"fix":{"range":[219,221],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":10,"column":1,"nodeType":null,"messageId":"delete","endLine":10,"endColumn":3,"fix":{"range":[275,277],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":11,"column":1,"nodeType":null,"messageId":"delete","endLine":11,"endColumn":3,"fix":{"range":[332,334],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":12,"column":1,"nodeType":null,"messageId":"delete","endLine":12,"endColumn":3,"fix":{"range":[335,337],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":13,"column":1,"nodeType":null,"messageId":"delete","endLine":13,"endColumn":3,"fix":{"range":[382,384],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":14,"column":1,"nodeType":null,"messageId":"delete","endLine":14,"endColumn":3,"fix":{"range":[385,387],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··const·comboPresets:·Array<Partial<z.infer<typeof·blogQuerySchema>>>·=·categories.flatMap(` with `const·comboPresets:·Array<Partial<z.infer<typeof·blogQuerySchema>>>·=·categories.flatMap(⏎··`","line":15,"column":1,"nodeType":null,"messageId":"replace","endLine":15,"endColumn":92,"fix":{"range":[426,517],"text":"const comboPresets: Array<Partial<z.infer<typeof blogQuerySchema>>> = categories.flatMap(\n  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":20,"column":1,"nodeType":null,"messageId":"delete","endLine":20,"endColumn":3,"fix":{"range":[633,635],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":21,"column":1,"nodeType":null,"messageId":"delete","endLine":21,"endColumn":3,"fix":{"range":[638,640],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":22,"column":1,"nodeType":null,"messageId":"delete","endLine":22,"endColumn":3,"fix":{"range":[641,643],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":23,"column":3,"nodeType":null,"messageId":"delete","endLine":23,"endColumn":5,"fix":{"range":[692,694],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":24,"column":1,"nodeType":null,"messageId":"delete","endLine":24,"endColumn":3,"fix":{"range":[736,738],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":25,"column":1,"nodeType":null,"messageId":"delete","endLine":25,"endColumn":3,"fix":{"range":[740,742],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":26,"column":1,"nodeType":null,"messageId":"delete","endLine":26,"endColumn":3,"fix":{"range":[743,745],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":27,"column":3,"nodeType":null,"messageId":"delete","endLine":27,"endColumn":5,"fix":{"range":[842,844],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":28,"column":1,"nodeType":null,"messageId":"delete","endLine":28,"endColumn":3,"fix":{"range":[896,898],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":29,"column":5,"nodeType":null,"messageId":"delete","endLine":29,"endColumn":7,"fix":{"range":[929,931],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":30,"column":5,"nodeType":null,"messageId":"delete","endLine":30,"endColumn":7,"fix":{"range":[980,982],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":31,"column":1,"nodeType":null,"messageId":"delete","endLine":31,"endColumn":3,"fix":{"range":[1012,1014],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":32,"column":1,"nodeType":null,"messageId":"delete","endLine":32,"endColumn":3,"fix":{"range":[1015,1017],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `····`","line":33,"column":1,"nodeType":null,"messageId":"replace","endLine":33,"endColumn":7,"fix":{"range":[1028,1034],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":34,"column":1,"nodeType":null,"messageId":"delete","endLine":34,"endColumn":3,"fix":{"range":[1041,1043],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":35,"column":3,"nodeType":null,"messageId":"delete","endLine":35,"endColumn":5,"fix":{"range":[1141,1143],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":36,"column":1,"nodeType":null,"messageId":"delete","endLine":36,"endColumn":3,"fix":{"range":[1146,1148],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":37,"column":1,"nodeType":null,"messageId":"delete","endLine":37,"endColumn":3,"fix":{"range":[1150,1152],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":28,"source":"// app/blog/page.tsx\nimport {\n    getStaticBlogParams,\n    stringifyBlogParams,\n    blogQuerySchema,\n  } from '@/lib/querySchemas/blog';\n  import QueryButton from '@/components/query-button';\n  import { z } from 'zod';\n  const categories = ['ai', 'design', 'code'] as const;\n  const tags = ['', 'transformers', 'ux', 'typescript'];\n  \n  type Category = (typeof categories)[number];\n  \n  // 👇 Ensure combos match schema types\n  const comboPresets: Array<Partial<z.infer<typeof blogQuerySchema>>> = categories.flatMap((category) =>\n    tags.map((tag) => ({\n      category: category as Category,\n      ...(tag ? { tag } : {}),\n    }))\n  );\n  \n  export async function generateStaticParams() {\n    return getStaticBlogParams(comboPresets);\n  }\n  \n  export function generateMetadata({ searchParams }: { searchParams: Record<string, string> }) {\n    const parsed = blogQuerySchema.parse(searchParams);\n    const title = parsed.tag\n      ? `Blog: ${parsed.category} - ${parsed.tag}`\n      : `Blog: ${parsed.category}`;\n  \n    return {\n      title,\n      description: `Articles on ${parsed.category}${parsed.tag ? ' tagged ' + parsed.tag : ''}.`,\n    };\n  }\n  ","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/dashboard/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/edit/[slug]/not-found.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··return·(⏎······<div·className=\"p-6·text-red-500·text-sm\">⏎········🚫·Template·not·found·or·access·denied.⏎······</div>⏎····)` with `return·<div·className=\"p-6·text-red-500·text-sm\">🚫·Template·not·found·or·access·denied.</div>`","line":3,"column":3,"nodeType":null,"messageId":"replace","endLine":7,"endColumn":6,"fix":{"range":[72,198],"text":"return <div className=\"p-6 text-red-500 text-sm\">🚫 Template not found or access denied.</div>"}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":8,"column":1,"nodeType":null,"messageId":"delete","endLine":8,"endColumn":3,"fix":{"range":[200,202],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":9,"column":1,"nodeType":null,"messageId":"delete","endLine":9,"endColumn":3,"fix":{"range":[204,206],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"// app/edit/[slug]/not-found.tsx\nexport default function NotFound() {\n    return (\n      <div className=\"p-6 text-red-500 text-sm\">\n        🚫 Template not found or access denied.\n      </div>\n    );\n  }\n  ","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/edit/[slug]/page.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'fetchTemplateBySlug' is defined but never used.","line":10,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":10,"endColumn":29},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Metadata' is defined but never used.","line":11,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":11,"endColumn":18},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `process.env.NEXT_PUBLIC_SUPABASE_URL!,·process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!` with `⏎····process.env.NEXT_PUBLIC_SUPABASE_URL!,⏎····process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!⏎··`","line":30,"column":43,"nodeType":null,"messageId":"replace","endLine":30,"endColumn":124,"fix":{"range":[1006,1087],"text":"\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n  "}},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'supabase'. Either include it or remove the dependency array.","line":55,"column":6,"nodeType":"ArrayExpression","endLine":55,"endColumn":12,"suggestions":[{"desc":"Update the dependencies array to be: [slug, supabase]","fix":{"range":[1561,1567],"text":"[slug, supabase]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// app/edit/[slug]/page.tsx\n'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useParams, notFound } from 'next/navigation';\nimport { createClient } from '@supabase/supabase-js';\nimport TemplateEditor from '@/components/admin/templates/template-editor';\nimport type { Snapshot } from '@/types/template';\nimport type { Database } from '@/types/supabase';\nimport { fetchTemplateBySlug } from './template-loader';\nimport { Metadata } from 'next';\n\n// export async function generateMetadata({\n//   params,\n// }: {\n//   params: { slug: string };\n// }): Promise<Metadata> {\n//   const data = await fetchTemplateBySlug(params.slug);\n\n//   return {\n//     title: data ? `Edit: ${data.template_name}` : 'Template Not Found',\n//     description: data\n//       ? `Editing template for ${data.template_name}`\n//       : 'No template found for that slug',\n//   };\n// }\n\nexport default function EditPage() {\n  const { slug } = useParams() as { slug: string };\n  const supabase = createClient<Database>(process.env.NEXT_PUBLIC_SUPABASE_URL!, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!);\n\n  const [data, setData] = useState<Snapshot | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (!slug) return;\n\n    const load = async () => {\n      const { data, error } = await supabase\n        .from('templates')\n        .select('*')\n        .eq('slug', slug)\n        .single();\n\n      if (error || !data) {\n        setData(null);\n      } else {\n        setData(data);\n      }\n\n      setLoading(false);\n    };\n\n    load();\n  }, [slug]);\n\n  if (loading) {\n    return <div className=\"p-6 text-muted-foreground text-sm italic\">Loading template...</div>;\n  }\n\n  if (!data) {\n    notFound();\n  }\n\n  return <TemplateEditor templateName={data.template_name} initialData={data} />;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/edit/[slug]/template-loader.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":10,"column":1,"nodeType":null,"messageId":"delete","endLine":10,"endColumn":3,"fix":{"range":[435,437],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎····.from('templates')⏎····.select('*')⏎····.eq('slug',·slug)⏎····` with `.from('templates').select('*').eq('slug',·slug)`","line":15,"column":41,"nodeType":null,"messageId":"replace","endLine":19,"endColumn":5,"fix":{"range":[600,667],"text":".from('templates').select('*').eq('slug', slug)"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"// app/edit/[slug]/template-loader.ts\n'use server';\n\nimport { createServerComponentClient } from '@supabase/auth-helpers-nextjs';\nimport { cookies as nextCookies } from 'next/headers';\nimport type { Database } from '@/types/supabase';\n\nexport async function fetchTemplateBySlug(slug: string) {\n  const cookieStore = nextCookies(); // This is fine — `cookies()` returns a store, no need to await anymore in latest Next.js (as of v14+).\n  \n  const supabase = createServerComponentClient<Database>({\n    cookies: () => cookieStore, // ⬅️ wrap it like this\n  });\n\n  const { data, error } = await supabase\n    .from('templates')\n    .select('*')\n    .eq('slug', slug)\n    .single();\n\n  if (error || !data) {\n    console.error('.:. Supabase fetchTemplateBySlug error:', error);\n    return null;\n  }\n\n  return data;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/edit/layout.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎······{children}⏎····` with `{children}`","line":6,"column":65,"nodeType":null,"messageId":"replace","endLine":8,"endColumn":5,"fix":{"range":[249,271],"text":"{children}"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// app/admin/edit/layout.tsx\n\nexport default function MinimalEditorLayout({ children }: { children: React.ReactNode }) {\n  return (\n    // <div className=\" bg-zinc-950 text-white p-6\">\n    <div className=\"w-full h-full bg-background text-white p-6\">\n      {children}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/edit/metadata.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":4,"column":3,"nodeType":null,"messageId":"delete","endLine":4,"endColumn":5,"fix":{"range":[59,61],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··};` with `};⏎`","line":5,"column":1,"nodeType":null,"messageId":"replace","endLine":5,"endColumn":5,"fix":{"range":[100,104],"text":"};\n"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"// app/admin/edit/metadata.ts\n\nexport const metadata = {\n    title: 'Template Editor - QuickSites',\n  };","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/layout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/login/LoginForm.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··············?·'bg-zinc-700·cursor-not-allowed'⏎·············` with `·?·'bg-zinc-700·cursor-not-allowed'`","line":55,"column":22,"nodeType":null,"messageId":"replace","endLine":57,"endColumn":14,"fix":{"range":[1685,1748],"text":" ? 'bg-zinc-700 cursor-not-allowed'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":70,"column":17,"nodeType":null,"messageId":"insert","endLine":70,"endColumn":17,"fix":{"range":[2146,2146],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":71,"column":1,"nodeType":null,"messageId":"insert","endLine":71,"endColumn":1,"fix":{"range":[2163,2163],"text":"  "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { supabase } from '@/lib/supabase/client';\n\nexport default function LoginForm() {\n  const [email, setEmail] = useState('');\n  const [status, setStatus] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'development') {\n      setEmail('sandon@quicksites.ai');\n    }\n  }, []);\n\n  const sendMagicLink = async () => {\n    setIsLoading(true);\n    setStatus('');\n\n    const isDev = process.env.NODE_ENV === 'development';\n\n    const { error } = await supabase.auth.signInWithOtp({\n      email,\n      options: isDev\n        ? {} // 🧪 Dev mode: legacy redirect\n        : {\n            emailRedirectTo: 'http://localhost:3000/auth/callback', // ✅ Production PKCE\n          },\n    });\n\n    setIsLoading(false);\n\n    if (error) {\n      console.error('[❌ Magic Link Error]', error);\n      setStatus('❌ Error sending link. Please try again.');\n    } else {\n      setStatus('✅ Magic link sent! Check your inbox.');\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-background text-foreground px-4\">\n      <div className=\"w-full max-w-md bg-zinc-900 p-8 rounded-xl shadow-lg space-y-6\">\n        <h1 className=\"text-2xl font-extrabold text-center\">Login</h1>\n        <input\n          className=\"w-full p-2 mb-3 border border-zinc-600 bg-zinc-800 text-white rounded\"\n          placeholder=\"Your email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          disabled={isLoading}\n        />\n        <button\n          className={`w-full text-white py-2 px-4 rounded ${\n            isLoading\n              ? 'bg-zinc-700 cursor-not-allowed'\n              : 'bg-blue-600 hover:bg-blue-700'\n          }`}\n          onClick={sendMagicLink}\n          disabled={isLoading}\n        >\n          {isLoading ? 'Sending...' : 'Send Magic Link'}\n        </button>\n        {status && (\n          <p\n            className={`text-sm mt-4 ${\n              status.includes('✅')\n                ? 'text-green-400'\n                : status.includes('❌')\n                ? 'text-red-400'\n                : 'text-yellow-400'\n            }`}\n          >\n            {status}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/login/login-client.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎········?·'✅·Check·your·email·for·the·magic·link.'⏎·······` with `·?·'✅·Check·your·email·for·the·magic·link.'`","line":80,"column":13,"nodeType":null,"messageId":"replace","endLine":82,"endColumn":8,"fix":{"range":[2356,2415],"text":" ? '✅ Check your email for the magic link.'"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// app/login/login-client.tsx\n'use client';\n\nimport { useEffect, useRef, useState } from 'react';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { supabase } from '@/admin/lib/supabaseClient';\n\nexport default function LoginClient() {\n  const recaptchaRef = useRef<ReCAPTCHA | null>(null);\n\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  // ✅ Autofill in dev mode\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'development') {\n      setEmail('sandon@quicksites.ai');\n    }\n  }, []);\n\n  // ✅ Check for active session on mount\n  useEffect(() => {\n    supabase.auth.getSession().then(({ data }) => {\n      const session = data.session;\n      if (session?.user) {\n        fetch('/api/session-log', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ referer: document.referrer }),\n        })\n          .catch((err) => console.error('Error logging session:', err))\n          .finally(() => {\n            window.location.href = '/auth/callback';\n          });\n      }\n    });\n  }, []);\n\n  // ✅ Listen for successful login\n  useEffect(() => {\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange((event, session) => {\n      if (event === 'SIGNED_IN' && session?.user) {\n        fetch('/api/session-log', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ referer: document.referrer }),\n        })\n          .catch((err) => console.error('Error logging session:', err))\n          .finally(() => {\n            window.location.href = '/auth/callback';\n          });\n      }\n    });\n\n    return () => subscription?.unsubscribe?.();\n  }, []);\n\n  const handleLogin = async () => {\n    setLoading(true);\n    const token = await recaptchaRef.current?.executeAsync();\n    recaptchaRef.current?.reset();\n\n    if (!token) {\n      setMessage('❌ reCAPTCHA failed. Please try again.');\n      setLoading(false);\n      return;\n    }\n\n    const res = await fetch('/api/login', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email, recaptchaToken: token }),\n    });\n\n    const data = await res.json();\n    setMessage(\n      res.ok\n        ? '✅ Check your email for the magic link.'\n        : `❌ ${data.error || 'Login failed.'}`\n    );\n    setLoading(false);\n  };\n\n  return (\n    <main className=\"min-h-screen flex items-center justify-center bg-background text-foreground px-4\">\n      <div className=\"w-full max-w-md bg-zinc-900 p-8 rounded-xl shadow-lg space-y-6\">\n        <h1 className=\"text-2xl font-extrabold text-center\">Login</h1>\n\n        <input\n          id=\"email\"\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              e.preventDefault();\n              handleLogin();\n            }\n          }}\n          placeholder=\"you@example.com\"\n          className=\"w-full px-4 py-2 rounded-md bg-zinc-800 text-white border border-zinc-700 placeholder-zinc-400 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n        />\n\n        <button\n          onClick={handleLogin}\n          disabled={loading}\n          className=\"w-full bg-indigo-600 hover:bg-indigo-700 text-white py-2 rounded-md font-medium transition disabled:opacity-50\"\n        >\n          {loading ? 'Sending...' : 'Send Magic Link'}\n        </button>\n\n        {message && (\n          <p\n            className={`text-sm text-center ${\n              message.startsWith('✅') ? 'text-green-400' : 'text-red-400'\n            }`}\n          >\n            {message}\n          </p>\n        )}\n\n        <ReCAPTCHA\n          sitekey={process.env.NEXT_PUBLIC_RECAPTCHA_SITE_KEY!}\n          size=\"invisible\"\n          ref={recaptchaRef}\n        />\n      </div>\n    </main>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/login/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/page-v0.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/page.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"🚀·AI-generated·websites·in·seconds\"` with `'🚀·AI-generated·websites·in·seconds'`","line":25,"column":3,"nodeType":null,"messageId":"replace","endLine":25,"endColumn":40,"fix":{"range":[775,812],"text":"'🚀 AI-generated websites in seconds'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"🧠·Built-in·SEO·optimization\"` with `'🧠·Built-in·SEO·optimization'`","line":26,"column":3,"nodeType":null,"messageId":"replace","endLine":26,"endColumn":33,"fix":{"range":[816,846],"text":"'🧠 Built-in SEO optimization'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"📱·Mobile-ready,·always\"` with `'📱·Mobile-ready,·always'`","line":27,"column":3,"nodeType":null,"messageId":"replace","endLine":27,"endColumn":28,"fix":{"range":[850,875],"text":"'📱 Mobile-ready, always'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"🎨·Fully·customizable·designs\"` with `'🎨·Fully·customizable·designs'`","line":28,"column":3,"nodeType":null,"messageId":"replace","endLine":28,"endColumn":34,"fix":{"range":[879,910],"text":"'🎨 Fully customizable designs'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"🔒·Secure·&·privacy-respecting\"` with `'🔒·Secure·&·privacy-respecting'`","line":29,"column":3,"nodeType":null,"messageId":"replace","endLine":29,"endColumn":35,"fix":{"range":[914,946],"text":"'🔒 Secure & privacy-respecting'"}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'showWidget' is assigned a value but never used.","line":36,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":36,"endColumn":19},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":118,"column":15,"nodeType":null,"messageId":"delete","endLine":118,"endColumn":17,"fix":{"range":[4213,4215],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":119,"column":15,"nodeType":null,"messageId":"delete","endLine":119,"endColumn":17,"fix":{"range":[4258,4260],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":120,"column":1,"nodeType":null,"messageId":"delete","endLine":120,"endColumn":3,"fix":{"range":[4287,4289],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":121,"column":13,"nodeType":null,"messageId":"delete","endLine":121,"endColumn":15,"fix":{"range":[4458,4460],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":122,"column":1,"nodeType":null,"messageId":"delete","endLine":122,"endColumn":3,"fix":{"range":[4462,4464],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":123,"column":13,"nodeType":null,"messageId":"delete","endLine":123,"endColumn":15,"fix":{"range":[4512,4514],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··)}······················` with `)}`","line":124,"column":11,"nodeType":null,"messageId":"replace","endLine":124,"endColumn":37,"fix":{"range":[4536,4562],"text":")}"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":12,"source":"// app/page.tsx\n'use client';\n\nimport { motion } from 'framer-motion';\nimport Image from 'next/image';\nimport Head from 'next/head';\nimport BackgroundGlow from '@/components/background-glow';\nimport GlowConfigurator, { GlowConfig } from '@/components/glow-configurator';\nimport { useState, useEffect } from 'react';\nimport QuickSitesWidget from '@/components/quick-sites-widget';\nimport event from '@vercel/analytics';\nimport { useSafeAuth } from '../hooks/useSafeAuth';\nimport { SiteFlags } from '@/lib/site-config';\nimport useMediaQuery from '@/hooks/useMediaQuery';\n\nconst isProd = process.env.NODE_ENV === 'production';\n\nconst defaultGlowConfig = {\n  size: 'xl',\n  intensity: 0.2,\n  colors: ['from-indigo-600', 'via-blue-400', 'to-fuchsia-500'],\n};\n\nconst features = [\n  \"🚀 AI-generated websites in seconds\",\n  \"🧠 Built-in SEO optimization\",\n  \"📱 Mobile-ready, always\",\n  \"🎨 Fully customizable designs\",\n  \"🔒 Secure & privacy-respecting\",\n];\n\nexport default function HomePage() {\n  const [currentFeatureIndex, setCurrentFeatureIndex] = useState(0);\n  const { user, role, isLoggedIn } = useSafeAuth();\n  const isMobile = useMediaQuery('(max-width: 768px)');\n  const showWidget = SiteFlags.showMobileWidget || !isMobile;\n  const showGlow = SiteFlags.showMobileGradients || !isMobile;\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentFeatureIndex((i) => (i + 1) % features.length);\n    }, 3000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      const traceId = document?.body?.dataset?.traceId ?? '';\n      const sessionId = document?.body?.dataset?.sessionId ?? '';\n\n      event.track('landing_page_viewed', {\n        user: user?.id || user?.email || 'guest',\n        role,\n        isLoggedIn,\n        feature: features[currentFeatureIndex],\n        traceId,\n        sessionId,\n      });\n    }\n  }, [user?.id, user?.email, role, isLoggedIn, currentFeatureIndex]);\n\n  return (\n    <div className=\"relative min-h-screen flex flex-col bg-zinc-950 text-white overflow-hidden\">\n      <Head>\n        <title>QuickSites | One Click Websites</title>\n        <meta name=\"description\" content=\"Launch your local business site in seconds with AI.\" />\n      </Head>\n      {showGlow && (\n        <>\n          <BackgroundGlow />\n          <GlowConfigurator defaultGlowConfig={defaultGlowConfig as GlowConfig} />\n        </>\n      )}\n\n      {/* Main Content */}\n      <main className=\"relative z-10 flex-1 flex flex-col items-center justify-center px-6 py-12 text-center\">\n        <div className=\"space-y-6 max-w-xl\">\n          <div className=\"flex justify-center items-center gap-3\">\n            <Image\n              src=\"/favicon.ico\"\n              width={40}\n              height={40}\n              alt=\"QuickSites Logo\"\n              className=\"rounded-full\"\n            />\n            <h1 className=\"text-3xl font-bold tracking-tight text-white\">QuickSites</h1>\n          </div>\n\n          <motion.h2\n            className=\"text-4xl md:text-5xl font-extrabold bg-clip-text text-transparent bg-gradient-to-r from-indigo-400 to-purple-500\"\n            initial={{ opacity: 0, y: -10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            Your Website. One Click Away.\n          </motion.h2>\n\n          <p className=\"text-zinc-400 text-lg\">\n            Turn your local business into a digital presence in minutes. No code. No hassle.\n          </p>\n\n          {isLoggedIn && role !== 'guest' ? (\n            <motion.a\n              href=\"/admin/dashboard\"\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.97 }}\n              className=\"inline-block mt-4 px-6 py-3 bg-green-600 hover:bg-green-700 text-white text-base font-medium rounded-lg shadow-lg transition-all\"\n            >\n              Go to Dashboard\n            </motion.a>\n          ) : isProd ? (\n            <div className=\"mt-4 px-6 py-3 bg-zinc-700 text-white text-base font-medium rounded-lg shadow-lg opacity-70 cursor-not-allowed\">\n              Log In (Coming Soon)\n            </div>\n          ) : (\n            <motion.a\n              href=\"/login\"\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.97 }}\n                className=\"inline-block mt-4 px-6 py-3 bg-indigo-600 hover:bg-indigo-700 text-white text-base font-medium rounded-lg shadow-lg transition-all\"\n              >\n                Log In to Get Started\n              </motion.a>\n            )}                      \n        </div>\n      </main>\n\n      {/* Sticky Footer */}\n      <footer className=\"relative z-10 text-center text-xs text-zinc-600 py-4\">\n        &copy; {new Date().getFullYear()} QuickSites.ai — All rights reserved.\n        {/* {showWidget && <QuickSitesWidget forceVariant=\"puppy\" />} */}\n        <QuickSitesWidget forceVariant=\"puppy\" />\n      </footer>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/posters/[slug]/page.tsx","messages":[{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":35,"column":11,"nodeType":"JSXOpeningElement","endLine":39,"endColumn":13},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎············src={posterUrl}⏎············alt={`Poster·for·${slug}`}⏎············className=\"w-full·object-contain\"⏎·········` with `·src={posterUrl}·alt={`Poster·for·${slug}`}·className=\"w-full·object-contain\"`","line":35,"column":15,"nodeType":null,"messageId":"replace","endLine":39,"endColumn":10,"fix":{"range":[1037,1160],"text":" src={posterUrl} alt={`Poster for ${slug}`} className=\"w-full object-contain\""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// app/posters/[slug]/page.tsx\n\nimport { createClient } from '@supabase/supabase-js';\n\nexport const runtime = 'nodejs';\nexport const dynamic = 'force-dynamic';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport default async function Page({ params }: { params: { slug: string } }) {\n  const { slug } = params;\n\n  const { data: campaign, error } = await supabase\n    .from('support_campaigns')\n    .select('*')\n    .eq('slug', slug)\n    .single();\n\n  if (!campaign || error) {\n    return <p className=\"p-6 text-red-600\">Campaign not found</p>;\n  }\n\n  const posterUrl = `/api/posters/${slug}`; // your dynamic PNG poster route\n\n  return (\n    <div className=\"min-h-screen bg-white text-black p-8\">\n      <div className=\"max-w-4xl mx-auto space-y-6\">\n        <h1 className=\"text-3xl font-bold\">{campaign.headline}</h1>\n        <p className=\"text-zinc-700\">{campaign.description}</p>\n\n        <div className=\"border rounded overflow-hidden shadow\">\n          <img\n            src={posterUrl}\n            alt={`Poster for ${slug}`}\n            className=\"w-full object-contain\"\n          />\n        </div>\n\n        <div className=\"text-right text-sm text-zinc-500\">\n          Generated dynamically for: <code>{slug}</code>\n        </div>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/profile/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/projects/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/search/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/test/[slug]/page.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··props:·Promise<{·params:·{·slug:·string·}·}>⏎` with `props:·Promise<{·params:·{·slug:·string·}·}>`","line":6,"column":36,"nodeType":null,"messageId":"replace","endLine":8,"endColumn":1,"fix":{"range":[138,186],"text":"props: Promise<{ params: { slug: string } }>"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// app/test/[slug]/page.tsx\n\nexport const dynamic = 'force-dynamic';\nexport const runtime = 'nodejs';\n\nexport default async function Page(\n  props: Promise<{ params: { slug: string } }>\n) {\n  const { params } = await props;\n  return <div>slug: {params.slug}</div>;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/app/viewer/page.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'UserMenu' is defined but never used.","line":8,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":8,"endColumn":16},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'role' is assigned a value but never used.","line":14,"column":17,"nodeType":null,"messageId":"unusedVar","endLine":14,"endColumn":21},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎········className=\"text-xs·text-red-400·underline·mt-6\"⏎········onClick={()·=>·setCancelled(true)}⏎······` with `·className=\"text-xs·text-red-400·underline·mt-6\"·onClick={()·=>·setCancelled(true)}`","line":62,"column":14,"nodeType":null,"messageId":"replace","endLine":65,"endColumn":7,"fix":{"range":[2096,2202],"text":" className=\"text-xs text-red-400 underline mt-6\" onClick={() => setCancelled(true)}"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useAutoRedirectByRole } from '@/hooks/useAutoRedirectByRole';\nimport { useSafeAuth } from '@/hooks/useSafeAuth';\nimport { NavSections } from '@/components/admin/AppHeader/nav-sections';\nimport UserMenu from '@/components/auth/user-menu';\n\nexport default function ViewerHomeRedirect() {\n  const [cancelled, setCancelled] = useState(false);\n  const [showNav, setShowNav] = useState(false);\n  const router = useRouter();\n  const { user, role, isLoggedIn } = useSafeAuth();\n\n  useAutoRedirectByRole({\n    roleRoutes: {\n      viewer: '/viewer/dashboard',\n      admin: '/admin/dashboard',\n      owner: '/admin/dashboard',\n      reseller: '/admin/dashboard',\n    },\n    fallbackRoute: '/unauthorized',\n    enableTestBypass: true,\n  });\n\n  useEffect(() => {\n    if (typeof window !== 'undefined' && window.location.hostname.includes('quicksites.ai')) {\n      if (isLoggedIn && user) setShowNav(true);\n    }\n\n    const timeout = setTimeout(() => {\n      if (!cancelled) {\n        console.warn('[🕒 Timeout] Redirect did not resolve in time');\n        router.replace('/login?timeout=true');\n      }\n    }, 10000);\n\n    return () => clearTimeout(timeout);\n  }, [cancelled, isLoggedIn, user, router]);\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-black text-white\">\n      <div className=\"animate-spin rounded-full h-10 w-10 border-b-2 border-white mb-4\" />\n      <p className=\"text-sm text-gray-400 mb-2\">Redirecting based on your role...</p>\n      <p className=\"text-xs text-gray-500 mb-4\">\n        Host: {typeof window !== 'undefined' ? window.location.hostname : '...'}\n      </p>\n\n      {showNav && (\n        <div className=\"animate-fade-in transition-opacity duration-700 ease-in opacity-100\">\n          <NavSections />\n        </div>\n      )}\n\n      {/* {isLoggedIn && user && (\n        <div className=\"animate-fade-in transition-opacity duration-700 ease-in mt-4 opacity-100\">\n          <UserMenu />\n        </div>\n      )} */}\n\n      <button\n        className=\"text-xs text-red-400 underline mt-6\"\n        onClick={() => setCancelled(true)}\n      >\n        Cancel and go back\n      </button>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/commitlint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/DevToolsToggler.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/__screenshots__/ScreenshotDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin-claim-override.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/AppHeader/AdminNavSections.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/AppHeader/app-header.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'UserMenu' is defined but never used.","line":7,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":7,"endColumn":16},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎` with `····`","line":66,"column":1,"nodeType":null,"messageId":"replace","endLine":67,"endColumn":1,"fix":{"range":[2030,2031],"text":"    "}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'router' is assigned a value but never used.","line":69,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":69,"endColumn":15},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'sidebarCollapsed' is assigned a value but never used.","line":70,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":70,"endColumn":26},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'setSidebarCollapsed' is assigned a value but never used.","line":70,"column":28,"nodeType":null,"messageId":"unusedVar","endLine":70,"endColumn":47},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":86,"column":3,"nodeType":null,"messageId":"insert","endLine":86,"endColumn":3,"fix":{"range":[2640,2640],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":87,"column":5,"nodeType":null,"messageId":"insert","endLine":87,"endColumn":5,"fix":{"range":[2720,2720],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":88,"column":7,"nodeType":null,"messageId":"insert","endLine":88,"endColumn":7,"fix":{"range":[2768,2768],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `············`","line":89,"column":1,"nodeType":null,"messageId":"replace","endLine":89,"endColumn":7,"fix":{"range":[2792,2798],"text":"            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `<InspirationalQuote·tags={[\"small-business\",·\"seo\",·\"persistence\"` with `·······<InspirationalQuote·tags={['small-business',·'seo',·'persistence'`","line":90,"column":8,"nodeType":null,"messageId":"replace","endLine":90,"endColumn":73,"fix":{"range":[2854,2919],"text":"       <InspirationalQuote tags={['small-business', 'seo', 'persistence'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `············`","line":91,"column":1,"nodeType":null,"messageId":"replace","endLine":91,"endColumn":7,"fix":{"range":[2925,2931],"text":"            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··········`","line":92,"column":1,"nodeType":null,"messageId":"replace","endLine":92,"endColumn":5,"fix":{"range":[2938,2942],"text":"          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":93,"column":1,"nodeType":null,"messageId":"insert","endLine":93,"endColumn":1,"fix":{"range":[2949,2949],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `············`","line":94,"column":1,"nodeType":null,"messageId":"replace","endLine":94,"endColumn":7,"fix":{"range":[3013,3019],"text":"            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··········`","line":95,"column":1,"nodeType":null,"messageId":"replace","endLine":95,"endColumn":5,"fix":{"range":[3026,3030],"text":"          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":96,"column":3,"nodeType":null,"messageId":"insert","endLine":96,"endColumn":3,"fix":{"range":[3037,3037],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":97,"column":1,"nodeType":null,"messageId":"insert","endLine":97,"endColumn":1,"fix":{"range":[3044,3044],"text":"      "}},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":106,"column":13,"nodeType":"JSXOpeningElement","endLine":106,"endColumn":80},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":108,"column":1,"nodeType":null,"messageId":"delete","endLine":108,"endColumn":3,"fix":{"range":[3606,3608],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":114,"column":1,"nodeType":null,"messageId":"delete","endLine":114,"endColumn":3,"fix":{"range":[3835,3837],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":15,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport SafeLink from '../../ui/safe-link';\nimport { useSafeAuth } from '@/hooks/useSafeAuth';\nimport UserMenu from '@/components/auth/user-menu';\nimport { useRequestMeta } from '@/hooks/useRequestMeta';\n// import { AdminNavSections } from './AdminNavSections';\nimport InspirationalQuote from '@/components/ui/inspirational-quote';\nimport { AvatarMenu } from './avatar-menu';\n\nexport default function AppHeader() {\n  useEffect(() => {\n    let lastScrollY = window.scrollY;\n    let ticking = false;\n    const header = document.querySelector('header');\n    let hideTimeout: NodeJS.Timeout | null = null;\n\n    const handleScroll = () => {\n      if (!header) return;\n\n      const currentScrollY = window.scrollY;\n\n      if (currentScrollY > lastScrollY && currentScrollY > 48) {\n        if (!header.classList.contains('translate-y-[-100%]')) {\n          header.classList.add('translate-y-[-100%]', 'transition-transform', 'duration-300');\n        }\n      } else {\n        header.classList.remove('translate-y-[-100%]');\n      }\n\n      if (currentScrollY > 10) {\n        header.classList.add('opacity-90', 'backdrop-blur-md');\n      } else {\n        header.classList.remove('opacity-90', 'backdrop-blur-md');\n      }\n\n      lastScrollY = currentScrollY;\n    };\n    window.addEventListener('scroll', () => {\n      if (!ticking) {\n        window.requestAnimationFrame(() => {\n          handleScroll();\n          ticking = false;\n        });\n        ticking = true;\n      }\n    });\n\n    header?.addEventListener('mouseenter', () => {\n      if (header.classList.contains('translate-y-[-100%]')) {\n        header.classList.remove('translate-y-[-100%]');\n      }\n      if (hideTimeout) clearTimeout(hideTimeout);\n    });\n\n    header?.addEventListener('mouseleave', () => {\n      hideTimeout = setTimeout(() => {\n        if (window.scrollY > 48) {\n          header.classList.add('translate-y-[-100%]');\n        }\n      }, 1200);\n    });\n\n\nreturn () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n  const router = useRouter();\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n  const { user, role, isLoggedIn } = useSafeAuth();\n  const { traceId, sessionId } = useRequestMeta();\n\n  useEffect(() => {\n    console.debug('[🧭 AppHeader Role Info]', {\n      email: user?.email,\n      role,\n      traceId,\n      sessionId,\n    });\n  }, [user?.email, role, traceId, sessionId]);\n\n  if (!isLoggedIn || !user) {\n    return (\n      <header className=\"px-4 py-2 text-zinc-400 text-sm shadow-sm border-b border-zinc-800\">\n  <div className=\"max-w-screen-lg mx-auto flex justify-between items-center\">\n    <div className=\"flex items-center gap-4\">\n      <span>QuickSites</span>\n      <div className=\"text-xs text-cyan-300 max-w-xs\">\n       <InspirationalQuote tags={[\"small-business\", \"seo\", \"persistence\"]} />\n      </div>\n    </div>\n    <a href=\"/login\" className=\"text-blue-400 hover:underline\">\n      Log In\n    </a>\n  </div>\n</header>\n    );\n  }\n\n  return (\n    <header className=\"bg-gray-800 text-white sticky top-0 z-50 px-2 py-[6px] shadow-sm border-b border-zinc-700 min-h-[48px] transition-transform duration-300\">\n      <div className=\"flex justify-between items-center max-w-screen-xl mx-auto relative\">\n        <div className=\"flex items-center gap-4 overflow-x-auto whitespace-nowrap max-w-full flex-1\">\n          <SafeLink href=\"/\" className=\"text-blue-400 hover:underline\">\n            <img src=\"/logo_v1.png\" alt=\"QuickSites\" className=\"h-12 w-auto\" />\n          </SafeLink>\n  \n          {/* ✅ Always show inspirational quote */}\n          <div className=\"text-xs text-cyan-300 max-w-xs\">\n            <InspirationalQuote tags={['small-business', 'seo', 'persistence']} />\n          </div>\n        </div>\n  \n        <div className=\"ml-2 flex items-center gap-2\">\n          {isLoggedIn && user ? (\n            <div className=\"flex items-center gap-2\">\n              <AvatarMenu />\n              <div>\n                <div>{user.email}</div>\n                <div className=\"text-zinc-500\">role: {role}</div>\n              </div>\n            </div>\n          ) : (\n            <a href=\"/login\" className=\"text-blue-400 hover:underline\">\n              Log In\n            </a>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/AppHeader/avatar-menu.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `process.env.NEXT_PUBLIC_SUPABASE_URL!,·process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!` with `⏎········process.env.NEXT_PUBLIC_SUPABASE_URL!,⏎········process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!⏎······`","line":41,"column":37,"nodeType":null,"messageId":"replace","endLine":41,"endColumn":118,"fix":{"range":[1366,1447],"text":"\n        process.env.NEXT_PUBLIC_SUPABASE_URL!,\n        process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n      "}},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":60,"column":11,"nodeType":"JSXOpeningElement","endLine":60,"endColumn":86}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { LogOut, Loader2, UserCircle, Settings, User } from 'lucide-react';\nimport md5 from 'blueimp-md5';\n\nimport { RoleBadge } from './role-badge';\nimport { useSafeAuth } from '@/hooks/useSafeAuth';\nimport { createClient } from '@supabase/supabase-js';\n\nexport function AvatarMenu() {\n  const { user, role, isLoggedIn } = useSafeAuth();\n  const router = useRouter();\n  const [open, setOpen] = useState(false);\n  const [loggingOut, setLoggingOut] = useState(false);\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const avatarUrl =\n    user?.avatar_url ||\n    `https://gravatar.com/avatar/${md5(user?.email?.trim().toLowerCase() ?? '')}?d=identicon`;\n\n  const isAdmin = ['admin', 'owner', 'reseller'].includes(role);\n\n  useEffect(() => {\n    function handleClickOutside(e: MouseEvent) {\n      if (menuRef.current && !menuRef.current.contains(e.target as Node)) {\n        setOpen(false);\n      }\n    }\n    if (open) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [open]);\n\n  const handleLogout = async () => {\n    setLoggingOut(true);\n    try {\n      const supabase = createClient(process.env.NEXT_PUBLIC_SUPABASE_URL!, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!);\n      await supabase.auth.signOut();\n      router.push('/login?logout=1');\n      setTimeout(() => window.location.reload(), 300);\n    } finally {\n      setLoggingOut(false);\n    }\n  };\n\n  if (!isLoggedIn || !user) return null;\n\n  return (\n    <div className=\"relative\" ref={menuRef}>\n      <button\n        onClick={() => setOpen(!open)}\n        className=\"focus:outline-none\"\n        aria-label=\"Avatar menu\"\n      >\n        <div className=\"w-6 h-6 sm:w-5 sm:h-5 rounded-full overflow-hidden border border-white\">\n          <img src={avatarUrl} alt=\"avatar\" className=\"w-full h-full object-cover\" />\n        </div>\n      </button>\n\n      <AnimatePresence>\n        {open && (\n          <motion.div\n            initial={{ opacity: 0, scale: 0.95, y: -5 }}\n            animate={{ opacity: 1, scale: 1, y: 0 }}\n            exit={{ opacity: 0, scale: 0.95, y: -5 }}\n            transition={{ duration: 0.15 }}\n            className=\"absolute right-0 mt-2 w-56 bg-zinc-900 border border-zinc-700 rounded shadow-xl text-xs z-50 p-3 space-y-3\"\n          >\n            <div className=\"flex items-center gap-2 text-gray-300\">\n              <UserCircle size={14} />\n              <span className=\"truncate\">{user.email}</span>\n            </div>\n\n            <RoleBadge role={role} />\n\n            <div className=\"border-t border-zinc-700 pt-2 space-y-2\">\n              <button\n                onClick={() => router.push('/profile')}\n                className=\"flex items-center gap-2 hover:underline text-left text-gray-300 w-full\"\n              >\n                <User size={14} />\n                My Profile\n              </button>\n\n              {isAdmin && (\n                <button\n                  onClick={() => router.push('/admin/settings')}\n                  className=\"flex items-center gap-2 hover:underline text-left text-gray-300 w-full\"\n                >\n                  <Settings size={14} />\n                  Admin Settings\n                </button>\n              )}\n            </div>\n\n            <button\n              onClick={handleLogout}\n              disabled={loggingOut}\n              className={`flex items-center gap-2 text-red-400 hover:underline text-left w-full ${\n                loggingOut ? 'opacity-50 cursor-not-allowed' : ''\n              }`}\n            >\n              {loggingOut ? (\n                <>\n                  <Loader2 size={14} className=\"animate-spin\" />\n                  Logging out...\n                </>\n              ) : (\n                <>\n                  <LogOut size={14} />\n                  Log Out\n                </>\n              )}\n            </button>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/AppHeader/mobile-drawer.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `Logs·&·Analytics` with `⏎··················Logs·&·Analytics⏎················`","line":61,"column":82,"nodeType":null,"messageId":"replace","endLine":61,"endColumn":98,"fix":{"range":[2208,2224],"text":"\n                  Logs & Analytics\n                "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `Templates` with `⏎··················Templates⏎················`","line":70,"column":83,"nodeType":null,"messageId":"replace","endLine":70,"endColumn":92,"fix":{"range":[2733,2742],"text":"\n                  Templates\n                "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `Dev·Tools` with `⏎··················Dev·Tools⏎················`","line":78,"column":83,"nodeType":null,"messageId":"replace","endLine":78,"endColumn":92,"fix":{"range":[3215,3224],"text":"\n                  Dev Tools\n                "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"// components/admin/AppHeader/mobile-drawer.tsx\n'use client';\n\nimport SafeLink from '../../ui/safe-link';\nimport { useEffect } from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\n\nexport function MobileDrawer({\n  drawerOpen,\n  onClose,\n}: {\n  drawerOpen: boolean;\n  onClose: () => void;\n}) {\n  useEffect(() => {\n    const drawer = document.getElementById('mobile-drawer');\n    if (drawerOpen && drawer) {\n      disableBodyScroll(drawer);\n    } else {\n      enableBodyScroll(drawer || document.body);\n    }\n    return () => enableBodyScroll(drawer || document.body);\n  }, [drawerOpen]);\n\n  return (\n    <AnimatePresence>\n      {drawerOpen && (\n        <>\n          {/* Backdrop */}\n          <motion.div\n            className=\"fixed inset-0 bg-black/60 backdrop-blur-sm z-[98]\"\n            onClick={onClose}\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n          />\n\n          {/* Drawer */}\n          <motion.div\n            id=\"mobile-drawer\"\n            className=\"fixed top-0 left-0 w-64 h-full bg-zinc-900 text-white z-[99] p-4 shadow-2xl sm:hidden overflow-y-auto\"\n            initial={{ x: '-100%' }}\n            animate={{ x: 0 }}\n            exit={{ x: '-100%' }}\n            transition={{ type: 'tween', duration: 0.25 }}\n          >\n            <h2 className=\"text-lg font-bold mb-4\">Menu</h2>\n            <nav className=\"space-y-4 text-sm\">\n              <details open>\n                <summary className=\"cursor-pointer font-semibold text-blue-300\">Core</summary>\n                <div className=\"ml-4 flex flex-col gap-1\">\n                  <SafeLink href=\"/admin\">Dashboard</SafeLink>\n                  <SafeLink href=\"/admin/the-grid\">Map of Opportunites</SafeLink>\n                  <SafeLink href=\"/admin/leads\">Leads</SafeLink>\n                  <SafeLink href=\"/admin/campaigns\">Campaigns</SafeLink>\n                  <SafeLink href=\"/admin/start-campaign\">Start Campaign</SafeLink>\n                </div>\n              </details>\n              <details>\n                <summary className=\"cursor-pointer font-semibold text-green-300\">Logs & Analytics</summary>\n                <div className=\"ml-4 flex flex-col gap-1\">\n                  <SafeLink href=\"/admin/logs\">Logs</SafeLink>\n                  <SafeLink href=\"/admin/logs/sessions\">Session Logs</SafeLink>\n                  <SafeLink href=\"/admin/analytics\">Analytics</SafeLink>\n                  <SafeLink href=\"/admin/heatmap\">Heatmap</SafeLink>\n                </div>\n              </details>\n              <details>\n                <summary className=\"cursor-pointer font-semibold text-yellow-300\">Templates</summary>\n                <div className=\"ml-4 flex flex-col gap-1\">\n                  <SafeLink href=\"/admin/templates\">All Templates</SafeLink>\n                  {/* <SafeLink href=\"/admin/templates-new\">+ New Template</SafeLink> */}\n                  <SafeLink href=\"/admin/templates/new\">+ New Template</SafeLink>\n                </div>\n              </details>\n              <details>\n                <summary className=\"cursor-pointer font-semibold text-purple-300\">Dev Tools</summary>\n                <div className=\"ml-4 flex flex-col gap-1\">\n                  <SafeLink href=\"/admin/docs\">Docs</SafeLink>\n                  <SafeLink href=\"/admin/query-usecases\">Params</SafeLink>\n                  <SafeLink href=\"/admin/branding/og-editor/xyz\">OG Editor</SafeLink>\n                </div>\n              </details>\n              <details>\n                <summary className=\"cursor-pointer font-semibold text-red-300\">Admin</summary>\n                <div className=\"ml-4 flex flex-col gap-1\">\n                  <SafeLink href=\"/admin/users\">Users</SafeLink>\n                  <SafeLink href=\"/admin/roles\">Roles</SafeLink>\n                </div>\n              </details>\n            </nav>\n          </motion.div>\n        </>\n      )}\n    </AnimatePresence>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/AppHeader/nav-sections.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'errors' is assigned a value but never used.","line":12,"column":22,"nodeType":null,"messageId":"unusedVar","endLine":12,"endColumn":28},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'isDynamic' is assigned a value but never used.","line":35,"column":23,"nodeType":null,"messageId":"unusedVar","endLine":35,"endColumn":32}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { usePathname } from 'next/navigation';\nimport { useSmartNav } from '../../../hooks/useSmartNav';\nimport SafeLink from '../../ui/safe-link';\nimport { NavBadge } from '../../ui/nav-badge';\nimport { useLiveAdminStats } from '../../../hooks/useLiveAdminStats';\n\nexport function NavSections() {\n  const pathname = usePathname();\n  const { nav, loading } = useSmartNav();\n  const { unclaimed, errors } = useLiveAdminStats();\n\n  const matches = (prefix: string) => pathname?.startsWith(prefix);\n\n  if (loading) return null;\n\n  return (\n    <nav className=\"flex flex-col gap-6 text-sm\">\n      {/* 🖥 Desktop */}\n      <div className=\"hidden md:flex flex-wrap gap-4 items-center\">\n        {nav.map((section) => (\n          <details\n            key={section.label}\n            className=\"group\"\n            open={section.routes.some((r) => matches(r.href))}\n          >\n            <summary\n              className={`cursor-pointer font-semibold ${section.color} group-open:underline`}\n            >\n              {section.label}\n            </summary>\n            <div className=\"ml-2 flex flex-wrap gap-2 mt-1\">\n              {section.routes.map((r) => {\n                const isDynamic = r.href.includes('[slug]') || r.href.includes(':');\n                const labelWithCount =\n                  r.href === '/admin/leads' && unclaimed && unclaimed > 0\n                    ? `${r.label} (${unclaimed})`\n                    : r.href === '/admin/drafts' && unclaimed && unclaimed > 0\n                      ? `${r.label} (${unclaimed})`\n                      : r.label;\n\n                return (\n                  <SafeLink\n                    key={r.href}\n                    href={r.href}\n                    target={r.external ? '_blank' : undefined}\n                    title={r.title}\n                    onClick={() => {\n                      fetch('/api/log-event', {\n                        method: 'POST',\n                        body: JSON.stringify({ href: r.href, type: 'nav_click' }),\n                      });\n                    }}\n                  >\n                    {labelWithCount}\n                    <NavBadge flag={r.flags?.[0]} />\n                  </SafeLink>\n                );\n              })}\n            </div>\n          </details>\n        ))}\n      </div>\n\n      {/* 📱 Mobile */}\n      <div className=\"md:hidden\">\n        <label htmlFor=\"mobile-nav\" className=\"block mb-1 font-medium text-muted-foreground\">\n          Navigate:\n        </label>\n        <select\n          id=\"mobile-nav\"\n          className=\"w-full p-2 border rounded text-sm\"\n          onChange={(e) => {\n            if (e.target.value) {\n              fetch('/api/log-event', {\n                method: 'POST',\n                body: JSON.stringify({ href: e.target.value, type: 'nav_click' }),\n              });\n              window.location.href = e.target.value;\n            }\n          }}\n        >\n          <option value=\"\">Select a page</option>\n          {nav.flatMap((section) => [\n            <optgroup key={section.label} label={section.label}>\n              {section.routes.map((r) => (\n                <option key={r.href} value={r.href}>\n                  {r.label.replace(/^[^\\w\\s]+ /, '')}\n                </option>\n              ))}\n            </optgroup>,\n          ])}\n        </select>\n      </div>\n    </nav>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/AppHeader/role-badge.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/_OnlyMap.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/activity-feed.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'i' is defined but never used. Allowed unused args must match /^_/u.","line":30,"column":25,"nodeType":null,"messageId":"unusedVar","endLine":30,"endColumn":26}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useEffect, useState } from 'react';\nimport { supabase } from '@/admin/lib/supabaseClient';\n\nexport default function ActivityFeed({\n  domain_id,\n  lead_id,\n}: {\n  domain_id?: string;\n  lead_id?: string;\n}) {\n  const [logs, setLogs] = useState<any[]>([]);\n\n  useEffect(() => {\n    const query = supabase\n      .from('user_action_logs')\n      .select('*')\n      .order('timestamp', { ascending: false });\n    if (domain_id) {\n      query.eq('domain_id', domain_id).then(({ data }) => setLogs(data || []));\n    } else if (lead_id) {\n      query.eq('lead_id', lead_id).then(({ data }) => setLogs(data || []));\n    }\n  }, [domain_id, lead_id]);\n\n  return (\n    <div className=\"text-sm text-gray-300 mt-4\">\n      <h2 className=\"text-sm font-bold mb-2 text-gray-400\">Activity Feed</h2>\n      {logs.length === 0 && <p className=\"text-xs text-gray-500\">No activity yet.</p>}\n      <ul className=\"space-y-2\">\n        {logs.map((log, i) => (\n          <li key={log.id} className=\"bg-gray-900 px-3 py-2 rounded\">\n            <div className=\"text-xs text-green-400\">{new Date(log.timestamp).toLocaleString()}</div>\n            <div className=\"text-xs\">\n              {log.action_type.replace(/_/g, ' ')} by <strong>{log.triggered_by || '—'}</strong>\n            </div>\n            {log.notes && <div className=\"text-xs italic text-gray-400 mt-1\">{log.notes}</div>}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/add-block-menu.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/admin-sidebar.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··onToggle,⏎}:·{⏎··onToggle?:·(collapsed:·boolean)·=>·void;⏎` with `·onToggle·}:·{·onToggle?:·(collapsed:·boolean)·=>·void·`","line":8,"column":39,"nodeType":null,"messageId":"replace","endLine":12,"endColumn":1,"fix":{"range":[264,325],"text":" onToggle }: { onToggle?: (collapsed: boolean) => void "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\nimport clsx from 'clsx';\nimport { AdminNavSections } from '@/components/admin/AppHeader/AdminNavSections';\n\nexport default function AdminSidebar({\n  onToggle,\n}: {\n  onToggle?: (collapsed: boolean) => void;\n}) {\n  const [isCollapsed, setIsCollapsed] = useState(false);\n\n  // Load stored collapsed state and auto-collapse if screen is small\n  useEffect(() => {\n    const stored = localStorage.getItem('admin-sidebar-collapsed');\n    if (stored === 'true') setIsCollapsed(true);\n\n    const handleResize = () => {\n      if (window.innerWidth < 768) {\n        setIsCollapsed(true);\n      }\n    };\n\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Persist collapsed state and notify parent\n  useEffect(() => {\n    localStorage.setItem('admin-sidebar-collapsed', String(isCollapsed));\n    onToggle?.(isCollapsed);\n  }, [isCollapsed, onToggle]);\n\n  return (\n    <aside\n      className={clsx(\n        'group fixed top-0 left-0 z-40 h-screen bg-zinc-900 border-r border-zinc-800 text-white overflow-y-auto transition-all duration-300 flex flex-col',\n        isCollapsed ? 'w-14 group-hover:w-72' : 'w-72'\n      )}\n    >\n      <div className=\"relative\">\n        <button\n          onClick={() => setIsCollapsed(!isCollapsed)}\n          className=\"p-2 m-2 hover:bg-zinc-800 rounded transition relative\"\n          title={isCollapsed ? 'Expand Sidebar' : 'Collapse Sidebar'}\n        >\n          {isCollapsed ? <ChevronRight size={20} /> : <ChevronLeft size={20} />}\n          {isCollapsed && (\n            <span className=\"absolute left-14 top-1/2 -translate-y-1/2 whitespace-nowrap rounded bg-zinc-800 px-2 py-1 text-xs text-white opacity-0 group-hover:opacity-100 transition-all z-20 shadow pointer-events-none\">\n              Expand Sidebar\n            </span>\n          )}\n        </button>\n\n        {/* Optional handle zone for hover rescue */}\n        {isCollapsed && (\n          <div className=\"absolute top-0 right-0 w-2 h-full bg-transparent group-hover:bg-zinc-700 rounded-r cursor-pointer transition-all duration-200\" />\n        )}\n      </div>\n\n      <div className={clsx('flex-1', isCollapsed && 'overflow-hidden')}>\n        <h1>hello</h1>\n        <AdminNavSections collapsed={isCollapsed} />\n      </div>\n    </aside>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/admin-tabs.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Insert `⏎···`","line":26,"column":37,"nodeType":null,"messageId":"insert","endLine":26,"endColumn":37,"fix":{"range":[795,795],"text":"\n   "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use client';\n\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport { FiGrid, FiFileText, FiGlobe, FiUsers, FiMenu } from 'react-icons/fi';\nimport { useState } from 'react';\nimport { useCanonicalRole } from '@/hooks/useCanonicalRole';\n\nconst allTabs = [\n  { label: 'Dashboard', href: '/admin/sites/dashboard', icon: FiGrid },\n  {\n    label: 'Logs',\n    href: '/admin/logs/dashboard',\n    icon: FiFileText,\n    roles: ['admin'],\n  },\n  { label: 'Sites', href: '/admin/sites', icon: FiGlobe },\n  { label: 'Users', href: '/admin/users', icon: FiUsers, roles: ['admin'] },\n];\n\nexport default function AdminTabs() {\n  const pathname = usePathname();\n  const { role } = useCanonicalRole();\n  const [open, setOpen] = useState(false);\n\n  const isActive = (href: string) => pathname === href || (pathname && pathname.startsWith(href + '/'));\n\n  const tabs = allTabs.filter((tab) => !tab.roles || tab.roles.includes(role || ''));\n\n  return (\n    <div className=\"border-b border-gray-300 mb-4 px-4\">\n      <div className=\"flex justify-between items-center py-2\">\n        <span className=\"text-sm font-semibold text-gray-600\">Admin Panel</span>\n        <button onClick={() => setOpen(!open)} className=\"md:hidden\">\n          <FiMenu className=\"w-5 h-5\" />\n        </button>\n      </div>\n      <nav\n        className={`flex flex-col md:flex-row gap-3 md:gap-4 text-sm transition-all ${\n          open ? 'block' : 'hidden md:flex'\n        }`}\n      >\n        {tabs.map(({ label, href, icon: Icon }) => (\n          <Link\n            key={href}\n            href={href}\n            className={`flex items-center gap-1 pb-1 border-b-2 ${\n              isActive(href)\n                ? 'text-blue-600 border-blue-600 font-medium'\n                : 'text-gray-600 border-transparent hover:text-blue-500'\n            }`}\n          >\n            <Icon className=\"w-4 h-4\" />\n            {label}\n          </Link>\n        ))}\n      </nav>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/admin/blocks/activity-widget.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/admin/blocks/engagement-widget.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/admin/blocks/retention-widget.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/admin/blocks/traffic-widget.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/admin/campaign-comparison.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/admin/image-uploader.tsx","messages":[{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":69,"column":11,"nodeType":"JSXOpeningElement","endLine":69,"endColumn":83}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useDropzone } from 'react-dropzone';\nimport { useImageUploader } from '@/hooks/useImageUploader';\n\ninterface ImageUploaderProps {\n  siteId: string;\n  templateId: string;\n  dbField: string;\n  folder?: string;\n  label: string;\n  initialUrl?: string;\n  onUpload?: (url: string | null) => void;\n}\n\nexport default function ImageUploader(props: ImageUploaderProps) {\n  const { preview, uploading, uploadImage, removeImage } = useImageUploader({\n    siteId: props.siteId,\n    templateId: props.templateId,\n    dbField: props.dbField,\n    folder: props.folder,\n    label: props.label,\n    initialUrl: props.initialUrl,\n    onChange: props.onUpload,\n  });\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept: { 'image/*': [] },\n    onDrop: (acceptedFiles) => {\n      const file = acceptedFiles[0];\n      if (file) uploadImage(file);\n    },\n  });\n\n  const getDropzoneSizeClass = (label?: string) => {\n    if (!label) return 'h-40 w-full';\n\n    const lower = label.toLowerCase();\n\n    if (lower.includes('banner')) return 'h-32 w-full aspect-[4/1]';\n    if (lower.includes('hero')) return 'h-64 w-full aspect-[2.5/1]';\n    if (lower.includes('logo')) return 'h-32 w-32 aspect-square';\n    if (lower.includes('team')) return 'h-48 w-full aspect-[3/2]';\n\n    return 'h-40 w-full';\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      {props.label && <p className=\"text-xs text-white/70 font-medium\">{props.label}</p>}\n\n      <div\n        {...getRootProps()}\n        className={`border-2 border-dashed rounded-lg text-center cursor-pointer transition flex items-center justify-center\n          ${isDragActive ? 'border-blue-500 bg-blue-50' : 'border-gray-300'}\n          ${getDropzoneSizeClass(props.label)}\n        `}\n      >\n        <input {...getInputProps()} />\n        <p className=\"text-sm text-gray-400\">\n          {isDragActive ? 'Drop the image here…' : 'Drag & drop an image, or click to select one'}\n        </p>\n      </div>\n\n      {uploading && <p className=\"text-sm text-gray-500\">Uploading...</p>}\n\n      {preview && (\n        <div className=\"relative max-w-xs\">\n          <img src={preview} alt=\"Uploaded\" className=\"rounded border max-h-48\" />\n          <button\n            type=\"button\"\n            onClick={removeImage}\n            className=\"absolute top-1 right-1 bg-red-500 text-white px-2 py-1 text-xs rounded\"\n          >\n            Remove\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/admin/seed-button.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/admin/template-image-gallery.tsx","messages":[{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":30,"column":13,"nodeType":"JSXOpeningElement","endLine":34,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { supabase } from '@/admin/lib/supabaseClient';\n\nexport default function TemplateImageGallery({ templateId }: { templateId: string }) {\n  const [images, setImages] = useState<any[]>([]);\n\n  useEffect(() => {\n    if (!templateId) return;\n    supabase\n      .from('template_images')\n      .select('*')\n      .eq('template_id', templateId)\n      .order('uploaded_at', { ascending: false })\n      .then(({ data, error }) => {\n        if (error) console.error('Failed to fetch image history:', error);\n        else setImages(data);\n      });\n  }, [templateId]);\n\n  if (!images.length) return null;\n\n  return (\n    <div className=\"mt-4 space-y-2\">\n      <h3 className=\"text-sm font-semibold\">Upload History</h3>\n      <div className=\"grid grid-cols-2 gap-2\">\n        {images.map((img) => (\n          <div key={img.id} className=\"relative\">\n            <img\n              src={img.url}\n              alt={img.original_name}\n              className=\"rounded border max-h-32 object-contain\"\n            />\n            <div className=\"absolute bottom-1 left-1 bg-black bg-opacity-50 text-white text-xs px-1 rounded\">\n              {img.type}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/admin/user-timeline-dialog.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·Dialog,·DialogContent,·DialogHeader,·DialogTitle,·Button,·Tooltip,·TooltipContent,·TooltipProvider,·TooltipTrigger·` with `⏎··Dialog,⏎··DialogContent,⏎··DialogHeader,⏎··DialogTitle,⏎··Button,⏎··Tooltip,⏎··TooltipContent,⏎··TooltipProvider,⏎··TooltipTrigger,⏎`","line":4,"column":9,"nodeType":null,"messageId":"replace","endLine":4,"endColumn":125,"fix":{"range":[57,173],"text":"\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  Button,\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n"}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'userId' is defined but never used. Allowed unused args must match /^_/u.","line":33,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":33,"endColumn":9}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use client';\n\nimport { useState } from 'react';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, Button, Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui';\nimport { format, formatDistance } from 'date-fns';\n\ninterface TimelineEvent {\n  type: string;\n  source: 'guest' | 'log';\n  created_at: string;\n  trigger_reason?: string;\n  referrer?: string;\n  page_url?: string;\n  platform?: string | null;\n  device_type?: string | null;\n  ip_address?: string | null;\n  user_agent?: string | null;\n  [key: string]: any; // optional fallback for dynamic props\n}\n\ninterface Props {\n  open: boolean;\n  onClose: () => void;\n  userId: string;\n  userLabel: string;\n  guestEvents: TimelineEvent[];\n  userLogs: TimelineEvent[];\n}\n\nexport function UserTimelineDialog({\n  open,\n  onClose,\n  userId,\n  userLabel,\n  guestEvents,\n  userLogs,\n}: Props) {\n  const [showAbsolute, setShowAbsolute] = useState(false);\n\n  const allEvents = [...guestEvents, ...userLogs]\n    .map((e) => ({\n      ...e,\n      timestamp: new Date(e.created_at),\n    }))\n    .sort((a, b) => a.timestamp.getTime() - b.timestamp.getTime());\n\n  const origin = allEvents[0]?.timestamp ?? new Date();\n\n  const emojiMap: Record<string, string> = {\n    view: '👁️',\n    click: '🚀',\n    signup_complete: '✅',\n    site_published: '📤',\n  };\n\n  const descriptions: Record<string, string> = {\n    view: 'User opened the upgrade modal',\n    click: 'User clicked “Sign Up” button',\n    signup_complete: 'User completed sign up',\n    site_published: 'User published a site',\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-lg\">\n        <DialogHeader>\n          <DialogTitle className=\"text-lg font-bold\">Timeline for {userLabel}</DialogTitle>\n          {guestEvents.length > 0 &&\n            (() => {\n              const firstView = guestEvents.find((e) => e.type === 'view');\n              if (!firstView) return null;\n\n              const ref = (firstView as any).referrer || '';\n              const host = typeof window !== 'undefined' ? window.location.origin : '';\n              const isInternal = ref.startsWith(host) || ref === '';\n\n              const refColor = ref\n                ? isInternal\n                  ? 'text-green-600'\n                  : 'text-red-600'\n                : 'text-muted-foreground';\n\n              const utmFields = [\n                'utm_source',\n                'utm_medium',\n                'utm_campaign',\n                'utm_term',\n                'utm_content',\n              ];\n\n              return (\n                <div className=\"text-sm text-muted-foreground space-y-1 border p-2 rounded bg-muted\">\n                  {firstView.trigger_reason && (\n                    <div>\n                      <strong>Trigger:</strong> {firstView.trigger_reason}\n                    </div>\n                  )}\n                  <div>\n                    <strong>Referrer:</strong> <span className={refColor}>{ref || 'none'}</span>\n                  </div>\n                  {(firstView as any).page_url && (\n                    <div>\n                      <strong>Page:</strong>{' '}\n                      <a\n                        href={(firstView as any).page_url}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        className=\"underline\"\n                      >\n                        {(firstView as any).page_url}\n                      </a>\n                    </div>\n                  )}\n                  {utmFields\n                    .filter((key) => (firstView as any)[key])\n                    .map((key) => (\n                      <div key={key}>\n                        <strong>{key.replace('utm_', '').toUpperCase()}:</strong>{' '}\n                        {(firstView as any)[key]}\n                      </div>\n                    ))}\n                  {(firstView as any).page_url && (\n                    <Button\n                      size=\"sm\"\n                      variant=\"secondary\"\n                      className=\"mt-2\"\n                      onClick={() => window.open((firstView as any).page_url, '_blank')}\n                    >\n                      Open Page Context ↗\n                    </Button>\n                  )}\n                </div>\n              );\n            })()}\n        </DialogHeader>\n\n        <div className=\"mb-2\">\n          <Button variant=\"outline\" size=\"sm\" onClick={() => setShowAbsolute(!showAbsolute)}>\n            Toggle {showAbsolute ? 'Relative' : 'Absolute'} Timestamps\n          </Button>\n        </div>\n\n        <div className=\"space-y-2 text-sm max-h-[400px] overflow-y-auto\">\n          <TooltipProvider>\n            {allEvents.map((e, i) => {\n              const prev = allEvents[i - 1]?.timestamp;\n              const delta =\n                prev && e.timestamp\n                  ? formatDistance(e.timestamp, prev, { addSuffix: false })\n                  : null;\n\n              const deviceInfo =\n                e.source === 'guest' && (e.user_agent || e.platform || e.device_type)\n                  ? [e.platform, e.device_type].filter(Boolean).join(' • ') +\n                    (e.user_agent ? `\\n${e.user_agent}` : '')\n                  : null;\n\n              return (\n                <div key={i} className=\"border-b pb-1\">\n                  <div className=\"flex justify-between items-start\">\n                    <Tooltip>\n                      <TooltipTrigger asChild>\n                        <span>\n                          {emojiMap[e.type] || '🔹'} {descriptions[e.type] || e.type}\n                        </span>\n                      </TooltipTrigger>\n                      <TooltipContent>\n                        <p>{descriptions[e.type] || 'Event in user journey'}</p>\n                      </TooltipContent>\n                    </Tooltip>\n\n                    <span className=\"text-muted-foreground text-xs\">\n                      {showAbsolute\n                        ? format(e.timestamp, 'MMM d, yyyy HH:mm:ss')\n                        : formatDistance(e.timestamp, origin, {\n                            addSuffix: true,\n                          })}\n                    </span>\n                  </div>\n\n                  {delta && (\n                    <div className=\"text-xs text-muted-foreground pl-4\">\n                      +{delta} since previous\n                    </div>\n                  )}\n\n                  {deviceInfo && (\n                    <div className=\"text-xs text-muted-foreground mt-1 pl-4 whitespace-pre-wrap\">\n                      {deviceInfo}\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </TooltipProvider>\n\n          {allEvents.length === 0 && (\n            <div className=\"text-muted-foreground italic\">No events found for this user.</div>\n          )}\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/analytics/admin-analytics-toolbar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/auth-guard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/block-settings-modal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/branding/branding-audit-panel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/branding/branding-badge.tsx","messages":[{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":22,"column":9,"nodeType":"JSXOpeningElement","endLine":22,"endColumn":84}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export default function BrandingBadge({ branding }: { branding: any }) {\n  if (!branding) return null;\n\n  const themeColors: any = {\n    dark: 'bg-gray-800 text-white border-gray-700',\n    light: 'bg-white text-black border-gray-300',\n  };\n\n  const brandColors: any = {\n    green: 'bg-green-500',\n    blue: 'bg-blue-500',\n    red: 'bg-red-500',\n  };\n\n  return (\n    <div\n      className={`text-xs inline-flex items-center gap-2 px-2 py-1 rounded border ${themeColors[branding.theme] || ''}`}\n    >\n      <span>{branding.name}</span>\n      <div className={`w-3 h-3 rounded-full ${brandColors[branding.brand] || ''}`} />\n      {branding.logo_url && (\n        <img src={branding.logo_url} alt=\"Logo\" className=\"h-4 w-4 rounded-full\" />\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/branding/layout-export-buttons.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/branding/owner-toggle.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎······.from('branding_profiles')⏎······.update({·owner_id:·userId·})⏎······` with `.from('branding_profiles').update({·owner_id:·userId·})`","line":23,"column":19,"nodeType":null,"messageId":"replace","endLine":26,"endColumn":7,"fix":{"range":[589,665],"text":".from('branding_profiles').update({ owner_id: userId })"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { supabase } from '@/admin/lib/supabaseClient';\n\ntype OwnerToggleProps = {\n  profileId: string;\n};\n\nexport default function OwnerToggle({ profileId }: OwnerToggleProps) {\n  const [userId, setUserId] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    supabase.auth.getUser().then(({ data }) => {\n      setUserId(data?.user?.id ?? null);\n    });\n  }, []);\n\n  const assignToMe = async () => {\n    if (!userId || loading) return;\n    setLoading(true);\n    await supabase\n      .from('branding_profiles')\n      .update({ owner_id: userId })\n      .eq('id', profileId);\n    location.reload();\n  };\n\n  return (\n    <button\n      onClick={assignToMe}\n      disabled={loading}\n      aria-label=\"Assign ownership of this branding profile to current user\"\n      className={`mt-2 text-xs underline ${\n        loading ? 'text-gray-400 cursor-not-allowed' : 'text-blue-600'\n      }`}\n    >\n      {loading ? 'Assigning…' : 'Assign to Me'}\n    </button>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/branding/theme-brand-switcher-advanced.tsx","messages":[{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":109,"column":11,"nodeType":"JSXOpeningElement","endLine":109,"endColumn":93}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport QRCode from 'qrcode';\nimport { supabase } from '@/admin/lib/supabaseClient';\n\nconst themes = ['light', 'dark'] as const;\nconst brands = ['green', 'blue', 'red'] as const;\n\ntype Theme = (typeof themes)[number];\ntype Brand = (typeof brands)[number];\n\ntype Props = {\n  profileId: string;\n  initialTheme?: Theme;\n  initialBrand?: Brand;\n  ownerId?: string;\n};\n\nexport default function ThemeBrandSwitcherAdvanced({\n  profileId,\n  initialTheme = 'dark',\n  initialBrand = 'green',\n  ownerId,\n}: Props) {\n  const [theme, setTheme] = useState<Theme>(initialTheme);\n  const [brand, setBrand] = useState<Brand>(initialBrand);\n  const [url, setUrl] = useState('');\n  const [qr, setQr] = useState<string | null>(null);\n  const [saving, setSaving] = useState(false);\n  const [userId, setUserId] = useState<string | null>(null);\n\n  // Load user ID and local storage preferences\n  useEffect(() => {\n    const storedTheme = localStorage.getItem('branding_theme') as Theme | null;\n    const storedBrand = localStorage.getItem('branding_brand') as Brand | null;\n\n    if (storedTheme && themes.includes(storedTheme)) setTheme(storedTheme);\n    if (storedBrand && brands.includes(storedBrand)) setBrand(storedBrand);\n\n    supabase.auth.getUser().then(({ data }) => {\n      setUserId(data?.user?.id || null);\n    });\n  }, []);\n\n  // Update QR and URL when theme/brand change\n  useEffect(() => {\n    const updated = `/api/og/snapshot?theme=${theme}&brand=${brand}`;\n    setUrl(updated);\n\n    const fullUrl = typeof window !== 'undefined' ? `${window.location.origin}${updated}` : updated;\n    QRCode.toDataURL(fullUrl).then(setQr);\n\n    localStorage.setItem('branding_theme', theme);\n    localStorage.setItem('branding_brand', brand);\n  }, [theme, brand]);\n\n  const saveDefaults = async () => {\n    setSaving(true);\n    await supabase.from('branding_profiles').update({ theme, brand }).eq('id', profileId);\n    setSaving(false);\n    alert('Saved as default.');\n  };\n\n  const canSave = userId && ownerId && userId === ownerId;\n\n  return (\n    <div className=\"p-4 border rounded space-y-3 bg-white transition-all\">\n      <div className=\"flex gap-4\">\n        <label className=\"text-sm font-semibold\">Theme:</label>\n        {themes.map((t) => (\n          <button\n            key={t}\n            aria-pressed={t === theme}\n            onClick={() => setTheme(t)}\n            className={`text-sm px-2 py-1 border rounded transition-all ${\n              t === theme ? 'bg-black text-white' : 'bg-gray-100'\n            }`}\n          >\n            {t}\n          </button>\n        ))}\n      </div>\n\n      <div className=\"flex gap-4\">\n        <label className=\"text-sm font-semibold\">Brand:</label>\n        {brands.map((b) => (\n          <button\n            key={b}\n            aria-pressed={b === brand}\n            onClick={() => setBrand(b)}\n            className={`text-sm px-2 py-1 border rounded transition-all ${\n              b === brand ? 'bg-black text-white' : 'bg-gray-100'\n            }`}\n          >\n            {b}\n          </button>\n        ))}\n      </div>\n\n      <div className=\"mt-2\">\n        <p className=\"text-xs\">OG URL:</p>\n        <code className=\"text-xs block bg-gray-100 p-2 rounded\">{url}</code>\n      </div>\n\n      {qr && (\n        <div className=\"mt-2\">\n          <p className=\"text-xs text-muted-foreground\">QR:</p>\n          <img src={qr} alt=\"QR Code preview\" className=\"w-24 h-24 border rounded shadow\" />\n        </div>\n      )}\n\n      {canSave && (\n        <button\n          onClick={saveDefaults}\n          disabled={saving}\n          className=\"text-xs mt-2 underline text-blue-600\"\n        >\n          {saving ? 'Saving…' : 'Save as Default'}\n        </button>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/branding/theme-brand-switcher.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'onUpdate'. Either include it or remove the dependency array. If 'onUpdate' changes too often, find the parent component that defines it and wrap that definition in useCallback.","line":28,"column":6,"nodeType":"ArrayExpression","endLine":28,"endColumn":20,"suggestions":[{"desc":"Update the dependencies array to be: [theme, brand, onUpdate]","fix":{"range":[877,891],"text":"[theme, brand, onUpdate]"}}]},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":66,"column":11,"nodeType":"JSXOpeningElement","endLine":66,"endColumn":65}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useEffect, useState } from 'react';\nimport QRCode from 'qrcode';\n\nconst themes = ['light', 'dark'];\nconst brands = ['green', 'blue', 'red'];\n\nexport default function ThemeBrandSwitcher({\n  initialTheme = 'dark',\n  initialBrand = 'green',\n  onUpdate,\n}: {\n  initialTheme?: string;\n  initialBrand?: string;\n  onUpdate?: (url: string, theme: string, brand: string, qr?: string) => void;\n}) {\n  const [theme, setTheme] = useState(initialTheme);\n  const [brand, setBrand] = useState(initialBrand);\n  const [url, setUrl] = useState('');\n  const [qr, setQr] = useState<string | null>(null);\n\n  useEffect(() => {\n    const updated = `/api/og/snapshot?theme=${theme}&brand=${brand}`;\n    setUrl(updated);\n    QRCode.toDataURL(window.location.origin + updated).then((dataUrl) => {\n      setQr(dataUrl);\n      if (onUpdate) onUpdate(updated, theme, brand, dataUrl);\n    });\n  }, [theme, brand]);\n\n  return (\n    <div className=\"p-4 border rounded space-y-2 bg-white\">\n      <div className=\"flex gap-4\">\n        <label className=\"text-sm font-semibold\">Theme:</label>\n        {themes.map((t) => (\n          <button\n            key={t}\n            className={`text-sm px-2 py-1 border rounded ${t === theme ? 'bg-black text-white' : 'bg-gray-100'}`}\n            onClick={() => setTheme(t)}\n          >\n            {t}\n          </button>\n        ))}\n      </div>\n\n      <div className=\"flex gap-4\">\n        <label className=\"text-sm font-semibold\">Brand:</label>\n        {brands.map((b) => (\n          <button\n            key={b}\n            className={`text-sm px-2 py-1 border rounded ${b === brand ? 'bg-black text-white' : 'bg-gray-100'}`}\n            onClick={() => setBrand(b)}\n          >\n            {b}\n          </button>\n        ))}\n      </div>\n\n      <div className=\"mt-2\">\n        <p className=\"text-xs\">OG URL:</p>\n        <code className=\"text-xs block bg-gray-100 p-2 rounded\">{url}</code>\n      </div>\n\n      {qr && (\n        <div className=\"mt-2\">\n          <p className=\"text-xs text-muted-foreground\">QR:</p>\n          <img src={qr} alt=\"QR\" className=\"w-24 h-24 border\" />\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/breadcrumb-nav.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// components/BreadcrumbNav.tsx\nimport Link from 'next/link';\nimport { useRouter, useSearchParams } from 'next/navigation';\n\nexport default function BreadcrumbNav() {\n  const searchParams = useSearchParams();\n  const segments = searchParams?.get('asPath')?.split('?')[0].split('/').filter(Boolean) || [];\n\n  const pathAcc: string[] = [];\n  const crumbs = segments.map((seg, i) => {\n    pathAcc.push(seg);\n    const href = '/' + pathAcc.join('/');\n    const label = seg.replace(/-/g, ' ').replace(/\\b\\w/g, (l) => l.toUpperCase());\n    return (\n      <span key={i} className=\"text-sm text-gray-500\">\n        {i > 0 && ' / '}\n        <Link href={href} className=\"hover:underline text-blue-600\">\n          {label}\n        </Link>\n      </span>\n    );\n  });\n\n  return <div className=\"mb-2\">{crumbs}</div>;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/campaigns/campaign-header.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":16,"column":9,"nodeType":null,"messageId":"insert","endLine":16,"endColumn":9,"fix":{"range":[591,591],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":17,"column":1,"nodeType":null,"messageId":"insert","endLine":17,"endColumn":1,"fix":{"range":[598,598],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":18,"column":11,"nodeType":null,"messageId":"insert","endLine":18,"endColumn":11,"fix":{"range":[634,634],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··········` with `············`","line":19,"column":1,"nodeType":null,"messageId":"replace","endLine":19,"endColumn":11,"fix":{"range":[659,669],"text":"            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":20,"column":9,"nodeType":null,"messageId":"insert","endLine":20,"endColumn":9,"fix":{"range":[731,731],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":21,"column":1,"nodeType":null,"messageId":"insert","endLine":21,"endColumn":1,"fix":{"range":[734,734],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":22,"column":1,"nodeType":null,"messageId":"insert","endLine":22,"endColumn":1,"fix":{"range":[758,758],"text":"  "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":7,"source":"// components/admin/campaigns/CampaignHeader.tsx\n\nimport { Dispatch, SetStateAction } from 'react';\n\ntype Props = {\n  showTimestamps: boolean;\n  setShowTimestamps: Dispatch<SetStateAction<boolean>>;\n};\n\nexport default function CampaignHeader({ showTimestamps, setShowTimestamps }: Props) {\n  return (\n    <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-2 mb-4\">\n      <h1 className=\"text-xl font-bold text-white\">Campaigns</h1>\n      <div className=\"flex items-center gap-4\">\n        <label className=\"flex items-center gap-2 text-sm text-zinc-300\">\n        <input\n          type=\"checkbox\"\n          checked={showTimestamps}\n          onChange={(e) => setShowTimestamps(e.target.checked)}\n        />\n        Show timestamps\n      </label>\n        <div className=\"flex items-center gap-2 text-sm text-zinc-300\">\n          <span>Radius:</span>\n          <select className=\"bg-zinc-800 border border-zinc-600 text-white px-2 py-1 rounded\">\n            {[10, 25, 50, 100].map((r) => (\n              <option key={r} value={r}>{`${r} mi`}</option>\n            ))}\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/campaigns/campaign-panel.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useMemo' is defined but never used.","line":6,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":6,"endColumn":17},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'setExpanded' is defined but never used. Allowed unused args must match /^_/u.","line":25,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":25,"endColumn":14},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `·`","line":32,"column":108,"nodeType":null,"messageId":"delete","endLine":32,"endColumn":109,"fix":{"range":[974,975],"text":""}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'isEnded' is assigned a value but never used.","line":35,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":35,"endColumn":16},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'handlePanelClick' is assigned a value but never used.","line":61,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":61,"endColumn":25},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·?·'bg-green-900·border-green-600'·:·isUpcoming·?·'bg-yellow-900·border-yellow-600'` with `⏎··········?·'bg-green-900·border-green-600'⏎··········:·isUpcoming⏎············?·'bg-yellow-900·border-yellow-600'⏎···········`","line":71,"column":17,"nodeType":null,"messageId":"replace","endLine":71,"endColumn":100,"fix":{"range":[2274,2357],"text":"\n          ? 'bg-green-900 border-green-600'\n          : isUpcoming\n            ? 'bg-yellow-900 border-yellow-600'\n           "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":74,"column":1,"nodeType":null,"messageId":"insert","endLine":74,"endColumn":1,"fix":{"range":[2452,2452],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `{campaign.name}·—·{campaign.city}` with `⏎··········{campaign.name}·—·{campaign.city}⏎········`","line":88,"column":48,"nodeType":null,"messageId":"replace","endLine":88,"endColumn":81,"fix":{"range":[2972,3005],"text":"\n          {campaign.name} — {campaign.city}\n        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·className=\"text-sm·text-zinc-300\"·title={`Start:·${start.format('MMM·D,·h:mm·A')}·•·End:·${end.format('MMM·D,·h:mm·A')}`}>{status}` with `⏎··········className=\"text-sm·text-zinc-300\"⏎··········title={`Start:·${start.format('MMM·D,·h:mm·A')}·•·End:·${end.format('MMM·D,·h:mm·A')}`}⏎········>⏎··········{status}⏎········`","line":89,"column":13,"nodeType":null,"messageId":"replace","endLine":89,"endColumn":144,"fix":{"range":[3024,3155],"text":"\n          className=\"text-sm text-zinc-300\"\n          title={`Start: ${start.format('MMM D, h:mm A')} • End: ${end.format('MMM D, h:mm A')}`}\n        >\n          {status}\n        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `{l.address_city},·{l.address_state}` with `⏎····················{l.address_city},·{l.address_state}⏎··················`","line":124,"column":58,"nodeType":null,"messageId":"replace","endLine":124,"endColumn":93,"fix":{"range":[4672,4707],"text":"\n                    {l.address_city}, {l.address_state}\n                  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `{l.phone}·•·{l.email}` with `⏎····················{l.phone}·•·{l.email}⏎··················`","line":126,"column":58,"nodeType":null,"messageId":"replace","endLine":126,"endColumn":79,"fix":{"range":[4854,4875],"text":"\n                    {l.phone} • {l.email}\n                  "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":7,"source":"// components/admin/campaigns/campaign-panel.tsx\n\nimport { CampaignType } from '@/types/campaign.types';\nimport { Lead } from '@/types/lead.types';\nimport dayjs, { Dayjs } from 'dayjs';\nimport { useMemo, useState } from 'react';\nimport ClaimPoster from './claim-poster';\nimport TowTruckLogo from '@/public/images/tow-truck-logo.png'; // adjust path as needed\n\nexport type Props = {\n  campaign: CampaignType;\n  leads: Lead[];\n  now: Dayjs;\n  expanded: boolean;\n  setExpanded: (v: boolean) => void;\n  setEditingCampaign: (c: CampaignType) => void;\n  setSelectedLeadIds: (ids: string[]) => void;\n};\n\nexport default function CampaignPanel({\n  campaign,\n  leads,\n  now,\n  expanded,\n  setExpanded,\n  setEditingCampaign,\n  setSelectedLeadIds,\n}: Props) {\n  const [posterEditing, setPosterEditing] = useState(false);\n\n  const start = dayjs(campaign.starts_at || new Date());\n  const end = dayjs(campaign.ends_at || new Date(Date.now() + 3 * 24 * 60 * 60 * 1000)); // 3 days from now \n  const isActive = now.isAfter(start) && now.isBefore(end);\n  const isUpcoming = now.isBefore(start);\n  const isEnded = now.isAfter(end);\n\n  const minutesLeft = end.diff(now, 'minute');\n  const minutesElapsed = now.diff(start, 'minute');\n  const totalMinutes = end.diff(start, 'minute');\n  const progress = Math.min(Math.max((minutesElapsed / totalMinutes) * 100, 0), 100);\n\n  let status = '';\n  if (isActive) {\n    const d = Math.floor(minutesLeft / 1440);\n    const h = Math.floor((minutesLeft % 1440) / 60);\n    status = `🟢 Active — ${d}d ${h}h left${minutesLeft < 720 ? ' ⏳' : ''}`;\n  } else if (isUpcoming) {\n    const mins = start.diff(now, 'minute');\n    const d = Math.floor(mins / 1440);\n    const h = Math.floor((mins % 1440) / 60);\n    status = `🟡 Starts in ${d}d ${h}h`;\n  } else {\n    const mins = now.diff(end, 'minute');\n    const d = Math.floor(mins / 1440);\n    const h = Math.floor((mins % 1440) / 60);\n    status = `🔴 Ended ${d}d ${h}h ago`;\n  }\n\n  const topTwoLeads = leads.slice(0, 2);\n\n  const handlePanelClick = () => {\n    if (!posterEditing) {\n      setEditingCampaign(campaign);\n      setSelectedLeadIds(campaign.lead_ids ?? []);\n    }\n  };\n\n  return (\n    <div\n      className={`border p-4 rounded shadow mb-4 transition hover:opacity-90 text-white ${\n        isActive ? 'bg-green-900 border-green-600' : isUpcoming ? 'bg-yellow-900 border-yellow-600' : 'bg-zinc-800 border-zinc-600 opacity-80'\n      }`}\n      // removed automatic modal trigger\n// onClick={!posterEditing ? handlePanelClick : undefined}\n    >\n      <div className=\"flex items-center justify-between mb-1 gap-3\">\n        <button\n          className=\"text-xs bg-zinc-700 hover:bg-zinc-600 px-2 py-1 rounded text-white\"\n          onClick={() => {\n            if (!posterEditing) {\n              setEditingCampaign(campaign);\n              setSelectedLeadIds(campaign.lead_ids ?? []);\n            }\n          }}\n        >\n          Edit\n        </button>\n        <div className=\"font-semibold text-lg\">{campaign.name} — {campaign.city}</div>\n        <div className=\"text-sm text-zinc-300\" title={`Start: ${start.format('MMM D, h:mm A')} • End: ${end.format('MMM D, h:mm A')}`}>{status}</div>\n      </div>\n\n      {isActive && (\n        <div className=\"h-1 bg-zinc-700 mb-2 rounded overflow-hidden\">\n          <div className=\"h-full bg-green-500 transition-all\" style={{ width: `${progress}%` }} />\n        </div>\n      )}\n\n      <div className=\"text-sm text-zinc-400\">\n        {leads.length > 0 ? `Linked Leads: ${leads.length}` : 'No leads linked.'}\n      </div>\n\n      {expanded && (\n        <div className=\"mt-4\">\n          {topTwoLeads.length === 2 && campaign.alt_domains?.[0] ? (\n            <ClaimPoster\n              domain={campaign.alt_domains[0]}\n              offerEndsAt={campaign.ends_at}\n              arcOffsetY={campaign.arc_offset_y}\n              logoOffsetY={campaign.logo_offset_y}\n              arcRadius={campaign.arc_radius}\n              leadA={{ name: topTwoLeads[0].business_name || 'Lead A' }}\n              leadB={{ name: topTwoLeads[1].business_name || 'Lead B' }}\n              qrUrl={`https://quicksites.ai/claim/${campaign.alt_domains[0]}`}\n              imageSrc={TowTruckLogo.src}\n              campaignId={campaign.id}\n              onEditStart={() => setPosterEditing(true)}\n              onEditEnd={() => setPosterEditing(false)}\n            />\n          ) : (\n            <div className=\"space-y-2\">\n              {leads.map((l) => (\n                <div key={l.id} className=\"p-2 rounded bg-zinc-900 border border-zinc-700\">\n                  <div className=\"font-semibold text-sm\">{l.business_name}</div>\n                  <div className=\"text-xs text-zinc-400\">{l.address_city}, {l.address_state}</div>\n                  <div className=\"text-xs text-zinc-500 italic\">{l.industry}</div>\n                  <div className=\"text-xs text-zinc-400\">{l.phone} • {l.email}</div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/campaigns/claim-poster.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `process.env.NEXT_PUBLIC_SUPABASE_URL!,·process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!` with `⏎····process.env.NEXT_PUBLIC_SUPABASE_URL!,⏎····process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!⏎··`","line":46,"column":43,"nodeType":null,"messageId":"replace","endLine":46,"endColumn":124,"fix":{"range":[1150,1231],"text":"\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·className=\"mb-6\"·style={{·transform:·`translateY(${settings.arcOffsetY}px)`,·height:·`${settings.arcRadius}px`·}}` with `⏎········className=\"mb-6\"⏎········style={{⏎··········transform:·`translateY(${settings.arcOffsetY}px)`,⏎··········height:·`${settings.arcRadius}px`,⏎········}}⏎······`","line":112,"column":11,"nodeType":null,"messageId":"replace","endLine":112,"endColumn":125,"fix":{"range":[3180,3294],"text":"\n        className=\"mb-6\"\n        style={{\n          transform: `translateY(${settings.arcOffsetY}px)`,\n          height: `${settings.arcRadius}px`,\n        }}\n      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎············id=\"arcPath\"⏎············d={arcPath}⏎············fill=\"transparent\"⏎·········` with `·id=\"arcPath\"·d={arcPath}·fill=\"transparent\"`","line":114,"column":16,"nodeType":null,"messageId":"replace","endLine":118,"endColumn":10,"fix":{"range":[3373,3463],"text":" id=\"arcPath\" d={arcPath} fill=\"transparent\""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·className=\"w-28·h-20·mx-auto·mb-4\"·style={{·transform:·`translateY(${settings.logoOffsetY}px)`·}}` with `⏎········className=\"w-28·h-20·mx-auto·mb-4\"⏎········style={{·transform:·`translateY(${settings.logoOffsetY}px)`·}}⏎······`","line":127,"column":11,"nodeType":null,"messageId":"replace","endLine":127,"endColumn":109,"fix":{"range":[3723,3821],"text":"\n        className=\"w-28 h-20 mx-auto mb-4\"\n        style={{ transform: `translateY(${settings.logoOffsetY}px)` }}\n      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·src={imageSrc}·alt=\"Tow·Truck·Logo\"·width={112}·height={80}·className=\"object-contain·w-full·h-full\"` with `⏎··········src={imageSrc}⏎··········alt=\"Tow·Truck·Logo\"⏎··········width={112}⏎··········height={80}⏎··········className=\"object-contain·w-full·h-full\"⏎·······`","line":128,"column":15,"nodeType":null,"messageId":"replace","endLine":128,"endColumn":116,"fix":{"range":[3837,3938],"text":"\n          src={imageSrc}\n          alt=\"Tow Truck Logo\"\n          width={112}\n          height={80}\n          className=\"object-contain w-full h-full\"\n       "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎········72-HOUR·OFFERING⏎······` with `72-HOUR·OFFERING`","line":143,"column":68,"nodeType":null,"messageId":"replace","endLine":145,"endColumn":7,"fix":{"range":[4497,4529],"text":"72-HOUR OFFERING"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎········(Time·left:·{timeLeft})⏎······` with `(Time·left:·{timeLeft})`","line":146,"column":46,"nodeType":null,"messageId":"replace","endLine":148,"endColumn":7,"fix":{"range":[4581,4620],"text":"(Time left: {timeLeft})"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·onClick={handleCancel}·className=\"text-xs·px-2·py-1·rounded·bg-zinc-700·hover:bg-zinc-600\">Cancel` with `⏎··············onClick={handleCancel}⏎··············className=\"text-xs·px-2·py-1·rounded·bg-zinc-700·hover:bg-zinc-600\"⏎············>⏎··············Cancel⏎············`","line":196,"column":20,"nodeType":null,"messageId":"replace","endLine":196,"endColumn":118,"fix":{"range":[6242,6340],"text":"\n              onClick={handleCancel}\n              className=\"text-xs px-2 py-1 rounded bg-zinc-700 hover:bg-zinc-600\"\n            >\n              Cancel\n            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·onClick={handleSave}·className=\"text-xs·px-2·py-1·rounded·bg-green-600·hover:bg-green-500\">Save` with `⏎··············onClick={handleSave}⏎··············className=\"text-xs·px-2·py-1·rounded·bg-green-600·hover:bg-green-500\"⏎············>⏎··············Save⏎············`","line":197,"column":20,"nodeType":null,"messageId":"replace","endLine":197,"endColumn":116,"fix":{"range":[6369,6465],"text":"\n              onClick={handleSave}\n              className=\"text-xs px-2 py-1 rounded bg-green-600 hover:bg-green-500\"\n            >\n              Save\n            "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":9,"source":"import Image from 'next/image';\nimport QRCode from 'react-qr-code';\nimport { formatDistanceToNowStrict, parseISO } from 'date-fns';\nimport { useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport { toast } from 'react-hot-toast';\nimport { Database } from '@/types/supabase';\n\nexport type ClaimPosterProps = {\n  domain: string;\n  offerEndsAt: string; // ISO string\n  leadA: {\n    name: string;\n    logoUrl?: string;\n  };\n  leadB: {\n    name: string;\n    logoUrl?: string;\n  };\n  qrUrl: string;\n  imageSrc: string;\n  arcOffsetY?: number; // vertical offset for arc in px\n  logoOffsetY?: number; // vertical offset for logo in px\n  arcRadius?: number; // arc radius for domain text\n  onEditStart?: () => void;\n  onEditEnd?: () => void;\n  campaignId?: string;\n};\n\nexport default function ClaimPoster({\n  domain,\n  offerEndsAt,\n  leadA,\n  leadB,\n  qrUrl,\n  imageSrc,\n  arcOffsetY = 0,\n  logoOffsetY = 0,\n  arcRadius = 100,\n  onEditStart,\n  onEditEnd,\n  campaignId,\n}: ClaimPosterProps) {\n  console.log('[🧩 ClaimPoster props]', { campaignId, arcOffsetY, logoOffsetY, arcRadius });\n\n  const supabase = createClient<Database>(process.env.NEXT_PUBLIC_SUPABASE_URL!, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!);\n  const [editing, setEditing] = useState(false);\n  const [settings, setSettings] = useState({ arcOffsetY, logoOffsetY, arcRadius });\n  const [original, setOriginal] = useState({ arcOffsetY, logoOffsetY, arcRadius });\n\n  const arcPath = `M50,${80 + settings.arcOffsetY} A${settings.arcRadius},${settings.arcRadius} 0 0 1 250,${80 + settings.arcOffsetY}`;\n  const timeLeft = formatDistanceToNowStrict(parseISO(offerEndsAt), {\n    unit: 'day',\n    roundingMethod: 'floor',\n  });\n\n  const handleCancel = () => {\n    setSettings(original);\n    setEditing(false);\n    onEditEnd?.();\n  };\n\n  const handleSave = async () => {\n    setOriginal(settings);\n    setEditing(false);\n    onEditEnd?.();\n\n    if (campaignId) {\n      console.log('[📝 Saving poster settings]', {\n        id: campaignId,\n        ...settings,\n      });\n\n      const { error } = await supabase\n        .from('campaigns')\n        .update({\n          arc_offset_y: settings.arcOffsetY,\n          logo_offset_y: settings.logoOffsetY,\n          arc_radius: settings.arcRadius,\n        })\n        .eq('id', campaignId);\n\n      if (error) {\n        console.error('Failed to save poster settings:', error);\n        toast.error('Failed to save poster settings.');\n      } else {\n        console.log('[✅ Poster settings saved]');\n        toast.success('Poster settings saved.');\n      }\n    } else {\n      console.warn('⚠️ No campaignId provided — settings not saved.');\n      toast.error('No campaign ID provided.');\n    }\n  };\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    if (!editing) {\n      onEditStart?.();\n    } else {\n      onEditEnd?.();\n    }\n  };\n\n  return (\n    <div\n      className=\"bg-[#080a03] text-white p-6 rounded-lg w-full max-w-md mx-auto text-center font-semibold shadow-lg border border-zinc-700\"\n      onClick={(e) => e.stopPropagation()}\n    >\n      <div className=\"text-xs text-zinc-300 uppercase mb-2 tracking-wide\">Towing Website SEO</div>\n\n      <div className=\"mb-6\" style={{ transform: `translateY(${settings.arcOffsetY}px)`, height: `${settings.arcRadius}px` }}>\n        <svg width=\"100%\" height=\"230\" viewBox=\"0 0 300 150\">\n          <path\n            id=\"arcPath\"\n            d={arcPath}\n            fill=\"transparent\"\n          />\n          <text fill=\"white\" fontSize=\"14\" fontWeight=\"600\" textAnchor=\"middle\">\n            <textPath href=\"#arcPath\" startOffset=\"50%\">\n              {domain.toUpperCase()}\n            </textPath>\n          </text>\n        </svg>\n      </div>\n\n      <div className=\"w-28 h-20 mx-auto mb-4\" style={{ transform: `translateY(${settings.logoOffsetY}px)` }}>\n        <Image src={imageSrc} alt=\"Tow Truck Logo\" width={112} height={80} className=\"object-contain w-full h-full\" />\n      </div>\n\n      <div className=\"flex justify-center items-center my-4 gap-4\">\n        <LeadCard name={leadA.name} logoUrl={leadA.logoUrl} />\n        <div className=\"text-sm text-zinc-500\">or</div>\n        <LeadCard name={leadB.name} logoUrl={leadB.logoUrl} />\n      </div>\n\n      <div className=\"w-24 h-24 mx-auto mb-2 bg-white p-2 rounded shadow-md\">\n        <QRCode value={qrUrl} size={96} />\n      </div>\n\n      <div className=\"text-xs text-zinc-300\">Scan to claim it first</div>\n\n      <div className=\"mt-3 text-yellow-400 text-sm tracking-wider\">\n        72-HOUR OFFERING\n      </div>\n      <div className=\"text-xs text-zinc-400\">\n        (Time left: {timeLeft})\n      </div>\n\n      <div className=\"mt-4\">\n        <button\n          onClick={toggleEdit}\n          className=\"text-xs underline text-blue-400 hover:text-blue-300\"\n        >\n          {editing ? 'Close Settings' : 'Poster Settings'}\n        </button>\n      </div>\n\n      {editing && (\n        <div className=\"mt-4 space-y-3 text-left text-sm\">\n          <div>\n            <label className=\"block mb-1\">Arc Offset Y: {settings.arcOffsetY}px</label>\n            <input\n              type=\"range\"\n              min={-40}\n              max={80}\n              value={settings.arcOffsetY}\n              onChange={(e) => setSettings({ ...settings, arcOffsetY: parseInt(e.target.value) })}\n              className=\"w-full\"\n            />\n          </div>\n          <div>\n            <label className=\"block mb-1\">Logo Offset Y: {settings.logoOffsetY}px</label>\n            <input\n              type=\"range\"\n              min={-40}\n              max={80}\n              value={settings.logoOffsetY}\n              onChange={(e) => setSettings({ ...settings, logoOffsetY: parseInt(e.target.value) })}\n              className=\"w-full\"\n            />\n          </div>\n          <div>\n            <label className=\"block mb-1\">Arc Radius: {settings.arcRadius}px</label>\n            <input\n              type=\"range\"\n              min={50}\n              max={200}\n              value={settings.arcRadius}\n              onChange={(e) => setSettings({ ...settings, arcRadius: parseInt(e.target.value) })}\n              className=\"w-full\"\n            />\n          </div>\n\n          <div className=\"flex justify-end gap-3 mt-2\">\n            <button onClick={handleCancel} className=\"text-xs px-2 py-1 rounded bg-zinc-700 hover:bg-zinc-600\">Cancel</button>\n            <button onClick={handleSave} className=\"text-xs px-2 py-1 rounded bg-green-600 hover:bg-green-500\">Save</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction LeadCard({ name, logoUrl }: { name: string; logoUrl?: string }) {\n  return (\n    <div className=\"w-28 h-20 flex items-center justify-center bg-zinc-800 rounded border border-zinc-600 p-2\">\n      {logoUrl ? (\n        <Image src={logoUrl} alt={name} width={100} height={60} className=\"object-contain\" />\n      ) : (\n        <span className=\"text-sm text-white text-center leading-tight\">{name}</span>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/campaigns/edit-campaign-modal.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·'AK',·'AZ',·'AR',·'CA',·'CO',·'CT',·'DE',·'FL',·'GA',·'HI',·'ID',·'IL',·'IN',` with `⏎··'AK',⏎··'AZ',⏎··'AR',⏎··'CA',⏎··'CO',⏎··'CT',⏎··'DE',⏎··'FL',⏎··'GA',⏎··'HI',⏎··'ID',⏎··'IL',⏎··'IN',⏎·`","line":15,"column":8,"nodeType":null,"messageId":"replace","endLine":15,"endColumn":86,"fix":{"range":[609,687],"text":"\n  'AK',\n  'AZ',\n  'AR',\n  'CA',\n  'CO',\n  'CT',\n  'DE',\n  'FL',\n  'GA',\n  'HI',\n  'ID',\n  'IL',\n  'IN',\n "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·'KY',·'LA',·'ME',·'MD',·'MA',·'MI',·'MN',·'MS',·'MO',·'MT',·'NE',·'NV',·'NH',` with `⏎··'KY',⏎··'LA',⏎··'ME',⏎··'MD',⏎··'MA',⏎··'MI',⏎··'MN',⏎··'MS',⏎··'MO',⏎··'MT',⏎··'NE',⏎··'NV',⏎··'NH',⏎·`","line":16,"column":8,"nodeType":null,"messageId":"replace","endLine":16,"endColumn":86,"fix":{"range":[701,779],"text":"\n  'KY',\n  'LA',\n  'ME',\n  'MD',\n  'MA',\n  'MI',\n  'MN',\n  'MS',\n  'MO',\n  'MT',\n  'NE',\n  'NV',\n  'NH',\n "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·'NY',·'NC',·'ND',·'OH',·'OK',·'OR',·'PA',·'RI',·'SC',·'SD',·'TN',·'TX',·'UT',` with `⏎··'NY',⏎··'NC',⏎··'ND',⏎··'OH',⏎··'OK',⏎··'OR',⏎··'PA',⏎··'RI',⏎··'SC',⏎··'SD',⏎··'TN',⏎··'TX',⏎··'UT',⏎·`","line":17,"column":8,"nodeType":null,"messageId":"replace","endLine":17,"endColumn":86,"fix":{"range":[793,871],"text":"\n  'NY',\n  'NC',\n  'ND',\n  'OH',\n  'OK',\n  'OR',\n  'PA',\n  'RI',\n  'SC',\n  'SD',\n  'TN',\n  'TX',\n  'UT',\n "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·'WA',·'WV',·'WI',·'WY'` with `⏎··'WA',⏎··'WV',⏎··'WI',⏎··'WY',`","line":18,"column":8,"nodeType":null,"messageId":"replace","endLine":18,"endColumn":31,"fix":{"range":[885,908],"text":"\n  'WA',\n  'WV',\n  'WI',\n  'WY',"}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'leadsByCampaign' is assigned a value but never used.","line":39,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":39,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'geoCenter' is assigned a value but never used.","line":41,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":41,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'currentCampaignId' is assigned a value but never used.","line":42,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":42,"endColumn":22},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'currentCampaignExpiresAt' is assigned a value but never used.","line":43,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":43,"endColumn":29},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'setEditingCampaign'. Either include it or remove the dependency array.","line":52,"column":6,"nodeType":"ArrayExpression","endLine":52,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [setEditingCampaign]","fix":{"range":[1823,1825],"text":"[setEditingCampaign]"}}]},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `campaign.status·||·'draft'` with `⏎····campaign.status·||·'draft'⏎··`","line":58,"column":80,"nodeType":null,"messageId":"replace","endLine":58,"endColumn":106,"fix":{"range":[2265,2291],"text":"\n    campaign.status || 'draft'\n  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":106,"column":1,"nodeType":null,"messageId":"delete","endLine":106,"endColumn":3,"fix":{"range":[3687,3689],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":109,"column":1,"nodeType":null,"messageId":"delete","endLine":109,"endColumn":3,"fix":{"range":[3797,3799],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":116,"column":1,"nodeType":null,"messageId":"delete","endLine":116,"endColumn":3,"fix":{"range":[4008,4010],"text":""}},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'setSelectedLeadIds'. Either include it or remove the dependency array.","line":118,"column":6,"nodeType":"ArrayExpression","endLine":118,"endColumn":20,"suggestions":[{"desc":"Update the dependencies array to be: [campaign.id, setSelectedLeadIds]","fix":{"range":[4040,4054],"text":"[campaign.id, setSelectedLeadIds]"}}]},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `(l)·=>·l.industry?.toLowerCase().trim()·===·campaignIndustry.toLowerCase().trim()` with `⏎··········(l)·=>·l.industry?.toLowerCase().trim()·===·campaignIndustry.toLowerCase().trim()⏎········`","line":123,"column":25,"nodeType":null,"messageId":"replace","endLine":123,"endColumn":106,"fix":{"range":[4187,4268],"text":"\n          (l) => l.industry?.toLowerCase().trim() === campaignIndustry.toLowerCase().trim()\n        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `(l)·=>·getDistanceMiles(l.address_lat!,·l.address_lon!,·cityLat,·cityLon)·<·10` with `⏎········(l)·=>·getDistanceMiles(l.address_lat!,·l.address_lon!,·cityLat,·cityLon)·<·10⏎······`","line":132,"column":39,"nodeType":null,"messageId":"replace","endLine":132,"endColumn":117,"fix":{"range":[4506,4584],"text":"\n        (l) => getDistanceMiles(l.address_lat!, l.address_lon!, cityLat, cityLon) < 10\n      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":156,"column":17,"nodeType":null,"messageId":"insert","endLine":156,"endColumn":17,"fix":{"range":[5626,5626],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":157,"column":1,"nodeType":null,"messageId":"insert","endLine":157,"endColumn":1,"fix":{"range":[5643,5643],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":158,"column":1,"nodeType":null,"messageId":"insert","endLine":158,"endColumn":1,"fix":{"range":[5680,5680],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":159,"column":17,"nodeType":null,"messageId":"insert","endLine":159,"endColumn":17,"fix":{"range":[5732,5732],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":160,"column":17,"nodeType":null,"messageId":"insert","endLine":160,"endColumn":17,"fix":{"range":[5770,5770],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":161,"column":1,"nodeType":null,"messageId":"insert","endLine":161,"endColumn":1,"fix":{"range":[5789,5789],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":162,"column":17,"nodeType":null,"messageId":"insert","endLine":162,"endColumn":17,"fix":{"range":[5840,5840],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":163,"column":17,"nodeType":null,"messageId":"insert","endLine":163,"endColumn":17,"fix":{"range":[5887,5887],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":164,"column":1,"nodeType":null,"messageId":"insert","endLine":164,"endColumn":1,"fix":{"range":[5914,5914],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":165,"column":17,"nodeType":null,"messageId":"insert","endLine":165,"endColumn":17,"fix":{"range":[5973,5973],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":166,"column":17,"nodeType":null,"messageId":"insert","endLine":166,"endColumn":17,"fix":{"range":[6017,6017],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":167,"column":1,"nodeType":null,"messageId":"insert","endLine":167,"endColumn":1,"fix":{"range":[6041,6041],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `{'·'}⏎···············`","line":294,"column":100,"nodeType":null,"messageId":"insert","endLine":294,"endColumn":100,"fix":{"range":[11099,11099],"text":"{' '}\n               "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":326,"column":9,"nodeType":null,"messageId":"insert","endLine":326,"endColumn":9,"fix":{"range":[12208,12208],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··········`","line":327,"column":3,"nodeType":null,"messageId":"insert","endLine":327,"endColumn":3,"fix":{"range":[12306,12306],"text":"          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··········`","line":328,"column":3,"nodeType":null,"messageId":"insert","endLine":328,"endColumn":3,"fix":{"range":[12396,12396],"text":"          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··········`","line":329,"column":5,"nodeType":null,"messageId":"insert","endLine":329,"endColumn":5,"fix":{"range":[12451,12451],"text":"          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··········`","line":330,"column":3,"nodeType":null,"messageId":"insert","endLine":330,"endColumn":3,"fix":{"range":[12489,12489],"text":"          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··········`","line":331,"column":1,"nodeType":null,"messageId":"insert","endLine":331,"endColumn":1,"fix":{"range":[12496,12496],"text":"          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `········`","line":332,"column":1,"nodeType":null,"messageId":"insert","endLine":332,"endColumn":1,"fix":{"range":[12507,12507],"text":"        "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":30,"source":"// components/admin/campaigns/edit-campaign-modal.tsx\n'use client';\n\nimport { Lead } from '@/types/lead.types';\nimport { Dispatch, SetStateAction, useEffect, useMemo, useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport dayjs from 'dayjs';\nimport LeadSelectorWithRadius from '@/components/admin/campaigns/lead-selector-with-radius';\nimport { getDistanceMiles } from '@/lib/utils/distance';\nimport { CampaignType } from '@/types/campaign.types';\nimport { getLatLonForCityState } from '@/lib/utils/geocode';\n\nconst US_STATES = [\n  'AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'FL', 'GA', 'HI', 'ID', 'IL', 'IN', 'IA',\n  'KS', 'KY', 'LA', 'ME', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ',\n  'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT',\n  'VA', 'WA', 'WV', 'WI', 'WY'\n];\n\nexport type Props = {\n  campaign: CampaignType;\n  allLeads: Lead[];\n  selectedLeadIds: string[];\n  setSelectedLeadIds: Dispatch<SetStateAction<string[]>>;\n  leadsByCampaign: Record<string, Lead[]>;\n  setEditingCampaign: (c: CampaignType | null) => void;\n  geoCenter?: { lat: number; lon: number } | null;\n  currentCampaignId?: string | null;\n  currentCampaignExpiresAt?: string | null;\n};\n\nexport default function EditCampaignModal(props: Props) {\n  const {\n    campaign,\n    allLeads,\n    selectedLeadIds,\n    setSelectedLeadIds,\n    leadsByCampaign,\n    setEditingCampaign,\n    geoCenter,\n    currentCampaignId,\n    currentCampaignExpiresAt,\n  } = props;\n\n  useEffect(() => {\n    const handleKey = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') setEditingCampaign(null);\n    };\n    window.addEventListener('keydown', handleKey);\n    return () => window.removeEventListener('keydown', handleKey);\n  }, []);\n  const [radius, setRadius] = useState(50);\n  const [availableIndustries, setAvailableIndustries] = useState<string[]>([]);\n  const [campaignIndustry, setCampaignIndustry] = useState(campaign.industry || '');\n  const [campaignState, setCampaignState] = useState(campaign.state || '');\n  const [campaignCity, setCampaignCity] = useState(campaign.city || '');\n  const [campaignStatus, setCampaignStatus] = useState<CampaignType['status']>(campaign.status || 'draft');\n  const [cityLat, setCityLat] = useState<number | null>(campaign.city_lat ?? null);\n  const [cityLon, setCityLon] = useState<number | null>(campaign.city_lon ?? null);\n\n  // fetch industries\n  useEffect(() => {\n    async function fetchIndustries() {\n      try {\n        const res = await fetch('/api/industries');\n        const data = await res.json();\n        if (Array.isArray(data)) {\n          setAvailableIndustries(data.sort());\n        }\n      } catch (err) {\n        console.error('Failed to load industries:', err);\n      }\n    }\n    fetchIndustries();\n  }, []);\n\n  // sync lat lon\n  useEffect(() => {\n    async function syncLatLon() {\n      if (campaignCity && campaignState) {\n        const coords = await getLatLonForCityState(campaignCity, campaignState);\n        if (coords) {\n          setCityLat(coords.lat);\n          setCityLon(coords.lon);\n        }\n      }\n    }\n    syncLatLon();\n  }, [campaignCity, campaignState]);\n\n  // sync campaign state\n  useEffect(() => {\n    setCampaignState(campaign.state || '');\n    setCampaignIndustry(campaign.industry || '');\n    setCampaignCity(campaign.city || '');\n    setCampaignStatus(campaign.status || 'draft');\n    setCityLat(campaign.city_lat ?? null);\n    setCityLon(campaign.city_lon ?? null);\n  }, [campaign]);\n\n  // fetch linked leads\n  useEffect(() => {\n    async function fetchLinkedLeads() {\n      if (!campaign?.id) return;\n  \n      const res = await fetch(`/api/campaigns/${campaign.id}/leads`);\n      const json = await res.json();\n  \n      if (res.ok && Array.isArray(json.lead_ids)) {\n        setSelectedLeadIds(json.lead_ids);\n      } else {\n        console.warn('Failed to fetch campaign-linked leads:', json.error || json);\n      }\n    }\n  \n    fetchLinkedLeads();\n  }, [campaign?.id]);\n\n  // filter leads by industry\n  const filteredLeads = useMemo(() => {\n    const leads = campaignIndustry\n      ? allLeads.filter((l) => l.industry?.toLowerCase().trim() === campaignIndustry.toLowerCase().trim())\n      : allLeads;\n    return leads;\n  }, [allLeads, campaignIndustry]);\n\n  // count leads by radius\n  const leadCountByRadius = useMemo(() => {\n    if (!cityLat || !cityLon) return {};\n    return {\n      '0–10 mi': filteredLeads.filter((l) => getDistanceMiles(l.address_lat!, l.address_lon!, cityLat, cityLon) < 10).length,\n      '10–25 mi': filteredLeads.filter((l) => {\n        const d = getDistanceMiles(l.address_lat!, l.address_lon!, cityLat, cityLon);\n        return d >= 10 && d < 25;\n      }).length,\n      '25–50 mi': filteredLeads.filter((l) => {\n        const d = getDistanceMiles(l.address_lat!, l.address_lon!, cityLat, cityLon);\n        return d >= 25 && d < 50;\n      }).length,\n    };\n  }, [filteredLeads, cityLat, cityLon]);\n\n  return (\n    <div className=\"fixed inset-0 z-50 bg-black bg-opacity-50 flex items-center justify-center\">\n      <div className=\"bg-zinc-900 text-white p-6 rounded shadow-xl w-full max-w-md max-h-[90vh] overflow-y-auto relative\">\n        <h2 className=\"text-lg font-bold mb-4\">Edit Campaign</h2>\n        <form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            try {\n              const res = await fetch('/api/campaigns/update', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                id: campaign.id,\n                name: campaign.name,\n                city: campaignCity,\n                state: campaignState,\n                city_lat: cityLat,\n                city_lon: cityLon,\n                starts_at: campaign.starts_at,\n                ends_at: campaign.ends_at,\n                lead_ids: selectedLeadIds,\n                industry: campaignIndustry,\n                status: campaignStatus,\n              }),\n              });\n\n              const payload = {\n                id: campaign.id,\n                name: campaign.name,\n                city: campaignCity,\n                state: campaignState,\n                city_lat: cityLat,\n                city_lon: cityLon,\n                starts_at: campaign.starts_at,\n                ends_at: campaign.ends_at,\n                lead_ids: selectedLeadIds,\n                industry: campaignIndustry,\n                status: campaignStatus,\n              };\n\n              console.log('[📤 Saving Campaign]', payload);\n              const json = await res.json();\n              if (json.updated) {\n                console.log('[✅ Updated from server]', json.updated);\n                setCampaignState(json.updated.state || '');\n                setCampaignIndustry(json.updated.industry || '');\n                setCampaignCity(json.updated.city || '');\n                setCampaignStatus(json.updated.status || 'draft');\n                setCityLat(json.updated.city_lat ?? null);\n                setCityLon(json.updated.city_lon ?? null);\n              }\n\n              if (!res.ok || json.error) {\n                console.error('❌ Update failed:', json.error || 'Unknown error');\n                return;\n              }\n\n              setEditingCampaign(null);\n              location.reload();\n            } catch (err) {\n              console.error('❌ Network error while updating campaign:', err);\n            }\n          }}\n        >\n          <label className=\"block mb-3\">\n            Name:\n            <input\n              className=\"mt-1 w-full px-2 py-1 rounded bg-zinc-800 border border-zinc-700 text-white\"\n              value={campaign.name}\n              onChange={(e) => (campaign.name = e.target.value)}\n            />\n          </label>\n          <label className=\"block mb-3\">\n            City:\n            <input\n              className=\"mt-1 w-full px-2 py-1 rounded bg-zinc-800 border border-zinc-700 text-white\"\n              value={campaignCity}\n              onChange={(e) => setCampaignCity(e.target.value)}\n              autoComplete=\"off\"\n            />\n          </label>\n          <label className=\"block mb-3\">\n            State:\n            <span className=\"ml-2 text-xs text-zinc-400\">[DB: {campaign.state}]</span>\n            <select\n              className=\"mt-1 w-full px-2 py-1 rounded bg-zinc-800 border border-zinc-700 text-white\"\n              value={campaignState}\n              onChange={(e) => setCampaignState(e.target.value)}\n            >\n              <option value=\"\">Select State</option>\n              {US_STATES.map((abbr) => (\n                <option key={abbr} value={abbr}>\n                  {abbr}\n                </option>\n              ))}\n            </select>\n          </label>\n          <label className=\"block mb-3\">\n            Status:\n            <select\n              className=\"mt-1 w-full px-2 py-1 rounded bg-zinc-800 border border-zinc-700 text-white\"\n              value={campaignStatus}\n              onChange={(e) => setCampaignStatus(e.target.value as CampaignType['status'])}\n            >\n              <option value=\"draft\">Draft</option>\n              <option value=\"published\">Published</option>\n            </select>\n          </label>\n\n          <label className=\"block mb-3\">\n            Industry:\n            <span className=\"ml-2 text-xs text-zinc-400\">[DB: {campaign.industry}]</span>\n            <select\n              className=\"mt-1 w-full px-2 py-1 rounded bg-zinc-800 border border-zinc-700 text-white\"\n              value={campaignIndustry}\n              onChange={(e) => setCampaignIndustry(e.target.value)}\n            >\n              <option value=\"\">Select Industry</option>\n              {availableIndustries.map((ind) => (\n                <option key={ind} value={ind}>\n                  {ind}\n                </option>\n              ))}\n            </select>\n          </label>\n          <label className=\"block mb-3\">\n            Starts At:\n            <DatePicker\n              className=\"mt-1 w-full px-2 py-1 rounded bg-zinc-800 border border-zinc-700 text-white\"\n              selected={dayjs(campaign.starts_at).toDate()}\n              onChange={(date) => (campaign.starts_at = dayjs(date).toISOString())}\n              showTimeSelect\n              dateFormat=\"Pp\"\n            />\n          </label>\n          <label className=\"block mb-3\">\n            Ends At:\n            <DatePicker\n              className=\"mt-1 w-full px-2 py-1 rounded bg-zinc-800 border border-zinc-700 text-white\"\n              selected={dayjs(campaign.ends_at).toDate()}\n              onChange={(date) => (campaign.ends_at = dayjs(date).toISOString())}\n              showTimeSelect\n              dateFormat=\"Pp\"\n            />\n          </label>\n\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium mb-1\">\n              Link Leads:\n              <div className=\"text-xs text-zinc-400 mt-1\">\n                0–10 mi: {leadCountByRadius['0–10 mi']} • 10–25 mi: {leadCountByRadius['10–25 mi']} • 25–50 mi: {leadCountByRadius['25–50 mi']}\n              </div>\n            </label>\n            <LeadSelectorWithRadius\n              leads={filteredLeads}\n              selectedLeadIds={selectedLeadIds}\n              setSelectedLeadIds={setSelectedLeadIds}\n              cityLat={cityLat}\n              cityLon={cityLon}\n              radius={radius}\n              setRadius={setRadius}\n              industry={campaignIndustry}\n              currentCampaignId={campaign.id}\n              currentCampaignExpiresAt={campaign.ends_at}\n            />\n          </div>\n\n          <div className=\"flex justify-end gap-3 sticky bottom-0 bg-zinc-900 pt-3 pb-4 z-10\">\n            <button\n              type=\"button\"\n              className=\"text-sm text-zinc-400 hover:underline\"\n              onClick={() => setEditingCampaign(null)}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              className=\"px-4 py-1 text-sm rounded bg-blue-600 hover:bg-blue-700 text-white\"\n            >\n              Save\n            </button>\n          </div>\n        <details className=\"mt-4 text-xs text-zinc-400 bg-zinc-800 p-2 rounded border border-zinc-700\">\n  <summary className=\"cursor-pointer select-none\">Debug: Loaded Campaign Object</summary>\n  <pre className=\"whitespace-pre-wrap text-xs mt-2\">\n    {JSON.stringify(campaign, null, 2)}\n  </pre>\n</details>\n</form>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/campaigns/lead-selector-with-radius.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useEffect' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useState' is defined but never used.","line":4,"column":21,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":29},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":8,"column":3,"nodeType":null,"messageId":"delete","endLine":8,"endColumn":5,"fix":{"range":[194,196],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":9,"column":1,"nodeType":null,"messageId":"delete","endLine":9,"endColumn":3,"fix":{"range":[208,210],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":10,"column":1,"nodeType":null,"messageId":"delete","endLine":10,"endColumn":3,"fix":{"range":[235,237],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":11,"column":3,"nodeType":null,"messageId":"delete","endLine":11,"endColumn":5,"fix":{"range":[270,272],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":12,"column":1,"nodeType":null,"messageId":"replace","endLine":12,"endColumn":5,"fix":{"range":[301,305],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":13,"column":1,"nodeType":null,"messageId":"delete","endLine":13,"endColumn":3,"fix":{"range":[335,337],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":14,"column":3,"nodeType":null,"messageId":"delete","endLine":14,"endColumn":5,"fix":{"range":[372,374],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":15,"column":1,"nodeType":null,"messageId":"delete","endLine":15,"endColumn":3,"fix":{"range":[400,402],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":16,"column":1,"nodeType":null,"messageId":"delete","endLine":16,"endColumn":3,"fix":{"range":[441,443],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··};⏎··` with `};`","line":17,"column":1,"nodeType":null,"messageId":"replace","endLine":18,"endColumn":3,"fix":{"range":[490,497],"text":"};"}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'currentCampaignExpiresAt' is defined but never used. Allowed unused args must match /^_/u.","line":46,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":46,"endColumn":27},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":48,"column":3,"nodeType":null,"messageId":"delete","endLine":48,"endColumn":5,"fix":{"range":[1161,1163],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `····`","line":49,"column":5,"nodeType":null,"messageId":"delete","endLine":49,"endColumn":9,"fix":{"range":[1217,1221],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `······`","line":50,"column":1,"nodeType":null,"messageId":"delete","endLine":50,"endColumn":7,"fix":{"range":[1266,1272],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `····`","line":51,"column":1,"nodeType":null,"messageId":"replace","endLine":51,"endColumn":9,"fix":{"range":[1273,1281],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··········!lead.current_campaign_expires_at·||⏎·········` with `······!lead.current_campaign_expires_at·||`","line":52,"column":1,"nodeType":null,"messageId":"replace","endLine":53,"endColumn":10,"fix":{"range":[1299,1355],"text":"      !lead.current_campaign_expires_at ||"}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `······`","line":54,"column":1,"nodeType":null,"messageId":"delete","endLine":54,"endColumn":7,"fix":{"range":[1413,1419],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `····`","line":55,"column":1,"nodeType":null,"messageId":"delete","endLine":55,"endColumn":5,"fix":{"range":[1420,1424],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `······`","line":56,"column":1,"nodeType":null,"messageId":"delete","endLine":56,"endColumn":7,"fix":{"range":[1499,1505],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `····`","line":57,"column":1,"nodeType":null,"messageId":"delete","endLine":57,"endColumn":5,"fix":{"range":[1506,1510],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `····`","line":58,"column":3,"nodeType":null,"messageId":"delete","endLine":58,"endColumn":7,"fix":{"range":[1555,1559],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `····`","line":59,"column":1,"nodeType":null,"messageId":"delete","endLine":59,"endColumn":5,"fix":{"range":[1562,1566],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":60,"column":1,"nodeType":null,"messageId":"delete","endLine":60,"endColumn":3,"fix":{"range":[1567,1569],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":61,"column":1,"nodeType":null,"messageId":"delete","endLine":61,"endColumn":3,"fix":{"range":[1604,1606],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":62,"column":7,"nodeType":null,"messageId":"delete","endLine":62,"endColumn":9,"fix":{"range":[1636,1638],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":63,"column":1,"nodeType":null,"messageId":"delete","endLine":63,"endColumn":3,"fix":{"range":[1667,1669],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":64,"column":1,"nodeType":null,"messageId":"delete","endLine":64,"endColumn":3,"fix":{"range":[1719,1721],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `(l)·=>⏎···` with `⏎····(l)·=>`","line":76,"column":38,"nodeType":null,"messageId":"replace","endLine":77,"endColumn":4,"fix":{"range":[2117,2127],"text":"\n    (l) =>"}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":92,"column":1,"nodeType":null,"messageId":"delete","endLine":92,"endColumn":3,"fix":{"range":[2611,2613],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎··`","line":114,"column":5,"nodeType":null,"messageId":"delete","endLine":115,"endColumn":3,"fix":{"range":[3425,3428],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":29,"source":"// components/admin/campaigns/lead-selector-with-radius.tsx\n'use client';\n\nimport { useEffect, useState } from 'react';\nimport { getDistanceMiles } from '@/lib/utils/distance';\n\ntype Lead = {\n    id: string;\n    business_name: string;\n    address_lat?: number | null;\n    address_lon?: number | null;\n    address_city?: string | null;\n    address_state?: string | null;\n    industry?: string | null;\n    current_campaign_id?: string | null;\n    current_campaign_expires_at?: string | null;\n  };\n  \n\ntype Props = {\n  leads: Lead[];\n  selectedLeadIds: string[];\n  setSelectedLeadIds: (ids: string[]) => void;\n  cityLat: number | null | undefined;\n  cityLon: number | null | undefined;\n  radius: number;\n  setRadius: (radius: number) => void;\n  geoCenter?: { lat: number; lon: number } | null;\n  industry?: string | null;\n  state?: string | null;\n  currentCampaignId?: string | null;\n  currentCampaignExpiresAt?: string | null;\n};\n\nexport default function LeadSelectorWithRadius({\n  leads,\n  selectedLeadIds,\n  setSelectedLeadIds,\n  cityLat,\n  cityLon,\n  radius,\n  setRadius,\n  geoCenter,\n  industry,\n  currentCampaignId,\n  currentCampaignExpiresAt,\n}: Props) {\n    const isLeadDisabled = (lead: Lead): boolean => {\n        if (!lead.current_campaign_id) return false;\n      \n        const isExpired =\n          !lead.current_campaign_expires_at ||\n          new Date(lead.current_campaign_expires_at) < new Date();\n      \n        const isSameCampaign = lead.current_campaign_id === currentCampaignId;\n      \n        return !(isExpired || isSameCampaign);\n      };\n    \n    const toggle = (id: string) => {\n      setSelectedLeadIds(\n        selectedLeadIds.includes(id)\n          ? selectedLeadIds.filter((x) => x !== id)\n          : [...selectedLeadIds, id]\n    );\n  };\n\n  const resolvedLat = cityLat ?? geoCenter?.lat ?? null;\n  const resolvedLon = cityLon ?? geoCenter?.lon ?? null;\n\n  const getDist = (l: Lead) =>\n    l.address_lat && l.address_lon && resolvedLat && resolvedLon\n      ? getDistanceMiles(l.address_lat, l.address_lon, resolvedLat, resolvedLon)\n      : Infinity;\n\n  const filteredLeads = leads.filter((l) =>\n    !industry || l.industry?.trim().toLowerCase() === industry.trim().toLowerCase()\n  );\n\n  const sortedLeads = filteredLeads\n    .filter((l) => getDist(l) <= radius)\n    .sort((a, b) => getDist(a) - getDist(b));\n\n  const groupByRange = [\n    { label: '0–10 mi', min: 0, max: 10 },\n    { label: '10–25 mi', min: 10, max: 25 },\n    { label: '25–50 mi', min: 25, max: 50 },\n  ];\n\n  const renderLeadLine = (lead: Lead, distanceLabel: string) => {\n    const disabled = isLeadDisabled(lead);\n  \n    return (\n      <div key={lead.id} className=\"flex flex-col gap-1 mb-2\">\n        <label\n          className={`flex items-center gap-2 ${disabled ? 'opacity-50 cursor-not-allowed' : ''}`}\n          title={disabled ? 'Already part of an active campaign' : ''}\n        >\n          <input\n            type=\"checkbox\"\n            disabled={disabled}\n            checked={selectedLeadIds.includes(lead.id)}\n            onChange={() => toggle(lead.id)}\n          />\n          <div className=\"text-sm text-white\">\n            <span className=\"font-semibold\">{lead.business_name}</span>{' '}\n            <span className=\"text-xs text-zinc-400\">\n              ({lead.address_city}, {lead.address_state} • {lead.industry}) — {distanceLabel}\n            </span>\n          </div>\n        </label>\n      </div>\n    );\n  };\n  \n\n  const renderGroup = (label: string, min: number, max: number) => {\n    const group = sortedLeads.filter((l) => {\n      const dist = getDist(l);\n      return dist >= min && dist < max;\n    });\n    if (!group.length) return null;\n\n    return (\n      <div key={label} className=\"pt-2\">\n        <div className=\"text-xs font-semibold text-zinc-400 mb-1\">{label}</div>\n        {group.map((lead) => renderLeadLine(lead, `${getDist(lead).toFixed(1)} mi`))}\n      </div>\n    );\n  };\n\n  const outsideRadius = filteredLeads.filter((l) => getDist(l) > radius);\n\n  return (\n    <div className=\"mb-4\">\n      <label className=\"text-sm font-semibold block mb-1\">Radius Filter:</label>\n      <select\n        className=\"bg-zinc-800 text-white border border-zinc-700 rounded px-2 py-1 mb-3\"\n        value={radius}\n        onChange={(e) => setRadius(Number(e.target.value))}\n      >\n        {[10, 25, 50, 100].map((r) => (\n          <option key={r} value={r}>\n            Within {r} miles\n          </option>\n        ))}\n      </select>\n\n      <div className=\"rounded border border-zinc-700 p-3 bg-zinc-800 divide-y divide-zinc-700 max-h-[320px] overflow-y-auto\">\n        {groupByRange.map(({ label, min, max }) => renderGroup(label, min, max))}\n\n        {outsideRadius.length > 0 && (\n          <div className=\"pt-4\">\n            <div className=\"text-xs font-semibold text-zinc-400 mb-1\">Other Leads</div>\n            {outsideRadius.map((lead) => renderLeadLine(lead, 'outside radius'))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/city-marker.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··point,⏎··zoom,⏎··getColor,⏎··router,⏎··onClick,⏎` with `·point,·zoom,·getColor,·router,·onClick·`","line":28,"column":37,"nodeType":null,"messageId":"replace","endLine":34,"endColumn":1,"fix":{"range":[592,643],"text":" point, zoom, getColor, router, onClick "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··············{point.leadNames.join(',·')}⏎············` with `{point.leadNames.join(',·')}`","line":66,"column":52,"nodeType":null,"messageId":"replace","endLine":68,"endColumn":13,"fix":{"range":[1713,1769],"text":"{point.leadNames.join(', ')}"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··············{point.domainNames.join(',·')}⏎············` with `{point.domainNames.join(',·')}`","line":72,"column":52,"nodeType":null,"messageId":"replace","endLine":74,"endColumn":13,"fix":{"range":[1956,2014],"text":"{point.domainNames.join(', ')}"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `(⏎············<div·className=\"text-xs·text-amber-300·italic\">⏎··············{point.industry}⏎············</div>⏎··········)` with `<div·className=\"text-xs·text-amber-300·italic\">{point.industry}</div>`","line":76,"column":30,"nodeType":null,"messageId":"replace","endLine":80,"endColumn":12,"fix":{"range":[2063,2186],"text":"<div className=\"text-xs text-amber-300 italic\">{point.industry}</div>"}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":84,"column":13,"nodeType":null,"messageId":"insert","endLine":84,"endColumn":13,"fix":{"range":[2249,2249],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":85,"column":1,"nodeType":null,"messageId":"insert","endLine":85,"endColumn":1,"fix":{"range":[2257,2257],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":86,"column":1,"nodeType":null,"messageId":"insert","endLine":86,"endColumn":1,"fix":{"range":[2288,2288],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":87,"column":19,"nodeType":null,"messageId":"insert","endLine":87,"endColumn":19,"fix":{"range":[2358,2358],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":88,"column":1,"nodeType":null,"messageId":"insert","endLine":88,"endColumn":1,"fix":{"range":[2376,2376],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":89,"column":19,"nodeType":null,"messageId":"insert","endLine":89,"endColumn":19,"fix":{"range":[2432,2432],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":90,"column":1,"nodeType":null,"messageId":"insert","endLine":90,"endColumn":1,"fix":{"range":[2466,2466],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":91,"column":17,"nodeType":null,"messageId":"insert","endLine":91,"endColumn":17,"fix":{"range":[2532,2532],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":92,"column":1,"nodeType":null,"messageId":"insert","endLine":92,"endColumn":1,"fix":{"range":[2536,2536],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":93,"column":15,"nodeType":null,"messageId":"insert","endLine":93,"endColumn":15,"fix":{"range":[2613,2613],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":94,"column":1,"nodeType":null,"messageId":"insert","endLine":94,"endColumn":1,"fix":{"range":[2616,2616],"text":"  "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":15,"source":"// components/admin/city-marker.tsx\n\n'use client';\n\nimport { CircleMarker, Popup } from 'react-leaflet';\nimport { useMemo } from 'react';\nimport { useRouter } from 'next/navigation';\n\ninterface CityMarkerProps {\n  point: {\n    lat: number;\n    lon: number;\n    city: string;\n    state: string;\n    leads: number;\n    leadNames: string[];\n    leadIds: string[];\n    domains: number;\n    domainNames: string[];\n    industry?: string;\n  };\n  zoom: number;\n  getColor: (point: any) => string;\n  router: ReturnType<typeof useRouter>;\n  onClick?: () => void;\n}\n\nexport default function CityMarker({\n  point,\n  zoom,\n  getColor,\n  router,\n  onClick,\n}: CityMarkerProps) {\n  const shouldRender = useMemo(() => {\n    return !(zoom < 4 && point.leads + point.domains < 3);\n  }, [zoom, point]);\n\n  if (!shouldRender) return null;\n\n  return (\n    <CircleMarker\n      center={[point.lat, point.lon]}\n      radius={6 + (point.leads + point.domains) * 0.5}\n      pathOptions={{\n        color: getColor(point),\n        fillColor: getColor(point),\n        fillOpacity: 0.7,\n      }}\n      eventHandlers={{\n        click: () => onClick?.(),\n      }}\n    >\n      <Popup className=\"w-64 p-4 bg-gray-800 text-white rounded-lg shadow-lg\">\n        <div className=\"space-y-2\">\n          <div className=\"text-lg font-bold\">\n            <div className=\"flex justify-between\">\n              {point.city}, {point.state}\n            </div>\n            <div className=\"flex justify-between\">\n              {point.leads} leads, {point.domains} domains\n            </div>\n          </div>\n          <div className=\"text-sm\">Leads: {point.leads}</div>\n          {point.leadNames.length > 0 && (\n            <div className=\"text-xs text-gray-300\">\n              {point.leadNames.join(', ')}\n            </div>\n          )}\n          <div className=\"text-sm mt-1\">Domains: {point.domains}</div>\n          {point.domainNames.length > 0 && (\n            <div className=\"text-xs text-gray-300\">\n              {point.domainNames.join(', ')}\n            </div>\n          )}\n          {point.industry && (\n            <div className=\"text-xs text-amber-300 italic\">\n              {point.industry}\n            </div>\n          )}\n\n          {point.leads >= 0 && (\n            <>\n            <button\n              onClick={() => {\n                const query = new URLSearchParams({\n                  city: point.city,\n                  state: point.state,\n                  leadIds: point.leadIds.join(','),\n                  industry: point.industry || '',\n                });\n                router.push(`/admin/start-campaign?${query}`);\n              }}\n              className=\"mt-3 px-3 py-2 bg-blue-600 text-white rounded-md text-sm hover:bg-blue-700 w-full\"\n              >\n                🚀 Start Campaignz\n              </button>\n            </>\n          )}\n        </div>\n      </Popup>\n    </CircleMarker>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/comment-thread.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'loadComments'. Either include it or remove the dependency array.","line":26,"column":6,"nodeType":"ArrayExpression","endLine":26,"endColumn":18,"suggestions":[{"desc":"Update the dependencies array to be: [loadComments, snapshotId]","fix":{"range":[765,777],"text":"[loadComments, snapshotId]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useEffect, useState } from 'react';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Textarea } from '@/components/ui/textarea';\n\ntype Comment = {\n  id: string;\n  message: string;\n  author_email: string;\n  created_at: string;\n};\n\nexport default function CommentThread({ snapshotId }: { snapshotId: string }) {\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [newComment, setNewComment] = useState('');\n  const [author, setAuthor] = useState('');\n\n  const loadComments = async () => {\n    const res = await fetch(`/api/comments?snapshot_id=${snapshotId}`);\n    const data = await res.json();\n    setComments(data);\n  };\n\n  useEffect(() => {\n    if (snapshotId) loadComments();\n  }, [snapshotId]);\n\n  const submitComment = async () => {\n    if (!newComment.trim()) return;\n    const res = await fetch('/api/comments', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        snapshot_id: snapshotId,\n        author_email: author || 'anonymous',\n        message: newComment,\n      }),\n    });\n    if (res.ok) {\n      setNewComment('');\n      loadComments();\n    }\n  };\n\n  return (\n    <div className=\"p-4 border-t mt-4 bg-muted/20 rounded\">\n      <h3 className=\"text-lg font-semibold mb-2\">Comments</h3>\n\n      {comments.length === 0 && (\n        <p className=\"text-sm text-muted-foreground mb-4\">No comments yet.</p>\n      )}\n\n      <ul className=\"space-y-3 mb-4\">\n        {comments.map((c) => (\n          <li key={c.id} className=\"bg-white p-3 rounded shadow-sm\">\n            <p className=\"text-sm\">{c.message}</p>\n            <p className=\"text-xs text-muted-foreground mt-1\">\n              {c.author_email} – {new Date(c.created_at).toLocaleString()}\n            </p>\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"space-y-2\">\n        <Input\n          placeholder=\"Your email (optional)\"\n          value={author}\n          onChange={(e) => setAuthor(e.target.value)}\n        />\n        <Textarea\n          placeholder=\"Leave a comment...\"\n          value={newComment}\n          onChange={(e) => setNewComment(e.target.value)}\n        />\n        <Button onClick={submitComment} size=\"sm\">\n          Post Comment\n        </Button>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/context/current-user-provider.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useContext' is defined but never used.","line":3,"column":25,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":35},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'getSupabase' is defined but never used.","line":6,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":6,"endColumn":21}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { createContext, useContext, useEffect, useState, ReactNode } from 'react';\nimport { supabase } from '@/lib/supabase/client';\n\nimport { getSupabase } from '@/lib/supabase/server';\n\ntype CurrentUser = {\n  id: string;\n  email: string;\n  name?: string;\n  avatar_url?: string;\n  role: string;\n  bio?: string;\n  plan?: string;\n};\n\nexport type CurrentUserContextType = {\n  user: CurrentUser | null;\n  ready: boolean;\n  role: 'admin' | 'editor' | 'viewer' | 'owner';\n  hasRole: (roles: string[]) => boolean;\n  refetch: () => void;\n};\n\nexport const CurrentUserContext = createContext<CurrentUserContextType>({\n  user: null,\n  ready: false,\n  role: 'viewer',\n  hasRole: () => false,\n  refetch: () => {},\n});\n\nexport function CurrentUserProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<CurrentUser | null>(null);\n  const [ready, setReady] = useState<boolean>(false);\n\n  const load = async () => {\n    const { data: sessionData } = await supabase.auth.getSession();\n    const u = sessionData?.session?.user;\n\n    if (!u?.id) {\n      setUser(null);\n      setReady(true);\n      return;\n    }\n\n    const { data: profile, error } = await supabase\n      .from('user_profiles')\n      .select('*')\n      .eq('user_id', u.id)\n      .single();\n\n    if (error) {\n      console.error('❌ Failed to fetch user_profiles:', error.message);\n      setUser(null);\n      setReady(true);\n      return;\n    }\n\n    const normalizedRole = (profile.role || 'viewer').toLowerCase() as CurrentUser['role'];\n\n    const user: CurrentUser = {\n      id: u.id,\n      email: u.email ?? profile.email,\n      name: profile.name ?? '',\n      avatar_url: profile.avatar_url ?? '',\n      role: normalizedRole,\n      bio: profile.bio ?? '',\n      plan: profile.plan ?? 'free',\n    };\n\n    console.log('✅ [User loaded]', {\n      email: user.email,\n      role: user.role,\n      plan: user.plan,\n    });\n\n    setUser(user);\n    setReady(true);\n  };\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  const hasRole = (roles: string[]) =>\n    user?.role ? roles.map((r) => r.toLowerCase()).includes(user.role.toLowerCase()) : false;\n\n  return (\n    <CurrentUserContext.Provider\n      value={{\n        user,\n        ready,\n        role: (user?.role as 'admin' | 'editor' | 'viewer' | 'owner') || 'viewer',\n        hasRole,\n        refetch: load,\n      }}\n    >\n      {children}\n    </CurrentUserContext.Provider>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/context/sidebar-nav-context.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/csv-date-range-export.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/dashboard-block.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/dashboard-grid-draggable.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/dashboard-grid.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/dashboard-selector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/docs/DocsPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/embed/upgrade-prompt.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/filter-dropdown.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/grid-map.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎········.from('campaigns')⏎········` with `.from('campaigns')`","line":38,"column":49,"nodeType":null,"messageId":"replace","endLine":40,"endColumn":9,"fix":{"range":[1273,1309],"text":".from('campaigns')"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎········.from('domains')⏎········` with `.from('domains')`","line":45,"column":47,"nodeType":null,"messageId":"replace","endLine":47,"endColumn":9,"fix":{"range":[1535,1569],"text":".from('domains')"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·geo[key].leads.push({·id:·l.id,·name:·l.business_name,·isClaimed:·!isUnclaimed,·campaignId:·'',·industry:·l.industry·||·''` with `⏎··········geo[key].leads.push({⏎············id:·l.id,⏎············name:·l.business_name,⏎············isClaimed:·!isUnclaimed,⏎············campaignId:·'',⏎············industry:·l.industry·||·'',⏎·········`","line":65,"column":29,"nodeType":null,"messageId":"replace","endLine":65,"endColumn":152,"fix":{"range":[2145,2268],"text":"\n          geo[key].leads.push({\n            id: l.id,\n            name: l.business_name,\n            isClaimed: !isUnclaimed,\n            campaignId: '',\n            industry: l.industry || '',\n         "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `·campaigns`","line":102,"column":32,"nodeType":null,"messageId":"delete","endLine":102,"endColumn":42,"fix":{"range":[3536,3546],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `?.filter((c)·=>·campaignIds.has(c.id))⏎············` with `campaigns?.filter((c)·=>·campaignIds.has(c.id))`","line":103,"column":13,"nodeType":null,"messageId":"replace","endLine":104,"endColumn":13,"fix":{"range":[3559,3610],"text":"campaigns?.filter((c) => campaignIds.has(c.id))"}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'getUnclaimedLeadCount' is assigned a value but never used.","line":152,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":152,"endColumn":30},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎`","line":169,"column":1,"nodeType":null,"messageId":"delete","endLine":170,"endColumn":1,"fix":{"range":[5583,5584],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":204,"column":9,"nodeType":null,"messageId":"delete","endLine":204,"endColumn":11,"fix":{"range":[6744,6746],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··<div·className=\"flex·items-center·gap-1\"><span·className=\"inline-block·w-3·h-3·bg-yellow-500·rounded-full\"></span>·1·Lead` with `<div·className=\"flex·items-center·gap-1\">⏎············<span·className=\"inline-block·w-3·h-3·bg-yellow-500·rounded-full\"></span>·1·Lead⏎··········`","line":205,"column":11,"nodeType":null,"messageId":"replace","endLine":205,"endColumn":134,"fix":{"range":[6811,6934],"text":"<div className=\"flex items-center gap-1\">\n            <span className=\"inline-block w-3 h-3 bg-yellow-500 rounded-full\"></span> 1 Lead\n          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `············<div·className=\"flex·items-center·gap-1\"><span·className=\"inline-block·w-3·h-3·bg-orange-500·rounded-full\"></span>·2+·Leads` with `··········<div·className=\"flex·items-center·gap-1\">⏎············<span·className=\"inline-block·w-3·h-3·bg-orange-500·rounded-full\"></span>·2+·Leads⏎··········`","line":206,"column":1,"nodeType":null,"messageId":"replace","endLine":206,"endColumn":136,"fix":{"range":[6941,7076],"text":"          <div className=\"flex items-center gap-1\">\n            <span className=\"inline-block w-3 h-3 bg-orange-500 rounded-full\"></span> 2+ Leads\n          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `············<div·className=\"flex·items-center·gap-1\"><span·className=\"inline-block·w-3·h-3·bg-blue-500·rounded-full\"></span>·1+·Domain` with `··········<div·className=\"flex·items-center·gap-1\">⏎············<span·className=\"inline-block·w-3·h-3·bg-blue-500·rounded-full\"></span>·1+·Domain⏎··········`","line":207,"column":1,"nodeType":null,"messageId":"replace","endLine":207,"endColumn":135,"fix":{"range":[7083,7217],"text":"          <div className=\"flex items-center gap-1\">\n            <span className=\"inline-block w-3 h-3 bg-blue-500 rounded-full\"></span> 1+ Domain\n          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `············<div·className=\"flex·items-center·gap-1\"><span·className=\"inline-block·w-3·h-3·bg-green-500·rounded-full\"></span>·Lead·+·Domain` with `··········<div·className=\"flex·items-center·gap-1\">⏎············<span·className=\"inline-block·w-3·h-3·bg-green-500·rounded-full\"></span>·Lead·+·Domain⏎··········`","line":208,"column":1,"nodeType":null,"messageId":"replace","endLine":208,"endColumn":140,"fix":{"range":[7224,7363],"text":"          <div className=\"flex items-center gap-1\">\n            <span className=\"inline-block w-3 h-3 bg-green-500 rounded-full\"></span> Lead + Domain\n          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `············<div·className=\"flex·items-center·gap-1\"><span·className=\"inline-block·w-3·h-3·bg-red-600·rounded-full\"></span>·2+·Unclaimed·in·1·Industry</div>` with `··········<div·className=\"flex·items-center·gap-1\">⏎············<span·className=\"inline-block·w-3·h-3·bg-red-600·rounded-full\"></span>·2+·Unclaimed·in·1⏎············Industry`","line":209,"column":1,"nodeType":null,"messageId":"replace","endLine":209,"endColumn":157,"fix":{"range":[7370,7526],"text":"          <div className=\"flex items-center gap-1\">\n            <span className=\"inline-block w-3 h-3 bg-red-600 rounded-full\"></span> 2+ Unclaimed in 1\n            Industry"}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······</div>⏎`","line":211,"column":3,"nodeType":null,"messageId":"insert","endLine":211,"endColumn":3,"fix":{"range":[7546,7546],"text":"      </div>\n"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":13,"source":"// components/admin/grid-map.tsx\n'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport dynamic from 'next/dynamic';\n\nimport { supabase } from '@/admin/lib/supabaseClient';\nimport GridSidebar from './grid-sidebar';\nimport { resolveGeo } from '@/lib/resolveGeo';\nimport type { CityPoint } from '@/types/grid';\n\n// Dynamically load the Leaflet map so it's only rendered on the client\nconst SafeLeafletMap = dynamic(() => import('./safe-leaflet-map'), {\n  ssr: false,\n});\n\nconst _cache: { points?: CityPoint[]; lastFetched?: number } = {};\n\nexport default function GridMap() {\n  const [industry, setIndustry] = useState('');\n  const [points, setPoints] = useState<CityPoint[]>([]);\n  const [zoom, setZoom] = useState(4);\n  const [showHotspotsOnly, setShowHotspotsOnly] = useState(false);\n  const router = useRouter();\n\n  useEffect(() => {\n    const load = async () => {\n      const now = Date.now();\n      if (_cache.points && _cache.lastFetched && now - _cache.lastFetched < 60_000) {\n        setPoints(_cache.points);\n        return;\n      }\n      const { data: campaignLinks } = await supabase\n        .from('campaign_leads')\n        .select('campaign_id, lead_id');\n\n      const { data: campaigns } = await supabase\n        .from('campaigns')\n        .select('id, name, city, state');\n      const { data: leads } = await supabase\n        .from('leads')\n        .select('id, business_name, address_city, address_state, industry');\n\n      const { data: domains } = await supabase\n        .from('domains')\n        .select('city, state, domain');\n\n      const geo: Record<string, CityPoint> = {};\n\n      for (const l of leads || []) {\n        const key = `${l.address_city}, ${l.address_state}`;\n        geo[key] = geo[key] || {\n          city: l.address_city,\n          state: l.address_state,\n          leadsQty: 0,\n          domains: 0,\n          leads: [],\n          domainNames: [],\n          leadIds: [],\n          industryCounts: {},\n        };\n        geo[key].leadsQty += 1;\n        const isUnclaimed = !campaignLinks?.some((cl) => cl.lead_id === l.id);\n        if (l.business_name) geo[key].leads.push({ id: l.id, name: l.business_name, isClaimed: !isUnclaimed, campaignId: '', industry: l.industry || '' });\n        geo[key].leadIds.push(l.id);\n        const indKey = (l.industry || '').trim().toLowerCase();\n        geo[key].industryCounts![indKey] = (geo[key].industryCounts![indKey] || 0) + 1;\n      }\n\n      for (const d of domains || []) {\n        const key = `${d.city}, ${d.state}`;\n        geo[key] = geo[key] || {\n          city: d.city,\n          state: d.state,\n          leads: 0,\n          domains: 0,\n          leadNames: [],\n          domainNames: [],\n          leadIds: [],\n          industryCounts: {},\n        };\n        geo[key].domains += 1;\n        if (d.domain) geo[key].domainNames.push(d.domain);\n      }\n\n      const enriched = await Promise.all(\n        Object.values(geo).map(async (entry) => {\n          const { lat, lon } = await resolveGeo(entry.city, entry.state);\n          const primaryIndustry = Object.entries(entry.industryCounts || {}).reduce(\n            (acc: [string, number], [ind, count]) =>\n              typeof count === 'number' && count > acc[1] ? [ind, count] : acc,\n            ['', 0]\n          )[0];\n\n          const campaignIds = new Set(\n            campaignLinks\n              ?.filter((cl) => entry.leadIds.includes(cl.lead_id))\n              .map((cl) => cl.campaign_id)\n          );\n\n          const campaignNames = campaigns\n            ?.filter((c) => campaignIds.has(c.id))\n            .map((c) => c.name) ?? [];\n\n          const unclaimed = entry.leadIds.filter(\n            (id) => !campaignLinks?.some((cl) => cl.lead_id === id)\n          ).length;\n          const unclaimedByIndustry: Record<string, number> = {};\n\n          for (const lead of entry.leads) {\n            const ind = (lead.industry || '').trim().toLowerCase();\n            if (!lead.isClaimed) {\n              unclaimedByIndustry[ind] = (unclaimedByIndustry[ind] || 0) + 1;\n            }\n          }\n\n          const has2PlusUnclaimedInSameIndustry = Object.values(unclaimedByIndustry).some(\n            (count) => count >= 2\n          );\n\n          return {\n            ...entry,\n            lat,\n            lon,\n            industry: primaryIndustry,\n            campaigns: campaignNames,\n            unclaimedLeadCount: unclaimed,\n            has2PlusUnclaimedInSameIndustry,\n          };\n        })\n      );\n\n      setPoints(enriched);\n      _cache.points = enriched;\n      _cache.lastFetched = now;\n    };\n\n    load();\n  }, []);\n\n  const getColor = (p: CityPoint) => {\n    if (p.has2PlusUnclaimedInSameIndustry) return 'red';\n    if (p.unclaimedLeadCount && p.unclaimedLeadCount >= 1) return 'yellow';\n    if (p.leadsQty >= 2 && p.domains > 0) return 'green';\n    if (p.leadsQty >= 2) return 'orange';\n    if (p.domains > 0) return 'blue';\n    if (p.leadsQty > 0) return 'yellow';\n    return 'gray';\n  };\n\n  const getUnclaimedLeadCount = (p: CityPoint) => {\n    return p.leads.filter((l) => !l.isClaimed).length;\n  };\n\n  const filteredPoints = points.filter((p) => {\n    if (!industry || industry === '') return true;\n    if (!p.industry) return false;\n    return p.industry.trim().toLowerCase() === industry.trim().toLowerCase();\n  });\n\n  const visiblePoints = showHotspotsOnly\n    ? filteredPoints.filter((p) => p.has2PlusUnclaimedInSameIndustry)\n    : filteredPoints;\n\n  return (\n    <div className=\"p-6 text-white\">\n      <div className=\"flex items-center justify-between mb-6\">\n\n        <h1 className=\"text-3xl font-bold\">🌍 The Grid</h1>\n        <button\n          className=\"text-xs bg-zinc-800 hover:bg-zinc-700 px-3 py-1 rounded border border-zinc-600\"\n          onClick={() => {\n            _cache.points = undefined;\n            _cache.lastFetched = 0;\n            location.reload();\n          }}\n        >\n          🔄 Refresh\n        </button>\n        <div className=\"md:w-2/5 w-full\">\n          <GridSidebar\n            industry={industry}\n            setIndustry={setIndustry}\n            filteredPoints={filteredPoints}\n            showHotspotsOnly={showHotspotsOnly}\n            setShowHotspotsOnly={setShowHotspotsOnly}\n            // visiblePoints={visiblePoints}\n          />\n        </div>\n      </div>\n      <div className=\"flex flex-col md:flex-row gap-6\">\n        <div className=\"w-full h-[600px] border border-gray-700 rounded overflow-hidden\">\n          <SafeLeafletMap\n            points={visiblePoints}\n            zoom={zoom}\n            setZoom={setZoom}\n            router={router}\n            getColor={getColor}\n          />\n        </div>\n      </div>\n      <div className=\"text-xs text-zinc-400 mt-2\">\n          <div className=\"flex gap-4 items-center text-sm mt-2\">\n            <div className=\"flex items-center gap-1\"><span className=\"inline-block w-3 h-3 bg-yellow-500 rounded-full\"></span> 1 Lead</div>\n            <div className=\"flex items-center gap-1\"><span className=\"inline-block w-3 h-3 bg-orange-500 rounded-full\"></span> 2+ Leads</div>\n            <div className=\"flex items-center gap-1\"><span className=\"inline-block w-3 h-3 bg-blue-500 rounded-full\"></span> 1+ Domain</div>\n            <div className=\"flex items-center gap-1\"><span className=\"inline-block w-3 h-3 bg-green-500 rounded-full\"></span> Lead + Domain</div>\n            <div className=\"flex items-center gap-1\"><span className=\"inline-block w-3 h-3 bg-red-600 rounded-full\"></span> 2+ Unclaimed in 1 Industry</div>\n          </div>\n        </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/grid-sidebar.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'RevenueEstimator' is defined but never used.","line":3,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":24},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'MarkerStats' is defined but never used.","line":4,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'MapLegend' is defined but never used.","line":5,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":5,"endColumn":17},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `'[🔍·Visible·Hotspots]',·visiblePoints.map(p` with `⏎······'[🔍·Visible·Hotspots]',⏎······visiblePoints.map((p)`","line":34,"column":17,"nodeType":null,"messageId":"replace","endLine":34,"endColumn":61,"fix":{"range":[1137,1181],"text":"\n      '[🔍 Visible Hotspots]',\n      visiblePoints.map((p)"}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":35,"column":7,"nodeType":null,"messageId":"insert","endLine":35,"endColumn":7,"fix":{"range":[1194,1194],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":36,"column":1,"nodeType":null,"messageId":"insert","endLine":36,"endColumn":1,"fix":{"range":[1208,1208],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `········`","line":37,"column":1,"nodeType":null,"messageId":"replace","endLine":37,"endColumn":7,"fix":{"range":[1230,1236],"text":"        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":38,"column":1,"nodeType":null,"messageId":"insert","endLine":38,"endColumn":1,"fix":{"range":[1269,1269],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `}))` with `··}))⏎····`","line":39,"column":5,"nodeType":null,"messageId":"replace","endLine":39,"endColumn":8,"fix":{"range":[1347,1350],"text":"  }))\n    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":47,"column":9,"nodeType":null,"messageId":"insert","endLine":47,"endColumn":9,"fix":{"range":[1607,1607],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":48,"column":1,"nodeType":null,"messageId":"insert","endLine":48,"endColumn":1,"fix":{"range":[1614,1614],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··········` with `············`","line":49,"column":1,"nodeType":null,"messageId":"replace","endLine":49,"endColumn":11,"fix":{"range":[1640,1650],"text":"            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":50,"column":1,"nodeType":null,"messageId":"insert","endLine":50,"endColumn":1,"fix":{"range":[1677,1677],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":51,"column":1,"nodeType":null,"messageId":"insert","endLine":51,"endColumn":1,"fix":{"range":[1743,1743],"text":"  "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":11,"source":"// components/admin/GridSidebar.tsx\nimport { useState, useEffect } from 'react';\nimport RevenueEstimator from './revenue-estimator';\nimport MarkerStats from './marker-stats';\nimport MapLegend from './map-legend';\nimport FilterDropdown from './filter-dropdown';\nimport type { CityPoint } from '@/types/grid';\n\ninterface GridSidebarProps {\n  industry: string;\n  setIndustry: (value: string) => void;\n  filteredPoints: CityPoint[];\n  showHotspotsOnly?: boolean;\n  setShowHotspotsOnly?: (v: boolean) => void;\n}\n\nexport default function GridSidebar({\n  industry,\n  setIndustry,\n  filteredPoints,\n  showHotspotsOnly: externalShowHotspotsOnly,\n  setShowHotspotsOnly: externalSetShowHotspotsOnly,\n}: GridSidebarProps) {\n  const [internalShowHotspotsOnly, setInternalShowHotspotsOnly] = useState(true);\n\n  const showHotspotsOnly = externalShowHotspotsOnly ?? internalShowHotspotsOnly;\n  const setShowHotspotsOnly = externalSetShowHotspotsOnly ?? setInternalShowHotspotsOnly;\n\n  const visiblePoints = showHotspotsOnly\n    ? filteredPoints.filter((p) => p.has2PlusUnclaimedInSameIndustry)\n    : filteredPoints;\n\n  useEffect(() => {\n    console.log('[🔍 Visible Hotspots]', visiblePoints.map(p => ({\n      city: p.city,\n      state: p.state,\n      unclaimed: p.unclaimedLeadCount,\n      has2PlusUnclaimedInSameIndustry: p.has2PlusUnclaimedInSameIndustry,\n    })));\n  }, [visiblePoints]);\n\n  return (\n    <div className=\"space-y-4\">\n      <FilterDropdown industry={industry} setIndustry={setIndustry} />\n      <div className=\"flex items-center gap-2 text-xs\">\n        <label className=\"flex items-center gap-1\">\n        <input\n          type=\"checkbox\"\n          checked={showHotspotsOnly}\n          onChange={(e) => setShowHotspotsOnly(e.target.checked)}\n        />\n          Show Hotspots Only\n        </label>\n      </div>\n      {/* <RevenueEstimator filteredPoints={visiblePoints} /> */}\n      {/* <MarkerStats filteredPoints={visiblePoints} /> */}\n      {/* <MapLegend /> */}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/grouped-nav.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/layout-editor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/layout-editor.versioned.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/layout-template-manager.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/layout/admin-sidebar-layout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/leads-table.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":14,"column":1,"nodeType":null,"messageId":"insert","endLine":14,"endColumn":1,"fix":{"range":[344,344],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎····?·leads.filter((l)·=>·l.industry·===·industryFilter)⏎···` with `·?·leads.filter((l)·=>·l.industry·===·industryFilter)`","line":23,"column":39,"nodeType":null,"messageId":"replace","endLine":25,"endColumn":4,"fix":{"range":[707,768],"text":" ? leads.filter((l) => l.industry === industryFilter)"}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":45,"column":5,"nodeType":null,"messageId":"insert","endLine":45,"endColumn":5,"fix":{"range":[1330,1330],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·?·'bg-blue-600·text-white·border-blue-500'` with `⏎················?·'bg-blue-600·text-white·border-blue-500'⏎···············`","line":51,"column":37,"nodeType":null,"messageId":"replace","endLine":51,"endColumn":80,"fix":{"range":[1740,1783],"text":"\n                ? 'bg-blue-600 text-white border-blue-500'\n               "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `⏎··········`","line":52,"column":16,"nodeType":null,"messageId":"insert","endLine":52,"endColumn":16,"fix":{"range":[1863,1863],"text":"\n          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·key·!==·'concrete'·&&·key·!==·'plumbing'·&&·key·!==·'electrical'·&&·'🏷️'}·{key}:·{count}` with `⏎··············key·!==·'concrete'·&&⏎··············key·!==·'plumbing'·&&⏎··············key·!==·'electrical'·&&⏎··············'🏷️'}{'·'}⏎············{key}:·{count}⏎··········`","line":57,"column":33,"nodeType":null,"messageId":"replace","endLine":57,"endColumn":123,"fix":{"range":[2060,2150],"text":"\n              key !== 'concrete' &&\n              key !== 'plumbing' &&\n              key !== 'electrical' &&\n              '🏷️'}{' '}\n            {key}: {count}\n          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":59,"column":7,"nodeType":null,"messageId":"insert","endLine":59,"endColumn":7,"fix":{"range":[2178,2178],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `··········`","line":60,"column":1,"nodeType":null,"messageId":"replace","endLine":60,"endColumn":9,"fix":{"range":[2199,2207],"text":"          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":61,"column":1,"nodeType":null,"messageId":"insert","endLine":61,"endColumn":1,"fix":{"range":[2215,2215],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":62,"column":1,"nodeType":null,"messageId":"insert","endLine":62,"endColumn":1,"fix":{"range":[2265,2265],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":63,"column":9,"nodeType":null,"messageId":"insert","endLine":63,"endColumn":9,"fix":{"range":[2444,2444],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··········` with `············`","line":64,"column":1,"nodeType":null,"messageId":"replace","endLine":64,"endColumn":11,"fix":{"range":[2446,2456],"text":"            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":65,"column":9,"nodeType":null,"messageId":"insert","endLine":65,"endColumn":9,"fix":{"range":[2480,2480],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":66,"column":1,"nodeType":null,"messageId":"insert","endLine":66,"endColumn":1,"fix":{"range":[2490,2490],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":70,"column":1,"nodeType":null,"messageId":"insert","endLine":70,"endColumn":1,"fix":{"range":[2568,2568],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":71,"column":9,"nodeType":null,"messageId":"insert","endLine":71,"endColumn":9,"fix":{"range":[2643,2643],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":72,"column":1,"nodeType":null,"messageId":"insert","endLine":72,"endColumn":1,"fix":{"range":[2651,2651],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":73,"column":1,"nodeType":null,"messageId":"insert","endLine":73,"endColumn":1,"fix":{"range":[2711,2711],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":74,"column":13,"nodeType":null,"messageId":"insert","endLine":74,"endColumn":13,"fix":{"range":[2767,2767],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":75,"column":13,"nodeType":null,"messageId":"insert","endLine":75,"endColumn":13,"fix":{"range":[2813,2813],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":76,"column":1,"nodeType":null,"messageId":"insert","endLine":76,"endColumn":1,"fix":{"range":[2843,2843],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":77,"column":13,"nodeType":null,"messageId":"insert","endLine":77,"endColumn":13,"fix":{"range":[2901,2901],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":78,"column":1,"nodeType":null,"messageId":"insert","endLine":78,"endColumn":1,"fix":{"range":[2933,2933],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":79,"column":1,"nodeType":null,"messageId":"insert","endLine":79,"endColumn":1,"fix":{"range":[2977,2977],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":80,"column":13,"nodeType":null,"messageId":"insert","endLine":80,"endColumn":13,"fix":{"range":[3037,3037],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":81,"column":1,"nodeType":null,"messageId":"insert","endLine":81,"endColumn":1,"fix":{"range":[3070,3070],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":82,"column":1,"nodeType":null,"messageId":"insert","endLine":82,"endColumn":1,"fix":{"range":[3115,3115],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":83,"column":9,"nodeType":null,"messageId":"insert","endLine":83,"endColumn":9,"fix":{"range":[3139,3139],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":84,"column":9,"nodeType":null,"messageId":"insert","endLine":84,"endColumn":9,"fix":{"range":[3156,3156],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":85,"column":1,"nodeType":null,"messageId":"insert","endLine":85,"endColumn":1,"fix":{"range":[3164,3164],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":86,"column":13,"nodeType":null,"messageId":"insert","endLine":86,"endColumn":13,"fix":{"range":[3215,3215],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":87,"column":1,"nodeType":null,"messageId":"insert","endLine":87,"endColumn":1,"fix":{"range":[3219,3219],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":88,"column":1,"nodeType":null,"messageId":"insert","endLine":88,"endColumn":1,"fix":{"range":[3247,3247],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":89,"column":13,"nodeType":null,"messageId":"insert","endLine":89,"endColumn":13,"fix":{"range":[3386,3386],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":90,"column":1,"nodeType":null,"messageId":"insert","endLine":90,"endColumn":1,"fix":{"range":[3388,3388],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":91,"column":1,"nodeType":null,"messageId":"insert","endLine":91,"endColumn":1,"fix":{"range":[3423,3423],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":92,"column":19,"nodeType":null,"messageId":"insert","endLine":92,"endColumn":19,"fix":{"range":[3464,3464],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":93,"column":1,"nodeType":null,"messageId":"insert","endLine":93,"endColumn":1,"fix":{"range":[3480,3480],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":94,"column":19,"nodeType":null,"messageId":"insert","endLine":94,"endColumn":19,"fix":{"range":[3561,3561],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `················` with `··················`","line":95,"column":1,"nodeType":null,"messageId":"replace","endLine":95,"endColumn":17,"fix":{"range":[3608,3624],"text":"                  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":96,"column":1,"nodeType":null,"messageId":"insert","endLine":96,"endColumn":1,"fix":{"range":[3627,3627],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":97,"column":1,"nodeType":null,"messageId":"insert","endLine":97,"endColumn":1,"fix":{"range":[3647,3647],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `················` with `··················`","line":98,"column":1,"nodeType":null,"messageId":"replace","endLine":98,"endColumn":17,"fix":{"range":[3706,3722],"text":"                  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":99,"column":1,"nodeType":null,"messageId":"insert","endLine":99,"endColumn":1,"fix":{"range":[3743,3743],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `<span·title=\"Invalid·lead\"·className=\"text-red-300\">⚠️` with `··<span·title=\"Invalid·lead\"·className=\"text-red-300\">⏎······················⚠️⏎····················`","line":100,"column":19,"nodeType":null,"messageId":"replace","endLine":100,"endColumn":73,"fix":{"range":[3823,3877],"text":"  <span title=\"Invalid lead\" className=\"text-red-300\">\n                      ⚠️\n                    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `················` with `··················`","line":101,"column":1,"nodeType":null,"messageId":"replace","endLine":101,"endColumn":17,"fix":{"range":[3885,3901],"text":"                  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":102,"column":1,"nodeType":null,"messageId":"insert","endLine":102,"endColumn":1,"fix":{"range":[3904,3904],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":103,"column":1,"nodeType":null,"messageId":"insert","endLine":103,"endColumn":1,"fix":{"range":[3924,3924],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··············` with `················`","line":104,"column":1,"nodeType":null,"messageId":"replace","endLine":104,"endColumn":15,"fix":{"range":[3983,3997],"text":"                "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `<span` with `··<span⏎···················`","line":105,"column":17,"nodeType":null,"messageId":"replace","endLine":105,"endColumn":22,"fix":{"range":[4034,4039],"text":"  <span\n                   "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":106,"column":1,"nodeType":null,"messageId":"insert","endLine":106,"endColumn":1,"fix":{"range":[4052,4052],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··················(lead.industry·===·'towing'·?·'·before:content-[\\'🚛\\']'` with `······················(lead.industry·===·'towing'·?·\"·before:content-['🚛']\"`","line":107,"column":1,"nodeType":null,"messageId":"replace","endLine":107,"endColumn":75,"fix":{"range":[4174,4248],"text":"                      (lead.industry === 'towing' ? \" before:content-['🚛']\""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··················(lead.industry·===·'concrete'·?·'·before:content-[\\'🧱\\']'` with `······················(lead.industry·===·'concrete'·?·\"·before:content-['🧱']\"`","line":108,"column":1,"nodeType":null,"messageId":"replace","endLine":108,"endColumn":77,"fix":{"range":[4257,4333],"text":"                      (lead.industry === 'concrete' ? \" before:content-['🧱']\""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··················(lead.industry·===·'plumbing'·?·'·before:content-[\\'🛁\\']'` with `······················(lead.industry·===·'plumbing'·?·\"·before:content-['🛁']\"`","line":109,"column":1,"nodeType":null,"messageId":"replace","endLine":109,"endColumn":77,"fix":{"range":[4342,4418],"text":"                      (lead.industry === 'plumbing' ? \" before:content-['🛁']\""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··················(lead.industry·===·'electrical'·?·'·before:content-[\\'⚡\\']'` with `······················(lead.industry·===·'electrical'·?·\"·before:content-['⚡']\"`","line":110,"column":1,"nodeType":null,"messageId":"replace","endLine":110,"endColumn":78,"fix":{"range":[4427,4504],"text":"                      (lead.industry === 'electrical' ? \" before:content-['⚡']\""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `················}` with `····················}⏎··················`","line":111,"column":1,"nodeType":null,"messageId":"replace","endLine":111,"endColumn":18,"fix":{"range":[4511,4528],"text":"                    }\n                  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":112,"column":1,"nodeType":null,"messageId":"insert","endLine":112,"endColumn":1,"fix":{"range":[4530,4530],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":113,"column":1,"nodeType":null,"messageId":"insert","endLine":113,"endColumn":1,"fix":{"range":[4571,4571],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":114,"column":15,"nodeType":null,"messageId":"insert","endLine":114,"endColumn":15,"fix":{"range":[4609,4609],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":115,"column":1,"nodeType":null,"messageId":"insert","endLine":115,"endColumn":1,"fix":{"range":[4615,4615],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":116,"column":1,"nodeType":null,"messageId":"insert","endLine":116,"endColumn":1,"fix":{"range":[4668,4668],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":117,"column":15,"nodeType":null,"messageId":"insert","endLine":117,"endColumn":15,"fix":{"range":[4735,4735],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":118,"column":1,"nodeType":null,"messageId":"insert","endLine":118,"endColumn":1,"fix":{"range":[4790,4790],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":119,"column":1,"nodeType":null,"messageId":"insert","endLine":119,"endColumn":1,"fix":{"range":[4878,4878],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":120,"column":17,"nodeType":null,"messageId":"insert","endLine":120,"endColumn":17,"fix":{"range":[4929,4929],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":121,"column":1,"nodeType":null,"messageId":"insert","endLine":121,"endColumn":1,"fix":{"range":[4937,4937],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":122,"column":1,"nodeType":null,"messageId":"insert","endLine":122,"endColumn":1,"fix":{"range":[4994,4994],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":123,"column":17,"nodeType":null,"messageId":"insert","endLine":123,"endColumn":17,"fix":{"range":[5078,5078],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":124,"column":1,"nodeType":null,"messageId":"insert","endLine":124,"endColumn":1,"fix":{"range":[5080,5080],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":125,"column":1,"nodeType":null,"messageId":"insert","endLine":125,"endColumn":1,"fix":{"range":[5103,5103],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":126,"column":15,"nodeType":null,"messageId":"insert","endLine":126,"endColumn":15,"fix":{"range":[5143,5143],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":127,"column":1,"nodeType":null,"messageId":"insert","endLine":127,"endColumn":1,"fix":{"range":[5149,5149],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":128,"column":1,"nodeType":null,"messageId":"insert","endLine":128,"endColumn":1,"fix":{"range":[5167,5167],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":129,"column":9,"nodeType":null,"messageId":"insert","endLine":129,"endColumn":9,"fix":{"range":[5189,5189],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":130,"column":1,"nodeType":null,"messageId":"insert","endLine":130,"endColumn":1,"fix":{"range":[5198,5198],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":131,"column":1,"nodeType":null,"messageId":"insert","endLine":131,"endColumn":1,"fix":{"range":[5213,5213],"text":"  "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":76,"fixableErrorCount":0,"fixableWarningCount":76,"source":"// components/admin/leads-table.tsx\n'use client';\n\nimport { Lead } from '@/types/lead.types';\nimport { useState } from 'react';\n\ntype Props = {\n  leads: Lead[];\n  setEditingLead?: (lead: Lead | null) => void;\n  setSelectedIds?: (ids: number[]) => void;\n};\n\nexport default function LeadsTable({ leads, setEditingLead, setSelectedIds }: Props) {\n//   const [selected, setSelected] = useState<number[]>([]);\n  const [industryFilter, setIndustryFilter] = useState<string | null>(null);\n\n  const industryCounts = leads.reduce<Record<string, number>>((acc, lead) => {\n    const key = lead.industry || 'unknown';\n    acc[key] = (acc[key] || 0) + 1;\n    return acc;\n  }, {});\n\n  const filteredLeads = industryFilter\n    ? leads.filter((l) => l.industry === industryFilter)\n    : leads;\n\n  const sortedLeads = [...filteredLeads].sort((a, b) => {\n    const aInvalid = a.business_name === '[INVALID LEAD]';\n    const bInvalid = b.business_name === '[INVALID LEAD]';\n    if (aInvalid === bInvalid) return 0;\n    return aInvalid ? -1 : 1;\n  });\n  const [selected, setSelected] = useState<number[]>([]);\n\n  const toggleSelect = (id: number) => {\n    setSelected((prev) => {\n      const next = prev.includes(id) ? prev.filter((x) => x !== id) : [...prev, id];\n      setSelectedIds?.(next);\n      return next;\n    });\n  };\n\n  return (\n    <>\n    <div className=\"mb-4 flex flex-wrap gap-2 text-sm text-gray-300\">\n        {Object.entries(industryCounts).map(([key, count]) => (\n          <button\n            key={key}\n            onClick={() => setIndustryFilter((prev) => (prev === key ? null : key))}\n            className={`inline-flex items-center gap-2 rounded-full px-3 py-1 text-xs font-medium border transition ${\n              industryFilter === key ? 'bg-blue-600 text-white border-blue-500' : 'bg-gray-800 text-gray-300 border-gray-600 hover:bg-gray-700'\n            }`}>\n            {key === 'towing' && '🚛'}\n            {key === 'concrete' && '🧱'}\n            {key === 'plumbing' && '🛁'}\n            {key === 'electrical' && '⚡'}\n            {key !== 'towing' && key !== 'concrete' && key !== 'plumbing' && key !== 'electrical' && '🏷️'} {key}: {count}</button>\n        ))}\n      {industryFilter && (\n        <button\n          onClick={() => setIndustryFilter(null)}\n          className=\"inline-flex items-center gap-2 rounded-full px-3 py-1 text-xs font-medium border border-gray-500 bg-gray-700 text-white hover:bg-gray-600 transition\"\n        >\n          ❌ Clear Filters\n        </button>\n      )}\n      </div>\n\n      <div className=\"overflow-x-auto border rounded\">\n      <table className=\"min-w-full table-auto text-sm text-white\">\n        <thead>\n          <tr className=\"bg-gray-800 text-white text-left\">\n            <th className=\"p-2\">Select</th>\n            <th className=\"p-2\">Business</th>\n            <th className=\"p-2\">City</th>\n            <th className=\"p-2\">Industry</th>\n            <th className=\"p-2\">Status</th>\n            <th className=\"p-2\">Source</th>\n            <th className=\"p-2\">Confidence</th>\n            <th className=\"p-2\">Created</th>\n            <th className=\"p-2\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedLeads.map((lead) => (\n            <tr\n              key={lead.id}\n              className={`border-t hover:bg-gray-700 ${lead.business_name === '[INVALID LEAD]' ? 'text-red-400 italic' : ''}`}\n            >\n              <td className=\"p-2\">\n                <input\n                  type=\"checkbox\"\n                  checked={selected.includes(Number(lead.id))}\n                  onChange={() => toggleSelect(Number(lead.id))}\n                />\n              </td>\n              <td className=\"p-2 flex items-center gap-2\">\n                {lead.business_name}\n                {lead.business_name === '[INVALID LEAD]' && (\n                  <span title=\"Invalid lead\" className=\"text-red-300\">⚠️</span>\n                )}\n              </td>\n              <td className=\"p-2\">{lead.address_city}</td>\n              <td className=\"p-2\">\n                <span className={\n                  `inline-flex items-center gap-1 rounded-full px-2 py-1 text-xs font-medium bg-blue-900 text-blue-300` +\n                  (lead.industry === 'towing' ? ' before:content-[\\'🚛\\']' : '') +\n                  (lead.industry === 'concrete' ? ' before:content-[\\'🧱\\']' : '') +\n                  (lead.industry === 'plumbing' ? ' before:content-[\\'🛁\\']' : '') +\n                  (lead.industry === 'electrical' ? ' before:content-[\\'⚡\\']' : '')\n                }>\n                  {lead.industry || '—'}\n                </span>\n              </td>\n              <td className=\"p-2\">{lead.status}</td>\n              <td className=\"p-2\">{lead.source}</td>\n              <td className=\"p-2\">{lead.confidence?.toFixed(2)}</td>\n              <td className=\"p-2\">{new Date(lead.created_at).toLocaleDateString()}</td>\n              <td className=\"p-2\">\n                <button\n                  onClick={() => setEditingLead?.(lead)}\n                  className=\"text-blue-400 hover:underline text-xs\"\n                >\n                  Edit\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n    </>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/log-toolbar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/logs/admin-log-toolbar.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'start' is assigned a value but never used.","line":21,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":21,"endColumn":16},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'end' is assigned a value but never used.","line":21,"column":18,"nodeType":null,"messageId":"unusedVar","endLine":21,"endColumn":21}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState } from 'react';\nimport { DateFilterToolbar } from '@/components/admin/logs/date-filter-toolbar';\nimport { DateRangeToolbar } from '@/components/admin/logs/date-range-toolbar';\nimport CSVDateRangeExport from '@/components/admin/csv-date-range-export';\nimport { useDateRange } from '@/hooks/useDateRange';\n\nexport function AdminLogToolbar({\n  type,\n  onSearch,\n  onPage,\n  page = 1,\n  children,\n}: {\n  type: 'feedback' | 'checkins';\n  onSearch?: (term: string) => void;\n  onPage?: (page: number) => void;\n  page?: number;\n  children?: React.ReactNode;\n}) {\n  const [query, setQuery] = useState('');\n  const { start, end } = useDateRange();\n\n  return (\n    <>\n      <CSVDateRangeExport type={type} />\n      <div className=\"mb-4 space-y-4\">\n        <DateFilterToolbar basePath={`/admin/logs/${type}`} />\n        <DateRangeToolbar basePath={`/admin/logs/${type}`} />\n        <div className=\"flex flex-wrap items-center justify-between gap-4 text-sm\">\n          <CSVDateRangeExport type={type} />\n          <div className=\"flex items-center gap-3\">\n            {onSearch && (\n              <input\n                type=\"text\"\n                placeholder=\"Search...\"\n                value={query}\n                onChange={(e) => {\n                  setQuery(e.target.value);\n                  onSearch(e.target.value);\n                }}\n                className=\"px-2 py-1 rounded bg-zinc-900 border border-zinc-700 text-white\"\n              />\n            )}\n            {onPage && (\n              <div className=\"flex items-center gap-2\">\n                <button\n                  onClick={() => onPage(Math.max(1, page - 1))}\n                  className=\"bg-zinc-700 px-2 py-1 rounded hover:bg-zinc-600 text-white\"\n                  disabled={page <= 1}\n                >\n                  ← Prev\n                </button>\n                <span className=\"text-zinc-300\">Page {page}</span>\n                <button\n                  onClick={() => onPage(page + 1)}\n                  className=\"bg-zinc-700 px-2 py-1 rounded hover:bg-zinc-600 text-white\"\n                >\n                  Next →\n                </button>\n              </div>\n            )}\n            {children}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/logs/date-filter-toolbar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/logs/date-range-toolbar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/map-events.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'mapRef'. Either include it or remove the dependency array.","line":22,"column":6,"nodeType":"ArrayExpression","endLine":22,"endColumn":11,"suggestions":[{"desc":"Update the dependencies array to be: [map, mapRef]","fix":{"range":[601,606],"text":"[map, mapRef]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useEffect, useRef } from 'react';\nimport { useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport type { CityPoint } from '@/types/grid';\nimport type LMap from 'leaflet';\n\ntype MapEventsProps = {\n  mapRef: React.MutableRefObject<LMap.Map | null>;\n  points: CityPoint[];\n  setZoom: (z: number) => void;\n};\n\nexport function MapEvents({ mapRef, points, setZoom }: MapEventsProps) {\n  const map = useMap();\n  const hasFitRef = useRef(false); // ✅ prevents repeat fitBounds\n\n  // ✅ Assign mapRef without returning anything\n  useEffect(() => {\n    mapRef.current = map;\n  }, [map]);\n\n  // ✅ Zoom tracking + cleanup\n  useEffect(() => {\n    setZoom(map.getZoom());\n\n    const onZoom = () => setZoom(map.getZoom());\n    map.on('zoomend', onZoom);\n    return () => {\n      map.off('zoomend', onZoom);\n    };\n  }, [map, setZoom]);\n\n  // ✅ Fit map once after mount\n  useEffect(() => {\n    if (hasFitRef.current || !map) return;\n\n    const validCoords = points\n      .filter((p) => typeof p.lat === 'number' && typeof p.lon === 'number')\n      .map((p) => [p.lat!, p.lon!] as [number, number]);\n\n    console.log('[MapEvents] Fitting bounds on', validCoords.length, 'points');\n\n    if (validCoords.length > 0) {\n      const bounds = L.latLngBounds(validCoords);\n      map.fitBounds(bounds, { padding: [50, 50] });\n    } else {\n      map.setView([39.5, -98.35], 4); // fallback\n    }\n\n    hasFitRef.current = true; // 🔒 lock it\n  }, [map, points]);\n\n  return null;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/map-instance.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·points,·zoom,·setZoom,·router,·getColor,·filteredPoints·}:·{·points:·any[],·zoom:·number,·setZoom:·(z:·number)·=>·void,·router:·any,·getColor:·(p:·any)·=>·string,·filteredPoints:·any[]·` with `⏎··points,⏎··zoom,⏎··setZoom,⏎··router,⏎··getColor,⏎··filteredPoints,⏎}:·{⏎··points:·any[];⏎··zoom:·number;⏎··setZoom:·(z:·number)·=>·void;⏎··router:·any;⏎··getColor:·(p:·any)·=>·string;⏎··filteredPoints:·any[];⏎`","line":9,"column":38,"nodeType":null,"messageId":"replace","endLine":9,"endColumn":224,"fix":{"range":[253,439],"text":"\n  points,\n  zoom,\n  setZoom,\n  router,\n  getColor,\n  filteredPoints,\n}: {\n  points: any[];\n  zoom: number;\n  setZoom: (z: number) => void;\n  router: any;\n  getColor: (p: any) => string;\n  filteredPoints: any[];\n"}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'points' is defined but never used. Allowed unused args must match /^_/u.","line":9,"column":39,"nodeType":null,"messageId":"unusedVar","endLine":9,"endColumn":45}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use client';\n\nimport { useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport CityMarker from './city-marker';\n\nexport default function MapInstance({ points, zoom, setZoom, router, getColor, filteredPoints }: { points: any[], zoom: number, setZoom: (z: number) => void, router: any, getColor: (p: any) => string, filteredPoints: any[] }) {\n  const mapRef = useRef<L.Map>(null);\n\n  useEffect(() => {\n    // 🧼 Remove any previously mounted map\n    const existingMap = document.getElementById('map-root');\n    if (existingMap && (existingMap as any)._leaflet_id) {\n      try {\n        (existingMap as any)._leaflet_id = null;\n      } catch (err) {\n        console.warn('[⚠️ cleanup failed]', err);\n      }\n    }\n  }, []);\n\n  return (\n    <MapContainer\n      center={[39.5, -98.35]}\n      zoom={4}\n      scrollWheelZoom={true}\n      style={{ height: '100%', width: '100%' }}\n      whenReady={() => {\n        const map = mapRef.current;\n        if (map) {\n          map.on('zoomend', () => setZoom(map.getZoom()));\n        }\n      }}\n      ref={mapRef}\n    >\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution=\"© OpenStreetMap contributors\"\n      />\n      {filteredPoints.map((p, i) => (\n        <CityMarker key={i} point={p} zoom={zoom} router={router} getColor={getColor} />\n      ))}\n    </MapContainer>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/map-legend.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/map-ready-handler.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'MapReadyHandler' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":25}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useMap } from 'react-leaflet';\nimport { useEffect } from 'react';\n\nfunction MapReadyHandler({ mapRef }: { mapRef: React.RefObject<HTMLDivElement> }) {\n  const map = useMap();\n\n  useEffect(() => {\n    const container = mapRef.current?.querySelector('.leaflet-container') as any;\n    if (container) container._leaflet_map = map;\n  }, [map, mapRef]);\n\n  return null;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/map-view.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··MapContainer,⏎··Marker,⏎··TileLayer,⏎··Tooltip,⏎··useMap,⏎··Popup,⏎` with `·MapContainer,·Marker,·TileLayer,·Tooltip,·useMap,·Popup·`","line":5,"column":9,"nodeType":null,"messageId":"replace","endLine":12,"endColumn":1,"fix":{"range":[91,161],"text":" MapContainer, Marker, TileLayer, Tooltip, useMap, Popup "}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Tooltip' is defined but never used.","line":9,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":9,"endColumn":10},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'mapRef'. Either include it or remove the dependency array.","line":60,"column":6,"nodeType":"ArrayExpression","endLine":60,"endColumn":11,"suggestions":[{"desc":"Update the dependencies array to be: [map, mapRef]","fix":{"range":[1628,1633],"text":"[map, mapRef]"}}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'getColor' is defined but never used. Allowed unused args must match /^_/u.","line":97,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":97,"endColumn":11},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎`","line":116,"column":1,"nodeType":null,"messageId":"delete","endLine":117,"endColumn":1,"fix":{"range":[2963,2964],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":162,"column":15,"nodeType":null,"messageId":"delete","endLine":162,"endColumn":17,"fix":{"range":[4492,4494],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":164,"column":1,"nodeType":null,"messageId":"delete","endLine":164,"endColumn":3,"fix":{"range":[4565,4567],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":166,"column":19,"nodeType":null,"messageId":"delete","endLine":166,"endColumn":21,"fix":{"range":[4682,4684],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":167,"column":1,"nodeType":null,"messageId":"delete","endLine":167,"endColumn":3,"fix":{"range":[4694,4696],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":168,"column":21,"nodeType":null,"messageId":"delete","endLine":168,"endColumn":23,"fix":{"range":[4785,4787],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":169,"column":23,"nodeType":null,"messageId":"delete","endLine":169,"endColumn":25,"fix":{"range":[4854,4856],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":170,"column":1,"nodeType":null,"messageId":"delete","endLine":170,"endColumn":3,"fix":{"range":[4863,4865],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":171,"column":1,"nodeType":null,"messageId":"delete","endLine":171,"endColumn":3,"fix":{"range":[4965,4967],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··{p.leads.filter((l)·=>·l.isClaimed)` with `{p.leads⏎··························.filter((l)·=>·l.isClaimed)⏎··························`","line":172,"column":25,"nodeType":null,"messageId":"replace","endLine":172,"endColumn":62,"fix":{"range":[5052,5089],"text":"{p.leads\n                          .filter((l) => l.isClaimed)\n                          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":183,"column":23,"nodeType":null,"messageId":"delete","endLine":183,"endColumn":25,"fix":{"range":[5565,5567],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":184,"column":1,"nodeType":null,"messageId":"delete","endLine":184,"endColumn":3,"fix":{"range":[5573,5575],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··························` with `························`","line":185,"column":1,"nodeType":null,"messageId":"replace","endLine":185,"endColumn":27,"fix":{"range":[5637,5663],"text":"                        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····························<div·className=\"text-zinc-500·text-[10px]·font-medium·mt-2\">🟡·Unclaimed` with `··························<div·className=\"text-zinc-500·text-[10px]·font-medium·mt-2\">⏎····························🟡·Unclaimed⏎··························`","line":186,"column":1,"nodeType":null,"messageId":"replace","endLine":186,"endColumn":101,"fix":{"range":[5666,5766],"text":"                          <div className=\"text-zinc-500 text-[10px] font-medium mt-2\">\n                            🟡 Unclaimed\n                          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":187,"column":1,"nodeType":null,"messageId":"delete","endLine":187,"endColumn":3,"fix":{"range":[5773,5775],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··{p.leads.filter((l)·=>·!l.isClaimed)` with `{p.leads⏎······························.filter((l)·=>·!l.isClaimed)⏎······························`","line":188,"column":29,"nodeType":null,"messageId":"replace","endLine":188,"endColumn":67,"fix":{"range":[5868,5906],"text":"{p.leads\n                              .filter((l) => !l.isClaimed)\n                              "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":199,"column":27,"nodeType":null,"messageId":"delete","endLine":199,"endColumn":29,"fix":{"range":[6453,6455],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":200,"column":25,"nodeType":null,"messageId":"delete","endLine":200,"endColumn":27,"fix":{"range":[6485,6487],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":201,"column":1,"nodeType":null,"messageId":"delete","endLine":201,"endColumn":3,"fix":{"range":[6491,6493],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":202,"column":21,"nodeType":null,"messageId":"delete","endLine":202,"endColumn":23,"fix":{"range":[6538,6540],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":203,"column":19,"nodeType":null,"messageId":"delete","endLine":203,"endColumn":21,"fix":{"range":[6565,6567],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····················` with `··················`","line":205,"column":1,"nodeType":null,"messageId":"replace","endLine":205,"endColumn":21,"fix":{"range":[6571,6591],"text":"                  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":206,"column":1,"nodeType":null,"messageId":"delete","endLine":206,"endColumn":3,"fix":{"range":[6597,6599],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":207,"column":21,"nodeType":null,"messageId":"delete","endLine":207,"endColumn":23,"fix":{"range":[6683,6685],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `························` with `······················`","line":208,"column":1,"nodeType":null,"messageId":"replace","endLine":208,"endColumn":25,"fix":{"range":[6732,6756],"text":"                      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":209,"column":21,"nodeType":null,"messageId":"delete","endLine":209,"endColumn":23,"fix":{"range":[6823,6825],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":210,"column":1,"nodeType":null,"messageId":"delete","endLine":210,"endColumn":3,"fix":{"range":[6828,6830],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":211,"column":23,"nodeType":null,"messageId":"delete","endLine":211,"endColumn":25,"fix":{"range":[6931,6933],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":212,"column":1,"nodeType":null,"messageId":"delete","endLine":212,"endColumn":3,"fix":{"range":[6939,6941],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":213,"column":25,"nodeType":null,"messageId":"delete","endLine":213,"endColumn":27,"fix":{"range":[7026,7028],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":214,"column":1,"nodeType":null,"messageId":"insert","endLine":214,"endColumn":1,"fix":{"range":[7080,7080],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":215,"column":25,"nodeType":null,"messageId":"insert","endLine":215,"endColumn":25,"fix":{"range":[7155,7155],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":216,"column":27,"nodeType":null,"messageId":"insert","endLine":216,"endColumn":27,"fix":{"range":[7194,7194],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····························` with `································`","line":217,"column":1,"nodeType":null,"messageId":"replace","endLine":217,"endColumn":29,"fix":{"range":[7197,7225],"text":"                                "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":218,"column":29,"nodeType":null,"messageId":"insert","endLine":218,"endColumn":29,"fix":{"range":[7314,7314],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":219,"column":1,"nodeType":null,"messageId":"insert","endLine":219,"endColumn":1,"fix":{"range":[7370,7370],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":220,"column":29,"nodeType":null,"messageId":"insert","endLine":220,"endColumn":29,"fix":{"range":[7426,7426],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":221,"column":1,"nodeType":null,"messageId":"insert","endLine":221,"endColumn":1,"fix":{"range":[7430,7430],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `························` with `····························`","line":222,"column":1,"nodeType":null,"messageId":"replace","endLine":222,"endColumn":25,"fix":{"range":[7461,7485],"text":"                            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":223,"column":23,"nodeType":null,"messageId":"insert","endLine":223,"endColumn":23,"fix":{"range":[7513,7513],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":224,"column":1,"nodeType":null,"messageId":"insert","endLine":224,"endColumn":1,"fix":{"range":[7517,7517],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":225,"column":23,"nodeType":null,"messageId":"delete","endLine":225,"endColumn":25,"fix":{"range":[7565,7567],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":226,"column":21,"nodeType":null,"messageId":"delete","endLine":226,"endColumn":23,"fix":{"range":[7594,7596],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····················` with `··················`","line":227,"column":1,"nodeType":null,"messageId":"replace","endLine":227,"endColumn":21,"fix":{"range":[7599,7619],"text":"                  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":228,"column":1,"nodeType":null,"messageId":"delete","endLine":228,"endColumn":3,"fix":{"range":[7626,7628],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":230,"column":1,"nodeType":null,"messageId":"delete","endLine":230,"endColumn":3,"fix":{"range":[7689,7691],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":232,"column":23,"nodeType":null,"messageId":"delete","endLine":232,"endColumn":25,"fix":{"range":[7781,7783],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":233,"column":1,"nodeType":null,"messageId":"delete","endLine":233,"endColumn":3,"fix":{"range":[7867,7869],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":237,"column":27,"nodeType":null,"messageId":"delete","endLine":237,"endColumn":29,"fix":{"range":[8084,8086],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":238,"column":1,"nodeType":null,"messageId":"delete","endLine":238,"endColumn":3,"fix":{"range":[8100,8102],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":239,"column":1,"nodeType":null,"messageId":"delete","endLine":239,"endColumn":3,"fix":{"range":[8144,8146],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":240,"column":27,"nodeType":null,"messageId":"delete","endLine":240,"endColumn":29,"fix":{"range":[8226,8228],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":243,"column":23,"nodeType":null,"messageId":"delete","endLine":243,"endColumn":25,"fix":{"range":[8387,8389],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":245,"column":1,"nodeType":null,"messageId":"delete","endLine":245,"endColumn":3,"fix":{"range":[8414,8416],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":247,"column":19,"nodeType":null,"messageId":"delete","endLine":247,"endColumn":21,"fix":{"range":[8504,8506],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":249,"column":1,"nodeType":null,"messageId":"delete","endLine":249,"endColumn":3,"fix":{"range":[8532,8534],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":60,"fixableErrorCount":0,"fixableWarningCount":57,"source":"// components/admin/map-view.tsx\n'use client';\n\nimport { useEffect } from 'react';\nimport {\n  MapContainer,\n  Marker,\n  TileLayer,\n  Tooltip,\n  useMap,\n  Popup,\n} from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-cluster';\nimport L from 'leaflet';\nimport type { CityPoint } from '@/types/grid';\nimport type { AppRouterInstance } from 'next/dist/shared/lib/app-router-context.shared-runtime';\nimport type LMap from 'leaflet';\n\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\n\nfunction getIndustryIcon(industry?: string): string {\n  const key = (industry || '').toLowerCase();\n  if (key.includes('tow')) return '🚛';\n  if (key.includes('concrete')) return '🏗️';\n  if (key.includes('roof')) return '🧱';\n  if (key.includes('plumb')) return '🚽';\n  if (key.includes('lawn') || key.includes('landscap')) return '🌱';\n  return '🧰';\n}\n\nfunction getBorderColorClass(p: CityPoint): string {\n  if (p.leadsQty >= 2 && p.domains > 0) return 'border-green-500';\n  if (p.leadsQty >= 2) return 'border-orange-500';\n  if (p.domains > 0) return 'border-blue-500';\n  if (p.leadsQty > 0) return 'border-yellow-400';\n  return 'border-gray-400';\n}\n\nfunction getPointKey(p: CityPoint): string {\n  return `${p.city}${p.state}`;\n}\n\nfunction MapEvents({\n  setZoom,\n  mapRef,\n  points,\n  hoveredPointId,\n}: {\n  setZoom: (z: number) => void;\n  mapRef: React.MutableRefObject<LMap.Map | null>;\n  points: CityPoint[];\n  hoveredPointId: string | null;\n}) {\n  const map = useMap();\n\n  useEffect(() => {\n    mapRef.current = map;\n  }, [map]);\n\n  useEffect(() => {\n    setZoom(map.getZoom());\n\n    const onZoom = () => setZoom(map.getZoom());\n    map.on('zoomend', onZoom);\n    // return () => map.off('zoomend', onZoom);\n  }, [map, setZoom]);\n\n  useEffect(() => {\n    const coords = points\n      .filter((p) => typeof p.lat === 'number' && typeof p.lon === 'number')\n      .map((p) => [p.lat!, p.lon!] as [number, number]);\n\n    if (coords.length > 0) {\n      const bounds = L.latLngBounds(coords);\n      map.fitBounds(bounds, { padding: [50, 50] });\n    }\n  }, [map, points]);\n\n  useEffect(() => {\n    if (!hoveredPointId) return;\n    const match = points.find((p) => getPointKey(p) === hoveredPointId);\n    if (match?.lat && match.lon) {\n      map.flyTo([match.lat, match.lon], Math.max(map.getZoom(), 10));\n    }\n  }, [hoveredPointId, points, map]);\n\n  return null;\n}\n\nexport default function MapView({\n  points,\n  zoom,\n  setZoom,\n  router,\n  getColor,\n  mapRef,\n  hoveredPointId,\n}: {\n  points: CityPoint[];\n  zoom: number;\n  setZoom: (z: number) => void;\n  router: AppRouterInstance;\n  getColor: (p: CityPoint) => string;\n  mapRef: React.MutableRefObject<LMap.Map | null>;\n  hoveredPointId: string | null;\n}) {\n  return (\n    <MapContainer\n      center={[39.5, -98.35]}\n      zoom={zoom}\n      scrollWheelZoom\n      style={{ height: '100%', width: '100%' }}\n    >\n\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n\n      <MapEvents\n        setZoom={setZoom}\n        mapRef={mapRef}\n        points={points}\n        hoveredPointId={hoveredPointId}\n      />\n\n      <MarkerClusterGroup\n        iconCreateFunction={(cluster: any) => {\n          const markers = cluster.getAllChildMarkers();\n          const counts: Record<string, number> = {};\n\n          markers.forEach((marker: any) => {\n            const emoji = marker.getElement()?.innerText || '🧰';\n            counts[emoji] = (counts[emoji] || 0) + 1;\n          });\n\n          const summary = Object.entries(counts)\n            .map(([emoji, count]) => `${emoji}x${count}`)\n            .join(' ');\n\n          return L.divIcon({\n            html: `<div class=\"emoji-cluster\">${summary}</div>`,\n            className: '',\n            iconSize: [40, 40],\n          });\n        }}\n      >\n        {points.map((p, i) =>\n          typeof p.lat === 'number' && typeof p.lon === 'number' ? (\n            <Marker\n              key={`${getPointKey(p)}-${i}`}\n              position={[p.lat, p.lon]}\n              icon={L.divIcon({\n                className: '',\n                html: `<div class=\"emoji-marker ${getBorderColorClass(p)} ${\n                  getPointKey(p) === hoveredPointId ? 'glow' : ''\n                }\">${getIndustryIcon(p.industry)}</div>`,\n                iconSize: [30, 30],\n                iconAnchor: [15, 30],\n                popupAnchor: [0, -30],\n              })}\n            >\n                <Popup>\n                <div className=\"space-y-1 text-sm text-black\">\n                    <strong>\n                    {getIndustryIcon(p.industry)} {p.city}, {p.state}\n                    </strong>\n                    {Array.isArray(p.leads) && p.leads.length > 0 && (\n                      <div className=\"mt-1 text-xs text-zinc-300\">\n                        Leads:\n                        <div className=\"text-zinc-500 text-[10px] font-medium mb-1\">🔵 Assigned</div>\n                        <ul className=\"list-disc list-inside\">\n                          {p.leads.filter((l) => l.isClaimed).map((l) => (\n                            <li key={l.id}>\n                              <a\n                                href={`/admin/leads/${l.id}`}\n                                className=\"text-blue-500 underline\"\n                                title=\"Assigned to campaign\"\n                              >\n                                {l.name}\n                              </a>\n                            </li>\n                          ))}\n                        </ul>\n                        {p.leads.some((l) => !l.isClaimed) && (\n                          <>\n                            <div className=\"text-zinc-500 text-[10px] font-medium mt-2\">🟡 Unclaimed</div>\n                            <ul className=\"list-disc list-inside\">\n                              {p.leads.filter((l) => !l.isClaimed).map((l) => (\n                                <li key={l.id}>\n                                  <a\n                                    href={`/admin/leads/${l.id}`}\n                                    className=\"text-yellow-600 font-semibold underline\"\n                                    title=\"Not part of any campaign yet\"\n                                  >\n                                    {l.name} 🟡\n                                  </a>\n                                </li>\n                              ))}\n                            </ul>\n                          </>\n                        )}\n                      </div>\n                    )}\n\n                    <div>\n                      {p.leadsQty} lead(s), {p.domains} domain(s)\n                      {typeof p.unclaimedLeadCount === 'number' && (\n                        <div>🟡 {p.unclaimedLeadCount} unclaimed</div>\n                      )}\n                      {Array.isArray(p.campaigns) && p.campaigns.length > 0 && (\n                        <div>\n                          📋 {p.campaigns.length} campaign(s):\n                          <ul className=\"list-disc list-inside text-xs mt-1\">\n                      {p.campaigns.map((c, i) => (\n                        <li key={i}>\n                          <a\n                            href={`/admin/campaigns?highlight=${encodeURIComponent(c)}`}\n                            className=\"text-blue-600 underline hover:text-blue-800\"\n                          >\n                            {c}\n                          </a>\n                        </li>\n                      ))}\n                    </ul>\n                        </div>\n                      )}\n                    </div>\n                    <div>{p.industry || 'Industry N/A'}</div>\n\n                    {p.leadsQty >= 2 && (\n                    <button\n                        className=\"mt-1 px-2 py-1 text-xs bg-blue-600 text-white rounded hover:bg-blue-700\"\n                        onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        const query = new URLSearchParams({\n                            city: p.city,\n                            state: p.state,\n                            industry: p.industry || '',\n                            leadIds: (p.leadIds || []).join(','),\n                        });\n                        router.push(`/admin/start-campaign?${query}`);\n                        }}\n                    >\n                        🚀 Start Campaign\n                    </button>\n                    )}\n                </div>\n                </Popup>\n            </Marker>\n          ) : null\n        )}\n      </MarkerClusterGroup>\n    </MapContainer>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/marker-stats.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/missing-link.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/mobile-drawer-sidebar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/modals/upgrade-modal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/nav-bar-with-badges.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/og/wysiwyg-preview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/pages/campaigns-client-page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/preset-card.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/preset-manager.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/profile-dropdown.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":13,"column":1,"nodeType":null,"messageId":"delete","endLine":13,"endColumn":3,"fix":{"range":[335,337],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎··`","line":18,"column":5,"nodeType":null,"messageId":"delete","endLine":19,"endColumn":3,"fix":{"range":[564,567],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"'use client';\n\nimport { Menu } from '@headlessui/react';\nimport { useRouter } from 'next/navigation';\nimport { supabase } from '@/admin/lib/supabaseClient';\nimport Link from 'next/link';\n\nexport default function ProfileDropdown() {\n  const router = useRouter();\n\n  const handleLogout = async () => {\n    await supabase.auth.signOut();\n  \n    // Clear any local auth state if needed\n    router.replace('/login?logout=1');\n    router.refresh(); // ✅ Triggers SSR rerender of AppHeader\n    setTimeout(() => window.location.reload(), 200); // optional hard reload\n  };\n  \n\n  return (\n    <Menu as=\"div\" className=\"relative inline-block text-left\">\n      <Menu.Button className=\"rounded-full bg-zinc-700 text-white px-3 py-1 text-sm hover:bg-zinc-600\">\n        👤 Profile\n      </Menu.Button>\n      <Menu.Items className=\"absolute right-0 mt-2 w-36 origin-top-right rounded-md bg-zinc-800 shadow-lg ring-1 ring-zinc-900 focus:outline-none z-50\">\n        <div className=\"py-1\">\n          <Menu.Item>\n            {({ active }) => (\n              <Link\n                href=\"/admin/profile\"\n                className={`block px-4 py-2 text-sm ${\n                  active ? 'bg-zinc-700 text-white' : 'text-zinc-300'\n                }`}\n              >\n                My Profile\n              </Link>\n            )}\n          </Menu.Item>\n          <Menu.Item>\n            {({ active }) => (\n              <button\n                onClick={handleLogout}\n                className={`w-full text-left px-4 py-2 text-sm ${\n                  active ? 'bg-red-700 text-white' : 'text-red-400'\n                }`}\n              >\n                Log Out\n              </button>\n            )}\n          </Menu.Item>\n        </div>\n      </Menu.Items>\n    </Menu>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/providers.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/publish-form.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/publish-success-panel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/query-param-editor.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `{fieldKey}` with `⏎··········{fieldKey}⏎········`","line":41,"column":87,"nodeType":null,"messageId":"replace","endLine":41,"endColumn":97,"fix":{"range":[1633,1643],"text":"\n          {fieldKey}\n        "}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'slug' is defined but never used. Allowed unused args must match /^_/u.","line":119,"column":52,"nodeType":null,"messageId":"unusedVar","endLine":119,"endColumn":56}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use client';\n\nimport { Fragment } from 'react';\nimport { z, ZodObject, ZodFirstPartyTypeKind } from 'zod';\nimport { Input } from '@/components/ui/input';\nimport { FieldLabel } from '@/components/ui';\nimport { Switch } from '@/components/ui/switch';\nimport { Select, SelectTrigger, SelectContent, SelectItem } from '@/components/ui/select';\nimport useTypedQueryParam from '@/hooks/useTypedQueryParam';\n\nfunction FieldRenderer({\n  keyPrefix,\n  fieldKey,\n  validator,\n}: {\n  keyPrefix: string;\n  fieldKey: string;\n  validator: any;\n}) {\n  const fullKey = keyPrefix ? `${keyPrefix}.${fieldKey}` : fieldKey;\n  const type = validator._def.typeName;\n  const enumValues = validator._def?.values;\n\n  const isArray = type === ZodFirstPartyTypeKind.ZodArray;\n  const innerType = isArray ? validator._def.type._def.typeName : null;\n\n  let queryType: any = 'string';\n  if (type === ZodFirstPartyTypeKind.ZodNumber || innerType === ZodFirstPartyTypeKind.ZodNumber)\n    queryType = isArray ? 'number[]' : 'number';\n  if (type === ZodFirstPartyTypeKind.ZodBoolean || innerType === ZodFirstPartyTypeKind.ZodBoolean)\n    queryType = isArray ? 'boolean[]' : 'boolean';\n  if (isArray) queryType = 'json[]';\n  if (type === ZodFirstPartyTypeKind.ZodObject) queryType = 'json';\n\n  const [value, setValue] = useTypedQueryParam(fullKey, isArray ? [] : {}, queryType);\n\n  if (type === ZodFirstPartyTypeKind.ZodObject) {\n    const nestedFields = Object.entries(validator.shape);\n    return (\n      <div className=\"border rounded p-4 space-y-2 bg-gray-50 dark:bg-gray-900\">\n        <FieldLabel className=\"text-xs uppercase tracking-wide text-muted-foreground\">{fieldKey}</FieldLabel>\n        {nestedFields.map(([nestedKey, nestedValidator]) => (\n          <FieldRenderer\n            key={nestedKey}\n            keyPrefix={fullKey}\n            fieldKey={nestedKey}\n            validator={nestedValidator}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  if (type === ZodFirstPartyTypeKind.ZodEnum && enumValues) {\n    return (\n      <div className=\"space-y-1\">\n        <FieldLabel>{fieldKey}</FieldLabel>\n        <Select value={value as string} onValueChange={setValue}>\n          <SelectTrigger id={fullKey} />\n          <SelectContent>\n            {enumValues.map((v: string) => (\n              <SelectItem key={v} value={v}>\n                {v}\n              </SelectItem>\n            ))}\n          </SelectContent>\n        </Select>\n      </div>\n    );\n  }\n\n  if (type === ZodFirstPartyTypeKind.ZodBoolean) {\n    return (\n      <div className=\"space-y-1\">\n        <FieldLabel htmlFor={fullKey}>{fieldKey}</FieldLabel>\n        <Switch\n          id={fullKey}\n          checked={value === true || value === 'true'}\n          onCheckedChange={(v: boolean) => setValue(v)}\n        />\n      </div>\n    );\n  }\n\n  if (isArray) {\n    const asString = Array.isArray(value) ? value.join(', ') : '';\n    return (\n      <div className=\"space-y-1\">\n        <FieldLabel htmlFor={fullKey}>{fieldKey}</FieldLabel>\n        <Input\n          id={fullKey}\n          value={asString}\n          onChange={(e) => {\n            const raw = e.target.value;\n            const parsed = raw\n              .split(',')\n              .map((s) => s.trim())\n              .filter(Boolean);\n            setValue(parsed);\n          }}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-1\">\n      <FieldLabel htmlFor={fullKey}>{fieldKey}</FieldLabel>\n      <Input\n        id={fullKey}\n        type={queryType}\n        value={value as string}\n        onChange={(e) => setValue(e.target.value)}\n      />\n    </div>\n  );\n}\n\nexport default function QueryParamEditor({ schema, slug }: { schema: z.ZodSchema; slug: string }) {\n  const shape = (schema as ZodObject<any>).shape;\n  const fields = Object.entries(shape);\n\n  return (\n    <div className=\"space-y-6\">\n      {fields.map(([key, validator]) => (\n        <Fragment key={key}>\n          <FieldRenderer keyPrefix=\"\" fieldKey={key} validator={validator} />\n        </Fragment>\n      ))}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/referral-link.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'email' is assigned a value but never used.","line":8,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":8,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// components/admin/referral-link.tsx\n// Use ReferralLink() when you need to display the referral link\n// Use getUserFromRequest() when you need the user context\nimport { useEffect, useState } from 'react';\nimport { supabase } from '../../lib/supabase/client';\n\nexport default function ReferralLink() {\n  const [email, setEmail] = useState('');\n  const [userId, setUserId] = useState('');\n\n  useEffect(() => {\n    supabase.auth.getUser().then(({ data }) => {\n      setEmail(data?.user?.email || '');\n      setUserId(data?.user?.id || '');\n    });\n  }, []);\n\n  const baseUrl = typeof window !== 'undefined' ? window.location.origin : '';\n  const link = `${baseUrl}/register?ref=${userId}`;\n\n  return (\n    <div className=\"text-white text-sm bg-gray-800 p-4 rounded mt-6\">\n      <p className=\"mb-1\">Referral Link:</p>\n      <input\n        value={link}\n        readOnly\n        className=\"w-full bg-gray-700 px-3 py-1 border border-gray-600 rounded text-xs\"\n        onClick={(e) => (e.target as HTMLInputElement).select()}\n      />\n      <p className=\"text-xs text-gray-400 mt-1\">\n        Share this to invite resellers and earn 10% recurring.\n      </p>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/responsive-admin-layout.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··onToggle,⏎}:·{⏎··onToggle?:·(collapsed:·boolean)·=>·void;⏎` with `·onToggle·}:·{·onToggle?:·(collapsed:·boolean)·=>·void·`","line":9,"column":39,"nodeType":null,"messageId":"replace","endLine":13,"endColumn":1,"fix":{"range":[312,373],"text":" onToggle }: { onToggle?: (collapsed: boolean) => void "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use client';\n\nimport { useEffect, useState, useRef } from 'react';\nimport { motion } from 'framer-motion';\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\nimport clsx from 'clsx';\nimport { AdminNavSections } from '@/components/admin/AppHeader/AdminNavSections';\n\nexport default function AdminSidebar({\n  onToggle,\n}: {\n  onToggle?: (collapsed: boolean) => void;\n}) {\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n  const touchStartX = useRef<number | null>(null);\n\n  // Detect mobile\n  useEffect(() => {\n    const update = () => setIsMobile(window.innerWidth < 768);\n    update();\n    window.addEventListener('resize', update);\n    return () => window.removeEventListener('resize', update);\n  }, []);\n\n  // Load from storage\n  useEffect(() => {\n    const stored = localStorage.getItem('admin-sidebar-collapsed');\n    if (stored === 'true' || window.innerWidth < 768) setIsCollapsed(true);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('admin-sidebar-collapsed', String(isCollapsed));\n    onToggle?.(isCollapsed);\n  }, [isCollapsed, onToggle]);\n\n  // Swipe close (mobile)\n  useEffect(() => {\n    const handleTouchStart = (e: TouchEvent) => {\n      touchStartX.current = e.touches[0].clientX;\n    };\n    const handleTouchEnd = (e: TouchEvent) => {\n      if (touchStartX.current === null) return;\n      const deltaX = e.changedTouches[0].clientX - touchStartX.current;\n      if (deltaX < -50 && !isCollapsed) setIsCollapsed(true);\n      touchStartX.current = null;\n    };\n    window.addEventListener('touchstart', handleTouchStart);\n    window.addEventListener('touchend', handleTouchEnd);\n    return () => {\n      window.removeEventListener('touchstart', handleTouchStart);\n      window.removeEventListener('touchend', handleTouchEnd);\n    };\n  }, [isCollapsed]);\n\n  useEffect(() => {\n    const handleKey = (e: KeyboardEvent) => {\n      if (e.key === 'Escape' && !isCollapsed) setIsCollapsed(true);\n    };\n    window.addEventListener('keydown', handleKey);\n    return () => window.removeEventListener('keydown', handleKey);\n  }, [isCollapsed]);\n\n  return (\n    <>\n      {/* Backdrop for mobile */}\n      {isMobile && !isCollapsed && (\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 0.4 }}\n          exit={{ opacity: 0 }}\n          transition={{ duration: 0.2 }}\n          className=\"fixed inset-0 bg-black z-30\"\n          onClick={() => setIsCollapsed(true)}\n        />\n      )}\n\n      {/* Sidebar container */}\n      <motion.aside\n        animate={{ width: isCollapsed ? 56 : 288 }} // Tailwind w-14 vs w-72\n        transition={{ type: 'spring', stiffness: 250, damping: 30 }}\n        className={clsx(\n          'fixed top-0 left-0 z-40 h-screen bg-zinc-900 border-r border-zinc-800 text-white overflow-y-auto flex flex-col group'\n        )}\n      >\n        <div className=\"relative\">\n          <button\n            onClick={() => setIsCollapsed(!isCollapsed)}\n            className=\"p-2 m-2 hover:bg-zinc-800 rounded transition relative\"\n            title={isCollapsed ? 'Expand Sidebar' : 'Collapse Sidebar'}\n          >\n            {isCollapsed ? <ChevronRight size={20} /> : <ChevronLeft size={20} />}\n            {isCollapsed && (\n              <span className=\"absolute left-14 top-1/2 -translate-y-1/2 whitespace-nowrap rounded bg-zinc-800 px-2 py-1 text-xs text-white opacity-0 group-hover:opacity-100 transition-all z-20 shadow pointer-events-none\">\n                Expand Sidebar\n              </span>\n            )}\n          </button>\n\n          {isCollapsed && (\n            <div className=\"absolute top-0 right-0 w-2 h-full bg-transparent group-hover:bg-zinc-700 rounded-r cursor-pointer transition-all duration-200\" />\n          )}\n        </div>\n\n        <div className={clsx('flex-1', isCollapsed && 'overflow-hidden')}>\n          <AdminNavSections collapsed={isCollapsed} />\n        </div>\n      </motion.aside>\n    </>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/revenue-estimator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/role-badge.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/role-manager.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/safe-leaflet-map.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":31,"column":1,"nodeType":null,"messageId":"delete","endLine":31,"endColumn":3,"fix":{"range":[1118,1120],"text":""}},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'getColor', 'points', 'router', 'setZoom', and 'zoom'. Either include them or remove the dependency array.","line":44,"column":6,"nodeType":"ArrayExpression","endLine":44,"endColumn":18,"suggestions":[{"desc":"Update the dependencies array to be: [getColor, mapVisible, points, router, setZoom, zoom]","fix":{"range":[1422,1434],"text":"[getColor, mapVisible, points, router, setZoom, zoom]"}}]},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎··`","line":44,"column":20,"nodeType":null,"messageId":"delete","endLine":45,"endColumn":3,"fix":{"range":[1436,1439],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"// components/admin/safe-leaflet-map.tsx\n'use client';\n\nimport { useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport dynamic from 'next/dynamic';\nimport type { CityPoint } from '@/types/grid';\nimport type { AppRouterInstance } from 'next/dist/shared/lib/app-router-context.shared-runtime';\nimport type L from 'leaflet';\n\n// Lazy load the map view to avoid SSR + hydration conflicts\nconst MapView = dynamic(() => import('./map-view'), { ssr: false });\n\ntype Props = {\n  points: CityPoint[];\n  zoom: number;\n  setZoom: React.Dispatch<React.SetStateAction<number>>;\n  router: AppRouterInstance;\n  getColor: (p: CityPoint) => string;\n};\n\nexport default function SafeLeafletMap({ points, zoom, setZoom, router, getColor }: Props) {\n  const [mapVisible, setMapVisible] = useState(false);\n  const [hydrated, setHydrated] = useState(false);\n  const mapRef = useRef<L.Map | null>(null);\n  const mountRef = useRef<HTMLDivElement | null>(null);\n  const rootRef = useRef<ReactDOM.Root | null>(null);\n\n  useEffect(() => {\n    if (!mapVisible || !mountRef.current || rootRef.current) return;\n  \n    rootRef.current = ReactDOM.createRoot(mountRef.current);\n    rootRef.current.render(\n      <MapView\n        points={points}\n        zoom={zoom}\n        setZoom={setZoom}\n        router={router}\n        getColor={getColor}\n        mapRef={mapRef}\n        hoveredPointId={null}\n      />\n    );\n  }, [mapVisible]);\n  \n\n  useEffect(() => {\n    setHydrated(true);\n  }, []);\n\n  const stats = points.reduce(\n    (acc, p) => {\n      if (p.has2PlusUnclaimedInSameIndustry) acc.red++;\n      else if (p.leadsQty >= 2 && p.domains > 0) acc.green++;\n      else if (p.leadsQty >= 2) acc.orange++;\n      else if (p.domains > 0) acc.blue++;\n      else if (p.leadsQty > 0) acc.yellow++;\n      return acc;\n    },\n    { yellow: 0, orange: 0, blue: 0, green: 0, red: 0 }\n  );\n\n  const monthlyValue = points.reduce((sum, p) => {\n    if (p.has2PlusUnclaimedInSameIndustry) sum += 49;\n    return sum;\n  }, 0);\n\n  return (\n    <div className=\"relative h-full w-full\">\n      {!mapVisible && (\n        <button\n          className=\"absolute z-10 left-4 top-4 px-4 py-2 bg-blue-600 text-white rounded shadow\"\n          onClick={() => setMapVisible(true)}\n        >\n          Load Map\n        </button>\n      )}\n      <div ref={mountRef} className=\"h-full w-full\" />\n\n      {/* Always show legend when map is visible and hydrated */}\n      {mapVisible && hydrated && (\n        <div className=\"absolute bottom-4 left-4 text-sm text-white bg-black/60 p-2 rounded shadow z-[1000]\">\n          <div className=\"flex gap-2 items-center\">\n            <div className=\"w-3 h-3 bg-yellow-500 rounded-full\" /> {stats.yellow}\n            <div className=\"w-3 h-3 bg-orange-500 rounded-full\" /> {stats.orange}\n            <div className=\"w-3 h-3 bg-blue-500 rounded-full\" /> {stats.blue}\n            <div className=\"w-3 h-3 bg-green-500 rounded-full\" /> {stats.green}\n            <div className=\"w-3 h-3 bg-red-600 rounded-full\" /> {stats.red}\n          </div>\n          <div className=\"mt-1 text-lime-300\">💰 ${monthlyValue.toFixed(2)} / month</div>\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/safe-supabase-provider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/session-log-viewer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/settings-schema.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/share-button.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/sidebar.stories.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/site-preview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/site-settings-panel.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'siteId'. Either include it or remove the dependency array.","line":66,"column":6,"nodeType":"ArrayExpression","endLine":66,"endColumn":12,"suggestions":[{"desc":"Update the dependencies array to be: [siteId, slug]","fix":{"range":[2322,2328],"text":"[siteId, slug]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport { useRouter } from 'next/navigation';\nimport { Tooltip, TooltipTrigger, TooltipContent } from '@/components/ui';\nimport { ClipboardCopy } from 'lucide-react';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport default function SiteSettingsPanel({ siteId }: { siteId: string }) {\n  const router = useRouter();\n  const [bizName, setBizName] = useState('');\n  const [location, setLocation] = useState('');\n  const [slug, setSlug] = useState('');\n  const [slugAvailable, setSlugAvailable] = useState<boolean | null>(null);\n  const [colorScheme, setColorScheme] = useState('');\n  const [isPublished, setIsPublished] = useState(false);\n  const [customDomain, setCustomDomain] = useState('');\n  const [analytics, setAnalytics] = useState<{ visits: number } | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [seoTitle, setSeoTitle] = useState('');\n  const [seoDescription, setSeoDescription] = useState('');\n  const [twitterHandle, setTwitterHandle] = useState('');\n  const [siteName, setSiteName] = useState('');\n\n  useEffect(() => {\n    if (!siteId) return;\n    (async () => {\n      const { data, error } = await supabase\n        .from('sites')\n        .select('*')\n        .eq('id', siteId)\n        .maybeSingle();\n\n      if (!error && data) {\n        setBizName(data.business_name || '');\n        setLocation(data.location || '');\n        setSlug(data.slug || '');\n        setColorScheme(data.color_scheme || '');\n        setIsPublished(data.published || false);\n        setCustomDomain(data.custom_domain || '');\n        setSeoTitle(data.seo_title || '');\n        setSeoDescription(data.seo_description || '');\n        setTwitterHandle(data.twitter_handle || '');\n        setSiteName(data.site_name || '');\n      }\n    })();\n  }, [siteId]);\n\n  useEffect(() => {\n    if (!slug) return setSlugAvailable(null);\n    const delay = setTimeout(async () => {\n      const { data } = await supabase\n        .from('sites')\n        .select('id')\n        .eq('slug', slug)\n        .not('id', 'eq', siteId)\n        .maybeSingle();\n      setSlugAvailable(!data);\n    }, 300);\n    return () => clearTimeout(delay);\n  }, [slug]);\n\n  useEffect(() => {\n    if (!siteId) return;\n    (async () => {\n      const { count, error } = await supabase\n        .from('site_visits')\n        .select('*', { count: 'exact', head: true })\n        .eq('site_id', siteId);\n      if (!error) setAnalytics({ visits: count || 0 });\n    })();\n  }, [siteId]);\n\n  const saveSettings = async () => {\n    if (!slugAvailable) return alert('Slug not available.');\n    const { error } = await supabase\n      .from('sites')\n      .update({\n        business_name: bizName,\n        location,\n        slug,\n        color_scheme: colorScheme,\n        published: isPublished,\n        custom_domain: customDomain,\n        seo_title: seoTitle,\n        seo_description: seoDescription,\n        twitter_handle: twitterHandle,\n        site_name: siteName,\n      })\n      .eq('id', siteId);\n    if (error) alert('❌ Save failed.');\n    else alert('✅ Settings saved!');\n  };\n\n  const duplicateSite = async () => {\n    const newSlug = prompt('New slug for duplicate site:');\n    if (!newSlug) return;\n    const { data: original, error } = await supabase\n      .from('sites')\n      .select('*')\n      .eq('id', siteId)\n      .maybeSingle();\n    if (error || !original) return alert('❌ Fetch failed');\n    const { error: createError } = await supabase.from('sites').insert({\n      ...original,\n      slug: newSlug,\n      published: false,\n      created_at: new Date().toISOString(),\n    });\n    if (createError) alert('❌ Duplicate failed');\n    else {\n      alert('✅ Duplicated!');\n      router.push(`/edit/${newSlug}`);\n    }\n  };\n\n  const deleteSite = async () => {\n    if (!confirm('Are you sure? This cannot be undone.')) return;\n    setLoading(true);\n    const { error } = await supabase.from('sites').delete().eq('id', siteId);\n    if (error) alert('❌ Delete failed');\n    else router.push('/dashboard');\n  };\n\n  const handleUpload = async (file: File, key: string) => {\n    const { error } = await supabase.storage.from('site-assets').upload(`${siteId}/${key}`, file, {\n      cacheControl: '3600',\n      upsert: true,\n    });\n    if (error) alert('❌ Upload failed');\n    else alert(`${key} uploaded!`);\n  };\n\n  console.log('✅ SiteSettingsPanel mounted with siteId:', siteId);\n  //   return (\n  //     <div className=\"bg-red-600 text-white p-6 text-center rounded-lg\">\n  //       <p>🔥 Settings panel loaded for site: {siteId}</p>\n  //     </div>\n  //   );\n\n  return (\n    <div className=\"flex flex-col h-full space-y-6 bg-zinc-900 overflow-y-auto rounded border border-zinc-700 p-6\">\n      <h2 className=\"text-xl font-semibold text-white\">Site Settings</h2>\n\n      <fieldset className=\"space-y-4\">\n        <legend className=\"text-sm font-medium text-zinc-400 mb-2\">Basic Info</legend>\n\n        <div>\n          <label className=\"block text-sm font-medium text-zinc-300 mb-1\">Business Name</label>\n          <input\n            value={bizName}\n            onChange={(e) => setBizName(e.target.value)}\n            className=\"w-full p-2 bg-zinc-900 border border-zinc-700 rounded\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-zinc-300 mb-1\">Location</label>\n          <input\n            value={location}\n            onChange={(e) => setLocation(e.target.value)}\n            className=\"w-full p-2 bg-zinc-900 border border-zinc-700 rounded\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-zinc-300 mb-1\">Slug</label>\n          <input\n            value={slug}\n            onChange={(e) => setSlug(e.target.value.toLowerCase().replace(/[^a-z0-9-]+/g, '-'))}\n            className=\"w-full p-2 bg-zinc-900 border border-zinc-700 rounded\"\n          />\n          {slug && slugAvailable !== null && (\n            <p className={`text-sm mt-1 ${slugAvailable ? 'text-green-400' : 'text-red-400'}`}>\n              {slugAvailable ? '✅ Available' : '🚫 Taken'}\n            </p>\n          )}\n          {isPublished && (customDomain || slug) && (\n            <div>\n              <label className=\"block text-sm font-medium text-zinc-300 mb-1\">Live URL</label>\n              <div className=\"flex items-center gap-3\">\n                <Tooltip>\n                  <TooltipTrigger asChild>\n                    <a\n                      href={`https://${customDomain || `${slug}.quicksites.ai`}`}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      onClick={() => {\n                        console.log('🔍 Tracking: live site clicked');\n                        // TODO: Supabase.track(\"click_live_link\", { siteId })\n                      }}\n                      className=\"inline-flex items-center text-sm text-white bg-blue-600 hover:bg-blue-700 px-3 py-1.5 rounded transition\"\n                    >\n                      🔗 View Site\n                    </a>\n                  </TooltipTrigger>\n                  <TooltipContent>\n                    {customDomain\n                      ? `Your domain should point to a CNAME record: ${slug}.quicksites.ai`\n                      : `Visit your published site`}\n                  </TooltipContent>\n                </Tooltip>\n\n                {/* Copy button */}\n                <button\n                  onClick={async () => {\n                    const url = `https://${customDomain || `${slug}.quicksites.ai`}`;\n                    await navigator.clipboard.writeText(url);\n                    console.log('✅ Copied to clipboard:', url);\n                  }}\n                  className=\"p-1 rounded bg-zinc-800 hover:bg-zinc-700 text-white\"\n                  title=\"Copy to clipboard\"\n                >\n                  <ClipboardCopy className=\"w-4 h-4\" />\n                </button>\n\n                {customDomain && <span className=\"text-xs text-zinc-400\">(custom domain)</span>}\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-zinc-300 mb-1\">Custom Domain</label>\n          <input\n            value={customDomain}\n            onChange={(e) => setCustomDomain(e.target.value)}\n            className=\"w-full p-2 bg-zinc-900 border border-zinc-700 rounded\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-zinc-300 mb-1\">Color Scheme</label>\n          <select\n            value={colorScheme}\n            onChange={(e) => setColorScheme(e.target.value)}\n            className=\"w-full p-2 bg-zinc-900 border border-zinc-700 rounded\"\n          >\n            <option value=\"\">Choose Color Scheme</option>\n            <option value=\"blue\">Blue</option>\n            <option value=\"red\">Red</option>\n            <option value=\"green\">Green</option>\n            <option value=\"dark\">Dark</option>\n          </select>\n        </div>\n\n        <div className=\"flex items-center gap-2\">\n          <input\n            type=\"checkbox\"\n            checked={isPublished}\n            onChange={() => setIsPublished(!isPublished)}\n          />\n          <label className=\"text-sm font-medium text-zinc-300\">Published</label>\n        </div>\n      </fieldset>\n      <fieldset className=\"space-y-4\">\n        <legend className=\"text-sm font-medium text-zinc-400 mb-2\">🔍 SEO Settings</legend>\n\n        <div>\n          <label className=\"block text-sm font-medium text-zinc-300 mb-1\">SEO Title</label>\n          <input\n            value={seoTitle}\n            onChange={(e) => setSeoTitle(e.target.value)}\n            className=\"w-full p-2 bg-zinc-900 border border-zinc-700 rounded\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-zinc-300 mb-1\">SEO Description</label>\n          <textarea\n            value={seoDescription}\n            onChange={(e) => setSeoDescription(e.target.value)}\n            className=\"w-full p-2 bg-zinc-900 border border-zinc-700 rounded\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-zinc-300 mb-1\">Twitter Handle</label>\n          <input\n            value={twitterHandle}\n            onChange={(e) => setTwitterHandle(e.target.value)}\n            placeholder=\"@yourhandle\"\n            className=\"w-full p-2 bg-zinc-900 border border-zinc-700 rounded\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-zinc-300 mb-1\">\n            Site Name (OpenGraph)\n          </label>\n          <input\n            value={siteName}\n            onChange={(e) => setSiteName(e.target.value)}\n            className=\"w-full p-2 bg-zinc-900 border border-zinc-700 rounded\"\n          />\n        </div>\n      </fieldset>\n\n      <fieldset className=\"space-y-4\">\n        <legend className=\"text-sm font-medium text-zinc-400 mb-2\">Assets</legend>\n\n        <div>\n          <label className=\"block text-sm font-medium text-zinc-300 mb-1\">Favicon Upload</label>\n          <input\n            type=\"file\"\n            onChange={(e) => e.target.files?.[0] && handleUpload(e.target.files[0], 'favicon.png')}\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-zinc-300 mb-1\">Logo Upload</label>\n          <input\n            type=\"file\"\n            onChange={(e) => e.target.files?.[0] && handleUpload(e.target.files[0], 'logo.png')}\n          />\n        </div>\n      </fieldset>\n\n      {analytics && (\n        <div className=\"text-sm text-zinc-400\">📊 {analytics.visits} visits recorded</div>\n      )}\n\n      <div className=\"flex justify-between pt-4 border-t border-zinc-700 mt-4\">\n        <button\n          onClick={duplicateSite}\n          disabled={loading}\n          className=\"bg-yellow-600 px-3 py-2 rounded text-white\"\n        >\n          📦 Duplicate\n        </button>\n        <button\n          onClick={deleteSite}\n          disabled={loading}\n          className=\"bg-red-600 px-3 py-2 rounded text-white\"\n        >\n          🗑 Delete\n        </button>\n        <button\n          onClick={saveSettings}\n          disabled={loading}\n          className=\"bg-blue-600 px-3 py-2 rounded text-white\"\n        >\n          💾 Save\n        </button>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/smart-link-context.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/smart-link-debug.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/smart-link-gallery.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/smart-link-grid.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/smart-link-home-page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/smart-link-meta.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/smart-link-provider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/smart-link.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/tag-filter-controls.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useEffect' is defined but never used.","line":2,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// components/TagFilterControls.tsx\nimport { useEffect, useState } from 'react';\n\nexport default function TagFilterControls({\n  tagFilter,\n  setTagFilter,\n  tagMatchMode,\n  setTagMatchMode,\n  allTags,\n}: {\n  tagFilter: string[];\n  setTagFilter: (tags: string[]) => void;\n  tagMatchMode: 'any' | 'all';\n  setTagMatchMode: (mode: 'any' | 'all') => void;\n  allTags: [string, number][];\n}) {\n  const [manualTag, setManualTag] = useState('');\n\n  const addManualTag = () => {\n    const newTag = manualTag.trim().toLowerCase();\n    if (newTag && !tagFilter.includes(newTag)) {\n      const next = [...tagFilter, newTag];\n      setTagFilter(next);\n      updateTagURL(next);\n    }\n    setManualTag('');\n  };\n\n  const updateTagURL = (tags: string[]) => {\n    const url = new URL(window.location.href);\n    if (tags.length > 0) url.searchParams.set('tags', tags.join(','));\n    else url.searchParams.delete('tags');\n    window.history.replaceState({}, '', url.toString());\n  };\n\n  const toggleTag = (tag: string) => {\n    const lower = tag.toLowerCase();\n    if (!tagFilter.includes(lower)) {\n      const next = [...tagFilter, lower];\n      setTagFilter(next);\n      updateTagURL(next);\n    }\n  };\n\n  const removeTag = (tag: string) => {\n    const next = tagFilter.filter((t) => t !== tag);\n    setTagFilter(next);\n    updateTagURL(next);\n  };\n\n  const toggleMode = () => {\n    const next = tagMatchMode === 'all' ? 'any' : 'all';\n    setTagMatchMode(next);\n    const url = new URL(window.location.href);\n    url.searchParams.set('tagMode', next);\n    window.history.replaceState({}, '', url.toString());\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      <label className=\"text-sm font-medium\">Filter by Tag:</label>\n      <input\n        type=\"text\"\n        value={tagFilter.join(', ')}\n        onChange={(e) => {\n          const next = e.target.value\n            .split(',')\n            .map((t) => t.trim().toLowerCase())\n            .filter(Boolean);\n          setTagFilter(next);\n          updateTagURL(next);\n        }}\n        placeholder=\"e.g. cold, social\"\n        className=\"border px-2 py-1 rounded w-full\"\n      />\n\n      {tagFilter.length > 0 && (\n        <div className=\"flex flex-wrap gap-1 mt-1\">\n          {tagFilter.map((tag, i) => (\n            <button\n              key={i}\n              onClick={() => removeTag(tag)}\n              className=\"bg-blue-100 text-blue-800 text-xs px-2 py-0.5 rounded hover:bg-blue-200\"\n            >\n              #{tag} ✕\n            </button>\n          ))}\n        </div>\n      )}\n\n      <div className=\"flex gap-2 items-center mt-2\">\n        <input\n          value={manualTag}\n          onChange={(e) => setManualTag(e.target.value)}\n          placeholder=\"Add tag...\"\n          className=\"border px-2 py-1 text-sm rounded\"\n        />\n        <button onClick={addManualTag} className=\"text-sm bg-blue-700 text-white px-3 py-1 rounded\">\n          + Add\n        </button>\n        <label\n          title=\"Click to toggle mode (or press 'm')\"\n          onClick={toggleMode}\n          className=\"text-xs font-semibold text-gray-700 cursor-pointer\"\n        >\n          Mode:{' '}\n          <span\n            className={`ml-1 font-bold ${tagMatchMode === 'any' ? 'text-indigo-500' : 'text-green-600'}`}\n          >\n            {tagMatchMode}\n          </span>\n        </label>\n        <select\n          value={tagMatchMode}\n          onChange={(e) => {\n            const mode = e.target.value as 'any' | 'all';\n            setTagMatchMode(mode);\n            const url = new URL(window.location.href);\n            url.searchParams.set('tagMode', mode);\n            window.history.replaceState({}, '', url.toString());\n          }}\n          className={`text-xs border px-1 py-0.5 rounded text-white ${tagMatchMode === 'any' ? 'bg-indigo-500' : 'bg-green-600'}`}\n        >\n          <option value=\"all\">Match All</option>\n          <option value=\"any\">Match Any</option>\n        </select>\n      </div>\n\n      {allTags.length > 0 && (\n        <div className=\"space-y-1 mt-4\">\n          <span className=\"text-xs text-gray-500\">Suggestions (by frequency):</span>\n          <div className=\"flex flex-wrap gap-2\">\n            {allTags.map(([tag, count], i) => (\n              <button\n                key={i}\n                onClick={() => toggleTag(tag)}\n                className=\"bg-gray-100 text-gray-700 text-xs px-2 py-0.5 rounded hover:bg-gray-200\"\n              >\n                #{tag} ({count})\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/template-assigner.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'userId' is assigned a value but never used.","line":13,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":13,"endColumn":16},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'setUserId' is assigned a value but never used.","line":13,"column":18,"nodeType":null,"messageId":"unusedVar","endLine":13,"endColumn":27}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { supabase } from '@/admin/lib/supabaseClient';\nimport { Button } from '@/components/ui';\n\ntype Template = { id: string; name: string };\n\nexport default function TemplateAssigner() {\n  const [templates, setTemplates] = useState<Template[]>([]);\n  const [email, setEmail] = useState('');\n  const [selected, setSelected] = useState('');\n  const [userId, setUserId] = useState<string | null>(null);\n\n  useEffect(() => {\n    (async () => {\n      const { data, error } = await supabase\n        .from('dashboard_layout_templates')\n        .select('id, name')\n        .order('created_at', { ascending: false });\n\n      if (error) console.error('Error fetching templates:', error);\n      setTemplates(data || []);\n    })();\n  }, []);\n\n  const fetchUserId = async () => {\n    const { data: user, error } = await supabase\n      .from('users')\n      .select('id')\n      .eq('email', email)\n      .single();\n\n    if (error || !user) {\n      alert('User not found');\n      return null;\n    }\n\n    return user.id as string;\n  };\n\n  const assignTemplate = async () => {\n    if (!selected || !email) {\n      alert('Please provide both an email and a template');\n      return;\n    }\n\n    const id = await fetchUserId();\n    if (!id) return;\n\n    await supabase.from('dashboard_user_layouts').upsert({ user_id: id, template_id: selected });\n\n    alert('✅ Template assigned!');\n  };\n\n  return (\n    <div className=\"p-4 border rounded bg-white shadow max-w-xl mt-8\">\n      <h2 className=\"text-lg font-semibold mb-3\">Assign Template to User</h2>\n      <div className=\"flex flex-col gap-3\">\n        <input\n          placeholder=\"User email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          className=\"border p-2 text-sm\"\n        />\n        <select\n          className=\"border p-2 text-sm\"\n          value={selected}\n          onChange={(e) => setSelected(e.target.value)}\n        >\n          <option value=\"\">Select template</option>\n          {templates.map((tpl) => (\n            <option key={tpl.id} value={tpl.id}>\n              {tpl.name}\n            </option>\n          ))}\n        </select>\n        <Button onClick={assignTemplate}>Assign</Button>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/template-browser.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `,`","line":2,"column":46,"nodeType":null,"messageId":"delete","endLine":2,"endColumn":47,"fix":{"range":[90,91],"text":""}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'selected' is assigned a value but never used.","line":22,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":22,"endColumn":18}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import { useEffect, useState } from 'react';\nimport { Dialog, DialogTrigger, DialogContent, } from '@/components/ui/dialog';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport SafeLink from '@/components/ui/safe-link';\n\ntype Template = {\n  template_name: string;\n  industry: string;\n  layout: string;\n  color_scheme: string;\n  data?: any;\n};\n\ntype Props = {\n  onSelect: (templateName: string) => void;\n};\n\nexport default function TemplateBrowser({ onSelect }: Props) {\n  const [templates, setTemplates] = useState<Template[]>([]);\n  const [selected, setSelected] = useState<Template | null>(null);\n\n  useEffect(() => {\n    fetch('/api/templates/full') // load full data for preview\n      .then((res) => res.json())\n      .then((data) => setTemplates(data))\n      .catch(console.error);\n  }, []);\n\n  return (\n    <>\n      <ScrollArea className=\"h-[500px] w-full p-4\">\n        <div className=\"grid gap-4 sm:grid-cols-2 md:grid-cols-3\">\n          {templates.map((t) => (\n            <Card key={t.template_name} className=\"p-3\">\n              <CardContent className=\"space-y-2\">\n                <h3 className=\"text-lg font-bold\">{t.template_name}</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  Industry: {t.industry}\n                  <br />\n                  Layout: {t.layout}\n                  <br />\n                  Colors: {t.color_scheme}\n                </p>\n                <div className=\"flex gap-2\">\n                  <Button size=\"sm\" onClick={() => onSelect(t.template_name)}>\n                    Use\n                  </Button>\n                  <Dialog>\n                    <DialogTrigger asChild>\n                      <Button size=\"sm\" variant=\"secondary\" onClick={() => setSelected(t)}>\n                        Preview\n                      </Button>\n                    </DialogTrigger>\n                    <DialogContent className=\"max-w-xl\">\n                      <h4 className=\"text-xl font-semibold\">{t.template_name}</h4>\n                      <p className=\"text-sm text-muted-foreground mb-2\">\n                        Layout: {t.layout}, Colors: {t.color_scheme}\n                      </p>\n                      <ul className=\"text-sm space-y-1\">\n                        {t.data?.pages.map((page: any) => (\n                          <li key={page.slug}>\n                            <strong>{page.slug}</strong>: {page.title}\n                          </li>\n                        ))}\n                      </ul>\n                      <hr className=\"my-2\" />\n                      <p className=\"italic text-xs\">\n                        Hero: {t.data?.pages[0]?.content_blocks?.[0]?.headline}\n                      </p>\n                      <div className=\"flex justify-end gap-2 mt-4\">\n                        <SafeLink href={`/admin/templates/new?copy=${t.template_name}`}>\n                          <Button variant=\"secondary\" size=\"sm\">\n                            Duplicate This\n                          </Button>\n                        </SafeLink>\n                      </div>\n                    </DialogContent>\n                  </Dialog>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </ScrollArea>\n    </>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/template-user-viewer.filtered.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'selectedTemplate' is assigned a value but never used.","line":17,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":17,"endColumn":26},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'setSelectedTemplate' is assigned a value but never used.","line":17,"column":28,"nodeType":null,"messageId":"unusedVar","endLine":17,"endColumn":47}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { supabase } from '@/admin/lib/supabaseClient';\nimport { Button } from '@/components/ui';\n// import { Template } from '@/types/template';\n\nexport default function TemplateUserViewer() {\n  type Assignment = {\n    user_id: string;\n    email: string;\n    template_id: string;\n    template: string;\n  };\n  type TemplateOption = { id: string; name: string };\n  const [templates, setTemplates] = useState<TemplateOption[]>([]);\n  const [selectedTemplate, setSelectedTemplate] = useState<string>('');\n  const [assignments, setAssignments] = useState<Assignment[]>([]);\n  const [filtered, setFiltered] = useState<Assignment[]>([]);\n  const [search, setSearch] = useState('');\n  const [filterTemplate, setFilterTemplate] = useState('');\n  const [selected, setSelected] = useState('');\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    setFiltered(\n      assignments.filter(\n        (a) =>\n          (!search || a.email.toLowerCase().includes(search.toLowerCase())) &&\n          (!filterTemplate || a.template === filterTemplate)\n      )\n    );\n  }, [search, filterTemplate, assignments]);\n\n  const loadData = async () => {\n    const { data: map } = await supabase\n      .from('dashboard_user_layouts')\n      .select('user_id, template_id');\n\n    const { data: users } = await supabase.from('auth.users').select('id, email');\n\n    const { data: templates } = await supabase\n      .from('dashboard_layout_templates')\n      .select('id, name');\n\n    const joined =\n      map?.map((row) => ({\n        user_id: row.user_id,\n        email: users?.find((u) => u.id === row.user_id)?.email || '—',\n        template_id: row.template_id,\n        template: templates?.find((t) => t.id === row.template_id)?.name || '(deleted)',\n      })) || [];\n\n    setAssignments(joined);\n    setTemplates(templates || []);\n    setFiltered(joined);\n  };\n\n  const bulkAssign = async () => {\n    const { data: users } = await supabase.from('auth.users').select('id');\n    const inserts = users?.map((u) => ({\n      user_id: u.id,\n      template_id: selected,\n    }));\n    await supabase.from('dashboard_user_layouts').upsert(inserts || []);\n    loadData();\n    alert('All users assigned!');\n  };\n\n  const revertUser = async (user_id: string) => {\n    await supabase.from('dashboard_user_layouts').delete().eq('user_id', user_id);\n    loadData();\n  };\n\n  return (\n    <div className=\"p-4 border rounded bg-white shadow max-w-3xl mt-8\">\n      <h2 className=\"text-lg font-semibold mb-3\">User → Template Assignments</h2>\n\n      <div className=\"flex flex-wrap gap-3 items-center mb-4\">\n        <input\n          type=\"text\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          placeholder=\"Search user email...\"\n          className=\"border p-2 text-sm\"\n        />\n        <select\n          value={filterTemplate}\n          onChange={(e) => setFilterTemplate(e.target.value)}\n          className=\"border p-2 text-sm\"\n        >\n          <option value=\"\">All templates</option>\n          {templates.map((tpl) => (\n            <option key={tpl.id} value={tpl.name}>\n              {tpl.name}\n            </option>\n          ))}\n        </select>\n        <select\n          value={selected}\n          onChange={(e) => setSelected(e.target.value)}\n          className=\"border p-2 text-sm\"\n        >\n          <option value=\"\">Select template to assign all</option>\n          {templates.map((tpl) => (\n            <option key={tpl.id} value={tpl.id}>\n              {tpl.name}\n            </option>\n          ))}\n        </select>\n        <Button onClick={bulkAssign}>Assign to All</Button>\n      </div>\n\n      <table className=\"w-full text-sm border\">\n        <thead className=\"bg-gray-100\">\n          <tr>\n            <th className=\"text-left p-2\">User Email</th>\n            <th className=\"text-left p-2\">Template</th>\n            <th className=\"text-left p-2\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filtered.map((a) => (\n            <tr key={a.user_id} className=\"border-b\">\n              <td className=\"p-2\">{a.email}</td>\n              <td className=\"p-2\">{a.template}</td>\n              <td className=\"p-2\">\n                <Button variant=\"ghost\" size=\"sm\" onClick={() => revertUser(a.user_id)}>\n                  Revert\n                </Button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/template-user-viewer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/block-editor-modal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/block-editor.tsx","messages":[{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":60,"column":25,"nodeType":"JSXOpeningElement","endLine":60,"endColumn":91}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// BlockEditor.tsx\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { Button } from '@/components/ui/button';\nimport { Plus, Trash2 } from 'lucide-react';\n\ntype Block = {\n  id: string;\n  type: string;\n  [key: string]: any;\n};\n\ntype Props = {\n  block: Block;\n  onChange: (block: Block) => void;\n};\n\nexport default function BlockEditor({ block, onChange }: Props) {\n  const updateField = (key: string, value: any) => {\n    onChange({ ...block, [key]: value });\n  };\n\n  const updateListItem = (index: number, value: string) => {\n    const items = [...(block.items || [])];\n    items[index] = value;\n    updateField('items', items);\n  };\n\n  const addListItem = () => {\n    const items = [...(block.items || []), ''];\n    updateField('items', items);\n  };\n\n  const deleteListItem = (index: number) => {\n    const items = [...(block.items || [])];\n    items.splice(index, 1);\n    updateField('items', items);\n  };\n\n  switch (block.type) {\n    case 'text':\n      return (\n        <div>\n          <Label>Text</Label>\n          <Textarea\n            value={block.value || ''}\n            onChange={(e) => updateField('value', e.target.value)}\n          />\n        </div>\n      );\n\n    case 'image':\n      return (\n        <div className=\"space-y-2\">\n          <Label>Image URL</Label>\n          <Input value={block.url || ''} onChange={(e) => updateField('url', e.target.value)} />\n          <Label>Alt Text</Label>\n          <Input value={block.alt || ''} onChange={(e) => updateField('alt', e.target.value)} />\n          {block.url && <img src={block.url} alt={block.alt} className=\"w-full rounded\" />}\n        </div>\n      );\n\n    case 'cta':\n      return (\n        <div className=\"space-y-2\">\n          <Label>CTA Label</Label>\n          <Input value={block.label || ''} onChange={(e) => updateField('label', e.target.value)} />\n          <Label>Link</Label>\n          <Input value={block.link || ''} onChange={(e) => updateField('link', e.target.value)} />\n        </div>\n      );\n\n    case 'quote':\n      return (\n        <div className=\"space-y-2\">\n          <Label>Quote</Label>\n          <Textarea\n            value={block.text || ''}\n            onChange={(e) => updateField('text', e.target.value)}\n          />\n          <Label>Attribution</Label>\n          <Input\n            value={block.attribution || ''}\n            onChange={(e) => updateField('attribution', e.target.value)}\n          />\n        </div>\n      );\n\n    case 'video':\n      return (\n        <div className=\"space-y-2\">\n          <Label>Embed URL (YouTube, Vimeo...)</Label>\n          <Input\n            value={block.embed_url || ''}\n            onChange={(e) => updateField('embed_url', e.target.value)}\n          />\n          <Label>Caption</Label>\n          <Input\n            value={block.caption || ''}\n            onChange={(e) => updateField('caption', e.target.value)}\n          />\n          {block.embed_url && (\n            <iframe src={block.embed_url} className=\"w-full aspect-video rounded\" allowFullScreen />\n          )}\n        </div>\n      );\n\n    case 'divider':\n      return <div className=\"my-4 border-t border-muted\" />;\n\n    case 'list':\n      return (\n        <div className=\"space-y-2\">\n          <Label>List Items</Label>\n          {(block.items || []).map((item: string, i: number) => (\n            <div key={i} className=\"flex gap-2 items-center\">\n              <Input value={item} onChange={(e) => updateListItem(i, e.target.value)} />\n              <Button variant=\"ghost\" size=\"sm\" onClick={() => deleteListItem(i)}>\n                <Trash2 className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          ))}\n          <Button onClick={addListItem} variant=\"outline\" size=\"sm\">\n            <Plus className=\"w-4 h-4 mr-2\" /> Add Item\n          </Button>\n        </div>\n      );\n\n    default:\n      return (\n        <div className=\"text-sm text-muted-foreground\">Unsupported block type: {block.type}</div>\n      );\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/block-error-display.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/block-sidebar.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·block,·onChange,·onClose,·errors·}:·{·block:·Block;·onChange:·(b:·Block)·=>·void;·onClose:·()·=>·void;·errors?:·string[]·` with `⏎··block,⏎··onChange,⏎··onClose,⏎··errors,⏎}:·{⏎··block:·Block;⏎··onChange:·(b:·Block)·=>·void;⏎··onClose:·()·=>·void;⏎··errors?:·string[];⏎`","line":11,"column":39,"nodeType":null,"messageId":"replace","endLine":11,"endColumn":161,"fix":{"range":[486,608],"text":"\n  block,\n  onChange,\n  onClose,\n  errors,\n}: {\n  block: Block;\n  onChange: (b: Block) => void;\n  onClose: () => void;\n  errors?: string[];\n"}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `⏎·········`","line":48,"column":33,"nodeType":null,"messageId":"insert","endLine":48,"endColumn":33,"fix":{"range":[2131,2131],"text":"\n         "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":49,"column":11,"nodeType":null,"messageId":"insert","endLine":49,"endColumn":11,"fix":{"range":[2151,2151],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":50,"column":1,"nodeType":null,"messageId":"insert","endLine":50,"endColumn":1,"fix":{"range":[2157,2157],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":51,"column":13,"nodeType":null,"messageId":"insert","endLine":51,"endColumn":13,"fix":{"range":[2219,2219],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":52,"column":1,"nodeType":null,"messageId":"insert","endLine":52,"endColumn":1,"fix":{"range":[2228,2228],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":53,"column":17,"nodeType":null,"messageId":"insert","endLine":53,"endColumn":17,"fix":{"range":[2261,2261],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `<Input·className={inputClass}·value={cta.label·||·''}·onChange={(e)·=>·updateContent('label',·e.target.value)}` with `··<Input⏎····················className={inputClass}⏎····················value={cta.label·||·''}⏎····················onChange={(e)·=>·updateContent('label',·e.target.value)}⏎·················`","line":54,"column":17,"nodeType":null,"messageId":"replace","endLine":54,"endColumn":127,"fix":{"range":[2298,2408],"text":"  <Input\n                    className={inputClass}\n                    value={cta.label || ''}\n                    onChange={(e) => updateContent('label', e.target.value)}\n                 "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":55,"column":1,"nodeType":null,"messageId":"insert","endLine":55,"endColumn":1,"fix":{"range":[2412,2412],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `<Input·className={inputClass}·value={cta.link·||·''}·onChange={(e)·=>·updateContent('link',·e.target.value)}` with `··<Input⏎····················className={inputClass}⏎····················value={cta.link·||·''}⏎····················onChange={(e)·=>·updateContent('link',·e.target.value)}⏎·················`","line":56,"column":17,"nodeType":null,"messageId":"replace","endLine":56,"endColumn":125,"fix":{"range":[2464,2572],"text":"  <Input\n                    className={inputClass}\n                    value={cta.link || ''}\n                    onChange={(e) => updateContent('link', e.target.value)}\n                 "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":57,"column":1,"nodeType":null,"messageId":"insert","endLine":57,"endColumn":1,"fix":{"range":[2576,2576],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":58,"column":1,"nodeType":null,"messageId":"insert","endLine":58,"endColumn":1,"fix":{"range":[2594,2594],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":59,"column":11,"nodeType":null,"messageId":"insert","endLine":59,"endColumn":11,"fix":{"range":[2619,2619],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":60,"column":1,"nodeType":null,"messageId":"insert","endLine":60,"endColumn":1,"fix":{"range":[2629,2629],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":61,"column":11,"nodeType":null,"messageId":"insert","endLine":61,"endColumn":11,"fix":{"range":[2733,2733],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":62,"column":1,"nodeType":null,"messageId":"insert","endLine":62,"endColumn":1,"fix":{"range":[2735,2735],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·onChange({·...block,·meta:·{·...block.meta,·prompt:·e.target.value·}·})` with `⏎··············onChange({·...block,·meta:·{·...block.meta,·prompt:·e.target.value·}·})⏎············`","line":71,"column":29,"nodeType":null,"messageId":"replace","endLine":71,"endColumn":101,"fix":{"range":[3016,3088],"text":"\n              onChange({ ...block, meta: { ...block.meta, prompt: e.target.value } })\n            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·onChange({·...block,·meta:·{·...block.meta,·summary:·e.target.value·}·})` with `⏎··············onChange({·...block,·meta:·{·...block.meta,·summary:·e.target.value·}·})⏎············`","line":81,"column":29,"nodeType":null,"messageId":"replace","endLine":81,"endColumn":102,"fix":{"range":[3346,3419],"text":"\n              onChange({ ...block, meta: { ...block.meta, summary: e.target.value } })\n            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·onChange({·...block,·meta:·{·...block.meta,·comment:·e.target.value·}·})` with `⏎··············onChange({·...block,·meta:·{·...block.meta,·comment:·e.target.value·}·})⏎············`","line":91,"column":29,"nodeType":null,"messageId":"replace","endLine":91,"endColumn":102,"fix":{"range":[3688,3761],"text":"\n              onChange({ ...block, meta: { ...block.meta, comment: e.target.value } })\n            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·onChange({·...block,·tags:·e.target.value.split(',').map((s)·=>·s.trim())·})` with `⏎··············onChange({·...block,·tags:·e.target.value.split(',').map((s)·=>·s.trim())·})⏎············`","line":101,"column":29,"nodeType":null,"messageId":"replace","endLine":101,"endColumn":106,"fix":{"range":[4010,4087],"text":"\n              onChange({ ...block, tags: e.target.value.split(',').map((s) => s.trim()) })\n            "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":20,"source":"import { X } from 'lucide-react';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { Button } from '@/components/ui/button';\nimport type { Block } from '@/types/blocks';\nimport { createDefaultBlock } from '@/lib/create-default-block';\nimport { getContent } from '@/lib/block-utils';\nimport { BlockErrorDisplay } from './block-error-display';\n\nexport default function BlockSidebar({ block, onChange, onClose, errors }: { block: Block; onChange: (b: Block) => void; onClose: () => void; errors?: string[] }) {\n  const updateContent = (key: string, value: any) => {\n    const updatedContent = { ...(block.content || {}), [key]: value };\n    onChange({ ...block, content: updatedContent } as Block);\n  };\n\n  const inputClass = 'bg-zinc-800 border-zinc-700 text-white placeholder-zinc-400';\n\n  return (\n    <div className=\"fixed right-0 top-0 h-full w-[340px] bg-zinc-900 text-white shadow-lg border-l border-zinc-800 z-50 p-4 flex flex-col\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h2 className=\"text-lg font-semibold capitalize\">{block.type} Block</h2>\n        <Button variant=\"ghost\" onClick={onClose}>\n          <X className=\"w-4 h-4 text-white\" />\n        </Button>\n      </div>\n\n      <div className=\"flex-1 overflow-y-auto space-y-4 pb-4\">\n        <div>\n          <Label>Block Type</Label>\n          <select\n            value={block.type}\n            onChange={(e) => onChange(createDefaultBlock(e.target.value as Block['type']))}\n            className=\"w-full mt-1 rounded bg-zinc-800 text-white border border-zinc-700 px-2 py-1\"\n          >\n            {['hero', 'services', 'testimonial', 'text', 'cta', 'quote'].map((t) => (\n              <option key={t} value={t}>\n                {t.charAt(0).toUpperCase() + t.slice(1)}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {errors && errors.length > 0 && <BlockErrorDisplay messages={errors} />}\n\n        {/* ...existing block type renders here (hero, services, etc) */}\n\n        {block.type === 'cta' && (() => {\n          try {\n            const cta = getContent(block, 'cta');\n            return (\n              <>\n                <Label>Label</Label>\n                <Input className={inputClass} value={cta.label || ''} onChange={(e) => updateContent('label', e.target.value)} />\n                <Label>Link</Label>\n                <Input className={inputClass} value={cta.link || ''} onChange={(e) => updateContent('link', e.target.value)} />\n              </>\n            );\n          } catch {\n            return <div className=\"text-sm text-red-400\">⚠ Invalid CTA block structure</div>;\n          }\n        })()}\n\n        {/* Additional meta fields */}\n        <div>\n          <Label>Prompt</Label>\n          <Textarea\n            placeholder=\"(optional) last GPT prompt\"\n            className={inputClass}\n            value={block.meta?.prompt || ''}\n            onChange={(e) => onChange({ ...block, meta: { ...block.meta, prompt: e.target.value } })}\n          />\n        </div>\n\n        <div>\n          <Label>Summary</Label>\n          <Textarea\n            placeholder=\"(optional) block summary\"\n            className={inputClass}\n            value={block.meta?.summary || ''}\n            onChange={(e) => onChange({ ...block, meta: { ...block.meta, summary: e.target.value } })}\n          />\n        </div>\n\n        <div>\n          <Label>Comment</Label>\n          <Textarea\n            placeholder=\"(optional) editor notes or comments\"\n            className={inputClass}\n            value={block.meta?.comment || ''}\n            onChange={(e) => onChange({ ...block, meta: { ...block.meta, comment: e.target.value } })}\n          />\n        </div>\n\n        <div>\n          <Label>Tags</Label>\n          <Input\n            placeholder=\"e.g. ai, featured\"\n            className={inputClass}\n            value={(block.tags || []).join(', ')}\n            onChange={(e) => onChange({ ...block, tags: e.target.value.split(',').map((s) => s.trim()) })}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/blocks-editor.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·block,·index,·onEdit,·onReplaceWithAI,·onClone,·onShowPrompt,·onUndo,·onViewDiff,·undoAvailable·` with `⏎··block,⏎··index,⏎··onEdit,⏎··onReplaceWithAI,⏎··onClone,⏎··onShowPrompt,⏎··onUndo,⏎··onViewDiff,⏎··undoAvailable,⏎`","line":46,"column":25,"nodeType":null,"messageId":"replace","endLine":46,"endColumn":122,"fix":{"range":[1556,1653],"text":"\n  block,\n  index,\n  onEdit,\n  onReplaceWithAI,\n  onClone,\n  onShowPrompt,\n  onUndo,\n  onViewDiff,\n  undoAvailable,\n"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·id:·block._id` with `⏎····id:·block._id,⏎·`","line":47,"column":85,"nodeType":null,"messageId":"replace","endLine":47,"endColumn":99,"fix":{"range":[1762,1776],"text":"\n    id: block._id,\n "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·?·'border-red-500·bg-red-500/10·animate-pulse·shadow-red-500/30·shadow-md'` with `⏎··········?·'border-red-500·bg-red-500/10·animate-pulse·shadow-red-500/30·shadow-md'⏎·········`","line":63,"column":16,"nodeType":null,"messageId":"replace","endLine":63,"endColumn":91,"fix":{"range":[2232,2307],"text":"\n          ? 'border-red-500 bg-red-500/10 animate-pulse shadow-red-500/30 shadow-md'\n         "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":95,"column":13,"nodeType":null,"messageId":"insert","endLine":95,"endColumn":13,"fix":{"range":[3419,3419],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":96,"column":15,"nodeType":null,"messageId":"insert","endLine":96,"endColumn":15,"fix":{"range":[3502,3502],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `············` with `··············`","line":97,"column":1,"nodeType":null,"messageId":"replace","endLine":97,"endColumn":13,"fix":{"range":[3512,3524],"text":"              "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··············View·difference⏎············` with `View·difference`","line":99,"column":29,"nodeType":null,"messageId":"replace","endLine":101,"endColumn":13,"fix":{"range":[3592,3635],"text":"View difference"}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":118,"column":13,"nodeType":null,"messageId":"insert","endLine":118,"endColumn":13,"fix":{"range":[4122,4122],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":119,"column":15,"nodeType":null,"messageId":"insert","endLine":119,"endColumn":15,"fix":{"range":[4201,4201],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `············` with `··············`","line":120,"column":1,"nodeType":null,"messageId":"replace","endLine":120,"endColumn":13,"fix":{"range":[4208,4220],"text":"              "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··············Undo·Autofix⏎············` with `Undo·Autofix`","line":122,"column":29,"nodeType":null,"messageId":"replace","endLine":124,"endColumn":13,"fix":{"range":[4288,4328],"text":"Undo Autofix"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·blocks,·onChange,·industry·=·'default',·onReplaceWithAI,·onEdit·` with `⏎··blocks,⏎··onChange,⏎··industry·=·'default',⏎··onReplaceWithAI,⏎··onEdit,⏎`","line":159,"column":31,"nodeType":null,"messageId":"replace","endLine":159,"endColumn":96,"fix":{"range":[5278,5343],"text":"\n  blocks,\n  onChange,\n  industry = 'default',\n  onReplaceWithAI,\n  onEdit,\n"}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'onEdit' is defined but never used. Allowed unused args must match /^_/u.","line":159,"column":89,"nodeType":null,"messageId":"unusedVar","endLine":159,"endColumn":95},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'responseText' is assigned a value but never used.","line":163,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":163,"endColumn":22},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'setSafeBlocks' is assigned a value but never used.","line":173,"column":22,"nodeType":null,"messageId":"unusedVar","endLine":173,"endColumn":35},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·size=\"sm\"·variant=\"ghost\"·onClick={()·=>·document.querySelectorAll('[data-diff-toggle]').forEach(el·=>·(el·as·HTMLElement).style.display·=·'block')}` with `⏎··········size=\"sm\"⏎··········variant=\"ghost\"⏎··········onClick={()·=>⏎············document⏎··············.querySelectorAll('[data-diff-toggle]')⏎··············.forEach((el)·=>·((el·as·HTMLElement).style.display·=·'block'))⏎··········}⏎········`","line":211,"column":16,"nodeType":null,"messageId":"replace","endLine":211,"endColumn":165,"fix":{"range":[7182,7331],"text":"\n          size=\"sm\"\n          variant=\"ghost\"\n          onClick={() =>\n            document\n              .querySelectorAll('[data-diff-toggle]')\n              .forEach((el) => ((el as HTMLElement).style.display = 'block'))\n          }\n        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·size=\"sm\"·variant=\"ghost\"·onClick={()·=>·document.querySelectorAll('[data-diff-toggle]').forEach(el·=>·(el·as·HTMLElement).style.display·=·'none')}` with `⏎··········size=\"sm\"⏎··········variant=\"ghost\"⏎··········onClick={()·=>⏎············document⏎··············.querySelectorAll('[data-diff-toggle]')⏎··············.forEach((el)·=>·((el·as·HTMLElement).style.display·=·'none'))⏎··········}⏎········`","line":214,"column":16,"nodeType":null,"messageId":"replace","endLine":214,"endColumn":164,"fix":{"range":[7393,7541],"text":"\n          size=\"sm\"\n          variant=\"ghost\"\n          onClick={() =>\n            document\n              .querySelectorAll('[data-diff-toggle]')\n              .forEach((el) => ((el as HTMLElement).style.display = 'none'))\n          }\n        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·collisionDetection={closestCenter}` with `⏎········collisionDetection={closestCenter}⏎·······`","line":263,"column":18,"nodeType":null,"messageId":"replace","endLine":263,"endColumn":53,"fix":{"range":[9510,9545],"text":"\n        collisionDetection={closestCenter}\n       "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `··········`","line":264,"column":1,"nodeType":null,"messageId":"replace","endLine":264,"endColumn":9,"fix":{"range":[9581,9589],"text":"          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":265,"column":1,"nodeType":null,"messageId":"insert","endLine":265,"endColumn":1,"fix":{"range":[9619,9619],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··········` with `············`","line":266,"column":1,"nodeType":null,"messageId":"replace","endLine":266,"endColumn":11,"fix":{"range":[9696,9706],"text":"            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":267,"column":11,"nodeType":null,"messageId":"insert","endLine":267,"endColumn":11,"fix":{"range":[9782,9782],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··········` with `············`","line":268,"column":1,"nodeType":null,"messageId":"replace","endLine":268,"endColumn":11,"fix":{"range":[9843,9853],"text":"            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":269,"column":9,"nodeType":null,"messageId":"insert","endLine":269,"endColumn":9,"fix":{"range":[9882,9882],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······}}` with `········}}⏎······`","line":270,"column":1,"nodeType":null,"messageId":"replace","endLine":270,"endColumn":9,"fix":{"range":[9884,9892],"text":"        }}\n      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·items={safeBlocks.map((b)·=>·b._id)}·strategy={verticalListSortingStrategy}` with `⏎··········items={safeBlocks.map((b)·=>·b._id)}⏎··········strategy={verticalListSortingStrategy}⏎········`","line":271,"column":25,"nodeType":null,"messageId":"replace","endLine":271,"endColumn":101,"fix":{"range":[9918,9994],"text":"\n          items={safeBlocks.map((b) => b._id)}\n          strategy={verticalListSortingStrategy}\n        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `⏎············`","line":293,"column":95,"nodeType":null,"messageId":"insert","endLine":293,"endColumn":95,"fix":{"range":[10932,10932],"text":"\n            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `············const·preset·=·(industryPresets[industry.toLowerCase()]·||·industryPresets.default)[type` with `··············const·preset·=·(industryPresets[industry.toLowerCase()]·||·industryPresets.default)[⏎················type⏎··············`","line":294,"column":1,"nodeType":null,"messageId":"replace","endLine":294,"endColumn":101,"fix":{"range":[10944,11044],"text":"              const preset = (industryPresets[industry.toLowerCase()] || industryPresets.default)[\n                type\n              "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":295,"column":1,"nodeType":null,"messageId":"insert","endLine":295,"endColumn":1,"fix":{"range":[11047,11047],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `············` with `··············`","line":296,"column":1,"nodeType":null,"messageId":"replace","endLine":296,"endColumn":13,"fix":{"range":[11122,11134],"text":"              "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":297,"column":13,"nodeType":null,"messageId":"insert","endLine":297,"endColumn":13,"fix":{"range":[11203,11203],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··············` with `················`","line":298,"column":1,"nodeType":null,"messageId":"replace","endLine":298,"endColumn":15,"fix":{"range":[11212,11226],"text":"                "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":299,"column":1,"nodeType":null,"messageId":"insert","endLine":299,"endColumn":1,"fix":{"range":[11234,11234],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":300,"column":1,"nodeType":null,"messageId":"insert","endLine":300,"endColumn":1,"fix":{"range":[11261,11261],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":301,"column":17,"nodeType":null,"messageId":"insert","endLine":301,"endColumn":17,"fix":{"range":[11339,11339],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `················` with `··················`","line":302,"column":1,"nodeType":null,"messageId":"replace","endLine":302,"endColumn":17,"fix":{"range":[11349,11365],"text":"                  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":303,"column":1,"nodeType":null,"messageId":"insert","endLine":303,"endColumn":1,"fix":{"range":[11382,11382],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":304,"column":19,"nodeType":null,"messageId":"insert","endLine":304,"endColumn":19,"fix":{"range":[11482,11482],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":305,"column":17,"nodeType":null,"messageId":"insert","endLine":305,"endColumn":17,"fix":{"range":[11535,11535],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··············` with `················`","line":306,"column":1,"nodeType":null,"messageId":"replace","endLine":306,"endColumn":15,"fix":{"range":[11538,11552],"text":"                "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":307,"column":1,"nodeType":null,"messageId":"insert","endLine":307,"endColumn":1,"fix":{"range":[11554,11554],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":308,"column":15,"nodeType":null,"messageId":"insert","endLine":308,"endColumn":15,"fix":{"range":[11633,11633],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":309,"column":13,"nodeType":null,"messageId":"insert","endLine":309,"endColumn":13,"fix":{"range":[11655,11655],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········}` with `············}⏎··········`","line":310,"column":1,"nodeType":null,"messageId":"replace","endLine":310,"endColumn":10,"fix":{"range":[11658,11667],"text":"            }\n          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `BlockSchema.safeParse(safeBlocks[selectedIndex]).success·?·undefined·:·['Invalid·structure']` with `⏎············BlockSchema.safeParse(safeBlocks[selectedIndex]).success⏎··············?·undefined⏎··············:·['Invalid·structure']⏎··········`","line":317,"column":19,"nodeType":null,"messageId":"replace","endLine":317,"endColumn":111,"fix":{"range":[11884,11976],"text":"\n            BlockSchema.safeParse(safeBlocks[selectedIndex]).success\n              ? undefined\n              : ['Invalid structure']\n          "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":42,"source":"// components/admin/templates/blocks-editor.tsx\n'use client';\n\nimport { useState } from 'react';\nimport { DndContext, closestCenter } from '@dnd-kit/core';\nimport {\n  arrayMove,\n  SortableContext,\n  useSortable,\n  verticalListSortingStrategy,\n} from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { GripVertical, Pencil, AlertTriangle, Sparkles, Brain, Copy } from 'lucide-react';\n\nimport { Button } from '@/components/ui';\nimport BlockSidebar from './block-sidebar';\nimport type { Block, BlockWithId, BlocksEditorProps } from '@/types/blocks';\nimport { normalizeBlock } from '@/types/blocks';\nimport { industryPresets } from '@/lib/presets';\nimport { BlockSchema } from '@/admin/lib/zod/blockSchema';\nimport { Tooltip, TooltipContent, TooltipTrigger } from '@/components/ui/tooltip';\nimport { Modal } from '@/components/ui/modal';\nimport { RenderChangedFields } from '@/components/ui/render-changed-fields';\n\ninterface BlocksEditorPropsExtended extends BlocksEditorProps {\n  onReplaceWithAI?: (index: number) => void;\n  onEdit?: (index: number) => void;\n}\n\ninterface SortableBlockProps {\n  block: BlockWithId;\n  index: number;\n  onEdit: (index: number) => void;\n  onReplaceWithAI?: (index: number) => void;\n  onClone?: (index: number) => void;\n  onShowPrompt?: (prompt: string, index: number) => void;\n  onUndo?: (index: number) => void;\n  onViewDiff?: (index: number) => void;\n  undoAvailable?: boolean;\n}\n\nfunction isBlockInvalid(block: Block): boolean {\n  return !BlockSchema.safeParse(block).success;\n}\n\nfunction SortableBlock({ block, index, onEdit, onReplaceWithAI, onClone, onShowPrompt, onUndo, onViewDiff, undoAvailable }: SortableBlockProps) {\n  const { attributes, listeners, setNodeRef, transform, transition } = useSortable({ id: block._id });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  const invalid = isBlockInvalid(block);\n  const isAI = block.tags?.includes('ai');\n  const hasPrompt = typeof block.meta?.prompt === 'string';\n  const wasAutofixed = block.tags?.includes('autofixed');\n\n  return (\n    <div\n      ref={setNodeRef}\n      style={style}\n      className={`flex items-center justify-between gap-2 border rounded p-3 ${\n        invalid ? 'border-red-500 bg-red-500/10 animate-pulse shadow-red-500/30 shadow-md' : 'bg-white/5 border-white/10'\n      }`}\n    >\n      <div className=\"flex items-center gap-2\">\n        <GripVertical\n          className=\"w-4 h-4 cursor-move text-muted-foreground\"\n          {...attributes}\n          {...listeners}\n        />\n        <span className=\"text-sm font-medium text-white\">{block.type}</span>\n        {wasAutofixed && (\n          <Tooltip>\n            <TooltipTrigger>\n              <span className=\"text-xs text-yellow-300 ml-1 italic\">🛠 Autofixed</span>\n            </TooltipTrigger>\n            <TooltipContent>\n              This block was automatically repaired to pass validation.\n            </TooltipContent>\n          </Tooltip>\n        )}\n        {isAI && <span className=\"text-xs text-purple-400 ml-2\">🔮 AI</span>}\n        {invalid && (\n          <span className=\"flex items-center gap-1 text-xs text-red-400 ml-2\">\n            <AlertTriangle className=\"w-3 h-3\" />\n            Invalid block\n          </span>\n        )}\n      </div>\n      <div className=\"flex gap-1\">\n        {wasAutofixed && onViewDiff && (\n          <Tooltip>\n            <TooltipTrigger>\n            <Button size=\"sm\" variant=\"ghost\" onClick={() => onViewDiff(index)}>\n              View Diff\n            </Button>\n            </TooltipTrigger>\n            <TooltipContent>\n              View difference\n            </TooltipContent>\n          </Tooltip>\n        )}\n        {hasPrompt && onShowPrompt && (\n          <Tooltip>\n            <Button\n              size=\"sm\"\n              variant=\"ghost\"\n              onClick={() => onShowPrompt(block.meta?.prompt || '', index)}\n            >\n              <Brain className=\"w-4 h-4 text-purple-300\" />\n            </Button>\n          </Tooltip>\n        )}\n        {undoAvailable && onUndo && (\n          <Tooltip>\n            <TooltipTrigger>\n            <Button size=\"sm\" variant=\"ghost\" onClick={() => onUndo(index)}>\n              ⎌ Undo\n            </Button>\n            </TooltipTrigger>\n            <TooltipContent>\n              Undo Autofix\n            </TooltipContent>\n          </Tooltip>\n        )}\n        <Tooltip>\n          <Button size=\"sm\" variant=\"ghost\" onClick={() => onEdit(index)}>\n            <Pencil className=\"w-4 h-4\" />\n          </Button>\n        </Tooltip>\n        {onReplaceWithAI && (\n          <Tooltip>\n            <Button\n              size=\"sm\"\n              variant=\"ghost\"\n              onClick={() => {\n                if (confirm('Replace this block with an AI-generated version?')) {\n                  onReplaceWithAI(index);\n                }\n              }}\n            >\n              <Sparkles className=\"w-4 h-4 text-purple-400\" />\n            </Button>\n          </Tooltip>\n        )}\n        {onClone && (\n          <Tooltip>\n            <Button size=\"sm\" variant=\"ghost\" onClick={() => onClone(index)}>\n              <Copy className=\"w-4 h-4\" />\n            </Button>\n          </Tooltip>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport const BlocksEditor = ({ blocks, onChange, industry = 'default', onReplaceWithAI, onEdit }: BlocksEditorPropsExtended) => {\n  const [diffIndex, setDiffIndex] = useState<number | null>(null);\n  const [selectedIndex, setSelectedIndex] = useState<number | null>(null);\n  const [promptData, setPromptData] = useState<{ prompt: string; index: number } | null>(null);\n  const [responseText, setResponseText] = useState<string>('');\n  const [responseHistory, setResponseHistory] = useState<string[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const ensureIds = (blocks: Block[]): BlockWithId[] =>\n    blocks.map((block) => ({\n      ...block,\n      _id: block._id ?? crypto.randomUUID(),\n    }));\n\n  const [safeBlocks, setSafeBlocks] = useState<BlockWithId[]>(ensureIds(blocks));\n  const [undoMap, setUndoMap] = useState<Record<string, BlockWithId>>({});\n\n  const handleUpdate = (index: number, updatedBlock: Block) => {\n    const updatedBlocks = [...safeBlocks];\n    updatedBlocks[index] = normalizeBlock(updatedBlock);\n    onChange(updatedBlocks);\n  };\n\n  const regenerateFromPrompt = async () => {\n    if (!promptData?.prompt) return;\n    setIsLoading(true);\n    try {\n      const res = await fetch('/api/blocks/rag/complete', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          userPrompt: promptData.prompt,\n          originalText: '',\n          blockType: safeBlocks[promptData.index]?.type,\n          industry,\n        }),\n      });\n      const data = await res.json();\n      if (data.rewritten) {\n        setResponseText(data.rewritten);\n        setResponseHistory((prev) => [...prev, data.rewritten]);\n      }\n    } catch (e) {\n      console.error('Failed to regenerate:', e);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex justify-end gap-2\">\n        <Button size=\"sm\" variant=\"ghost\" onClick={() => document.querySelectorAll('[data-diff-toggle]').forEach(el => (el as HTMLElement).style.display = 'block')}>\n          Expand All Diffs\n        </Button>\n        <Button size=\"sm\" variant=\"ghost\" onClick={() => document.querySelectorAll('[data-diff-toggle]').forEach(el => (el as HTMLElement).style.display = 'none')}>\n          Collapse All Diffs\n        </Button>\n      </div>\n      <Modal show={!!promptData} onClose={() => setPromptData(null)} title=\"🔍 GPT Prompt + Edit\">\n        <textarea\n          className=\"w-full border rounded bg-zinc-800 text-white p-2 text-sm mb-4\"\n          rows={5}\n          value={promptData?.prompt || ''}\n          onChange={(e) => setPromptData((prev) => prev && { ...prev, prompt: e.target.value })}\n        />\n        <div className=\"flex justify-between items-center mb-3\">\n          <Button variant=\"secondary\" onClick={regenerateFromPrompt} disabled={isLoading}>\n            {isLoading ? 'Thinking...' : 'Regenerate with GPT'}\n          </Button>\n        </div>\n        {responseHistory.length > 0 && (\n          <div className=\"space-y-4\">\n            {responseHistory.map((resp, i) => (\n              <div key={i} className=\"p-2 text-sm bg-white/5 rounded border space-y-2\">\n                <div>{resp}</div>\n                <div className=\"text-right\">\n                  <Button\n                    size=\"sm\"\n                    variant=\"outline\"\n                    onClick={() => {\n                      if (promptData) {\n                        const updated = [...safeBlocks];\n                        updated[promptData.index] = {\n                          ...updated[promptData.index],\n                          type: 'text',\n                          content: { value: resp },\n                          meta: { ...updated[promptData.index].meta, prompt: promptData.prompt },\n                          tags: [...new Set([...(updated[promptData.index].tags || []), 'ai'])],\n                        };\n                        onChange(updated);\n                        setPromptData(null);\n                      }\n                    }}\n                  >\n                    Apply This\n                  </Button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </Modal>\n\n      <DndContext collisionDetection={closestCenter} onDragEnd={({ active, over }) => {\n        if (active.id !== over?.id) {\n          const oldIndex = safeBlocks.findIndex((b) => b._id === active.id);\n          const newIndex = safeBlocks.findIndex((b) => b._id === over?.id);\n          const reordered = arrayMove(safeBlocks, oldIndex, newIndex);\n          onChange(reordered);\n        }\n      }}>\n        <SortableContext items={safeBlocks.map((b) => b._id)} strategy={verticalListSortingStrategy}>\n          {safeBlocks.map((block, index) => (\n            <SortableBlock\n              key={block._id}\n              block={block}\n              index={index}\n              onEdit={setSelectedIndex}\n              onViewDiff={setDiffIndex}\n              onReplaceWithAI={onReplaceWithAI}\n              onShowPrompt={(prompt, idx) => setPromptData({ prompt, index: idx })}\n              onUndo={(id) => {\n                const prev = undoMap[id];\n                if (prev) onChange(safeBlocks.map((b) => (b._id === id.toString() ? prev : b)));\n              }}\n              undoAvailable={!!undoMap[block._id!.toString()]}\n            />\n          ))}\n        </SortableContext>\n      </DndContext>\n\n      <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-2\">\n        {(industryPresets[industry.toLowerCase()] || industryPresets.default) &&\n          Object.keys(industryPresets[industry.toLowerCase()] || industryPresets.default).map((type) => {\n            const preset = (industryPresets[industry.toLowerCase()] || industryPresets.default)[type];\n            const newBlock = normalizeBlock({ ...preset, type } as Block);\n            const isValid = BlockSchema.safeParse(newBlock).success;\n            return (\n              <Button\n                key={type}\n                variant={isValid ? 'outline' : 'destructive'}\n                size=\"sm\"\n                onClick={() => {\n                  setUndoMap((prev) => ({ ...prev, [newBlock._id!]: newBlock }));\n                  onChange([...safeBlocks, newBlock]);\n                }}\n              >\n                + {type.charAt(0).toUpperCase() + type.slice(1)}\n              </Button>\n            );\n        })}\n      </div>\n\n      {selectedIndex !== null && (\n        <BlockSidebar\n          block={safeBlocks[selectedIndex]}\n          onChange={(updatedBlock) => handleUpdate(selectedIndex, updatedBlock)}\n          errors={BlockSchema.safeParse(safeBlocks[selectedIndex]).success ? undefined : ['Invalid structure']}\n          onClose={() => setSelectedIndex(null)}\n        />\n      )}\n\n      {diffIndex !== null && (\n        <Modal show onClose={() => setDiffIndex(null)} title=\"Block Diff View\">\n          <RenderChangedFields\n            original={undoMap[safeBlocks[diffIndex]._id!]}\n            modified={safeBlocks[diffIndex]}\n            view=\"inline\"\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/branding-preview.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useEffect' is defined but never used.","line":1,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":1,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useState' is defined but never used.","line":1,"column":21,"nodeType":null,"messageId":"unusedVar","endLine":1,"endColumn":29},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":42,"column":11,"nodeType":"JSXOpeningElement","endLine":42,"endColumn":85}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useEffect, useState } from 'react';\n\ntype BrandingProfile = {\n  id: string;\n  name: string;\n  theme: 'light' | 'dark';\n  brand: 'green' | 'blue' | 'red';\n  accent_color?: string;\n  logo_url?: string;\n};\n\nconst THEMES = {\n  dark: {\n    background: '#1e293b',\n    foreground: 'white',\n    border: '#334155',\n  },\n  light: {\n    background: '#f1f5f9',\n    foreground: '#0f172a',\n    border: '#cbd5e1',\n  },\n};\n\nexport default function BrandingPreview({ profile }: { profile: BrandingProfile | null }) {\n  if (!profile) return null;\n\n  const theme = THEMES[profile.theme] || THEMES.dark;\n\n  return (\n    <div\n      className=\"rounded border p-4 mt-2\"\n      style={{\n        backgroundColor: theme.background,\n        color: theme.foreground,\n        borderColor: theme.border,\n      }}\n    >\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"font-semibold text-lg\">{profile.name}</h3>\n        {profile.logo_url && (\n          <img src={profile.logo_url} alt=\"Logo\" className=\"h-8 w-8 rounded-full\" />\n        )}\n      </div>\n      <p className=\"text-sm mt-1\">\n        Theme: <strong>{profile.theme}</strong> &nbsp;|&nbsp; Brand:{' '}\n        <strong>{profile.brand}</strong>\n      </p>\n      {profile.accent_color && (\n        <div className=\"mt-2\">\n          <span className=\"text-xs\">Accent:</span>\n          <div\n            className=\"inline-block ml-2 w-4 h-4 rounded-full border\"\n            style={{ backgroundColor: profile.accent_color }}\n          ></div>\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/device-preview-wrapper.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":44,"column":9,"nodeType":null,"messageId":"insert","endLine":44,"endColumn":9,"fix":{"range":[1415,1415],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":45,"column":1,"nodeType":null,"messageId":"insert","endLine":45,"endColumn":1,"fix":{"range":[1420,1420],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":46,"column":11,"nodeType":null,"messageId":"insert","endLine":46,"endColumn":11,"fix":{"range":[1494,1494],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":47,"column":1,"nodeType":null,"messageId":"insert","endLine":47,"endColumn":1,"fix":{"range":[1507,1507],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":48,"column":1,"nodeType":null,"messageId":"insert","endLine":48,"endColumn":1,"fix":{"range":[1531,1531],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":49,"column":11,"nodeType":null,"messageId":"insert","endLine":49,"endColumn":11,"fix":{"range":[1573,1573],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":50,"column":9,"nodeType":null,"messageId":"insert","endLine":50,"endColumn":9,"fix":{"range":[1617,1617],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··········` with `············`","line":51,"column":1,"nodeType":null,"messageId":"replace","endLine":51,"endColumn":11,"fix":{"range":[1619,1629],"text":"            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":52,"column":1,"nodeType":null,"messageId":"insert","endLine":52,"endColumn":1,"fix":{"range":[1635,1635],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `············` with `··············`","line":53,"column":1,"nodeType":null,"messageId":"replace","endLine":53,"endColumn":13,"fix":{"range":[1654,1666],"text":"              "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":54,"column":1,"nodeType":null,"messageId":"insert","endLine":54,"endColumn":1,"fix":{"range":[1673,1673],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":55,"column":1,"nodeType":null,"messageId":"insert","endLine":55,"endColumn":1,"fix":{"range":[1697,1697],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":56,"column":13,"nodeType":null,"messageId":"insert","endLine":56,"endColumn":13,"fix":{"range":[1734,1734],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":57,"column":1,"nodeType":null,"messageId":"insert","endLine":57,"endColumn":1,"fix":{"range":[1742,1742],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `············` with `··············`","line":58,"column":1,"nodeType":null,"messageId":"replace","endLine":58,"endColumn":13,"fix":{"range":[1762,1774],"text":"              "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":59,"column":1,"nodeType":null,"messageId":"insert","endLine":59,"endColumn":1,"fix":{"range":[1786,1786],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":60,"column":1,"nodeType":null,"messageId":"insert","endLine":60,"endColumn":1,"fix":{"range":[1812,1812],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":61,"column":11,"nodeType":null,"messageId":"insert","endLine":61,"endColumn":11,"fix":{"range":[1851,1851],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":62,"column":1,"nodeType":null,"messageId":"insert","endLine":62,"endColumn":1,"fix":{"range":[1854,1854],"text":"  "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":19,"source":"import { useState } from 'react';\nimport { Button } from '@/components/ui';\nimport { Monitor, Smartphone, Tablet, RotateCw } from 'lucide-react';\n\ntype Mode = 'mobile' | 'tablet' | 'desktop';\ntype Orientation = 'portrait' | 'landscape';\nconst showBezel = false;\nexport default function DevicePreviewWrapper({ children }: { children: React.ReactNode }) {\n  const [mode, setMode] = useState<Mode>('mobile');\n  const [orientation, setOrientation] = useState<Orientation>('portrait');\n\n  const renderIcon = (target: Mode) => {\n    if (target === 'mobile') return <Smartphone size={14} />;\n    if (target === 'tablet') return <Tablet size={14} />;\n    return <Monitor size={14} />;\n  };\n\n  const getSizeClass = (mode: Mode, orientation: Orientation) => {\n    const sizes = {\n      mobile: {\n        portrait: 'w-[375px] h-[667px]',\n        landscape: 'w-[667px] h-[375px]',\n      },\n      tablet: {\n        portrait: 'w-[768px] h-[1024px]',\n        landscape: 'w-[1024px] h-[768px]',\n      },\n      desktop: {\n        default: 'w-[1024px] h-auto',\n      },\n    };\n    return mode === 'desktop' ? sizes.desktop.default : sizes[mode][orientation];\n  };\n\n  const bezelFrame = (content: React.ReactNode) => {\n    // console.log('showBezel: ', showBezel);\n    // if (!showBezel) return content;\n\n    if (mode === 'desktop') return content;\n\n    return (\n      <div className=\"relative w-fit\">\n        {showBezel && (\n        <svg\n          className=\"absolute inset-0 z-10 pointer-events-none\"\n          width=\"100%\"\n          height=\"100%\"\n          viewBox=\"0 0 400 800\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        >\n          <rect\n            x=\"10\"\n            y=\"10\"\n            width=\"380\"\n            height=\"780\"\n            rx=\"40\"\n            ry=\"40\"\n            fill=\"none\"\n            stroke=\"#999\"\n            strokeWidth=\"20\"\n          />\n        </svg>\n        )}\n        <div\n          className={`z-0 relative rounded-md overflow-hidden ${getSizeClass(mode, orientation)}`}\n          id=\"preview-target\"\n        >\n          <div\n            id=\"preview-capture\"\n            className=\"bg-white dark:bg-gray-900 w-full h-full overflow-y-auto p-4\"\n          >\n            {content}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex justify-end gap-2 flex-wrap\">\n        {(['mobile', 'tablet', 'desktop'] as Mode[]).map((opt) => (\n          <Button\n            key={opt}\n            onClick={() => setMode(opt)}\n            size=\"sm\"\n            variant={mode === opt ? 'default' : 'secondary'}\n            className=\"flex items-center gap-2\"\n          >\n            {renderIcon(opt)} {opt.charAt(0).toUpperCase() + opt.slice(1)}\n          </Button>\n        ))}\n\n        {(mode === 'mobile' || mode === 'tablet') && (\n          <Button\n            onClick={() =>\n              setOrientation((prev) => (prev === 'portrait' ? 'landscape' : 'portrait'))\n            }\n            size=\"sm\"\n            variant=\"secondary\"\n            className=\"flex items-center gap-2\"\n          >\n            <RotateCw size={14} /> {orientation === 'portrait' ? 'Portrait' : 'Landscape'}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"flex justify-center mt-4\">{bezelFrame(<>{children}</>)}</div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/editor-loader.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `()·=>` with `⏎····()·=>⏎·····`","line":13,"column":28,"nodeType":null,"messageId":"replace","endLine":13,"endColumn":33,"fix":{"range":[534,539],"text":"\n    () =>\n     "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":14,"column":1,"nodeType":null,"messageId":"insert","endLine":14,"endColumn":1,"fix":{"range":[571,571],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":15,"column":5,"nodeType":null,"messageId":"insert","endLine":15,"endColumn":5,"fix":{"range":[618,618],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `),·[]` with `····),⏎····[]⏎··`","line":16,"column":3,"nodeType":null,"messageId":"replace","endLine":16,"endColumn":8,"fix":{"range":[663,668],"text":"    ),\n    []\n  "}},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'supabase'. Either include it or remove the dependency array.","line":30,"column":6,"nodeType":"ArrayExpression","endLine":30,"endColumn":12,"suggestions":[{"desc":"Update the dependencies array to be: [slug, supabase]","fix":{"range":[936,942],"text":"[slug, supabase]"}}]},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `(⏎····<TemplateEditor⏎······templateName={template.template_name}⏎······initialData={template}⏎····/>⏎··)` with `<TemplateEditor·templateName={template.template_name}·initialData={template}·/>`","line":36,"column":10,"nodeType":null,"messageId":"replace","endLine":41,"endColumn":4,"fix":{"range":[1073,1178],"text":"<TemplateEditor templateName={template.template_name} initialData={template} />"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":5,"source":"'use client';\n\nimport { useParams } from 'next/navigation';\nimport { useEffect, useMemo, useState } from 'react';\nimport { createBrowserClient } from '@supabase/ssr';\nimport type { Database } from '@/types/supabase';\nimport TemplateEditor from '@/components/admin/templates/template-editor';\nimport type { Snapshot } from '@/types/template';\n\nexport default function EditTemplatePage() {\n  const { slug } = useParams() as { slug: string };\n  const [template, setTemplate] = useState<Snapshot | null>(null);\n  const supabase = useMemo(() => createBrowserClient<Database>(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n  ), []);\n\n  useEffect(() => {\n    if (!slug) return;\n\n    supabase\n      .from('templates')\n      .select('*')\n      .eq('slug', slug)\n      .single()\n      .then(({ data, error }) => {\n        if (error) console.error(error);\n        else setTemplate(data);\n      });\n  }, [slug]);\n\n  if (!template) {\n    return <div className=\"p-6 text-muted-foreground text-sm italic\">Loading template…</div>;\n  }\n\n  return (\n    <TemplateEditor\n      templateName={template.template_name}\n      initialData={template}\n    />\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/grid-preset-playground.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'i' is defined but never used. Allowed unused args must match /^_/u.","line":40,"column":29,"nodeType":null,"messageId":"unusedVar","endLine":40,"endColumn":30},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎············key={block._id}⏎············className=\"border·border-white/10·bg-muted·rounded·p-2·text-white\"⏎··········` with `·key={block._id}·className=\"border·border-white/10·bg-muted·rounded·p-2·text-white\"`","line":41,"column":15,"nodeType":null,"messageId":"replace","endLine":44,"endColumn":11,"fix":{"range":[1415,1533],"text":" key={block._id} className=\"border border-white/10 bg-muted rounded p-2 text-white\""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use client';\n\nimport { useState } from 'react';\nimport { defaultGridPresets } from '@/types/grid-presets';\nimport RenderBlock from './render-block';\nimport { normalizeBlock } from '@/types/blocks';\nimport { Button } from '@/components/ui/button';\n\nexport default function GridPresetPlayground() {\n  const [selected, setSelected] = useState(defaultGridPresets[0]);\n  const [blocks, setBlocks] = useState(selected.items.map(normalizeBlock));\n  const [columns, setColumns] = useState(selected.columns);\n\n  const applyPreset = (name: string) => {\n    const preset = defaultGridPresets.find((p) => p.name === name);\n    if (!preset) return;\n    setSelected(preset);\n    setBlocks(preset.items.map(normalizeBlock));\n    setColumns(preset.columns);\n  };\n\n  return (\n    <div className=\"space-y-4 p-4 border rounded bg-muted/10\">\n      <div className=\"flex gap-2 items-center\">\n        <span className=\"text-sm text-muted-foreground\">Preset:</span>\n        <select\n          value={selected.name}\n          onChange={(e) => applyPreset(e.target.value)}\n          className=\"rounded bg-muted text-sm text-white px-2 py-1\"\n        >\n          {defaultGridPresets.map((p) => (\n            <option key={p.name} value={p.name}>\n              {p.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className={`grid grid-cols-${columns} gap-4`}>\n        {blocks.map((block, i) => (\n          <div\n            key={block._id}\n            className=\"border border-white/10 bg-muted rounded p-2 text-white\"\n          >\n            <RenderBlock block={block} />\n          </div>\n        ))}\n      </div>\n\n      <Button\n        size=\"sm\"\n        variant=\"outline\"\n        onClick={() => alert('🎯 Ready to drop this preset into a page!')}\n      >\n        Insert This Preset\n      </Button>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/grid-template-manager.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"use·client\"` with `'use·client'`","line":1,"column":1,"nodeType":null,"messageId":"replace","endLine":1,"endColumn":13,"fix":{"range":[0,12],"text":"'use client'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"react\"` with `'react'`","line":3,"column":37,"nodeType":null,"messageId":"replace","endLine":3,"endColumn":44,"fix":{"range":[51,58],"text":"'react'"}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Download' is defined but never used.","line":4,"column":18,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":26},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Upload' is defined but never used.","line":4,"column":28,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":34},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"lucide-react\"` with `'lucide-react'`","line":4,"column":50,"nodeType":null,"messageId":"replace","endLine":4,"endColumn":64,"fix":{"range":[109,123],"text":"'lucide-react'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@/types/grid-presets\"` with `'@/types/grid-presets'`","line":5,"column":33,"nodeType":null,"messageId":"replace","endLine":5,"endColumn":55,"fix":{"range":[157,179],"text":"'@/types/grid-presets'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@/components/ui/button\"` with `'@/components/ui/button'`","line":6,"column":24,"nodeType":null,"messageId":"replace","endLine":6,"endColumn":48,"fix":{"range":[204,228],"text":"'@/components/ui/button'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"framer-motion\"` with `'framer-motion'`","line":7,"column":41,"nodeType":null,"messageId":"replace","endLine":7,"endColumn":56,"fix":{"range":[270,285],"text":"'framer-motion'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"./grid-thumbnail-renderer\"` with `'./grid-thumbnail-renderer'`","line":8,"column":35,"nodeType":null,"messageId":"replace","endLine":8,"endColumn":62,"fix":{"range":[321,348],"text":"'./grid-thumbnail-renderer'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"next/link\"` with `'next/link'`","line":9,"column":18,"nodeType":null,"messageId":"replace","endLine":9,"endColumn":29,"fix":{"range":[367,378],"text":"'next/link'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@supabase/supabase-js\"` with `'@supabase/supabase-js'`","line":10,"column":30,"nodeType":null,"messageId":"replace","endLine":10,"endColumn":53,"fix":{"range":[409,432],"text":"'@supabase/supabase-js'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@/types/supabase\"` with `'@/types/supabase'`","line":11,"column":31,"nodeType":null,"messageId":"replace","endLine":11,"endColumn":49,"fix":{"range":[464,482],"text":"'@/types/supabase'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"next/navigation\"` with `'next/navigation'`","line":12,"column":27,"nodeType":null,"messageId":"replace","endLine":12,"endColumn":44,"fix":{"range":[510,527],"text":"'next/navigation'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `process.env.NEXT_PUBLIC_SUPABASE_URL!,·process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!` with `⏎····process.env.NEXT_PUBLIC_SUPABASE_URL!,⏎····process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!⏎··`","line":23,"column":43,"nodeType":null,"messageId":"replace","endLine":23,"endColumn":124,"fix":{"range":[867,948],"text":"\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"grid_presets\"` with `'grid_presets'`","line":28,"column":13,"nodeType":null,"messageId":"replace","endLine":28,"endColumn":27,"fix":{"range":[1027,1041],"text":"'grid_presets'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"*\"` with `'*'`","line":29,"column":15,"nodeType":null,"messageId":"replace","endLine":29,"endColumn":18,"fix":{"range":[1057,1060],"text":"'*'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"Error·loading·presets:\"` with `'Error·loading·presets:'`","line":32,"column":34,"nodeType":null,"messageId":"replace","endLine":32,"endColumn":58,"fix":{"range":[1166,1190],"text":"'Error loading presets:'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"grid_presets\").delete().eq(\"name\"` with `'grid_presets').delete().eq('name'`","line":37,"column":43,"nodeType":null,"messageId":"replace","endLine":37,"endColumn":77,"fix":{"range":[1328,1362],"text":"'grid_presets').delete().eq('name'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"Failed·to·delete:·\"` with `'Failed·to·delete:·'`","line":41,"column":13,"nodeType":null,"messageId":"replace","endLine":41,"endColumn":33,"fix":{"range":[1479,1499],"text":"'Failed to delete: '"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎····?·presets.filter((p)·=>·p.tags?.includes(filter))⏎···` with `·?·presets.filter((p)·=>·p.tags?.includes(filter))`","line":46,"column":32,"nodeType":null,"messageId":"replace","endLine":48,"endColumn":4,"fix":{"range":[1638,1696],"text":" ? presets.filter((p) => p.tags?.includes(filter))"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"bg-white/10·text-white\"·:·\"hover:bg-white/5\"` with `'bg-white/10·text-white'·:·'hover:bg-white/5'`","line":56,"column":31,"nodeType":null,"messageId":"replace","endLine":56,"endColumn":76,"fix":{"range":[1958,2003],"text":"'bg-white/10 text-white' : 'hover:bg-white/5'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"bg-white/10·text-white\"·:·\"hover:bg-white/5\"` with `'bg-white/10·text-white'·:·'hover:bg-white/5'`","line":66,"column":32,"nodeType":null,"messageId":"replace","endLine":66,"endColumn":77,"fix":{"range":[2251,2296],"text":"'bg-white/10 text-white' : 'hover:bg-white/5'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `{'·'}⏎···················`","line":97,"column":101,"nodeType":null,"messageId":"insert","endLine":97,"endColumn":101,"fix":{"range":[3357,3357],"text":"{' '}\n                   "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":21,"source":"\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { Trash2, Download, Upload, Pencil } from \"lucide-react\";\nimport type { GridPreset } from \"@/types/grid-presets\";\nimport { Button } from \"@/components/ui/button\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport GridThumbnailRenderer from \"./grid-thumbnail-renderer\";\nimport Link from \"next/link\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport type { Database } from \"@/types/supabase\";\nimport { useRouter } from \"next/navigation\";\n\nexport default function GridTemplateManager({\n  onInsertTemplate,\n  showPreview = true,\n}: {\n  onInsertTemplate?: (preset: GridPreset) => void;\n  showPreview?: boolean;\n}) {\n  const [presets, setPresets] = useState<GridPreset[]>([]);\n  const [filter, setFilter] = useState<string | null>(null);\n  const supabase = createClient<Database>(process.env.NEXT_PUBLIC_SUPABASE_URL!, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!);\n  const router = useRouter();\n\n  useEffect(() => {\n    supabase\n      .from(\"grid_presets\")\n      .select(\"*\")\n      .then(({ data, error }) => {\n        if (data) setPresets(data);\n        if (error) console.error(\"Error loading presets:\", error.message);\n      });\n  }, [supabase]);\n\n  const deletePreset = async (name: string) => {\n    const { error } = await supabase.from(\"grid_presets\").delete().eq(\"name\", name);\n    if (!error) {\n      setPresets((prev) => prev.filter((p) => p.name !== name));\n    } else {\n      alert(\"Failed to delete: \" + error.message);\n    }\n  };\n\n  const allTags = Array.from(new Set(presets.flatMap((p) => p.tags || [])));\n  const visiblePresets = filter\n    ? presets.filter((p) => p.tags?.includes(filter))\n    : presets;\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-wrap gap-2 text-xs text-muted-foreground\">\n        <button\n          onClick={() => setFilter(null)}\n          className={`px-2 py-1 rounded ${\n            filter === null ? \"bg-white/10 text-white\" : \"hover:bg-white/5\"\n          }`}\n        >\n          All\n        </button>\n        {allTags.map((tag) => (\n          <button\n            key={tag}\n            onClick={() => setFilter(tag)}\n            className={`px-2 py-1 rounded ${\n              filter === tag ? \"bg-white/10 text-white\" : \"hover:bg-white/5\"\n            }`}\n          >\n            {tag}\n          </button>\n        ))}\n      </div>\n\n      <AnimatePresence>\n        {visiblePresets.length === 0 ? (\n          <motion.p\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            className=\"text-muted-foreground text-sm\"\n          >\n            No templates saved.\n          </motion.p>\n        ) : (\n          visiblePresets.map((preset) => (\n            <motion.div\n              key={preset.name}\n              layout\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"border border-white/10 rounded px-3 py-2 space-y-2 bg-muted/20\"\n            >\n              <div className=\"flex justify-between items-center\">\n                <div>\n                  <h4 className=\"text-sm font-semibold text-white\">{preset.name}</h4>\n                  <p className=\"text-xs text-muted-foreground\">\n                    {preset.columns} column{preset.columns !== 1 ? 's' : ''} · {preset.items.length} block{preset.items.length !== 1 ? 's' : ''}\n                  </p>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Button\n                    size=\"icon\"\n                    variant=\"ghost\"\n                    onClick={() => router.push(`/admin/presets/edit/${preset.id}`)}\n                  >\n                    <Pencil className=\"w-4 h-4 text-yellow-400\" />\n                  </Button>\n                  <Button size=\"icon\" variant=\"ghost\" onClick={() => deletePreset(preset.name)}>\n                    <Trash2 className=\"w-4 h-4 text-red-400\" />\n                  </Button>\n                </div>\n              </div>\n\n              {showPreview && <GridThumbnailRenderer preset={preset} onSelect={onInsertTemplate} />}\n\n              {onInsertTemplate && !showPreview && (\n                <div className=\"pt-2\">\n                  <Button\n                    size=\"sm\"\n                    variant=\"outline\"\n                    className=\"text-xs\"\n                    onClick={() => onInsertTemplate(preset)}\n                  >\n                    ➕ Insert into Page\n                  </Button>\n                </div>\n              )}\n            </motion.div>\n          ))\n        )}\n      </AnimatePresence>\n\n      <div className=\"flex flex-wrap gap-2 pt-4\">\n        {/* Export/Import can be added later with Supabase storage */}\n\n        <Link\n          href=\"/admin/presets\"\n          className=\"text-xs text-white/80 hover:text-white underline underline-offset-2 ml-auto\"\n        >\n          Manage All Templates →\n        </Link>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/grid-template-modal.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"use·client\"` with `'use·client'`","line":2,"column":1,"nodeType":null,"messageId":"replace","endLine":2,"endColumn":13,"fix":{"range":[54,66],"text":"'use client'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@radix-ui/react-dialog\"` with `'@radix-ui/react-dialog'`","line":4,"column":25,"nodeType":null,"messageId":"replace","endLine":4,"endColumn":49,"fix":{"range":[93,117],"text":"'@radix-ui/react-dialog'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"react\"` with `'react'`","line":5,"column":26,"nodeType":null,"messageId":"replace","endLine":5,"endColumn":33,"fix":{"range":[144,151],"text":"'react'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@/components/ui/button\"` with `'@/components/ui/button'`","line":6,"column":24,"nodeType":null,"messageId":"replace","endLine":6,"endColumn":48,"fix":{"range":[176,200],"text":"'@/components/ui/button'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"./grid-template-manager\"` with `'./grid-template-manager'`","line":7,"column":33,"nodeType":null,"messageId":"replace","endLine":7,"endColumn":58,"fix":{"range":[234,259],"text":"'./grid-template-manager'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@/types/grid-presets\"` with `'@/types/grid-presets'`","line":8,"column":28,"nodeType":null,"messageId":"replace","endLine":8,"endColumn":50,"fix":{"range":[288,310],"text":"'@/types/grid-presets'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"lucide-react\"` with `'lucide-react'`","line":9,"column":19,"nodeType":null,"messageId":"replace","endLine":9,"endColumn":33,"fix":{"range":[330,344],"text":"'lucide-react'"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":7,"source":"// components/admin/templates/grid-template-modal.tsx\n\"use client\";\n\nimport * as Dialog from \"@radix-ui/react-dialog\";\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport GridTemplateManager from \"./grid-template-manager\";\nimport { GridPreset } from \"@/types/grid-presets\";\nimport { X } from \"lucide-react\";\n\nexport default function GridTemplateModal({\n  onSelect,\n}: {\n  onSelect: (preset: GridPreset, applyAsSection: boolean) => void;\n}) {\n  const [open, setOpen] = useState(false);\n  const [showPreview, setShowPreview] = useState(true);\n  const [applyAsSection, setApplyAsSection] = useState(false);\n\n  return (\n    <Dialog.Root open={open} onOpenChange={setOpen}>\n      <Dialog.Trigger asChild>\n        <Button size=\"sm\" variant=\"outline\">\n          Browse Templates\n        </Button>\n      </Dialog.Trigger>\n\n      <Dialog.Portal>\n        <Dialog.Overlay className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-40\" />\n        <Dialog.Content className=\"fixed z-50 top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-background p-6 rounded-lg shadow-xl w-[500px] max-h-[90vh] overflow-y-auto space-y-4\">\n          <div className=\"flex justify-between items-center\">\n            <Dialog.Title className=\"text-lg font-semibold text-white\">\n              Choose a Template\n            </Dialog.Title>\n            <Dialog.Close asChild>\n              <Button size=\"icon\" variant=\"ghost\">\n                <X className=\"w-4 h-4\" />\n              </Button>\n            </Dialog.Close>\n          </div>\n\n          <div className=\"flex gap-4 items-center text-sm text-muted-foreground\">\n            <label className=\"flex items-center gap-1 cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={showPreview}\n                onChange={() => setShowPreview(!showPreview)}\n              />\n              Preview Live\n            </label>\n            <label className=\"flex items-center gap-1 cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={applyAsSection}\n                onChange={() => setApplyAsSection(!applyAsSection)}\n              />\n              Apply as Section\n            </label>\n          </div>\n\n          <GridTemplateManager\n            showPreview={showPreview}\n            onInsertTemplate={(preset) => {\n              onSelect(preset, applyAsSection);\n              setOpen(false);\n            }}\n          />\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/grid-thumbnail-renderer.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎······className={`grid·gap-2·mb-1·grid-cols-${preset.columns}`}⏎····` with `·className={`grid·gap-2·mb-1·grid-cols-${preset.columns}`}`","line":14,"column":9,"nodeType":null,"messageId":"replace","endLine":16,"endColumn":5,"fix":{"range":[343,412],"text":" className={`grid gap-2 mb-1 grid-cols-${preset.columns}`}"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·key={i}·className=\"border·border-white/10·rounded·p-1·text-xs·text-white·bg-white/5\"·onClick={()·=>·onSelect?.(preset)}` with `⏎··········key={i}⏎··········className=\"border·border-white/10·rounded·p-1·text-xs·text-white·bg-white/5\"⏎··········onClick={()·=>·onSelect?.(preset)}⏎········`","line":18,"column":13,"nodeType":null,"messageId":"replace","endLine":18,"endColumn":133,"fix":{"range":[466,586],"text":"\n          key={i}\n          className=\"border border-white/10 rounded p-1 text-xs text-white bg-white/5\"\n          onClick={() => onSelect?.(preset)}\n        "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"'use client';\n\nimport type { GridPreset } from '@/types/grid-presets';\nimport { normalizeBlock } from '@/types/blocks';\nimport RenderBlock from './render-block';\n\ntype Props = {\n  preset: GridPreset;\n  onSelect?: (preset: GridPreset) => void;\n};\n\nexport default function GridThumbnailRenderer({ preset, onSelect }: Props) {\n  return (\n    <div\n      className={`grid gap-2 mb-1 grid-cols-${preset.columns}`}\n    >\n      {preset.items.map((block, i) => (\n        <div key={i} className=\"border border-white/10 rounded p-1 text-xs text-white bg-white/5\" onClick={() => onSelect?.(preset)}>\n          <RenderBlock block={normalizeBlock(block)} />\n        </div>\n      ))}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/grouped-preview.tsx","messages":[{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":39,"column":13,"nodeType":"JSXOpeningElement","endLine":44,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export function GroupedPreview({\n  branding,\n  snapshotId,\n  label,\n  createdAt,\n}: {\n  branding: any;\n  snapshotId: string;\n  label: string;\n  createdAt: string;\n}) {\n  return (\n    <div>\n      <div className=\"text-sm text-gray-100\">\n        Snapshot: <code>{snapshotId}</code>\n      </div>\n      <div className=\"text-xs text-gray-400\">Label: {label || 'No label'}</div>\n      <div className=\"text-xs text-gray-500\">Published: {new Date(createdAt).toLocaleString()}</div>\n      <div className=\"text-xs mt-1\" style={{ fontFamily: branding?.font_family || 'sans-serif' }}>\n        Heading Preview in {branding?.font_family || 'Default'}\n      </div>\n      <div className=\"flex gap-2 mt-1 items-center\">\n        {branding?.primary_color && (\n          <span\n            className=\"inline-block w-4 h-4 rounded-full\"\n            style={{ backgroundColor: branding.primary_color }}\n            title={`Primary: ${branding.primary_color}`}\n          ></span>\n        )}\n        {branding?.secondary_color && (\n          <span\n            className=\"inline-block w-4 h-4 rounded-full\"\n            style={{ backgroundColor: branding.secondary_color }}\n            title={`Secondary: ${branding.secondary_color}`}\n          ></span>\n        )}\n        {branding?.id && (\n          <a href={`/branding/${branding.id}`} target=\"_blank\" rel=\"noopener noreferrer\">\n            <img\n              src={`https://your-project-id.supabase.co/storage/v1/object/public/branding-logos/${branding.id}.png`}\n              alt=\"Logo preview\"\n              className=\"h-8 rounded shadow border\"\n              onError={(e) => (e.currentTarget.style.display = 'none')}\n            />\n          </a>\n        )}\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/mobile-preview-wrapper.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/page-blocks-list.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/page-card.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/page-controls.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎········variant=\"ghost\"⏎········size=\"icon\"⏎········disabled={index·===·total·-·1}⏎········onClick={onMoveDown}⏎······` with `·variant=\"ghost\"·size=\"icon\"·disabled={index·===·total·-·1}·onClick={onMoveDown}`","line":21,"column":14,"nodeType":null,"messageId":"replace","endLine":26,"endColumn":7,"fix":{"range":[620,739],"text":" variant=\"ghost\" size=\"icon\" disabled={index === total - 1} onClick={onMoveDown}"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// components/admin/templates/page-controls.tsx\n'use client';\n\nimport { ArrowUp, ArrowDown, Trash2 } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\n\ntype Props = {\n  index: number;\n  total: number;\n  onMoveUp: () => void;\n  onMoveDown: () => void;\n  onRemove: () => void;\n};\n\nexport function PageControls({ index, total, onMoveUp, onMoveDown, onRemove }: Props) {\n  return (\n    <div className=\"flex flex-col justify-between items-end gap-2\">\n      <Button variant=\"ghost\" size=\"icon\" disabled={index === 0} onClick={onMoveUp}>\n        <ArrowUp className=\"w-4 h-4\" />\n      </Button>\n      <Button\n        variant=\"ghost\"\n        size=\"icon\"\n        disabled={index === total - 1}\n        onClick={onMoveDown}\n      >\n        <ArrowDown className=\"w-4 h-4\" />\n      </Button>\n      <Button variant=\"destructive\" size=\"icon\" onClick={onRemove}>\n        <Trash2 className=\"w-4 h-4\" />\n      </Button>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/page-header-form.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎········value={page.title}⏎········onChange={(e)·=>·onChange('title',·e.target.value)}⏎·····` with `·value={page.title}·onChange={(e)·=>·onChange('title',·e.target.value)}`","line":17,"column":13,"nodeType":null,"messageId":"replace","endLine":20,"endColumn":6,"fix":{"range":[438,531],"text":" value={page.title} onChange={(e) => onChange('title', e.target.value)}"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎········value={page.slug}⏎········onChange={(e)·=>·onChange('slug',·e.target.value)}⏎·····` with `·value={page.slug}·onChange={(e)·=>·onChange('slug',·e.target.value)}`","line":23,"column":13,"nodeType":null,"messageId":"replace","endLine":26,"endColumn":6,"fix":{"range":[574,665],"text":" value={page.slug} onChange={(e) => onChange('slug', e.target.value)}"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"// components/admin/templates/page-header-form.tsx\n'use client';\n\nimport { Label } from '@/components/ui/label';\nimport { Input } from '@/components/ui/input';\nimport type { Page } from '@/types/template';\n\ntype Props = {\n  page: Page;\n  onChange: (field: keyof Page, value: string) => void;\n};\n\nexport function PageHeaderForm({ page, onChange }: Props) {\n  return (\n    <div className=\"space-y-2\">\n      <Label>Title</Label>\n      <Input\n        value={page.title}\n        onChange={(e) => onChange('title', e.target.value)}\n      />\n\n      <Label>Slug</Label>\n      <Input\n        value={page.slug}\n        onChange={(e) => onChange('slug', e.target.value)}\n      />\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/preview-export-button.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRef' is defined but never used.","line":1,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":1,"endColumn":16}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useRef } from 'react';\nimport { toPng } from 'html-to-image';\nimport { Button } from '@/components/ui';\nimport toast from 'react-hot-toast';\n\nexport default function PreviewExportButton({\n  targetId = 'preview-target',\n  filename = 'template-preview.png',\n}: {\n  targetId?: string;\n  filename?: string;\n}) {\n  const handleExport = async () => {\n    const node = document.getElementById(targetId);\n    if (!node) {\n      toast.error('Preview target not found');\n      return;\n    }\n\n    try {\n      const dataUrl = await toPng(node, { cacheBust: true });\n      const link = document.createElement('a');\n      link.download = filename;\n      link.href = dataUrl;\n      link.click();\n      toast.success('Snapshot downloaded!');\n    } catch (error) {\n      toast.error('Failed to export preview');\n      console.error(error);\n    }\n  };\n\n  return (\n    <Button onClick={handleExport} size=\"sm\" variant=\"secondary\">\n      Download Snapshot\n    </Button>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/render-block.tsx","messages":[{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":22,"column":9,"nodeType":"JSXOpeningElement","endLine":26,"endColumn":11},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":74,"column":17,"nodeType":null,"messageId":"insert","endLine":74,"endColumn":17,"fix":{"range":[2109,2109],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":75,"column":1,"nodeType":null,"messageId":"insert","endLine":75,"endColumn":1,"fix":{"range":[2125,2125],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":136,"column":3,"nodeType":null,"messageId":"insert","endLine":136,"endColumn":3,"fix":{"range":[4109,4109],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":137,"column":1,"nodeType":null,"messageId":"insert","endLine":137,"endColumn":1,"fix":{"range":[4118,4118],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":138,"column":1,"nodeType":null,"messageId":"insert","endLine":138,"endColumn":1,"fix":{"range":[4161,4161],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `··········`","line":139,"column":1,"nodeType":null,"messageId":"replace","endLine":139,"endColumn":7,"fix":{"range":[4246,4252],"text":"          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":140,"column":1,"nodeType":null,"messageId":"insert","endLine":140,"endColumn":1,"fix":{"range":[4285,4285],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `··········`","line":141,"column":1,"nodeType":null,"messageId":"replace","endLine":141,"endColumn":7,"fix":{"range":[4359,4365],"text":"          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":142,"column":1,"nodeType":null,"messageId":"insert","endLine":142,"endColumn":1,"fix":{"range":[4368,4368],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `············`","line":143,"column":1,"nodeType":null,"messageId":"replace","endLine":143,"endColumn":9,"fix":{"range":[4432,4440],"text":"            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":144,"column":1,"nodeType":null,"messageId":"insert","endLine":144,"endColumn":1,"fix":{"range":[4443,4443],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":145,"column":1,"nodeType":null,"messageId":"insert","endLine":145,"endColumn":1,"fix":{"range":[4483,4483],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `············`","line":146,"column":1,"nodeType":null,"messageId":"replace","endLine":146,"endColumn":9,"fix":{"range":[4588,4596],"text":"            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":147,"column":1,"nodeType":null,"messageId":"insert","endLine":147,"endColumn":1,"fix":{"range":[4598,4598],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":148,"column":9,"nodeType":null,"messageId":"insert","endLine":148,"endColumn":9,"fix":{"range":[4642,4642],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `··········`","line":149,"column":1,"nodeType":null,"messageId":"replace","endLine":149,"endColumn":7,"fix":{"range":[4647,4653],"text":"          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `········`","line":150,"column":1,"nodeType":null,"messageId":"replace","endLine":150,"endColumn":5,"fix":{"range":[4656,4660],"text":"        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":151,"column":1,"nodeType":null,"messageId":"insert","endLine":151,"endColumn":1,"fix":{"range":[4671,4671],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":153,"column":3,"nodeType":null,"messageId":"insert","endLine":153,"endColumn":3,"fix":{"range":[4679,4679],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":154,"column":3,"nodeType":null,"messageId":"insert","endLine":154,"endColumn":3,"fix":{"range":[4698,4698],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `········`","line":155,"column":1,"nodeType":null,"messageId":"replace","endLine":155,"endColumn":5,"fix":{"range":[4707,4711],"text":"        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":156,"column":1,"nodeType":null,"messageId":"insert","endLine":156,"endColumn":1,"fix":{"range":[4734,4734],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":157,"column":7,"nodeType":null,"messageId":"insert","endLine":157,"endColumn":7,"fix":{"range":[4818,4818],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `············`","line":158,"column":1,"nodeType":null,"messageId":"replace","endLine":158,"endColumn":9,"fix":{"range":[4882,4890],"text":"            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":159,"column":11,"nodeType":null,"messageId":"insert","endLine":159,"endColumn":11,"fix":{"range":[4942,4942],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `············`","line":160,"column":1,"nodeType":null,"messageId":"replace","endLine":160,"endColumn":9,"fix":{"range":[4966,4974],"text":"            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":161,"column":1,"nodeType":null,"messageId":"insert","endLine":161,"endColumn":1,"fix":{"range":[4978,4978],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `········`","line":162,"column":1,"nodeType":null,"messageId":"replace","endLine":162,"endColumn":5,"fix":{"range":[4990,4994],"text":"        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":163,"column":1,"nodeType":null,"messageId":"insert","endLine":163,"endColumn":1,"fix":{"range":[5001,5001],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":165,"column":3,"nodeType":null,"messageId":"insert","endLine":165,"endColumn":3,"fix":{"range":[5009,5009],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":166,"column":3,"nodeType":null,"messageId":"insert","endLine":166,"endColumn":3,"fix":{"range":[5023,5023],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `········`","line":167,"column":1,"nodeType":null,"messageId":"replace","endLine":167,"endColumn":5,"fix":{"range":[5032,5036],"text":"        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":168,"column":1,"nodeType":null,"messageId":"insert","endLine":168,"endColumn":1,"fix":{"range":[5071,5071],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":169,"column":9,"nodeType":null,"messageId":"insert","endLine":169,"endColumn":9,"fix":{"range":[5088,5088],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `············`","line":170,"column":1,"nodeType":null,"messageId":"replace","endLine":170,"endColumn":9,"fix":{"range":[5115,5123],"text":"            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":171,"column":7,"nodeType":null,"messageId":"insert","endLine":171,"endColumn":7,"fix":{"range":[5238,5238],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":172,"column":1,"nodeType":null,"messageId":"insert","endLine":172,"endColumn":1,"fix":{"range":[5240,5240],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":173,"column":7,"nodeType":null,"messageId":"insert","endLine":173,"endColumn":7,"fix":{"range":[5277,5277],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `········`","line":174,"column":1,"nodeType":null,"messageId":"replace","endLine":174,"endColumn":5,"fix":{"range":[5282,5286],"text":"        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":175,"column":1,"nodeType":null,"messageId":"insert","endLine":175,"endColumn":1,"fix":{"range":[5293,5293],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":177,"column":3,"nodeType":null,"messageId":"insert","endLine":177,"endColumn":3,"fix":{"range":[5301,5301],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":178,"column":3,"nodeType":null,"messageId":"insert","endLine":178,"endColumn":3,"fix":{"range":[5323,5323],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `········`","line":179,"column":1,"nodeType":null,"messageId":"replace","endLine":179,"endColumn":5,"fix":{"range":[5332,5336],"text":"        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":180,"column":7,"nodeType":null,"messageId":"insert","endLine":180,"endColumn":7,"fix":{"range":[5418,5418],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":181,"column":1,"nodeType":null,"messageId":"insert","endLine":181,"endColumn":1,"fix":{"range":[5443,5443],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········<footer·className=\"mt-2·text-sm·text-blue-300\">⏎··········—·{block.content.attribution}⏎········` with `············<footer·className=\"mt-2·text-sm·text-blue-300\">—·{block.content.attribution}`","line":182,"column":1,"nodeType":null,"messageId":"replace","endLine":184,"endColumn":9,"fix":{"range":[5482,5586],"text":"            <footer className=\"mt-2 text-sm text-blue-300\">— {block.content.attribution}"}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":185,"column":7,"nodeType":null,"messageId":"insert","endLine":185,"endColumn":7,"fix":{"range":[5602,5602],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `········`","line":186,"column":1,"nodeType":null,"messageId":"replace","endLine":186,"endColumn":5,"fix":{"range":[5605,5609],"text":"        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":187,"column":3,"nodeType":null,"messageId":"insert","endLine":187,"endColumn":3,"fix":{"range":[5618,5618],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":189,"column":1,"nodeType":null,"messageId":"insert","endLine":189,"endColumn":1,"fix":{"range":[5622,5622],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":190,"column":5,"nodeType":null,"messageId":"insert","endLine":190,"endColumn":5,"fix":{"range":[5639,5639],"text":"  "}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'_exhaustiveCheck' is assigned a value but never used.","line":190,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":190,"endColumn":27},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":191,"column":1,"nodeType":null,"messageId":"insert","endLine":191,"endColumn":1,"fix":{"range":[5678,5678],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":192,"column":7,"nodeType":null,"messageId":"insert","endLine":192,"endColumn":7,"fix":{"range":[5697,5697],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `··········`","line":193,"column":1,"nodeType":null,"messageId":"replace","endLine":193,"endColumn":9,"fix":{"range":[5743,5751],"text":"          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":194,"column":7,"nodeType":null,"messageId":"insert","endLine":194,"endColumn":7,"fix":{"range":[5820,5820],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":195,"column":1,"nodeType":null,"messageId":"insert","endLine":195,"endColumn":1,"fix":{"range":[5827,5827],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `}⏎··⏎⏎····` with `··}`","line":196,"column":3,"nodeType":null,"messageId":"replace","endLine":199,"endColumn":5,"fix":{"range":[5836,5846],"text":"  }"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":59,"fixableErrorCount":0,"fixableWarningCount":57,"source":"// components/admin/templates/render-block.tsx\n'use client';\n\nimport type { Block } from '@/types/blocks';\nimport SortableGridBlock from './sortable-grid-block';\nimport { normalizeBlock } from '@/types/blocks';\nimport { createFallbackBlock } from '@/lib/blocks';\n\nexport default function RenderBlock({\n  block,\n  handleNestedBlockUpdate,\n}: {\n  block: Block;\n  handleNestedBlockUpdate?: (updated: Block) => void;\n}) {\n  switch (block.type) {\n    case 'text':\n      return <p className=\"mb-4 text-base text-gray-800\">{block.content?.value}</p>;\n\n    case 'image':\n      return (\n        <img\n          src={block.content?.url}\n          alt={block.content?.alt}\n          className=\"mb-4 rounded shadow-md max-w-full\"\n        />\n      );\n\n    case 'video':\n      return (\n        <div className=\"mb-4\">\n          <video controls className=\"max-w-full rounded\">\n            <source src={block.content?.url} />\n          </video>\n          {block.content?.caption && (\n            <p className=\"text-sm text-gray-500 mt-1\">{block.content.caption}</p>\n          )}\n        </div>\n      );\n\n    case 'audio':\n      return (\n        <div className=\"mb-4\">\n          <iframe\n            className=\"w-full\"\n            style={{ height: 80 }}\n            src={block.content?.url}\n            title={block.content?.title || block.content?.provider}\n            allow=\"autoplay; encrypted-media\"\n            loading=\"lazy\"\n          />\n        </div>\n      );\n\n    case 'quote':\n      return (\n        <blockquote className=\"border-l-4 pl-4 italic text-gray-600 mb-4\">\n          “{block.content?.text}”\n          {block.content?.attribution && (\n            <footer className=\"mt-1 text-sm text-right\">— {block.content.attribution}</footer>\n          )}\n        </blockquote>\n      );\n\n    case 'button':\n      return (\n        <a\n          href={block.content?.href}\n          className={`inline-block px-4 py-2 rounded text-white text-sm mb-4\n            ${\n              block.content?.style === 'ghost'\n                ? 'bg-transparent border'\n                : block.content?.style === 'secondary'\n                ? 'bg-gray-600'\n                : 'bg-blue-600'\n            }`}\n        >\n          {block.content?.label}\n        </a>\n      );\n\n    case 'grid': {\n      const normalizedItems = block.content?.items?.map(normalizeBlock) || [];\n      const gridLabel = handleNestedBlockUpdate ? 'Grid (drag enabled)' : 'Grid (static)';\n      const columns = block.content?.columns || 1;\n\n      return (\n        <div className=\"mb-4\">\n          <div className=\"flex justify-between items-center mb-2\">\n            <span className=\"text-xs text-muted-foreground italic\">{gridLabel}</span>\n            <span className=\"text-xs text-muted-foreground\">\n              {normalizedItems.length} item{normalizedItems.length !== 1 ? 's' : ''}\n            </span>\n          </div>\n\n          {handleNestedBlockUpdate ? (\n            <SortableGridBlock\n              columns={columns}\n              items={normalizedItems}\n              onChange={(updated) => {\n                const updatedBlock = {\n                  ...block,\n                  content: {\n                    ...block.content,\n                    items: updated,\n                  },\n                };\n                handleNestedBlockUpdate(updatedBlock);\n              }}\n              onInsert={(index) => {\n                const fallback = createFallbackBlock(block.type);\n                const items = [...normalizedItems];\n                items.splice(index, 0, fallback);\n                const updatedBlock = {\n                  ...block,\n                  content: {\n                    ...block.content,\n                    items,\n                  },\n                };\n                handleNestedBlockUpdate(updatedBlock);\n              }}\n            />\n          ) : (\n            <div className={`grid grid-cols-${columns} gap-4`}>\n              {normalizedItems.map((b: Block, i: number) => (\n                <RenderBlock key={i} block={b} />\n              ))}\n            </div>\n          )}\n        </div>\n      );\n    }\n\n    case 'hero':\n  return (\n    <section className=\"mb-8 text-center\">\n      <h1 className=\"text-3xl font-bold text-white mb-2\">{block.content?.title}</h1>\n      {block.content?.description && (\n        <p className=\"text-gray-400 mb-4\">{block.content.description}</p>\n      )}\n      {block.content?.cta_label && block.content?.cta_link && (\n        <a\n          href={block.content.cta_link}\n          className=\"inline-block px-5 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition\"\n        >\n          {block.content.cta_label}\n        </a>\n      )}\n    </section>\n  );\n\n  case 'services':\n  return (\n    <div className=\"mb-6\">\n      <h3 className=\"text-xl font-semibold text-white mb-2\">Our Services</h3>\n      <ul className=\"grid gap-2 list-disc list-inside text-gray-300\">\n        {block.content?.items?.map((item, i) => (\n          <li key={i}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n\n  case 'cta':\n  return (\n    <div className=\"mb-6 text-center\">\n      <a\n        href={block.content?.link}\n        className=\"inline-block px-6 py-2 bg-green-600 text-white rounded font-medium hover:bg-green-700 transition\"\n      >\n        {block.content?.label}\n      </a>\n    </div>\n  );\n\n  case 'testimonial':\n  return (\n    <div className=\"mb-6 border-l-4 pl-4 border-blue-500 text-gray-200 italic\">\n      “{block.content?.quote}”\n      {block.content?.attribution && (\n        <footer className=\"mt-2 text-sm text-blue-300\">\n          — {block.content.attribution}\n        </footer>\n      )}\n    </div>\n  );\n\n  default: {\n    const _exhaustiveCheck: never = block;\n    return (\n      <div className=\"mb-4 text-yellow-300 italic\">\n        Block type <code>{(block as any).type}</code> not implemented.\n      </div>\n    );\n  }\n  \n\n    \n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/reorderable-block-list.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useSortable' is defined but never used.","line":12,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":12,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'CSS' is defined but never used.","line":15,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":15,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'ReorderableBlockListProps' is defined but never used.","line":18,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":18,"endColumn":35},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'onBlockClick' is defined but never used. Allowed unused args must match /^_/u.","line":30,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":30,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  DndContext,\n  closestCenter,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors,\n} from '@dnd-kit/core';\nimport {\n  arrayMove,\n  SortableContext,\n  useSortable,\n  verticalListSortingStrategy,\n} from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { useState } from 'react';\nimport TemplatePreview from './template-preview';\nimport { ReorderableBlockListProps } from '@/types/blocks';\n\n// type ReorderableBlockListProps = {\n//   data: any;\n//   colorScheme: string;\n//   onBlockClick?: (block: any) => void;\n//   onReorder: (updatedData: any) => void;\n// };\n\nexport default function ReorderableBlockList({\n  data,\n  colorScheme,\n  onBlockClick,\n  onReorder,\n}: {\n  data: any;\n  colorScheme: string;\n  onBlockClick?: (block: any) => void;\n  onReorder: (updatedData: any) => void;\n}) {\n  const sensors = useSensors(useSensor(PointerSensor), useSensor(KeyboardSensor));\n\n  const [activePageIdx] = useState(0); // assuming only 1 page for now\n  const blocks = data?.pages?.[activePageIdx]?.content_blocks || [];\n\n  return (\n    <DndContext\n      sensors={sensors}\n      collisionDetection={closestCenter}\n      onDragEnd={({ active, over }) => {\n        if (!over || active.id === over.id) return;\n        const oldIndex = blocks.findIndex((b: any) => b._id === active.id);\n        const newIndex = blocks.findIndex((b: any) => b._id === over.id);\n        const reordered = arrayMove(blocks, oldIndex, newIndex);\n        const updatedData = {\n          ...data,\n          pages: data.pages.map((p: any, i: number) =>\n            i === activePageIdx ? { ...p, content_blocks: reordered } : p\n          ),\n        };\n        onReorder(updatedData);\n      }}\n    >\n      <SortableContext items={blocks.map((b: any) => b._id)} strategy={verticalListSortingStrategy}>\n        <TemplatePreview\n          data={data}\n          colorScheme={colorScheme}\n          // onBlockClick={onBlockClick}\n        />\n      </SortableContext>\n    </DndContext>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/reorderable-page-list.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/save-share-buttons.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/sortable-block-board.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··DndContext,⏎··closestCenter,⏎··useSensor,⏎··useSensors,⏎··PointerSensor,⏎` with `·DndContext,·closestCenter,·useSensor,·useSensors,·PointerSensor·`","line":4,"column":9,"nodeType":null,"messageId":"replace","endLine":10,"endColumn":1,"fix":{"range":[78,154],"text":" DndContext, closestCenter, useSensor, useSensors, PointerSensor "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··SortableContext,⏎··arrayMove,⏎··verticalListSortingStrategy,⏎` with `·SortableContext,·arrayMove,·verticalListSortingStrategy·`","line":11,"column":9,"nodeType":null,"messageId":"replace","endLine":15,"endColumn":1,"fix":{"range":[186,250],"text":" SortableContext, arrayMove, verticalListSortingStrategy "}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'arrayMove' is defined but never used.","line":13,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":13,"endColumn":12},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Page' is defined but never used.","line":19,"column":25,"nodeType":null,"messageId":"unusedVar","endLine":19,"endColumn":29},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·template,·onChange,·onLivePreviewUpdate,·maxBlocksPerPage·=·6·` with `⏎··template,⏎··onChange,⏎··onLivePreviewUpdate,⏎··maxBlocksPerPage·=·6,⏎`","line":32,"column":37,"nodeType":null,"messageId":"replace","endLine":32,"endColumn":100,"fix":{"range":[807,870],"text":"\n  template,\n  onChange,\n  onLivePreviewUpdate,\n  maxBlocksPerPage = 6,\n"}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'draggingBlockId' is assigned a value but never used.","line":34,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":34,"endColumn":25},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎······p.content_blocks.some((b)·=>·b._id·===·over.id)⏎····` with `·p.content_blocks.some((b)·=>·b._id·===·over.id)`","line":49,"column":51,"nodeType":null,"messageId":"replace","endLine":51,"endColumn":5,"fix":{"range":[1433,1492],"text":" p.content_blocks.some((b) => b._id === over.id)"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎······fromPage.id·!==·toPage.id·&&⏎······toPage.content_blocks.length·>=·maxBlocksPerPage⏎····` with `fromPage.id·!==·toPage.id·&&·toPage.content_blocks.length·>=·maxBlocksPerPage`","line":59,"column":9,"nodeType":null,"messageId":"replace","endLine":62,"endColumn":5,"fix":{"range":[1755,1850],"text":"fromPage.id !== toPage.id && toPage.content_blocks.length >= maxBlocksPerPage"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `.map((b)·=>·b._id)` with `⏎················.map((b)·=>·b._id)⏎················`","line":101,"column":41,"nodeType":null,"messageId":"replace","endLine":101,"endColumn":59,"fix":{"range":[3255,3273],"text":"\n                .map((b) => b._id)\n                "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎····attributes,⏎····listeners,⏎····setNodeRef,⏎····transform,⏎····transition,⏎····isDragging,⏎··}·=·useSortable({·id:·block._id` with `·attributes,·listeners,·setNodeRef,·transform,·transition,·isDragging·}·=·useSortable({⏎····id:·block._id,⏎·`","line":121,"column":10,"nodeType":null,"messageId":"replace","endLine":128,"endColumn":34,"fix":{"range":[3935,4063],"text":" attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({\n    id: block._id,\n "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":7,"source":"// components/admin/templates/sortable-block-board.tsx\n'use client';\n\nimport {\n  DndContext,\n  closestCenter,\n  useSensor,\n  useSensors,\n  PointerSensor,\n} from '@dnd-kit/core';\nimport {\n  SortableContext,\n  arrayMove,\n  verticalListSortingStrategy,\n} from '@dnd-kit/sortable';\n\nimport { motion } from 'framer-motion';\nimport { useState } from 'react';\nimport type { Template, Page } from '@/types/template';\nimport { BlockSchema } from '@/admin/lib/zod/blockSchema';\nimport { GripVertical } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { useSortable } from '@dnd-kit/sortable';\n\ntype Props = {\n  template: Template;\n  onChange: (t: Template) => void;\n  onLivePreviewUpdate: (d: Template['data']) => void;\n  maxBlocksPerPage?: number;\n};\n\nexport function SortableBlockBoard({ template, onChange, onLivePreviewUpdate, maxBlocksPerPage = 6 }: Props) {\n  const sensors = useSensors(useSensor(PointerSensor));\n  const [draggingBlockId, setDraggingBlockId] = useState<string | null>(null);\n\n  const handleDragStart = (event: any) => {\n    setDraggingBlockId(event.active.id);\n  };\n\n  const handleDragEnd = (event: any) => {\n    const { active, over } = event;\n    setDraggingBlockId(null);\n\n    if (!over || active.id === over.id) return;\n\n    const fromPage = template.data.pages.find((p) =>\n      p.content_blocks.some((b) => b._id === active.id)\n    );\n    const toPage = template.data.pages.find((p) =>\n      p.content_blocks.some((b) => b._id === over.id)\n    );\n\n    if (!fromPage || !toPage) return;\n\n    const fromIndex = fromPage.content_blocks.findIndex((b) => b._id === active.id);\n    const toIndex = toPage.content_blocks.findIndex((b) => b._id === over.id);\n\n    // Prevent moving to a page over max limit\n    if (\n      fromPage.id !== toPage.id &&\n      toPage.content_blocks.length >= maxBlocksPerPage\n    ) {\n      return alert('This page already has the max number of blocks');\n    }\n\n    const fromBlocks = [...fromPage.content_blocks];\n    const [moved] = fromBlocks.splice(fromIndex, 1);\n\n    const toBlocks = [...toPage.content_blocks];\n    toBlocks.splice(toIndex, 0, moved);\n\n    const updatedPages = template.data.pages.map((p) => {\n      if (p.id === fromPage.id) return { ...p, content_blocks: fromBlocks };\n      if (p.id === toPage.id) return { ...p, content_blocks: toBlocks };\n      return p;\n    });\n\n    const updated = { ...template, data: { ...template.data, pages: updatedPages } };\n    onChange(updated);\n    onLivePreviewUpdate(updated.data);\n  };\n\n  return (\n    <DndContext\n      sensors={sensors}\n      collisionDetection={closestCenter}\n      onDragStart={handleDragStart}\n      onDragEnd={handleDragEnd}\n    >\n      <div className=\"space-y-6\">\n        {template.data.pages.map((page, index) => (\n          <div key={page.id} className=\"border rounded p-4 bg-muted/50 space-y-2 group\">\n            <div className=\"flex justify-between items-center\">\n              <div className=\"font-semibold text-sm\">{page.title || `Page ${index + 1}`}</div>\n              <span className=\"text-xs text-muted-foreground\">\n                {page.content_blocks.length} / {maxBlocksPerPage}\n              </span>\n            </div>\n\n            <SortableContext\n              items={page.content_blocks.map((b) => b._id).filter((id): id is string => id !== undefined)}\n              strategy={verticalListSortingStrategy}\n            >\n              <div className=\"space-y-2 min-h-[40px]\">\n                {page.content_blocks.map((block) => (\n                  <SortableBlock key={block._id} block={block} />\n                ))}\n                {page.content_blocks.length === 0 && (\n                  <div className=\"text-xs text-muted-foreground italic\">Drop a block here</div>\n                )}\n              </div>\n            </SortableContext>\n          </div>\n        ))}\n      </div>\n    </DndContext>\n  );\n}\n\nfunction SortableBlock({ block }: { block: any }) {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({ id: block._id });\n\n  const style = {\n    transform: transform ? `translate(${transform.x}px, ${transform.y}px)` : undefined,\n    transition,\n  };\n\n  const isValid = BlockSchema.safeParse(block).success;\n\n  return (\n    <motion.div\n      ref={setNodeRef}\n      layout\n      style={style}\n      className={`flex items-center justify-between p-3 rounded bg-white/5 border ${\n        isDragging ? 'border-blue-500' : isValid ? 'border-gray-700' : 'border-red-500'\n      } group relative`}\n    >\n      <div\n        {...listeners}\n        {...attributes}\n        className=\"absolute -left-6 top-2 cursor-grab text-gray-500 group-hover:text-white opacity-0 group-hover:opacity-100\"\n      >\n        <GripVertical size={16} />\n      </div>\n      <div className=\"text-sm\">{block?.type || '(unknown)'}</div>\n      {!isValid && (\n        <Button size=\"icon\" variant=\"outline\" className=\"text-xs\">\n          Fix\n        </Button>\n      )}\n    </motion.div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/sortable-block-list.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··DndContext,⏎··closestCenter,⏎··PointerSensor,⏎··useSensor,⏎··useSensors,⏎` with `·DndContext,·closestCenter,·PointerSensor,·useSensor,·useSensors·`","line":3,"column":9,"nodeType":null,"messageId":"replace","endLine":9,"endColumn":1,"fix":{"range":[23,99],"text":" DndContext, closestCenter, PointerSensor, useSensor, useSensors "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··SortableContext,⏎··verticalListSortingStrategy,⏎··arrayMove,⏎` with `·SortableContext,·verticalListSortingStrategy,·arrayMove·`","line":10,"column":9,"nodeType":null,"messageId":"replace","endLine":14,"endColumn":1,"fix":{"range":[131,195],"text":" SortableContext, verticalListSortingStrategy, arrayMove "}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Plus' is defined but never used.","line":20,"column":26,"nodeType":null,"messageId":"unusedVar","endLine":20,"endColumn":30},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··blocks,⏎··onChange,⏎··onBlockEdit,⏎··onInsertBlock,⏎` with `·blocks,·onChange,·onBlockEdit,·onInsertBlock·`","line":30,"column":36,"nodeType":null,"messageId":"replace","endLine":35,"endColumn":1,"fix":{"range":[763,818],"text":" blocks, onChange, onBlockEdit, onInsertBlock "}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'handleInsert' is assigned a value but never used.","line":56,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":56,"endColumn":21},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎······collisionDetection={closestCenter}⏎······sensors={sensors}⏎······onDragEnd={handleDragEnd}⏎····>······` with `·collisionDetection={closestCenter}·sensors={sensors}·onDragEnd={handleDragEnd}>`","line":61,"column":16,"nodeType":null,"messageId":"replace","endLine":65,"endColumn":12,"fix":{"range":[1583,1692],"text":" collisionDetection={closestCenter} sensors={sensors} onDragEnd={handleDragEnd}>"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎························?·'border-gray-700·bg-white/5'⏎·······················` with `·?·'border-gray-700·bg-white/5'`","line":80,"column":30,"nodeType":null,"messageId":"replace","endLine":82,"endColumn":24,"fix":{"range":[2368,2447],"text":" ? 'border-gray-700 bg-white/5'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··························size=\"icon\"⏎··························variant=\"ghost\"⏎··························onClick={()·=>·onBlockEdit(block,·i)}⏎························` with `·size=\"icon\"·variant=\"ghost\"·onClick={()·=>·onBlockEdit(block,·i)}`","line":88,"column":32,"nodeType":null,"messageId":"replace","endLine":92,"endColumn":25,"fix":{"range":[2705,2874],"text":" size=\"icon\" variant=\"ghost\" onClick={() => onBlockEdit(block, i)}"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎························size=\"icon\"⏎························variant=\"ghost\"⏎························onClick={()·=>·handleDelete(i)}⏎······················` with `·size=\"icon\"·variant=\"ghost\"·onClick={()·=>·handleDelete(i)}`","line":96,"column":30,"nodeType":null,"messageId":"replace","endLine":100,"endColumn":23,"fix":{"range":[3021,3176],"text":" size=\"icon\" variant=\"ghost\" onClick={() => handleDelete(i)}"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":7,"source":"'use client';\n\nimport {\n  DndContext,\n  closestCenter,\n  PointerSensor,\n  useSensor,\n  useSensors,\n} from '@dnd-kit/core';\nimport {\n  SortableContext,\n  verticalListSortingStrategy,\n  arrayMove,\n} from '@dnd-kit/sortable';\n\nimport SortableBlock from './sortable-block';\nimport { BlockSchema } from '@/admin/lib/zod/blockSchema';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Button } from '@/components/ui/button';\nimport { Pencil, Trash2, Plus } from 'lucide-react';\nimport { BlockWithId } from '@/types/blocks';\n\ntype Props = {\n  blocks: BlockWithId[];\n  onChange: (next: BlockWithId[]) => void;\n  onBlockEdit?: (block: BlockWithId, index: number) => void;\n  onInsertBlock?: (atIndex: number) => void;\n};\n\nexport function SortableBlockList({\n  blocks,\n  onChange,\n  onBlockEdit,\n  onInsertBlock,\n}: Props) {\n  const sensors = useSensors(useSensor(PointerSensor));\n\n  const handleDragEnd = (event: any) => {\n    const { active, over } = event;\n    if (!over || active.id === over.id) return;\n\n    const oldIndex = blocks.findIndex((b) => b._id === active.id);\n    const newIndex = blocks.findIndex((b) => b._id === over.id);\n    if (oldIndex < 0 || newIndex < 0) return;\n\n    const reordered = arrayMove(blocks, oldIndex, newIndex);\n    onChange(reordered);\n  };\n\n  const handleDelete = (index: number) => {\n    if (!confirm('Remove this block?')) return;\n    const next = blocks.filter((_, i) => i !== index);\n    onChange(next);\n  };\n\n  const handleInsert = (atIndex: number) => {\n    if (onInsertBlock) onInsertBlock(atIndex);\n  };\n\n  return (\n    <DndContext\n      collisionDetection={closestCenter}\n      sensors={sensors}\n      onDragEnd={handleDragEnd}\n    >      \n      <SortableContext items={blocks.map((b) => b._id)} strategy={verticalListSortingStrategy}>\n        <div className=\"space-y-2\">\n          <AnimatePresence>\n            {blocks.map((block, i) => {\n              const isValid = BlockSchema.safeParse(block).success;\n\n              return (\n                <SortableBlock id={block._id} key={block._id}>\n                  <motion.div\n                    layout\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                    className={`rounded border px-3 py-2 text-sm flex justify-between items-center ${\n                      isValid\n                        ? 'border-gray-700 bg-white/5'\n                        : 'border-red-500 bg-red-500/10'\n                    }`}\n                  >\n                    <div>{block?.type || '(unknown)'}</div>\n                    <div className=\"flex gap-1\">\n                      {onBlockEdit && (\n                        <Button\n                          size=\"icon\"\n                          variant=\"ghost\"\n                          onClick={() => onBlockEdit(block, i)}\n                        >\n                          <Pencil className=\"w-3 h-3\" />\n                        </Button>\n                      )}\n                      <Button\n                        size=\"icon\"\n                        variant=\"ghost\"\n                        onClick={() => handleDelete(i)}\n                      >\n                        <Trash2 className=\"w-3 h-3\" />\n                      </Button>\n                    </div>\n                  </motion.div>\n                </SortableBlock>\n              );\n            })}\n\n            {blocks.length === 0 && (\n              <motion.div\n                key=\"empty-state\"\n                layout\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 0.5 }}\n                exit={{ opacity: 0 }}\n                className=\"text-xs text-muted-foreground italic px-2 py-4 border border-dashed border-gray-600 rounded text-center\"\n              >\n                No blocks yet. Drag or insert to begin.\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </div>\n      </SortableContext>\n    </DndContext>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/sortable-block.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎····attributes,⏎····listeners,⏎····setNodeRef,⏎····transform,⏎····transition,⏎····isDragging,⏎··}·=·useSortable({·id` with `·attributes,·listeners,·setNodeRef,·transform,·transition,·isDragging·}·=·useSortable({⏎····id,⏎·`","line":16,"column":10,"nodeType":null,"messageId":"replace","endLine":23,"endColumn":23,"fix":{"range":[467,584],"text":" attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({\n    id,\n "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// components/admin/templates/sortable-block.tsx\n'use client';\n\nimport { useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { motion } from 'framer-motion';\nimport { GripVertical } from 'lucide-react';\nimport type { ReactNode } from 'react';\n\ntype SortableBlockProps = {\n  id: string; // should come from block._id\n  children: ReactNode;\n};\n\nexport default function SortableBlock({ id, children }: SortableBlockProps) {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({ id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  return (\n    <motion.div\n      ref={setNodeRef}\n      layout\n      layoutId={id}\n      style={style}\n      initial={{ opacity: 0.85 }}\n      animate={{ opacity: 1, scale: 1 }}\n      exit={{ opacity: 0 }}\n      className={`relative group border rounded p-2 bg-muted transition-all duration-150 ease-in-out ${\n        isDragging ? 'z-50 shadow-md' : ''\n      }`}\n    >\n      <div\n        {...listeners}\n        {...attributes}\n        className=\"absolute -left-6 top-2 cursor-grab text-muted-foreground opacity-0 group-hover:opacity-100 transition-opacity duration-150\"\n      >\n        <GripVertical className=\"w-4 h-4\" />\n      </div>\n      {children}\n    </motion.div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/sortable-grid-block.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··SortableContext,⏎··verticalListSortingStrategy,⏎··arrayMove,⏎` with `·SortableContext,·verticalListSortingStrategy,·arrayMove·`","line":11,"column":9,"nodeType":null,"messageId":"replace","endLine":15,"endColumn":1,"fix":{"range":[146,210],"text":" SortableContext, verticalListSortingStrategy, arrayMove "}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'AnimatePresence' is defined but never used.","line":19,"column":18,"nodeType":null,"messageId":"unusedVar","endLine":19,"endColumn":33},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":105,"column":9,"nodeType":null,"messageId":"insert","endLine":105,"endColumn":9,"fix":{"range":[3130,3130],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":108,"column":13,"nodeType":null,"messageId":"insert","endLine":108,"endColumn":13,"fix":{"range":[3287,3287],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":109,"column":1,"nodeType":null,"messageId":"insert","endLine":109,"endColumn":1,"fix":{"range":[3345,3345],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":112,"column":17,"nodeType":null,"messageId":"insert","endLine":112,"endColumn":17,"fix":{"range":[3516,3516],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":113,"column":1,"nodeType":null,"messageId":"insert","endLine":113,"endColumn":1,"fix":{"range":[3562,3562],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `············` with `··············`","line":115,"column":1,"nodeType":null,"messageId":"replace","endLine":115,"endColumn":13,"fix":{"range":[3630,3642],"text":"              "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":117,"column":1,"nodeType":null,"messageId":"insert","endLine":117,"endColumn":1,"fix":{"range":[3659,3659],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":118,"column":1,"nodeType":null,"messageId":"insert","endLine":118,"endColumn":1,"fix":{"range":[3717,3717],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `················` with `··················`","line":120,"column":1,"nodeType":null,"messageId":"replace","endLine":120,"endColumn":17,"fix":{"range":[3830,3846],"text":"                  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":122,"column":13,"nodeType":null,"messageId":"insert","endLine":122,"endColumn":13,"fix":{"range":[3898,3898],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":124,"column":1,"nodeType":null,"messageId":"insert","endLine":124,"endColumn":1,"fix":{"range":[3924,3924],"text":"  "}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'i' is defined but never used. Allowed unused args must match /^_/u.","line":164,"column":39,"nodeType":null,"messageId":"unusedVar","endLine":164,"endColumn":40},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎······························?·'border-gray-700·bg-white/5'⏎·····························` with `·?·'border-gray-700·bg-white/5'`","line":171,"column":36,"nodeType":null,"messageId":"replace","endLine":173,"endColumn":30,"fix":{"range":[5586,5677],"text":" ? 'border-gray-700 bg-white/5'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":197,"column":19,"nodeType":null,"messageId":"delete","endLine":197,"endColumn":21,"fix":{"range":[6517,6519],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `····`","line":198,"column":1,"nodeType":null,"messageId":"delete","endLine":198,"endColumn":5,"fix":{"range":[6543,6547],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `························` with `····················`","line":199,"column":1,"nodeType":null,"messageId":"replace","endLine":199,"endColumn":25,"fix":{"range":[6611,6635],"text":"                    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":200,"column":1,"nodeType":null,"messageId":"delete","endLine":200,"endColumn":3,"fix":{"range":[6667,6669],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":203,"column":1,"nodeType":null,"messageId":"delete","endLine":203,"endColumn":3,"fix":{"range":[6733,6735],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":204,"column":19,"nodeType":null,"messageId":"delete","endLine":204,"endColumn":21,"fix":{"range":[6783,6785],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":205,"column":1,"nodeType":null,"messageId":"delete","endLine":205,"endColumn":3,"fix":{"range":[6801,6803],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":206,"column":19,"nodeType":null,"messageId":"delete","endLine":206,"endColumn":21,"fix":{"range":[6910,6912],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `························` with `····················`","line":207,"column":1,"nodeType":null,"messageId":"replace","endLine":207,"endColumn":25,"fix":{"range":[6929,6953],"text":"                    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `····`","line":208,"column":1,"nodeType":null,"messageId":"delete","endLine":208,"endColumn":5,"fix":{"range":[7002,7006],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":209,"column":23,"nodeType":null,"messageId":"delete","endLine":209,"endColumn":25,"fix":{"range":[7060,7062],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `····`","line":210,"column":25,"nodeType":null,"messageId":"delete","endLine":210,"endColumn":29,"fix":{"range":[7115,7119],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `····`","line":211,"column":1,"nodeType":null,"messageId":"delete","endLine":211,"endColumn":5,"fix":{"range":[7125,7129],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `····`","line":212,"column":25,"nodeType":null,"messageId":"delete","endLine":212,"endColumn":29,"fix":{"range":[7199,7203],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":213,"column":23,"nodeType":null,"messageId":"delete","endLine":213,"endColumn":25,"fix":{"range":[7259,7261],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":214,"column":1,"nodeType":null,"messageId":"delete","endLine":214,"endColumn":3,"fix":{"range":[7264,7266],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":215,"column":1,"nodeType":null,"messageId":"delete","endLine":215,"endColumn":3,"fix":{"range":[7360,7362],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":216,"column":23,"nodeType":null,"messageId":"delete","endLine":216,"endColumn":25,"fix":{"range":[7480,7482],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `····`","line":217,"column":21,"nodeType":null,"messageId":"delete","endLine":217,"endColumn":25,"fix":{"range":[7545,7549],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":218,"column":1,"nodeType":null,"messageId":"delete","endLine":218,"endColumn":3,"fix":{"range":[7551,7553],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····················` with `················`","line":219,"column":1,"nodeType":null,"messageId":"replace","endLine":219,"endColumn":21,"fix":{"range":[7574,7594],"text":"                "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":220,"column":1,"nodeType":null,"messageId":"delete","endLine":220,"endColumn":3,"fix":{"range":[7596,7598],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····</Button>⏎` with `</Button>`","line":221,"column":17,"nodeType":null,"messageId":"replace","endLine":222,"endColumn":1,"fix":{"range":[7652,7666],"text":"</Button>"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":36,"source":"'use client';\n\nimport {\n  DndContext,\n  closestCenter,\n  DragOverlay,\n  PointerSensor,\n  useSensor,\n  useSensors,\n} from '@dnd-kit/core';\nimport {\n  SortableContext,\n  verticalListSortingStrategy,\n  arrayMove,\n} from '@dnd-kit/sortable';\n\nimport SortableBlock from './sortable-block';\nimport { BlockSchema } from '@/admin/lib/zod/blockSchema';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport type { Block } from '@/types/blocks';\nimport { normalizeBlock } from '@/types/blocks';\nimport { Button } from '@/components/ui/button';\nimport { Plus, ChevronDown, ChevronUp } from 'lucide-react';\nimport { useState } from 'react';\nimport { defaultGridPresets, GridPreset } from '@/types/grid-presets';\nimport GridTemplateModal from './grid-template-modal';\n\ntype Props = {\n  items: Block[];\n  onChange: (next: Block[]) => void;\n  onInsert?: (index: number) => void;\n  columns?: number;\n  maxPerGrid?: number;\n  editable?: boolean;\n};\n\nexport default function SortableGridBlock({\n  items,\n  onChange,\n  onInsert,\n  columns = 2,\n  maxPerGrid = 12,\n  editable = true,\n}: Props) {\n  const sensors = useSensors(useSensor(PointerSensor));\n  const [draggingBlock, setDraggingBlock] = useState<Block | null>(null);\n  const [isExpanded, setExpanded] = useState(true);\n  const [columnCount, setColumnCount] = useState(columns);\n\n  const handleDragStart = ({ active }: any) => {\n    const found = items.find((b) => b._id === active.id);\n    if (found) setDraggingBlock(found);\n  };\n\n  const handleDragEnd = (event: any) => {\n    setDraggingBlock(null);\n    const { active, over } = event;\n    if (!over || active.id === over.id) return;\n\n    const oldIndex = items.findIndex((b) => b._id === active.id);\n    const newIndex = items.findIndex((b) => b._id === over.id);\n    if (oldIndex < 0 || newIndex < 0) return;\n\n    const reordered = arrayMove(items, oldIndex, newIndex);\n    onChange(reordered);\n  };\n\n  const canInsert = editable && items.length < maxPerGrid;\n\n  // Distribute blocks into columns\n  const columnsArray: Block[][] = Array.from({ length: columnCount }, () => []);\n  items.forEach((block, i) => {\n    columnsArray[i % columnCount].push(block);\n  });\n\n  const handleInsertBalanced = () => {\n    if (!onInsert || !canInsert) return;\n\n    // Find the column with the fewest blocks\n    const blockCounts = columnsArray.map((col) => col.length);\n    const minCol = blockCounts.indexOf(Math.min(...blockCounts));\n    const targetIndex = columnsArray.slice(0, minCol).flat().length;\n\n    onInsert(targetIndex);\n  };\n\n  return (\n    <>\n      <div className=\"flex justify-between items-center mb-2\">\n        <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n          <span>Grid Columns:</span>\n          <select\n            value={columnCount}\n            onChange={(e) => setColumnCount(Number(e.target.value))}\n            className=\"rounded bg-muted px-2 py-1 text-xs text-white\"\n          >\n            {[1, 2, 3, 4].map((n) => (\n              <option key={n} value={n}>\n                {n}\n              </option>\n            ))}\n          </select>\n        </div>\n        {editable && (\n        <div className=\"flex items-center gap-2\">\n            <span className=\"text-xs text-muted-foreground\">Apply Template:</span>\n            <select\n            className=\"rounded bg-muted px-2 py-1 text-xs text-white\"\n            onChange={(e) => {\n                const selected = defaultGridPresets.find((p) => p.name === e.target.value);\n                if (selected) {\n                onChange(selected.items.map(normalizeBlock));\n                setColumnCount(selected.columns);\n                }\n            }}\n            >\n            <option value=\"\">— Select a layout —</option>\n            {defaultGridPresets.map((preset) => (\n                <option key={preset.name} value={preset.name}>\n                {preset.name}\n                </option>\n            ))}\n            </select>\n        </div>\n        )}\n\n        <div className=\"flex items-center gap-2\">\n          <span className=\"text-xs text-muted-foreground\">\n            {items.length} / {maxPerGrid} blocks\n          </span>\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            onClick={() => setExpanded(!isExpanded)}\n            className=\"text-xs\"\n          >\n            {isExpanded ? (\n              <>\n                <ChevronUp className=\"w-3 h-3 mr-1\" /> Collapse Grid\n              </>\n            ) : (\n              <>\n                <ChevronDown className=\"w-3 h-3 mr-1\" /> Expand Grid\n              </>\n            )}\n          </Button>\n        </div>\n      </div>\n\n      {isExpanded && (\n        <DndContext\n          sensors={sensors}\n          collisionDetection={closestCenter}\n          onDragStart={handleDragStart}\n          onDragEnd={handleDragEnd}\n        >\n          <SortableContext\n            items={items.map((b) => b._id).filter((id): id is string => id !== undefined)}\n            strategy={verticalListSortingStrategy}\n          >\n            <div className={`grid grid-cols-${columnCount} gap-4`}>\n              {columnsArray.map((column, colIdx) => (\n                <div key={colIdx} className=\"flex flex-col gap-2\">\n                  {column.map((block, i) => {\n                    const isValid = BlockSchema.safeParse(block).success;\n                    return (\n                      <SortableBlock key={block._id} id={block._id || ''}>\n                        <motion.div\n                          layout\n                          className={`rounded border px-3 py-2 text-sm ${\n                            isValid\n                              ? 'border-gray-700 bg-white/5'\n                              : 'border-red-500 bg-red-500/10'\n                          }`}\n                        >\n                          {block?.type || '(unknown)'}\n                        </motion.div>\n                      </SortableBlock>\n                    );\n                  })}\n                </div>\n              ))}\n            </div>\n\n            {canInsert && onInsert && (\n              <div className=\"text-center mt-4\">\n                <Button\n                  size=\"icon\"\n                  variant=\"ghost\"\n                  onClick={handleInsertBalanced}\n                  className=\"text-xs text-muted-foreground opacity-50 hover:opacity-100\"\n                >\n                  <Plus className=\"w-3 h-3 mr-1\" />\n                  Add to Least-Populated Column\n                </Button>\n                <GridTemplateModal\n                    onSelect={(preset) => {\n                        onChange(preset.items.map(normalizeBlock));\n                        setColumnCount(preset.columns);\n                    }}\n                />\n                <Button\n                    size=\"icon\"\n                    variant=\"ghost\"\n                    className=\"text-xs text-muted-foreground opacity-50 hover:opacity-100\"\n                    onClick={() => {\n                        const name = prompt('Name this layout preset:');\n                        if (name) {\n                        const preset: GridPreset = {\n                            name,\n                            columns: columnCount,\n                            items: items.map(normalizeBlock),\n                        };\n                        const saved = JSON.parse(localStorage.getItem('grid_presets') || '[]');\n                        localStorage.setItem('grid_presets', JSON.stringify([...saved, preset]));\n                        alert(`Saved \"${name}\" as a new preset!`);\n                        }\n                    }}\n                    >\n                    💾 Save as Template\n                    </Button>\n\n              </div>\n            )}\n          </SortableContext>\n\n          <DragOverlay>\n            {draggingBlock && (\n              <motion.div\n                layout\n                className=\"px-4 py-2 rounded border border-blue-500 bg-muted text-xs shadow-lg\"\n              >\n                {draggingBlock.type}\n              </motion.div>\n            )}\n          </DragOverlay>\n        </DndContext>\n      )}\n    </>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/sortable-page.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·id` with `⏎····id,⏎·`","line":7,"column":97,"nodeType":null,"messageId":"replace","endLine":7,"endColumn":100,"fix":{"range":[362,365],"text":"\n    id,\n "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎······ref={setNodeRef}⏎······style={style}⏎······className=\"group·relative·border·rounded·mb-4·bg-muted·p-1\"⏎····` with `·ref={setNodeRef}·style={style}·className=\"group·relative·border·rounded·mb-4·bg-muted·p-1\"`","line":17,"column":9,"nodeType":null,"messageId":"replace","endLine":21,"endColumn":5,"fix":{"range":[548,662],"text":" ref={setNodeRef} style={style} className=\"group relative border rounded mb-4 bg-muted p-1\""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"import { useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { GripVertical } from 'lucide-react';\nimport type { ReactNode } from 'react';\n\nexport const SortablePage = ({ id, children }: { id: string; children: ReactNode }) => {\n  const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({ id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.6 : 1,\n    zIndex: isDragging ? 10 : 1,\n  };\n\n  return (\n    <div\n      ref={setNodeRef}\n      style={style}\n      className=\"group relative border rounded mb-4 bg-muted p-1\"\n    >\n      <div\n        {...listeners}\n        {...attributes}\n        className=\"absolute -left-6 top-2 text-gray-400 group-hover:text-gray-100 cursor-grab select-none\"\n      >\n        <GripVertical className=\"w-4 h-4\" />\n      </div>\n      {children}\n    </div>\n  );\n};\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/tag-filter-dropdown.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/tag-input.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/template-action-toolbar.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":16,"column":5,"nodeType":null,"messageId":"delete","endLine":16,"endColumn":7,"fix":{"range":[532,534],"text":""}},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'template?.published_at'. Either include it or remove the dependency array. If 'setStatus' needs the current value of 'template.published_at', you can also switch to useReducer instead of useState and read 'template.published_at' in the reducer.","line":40,"column":6,"nodeType":"ArrayExpression","endLine":40,"endColumn":31,"suggestions":[{"desc":"Update the dependencies array to be: [template?.published_at, template.template_name]","fix":{"range":[1208,1233],"text":"[template?.published_at, template.template_name]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'handleShare' and 'onSaveDraft'. Either include them or remove the dependency array. If 'onSaveDraft' changes too often, find the parent component that defines it and wrap that definition in useCallback.","line":59,"column":6,"nodeType":"ArrayExpression","endLine":59,"endColumn":16,"suggestions":[{"desc":"Update the dependencies array to be: [handleShare, onSaveDraft, template]","fix":{"range":[1831,1841],"text":"[handleShare, onSaveDraft, template]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// components/admin/templates/template-action-toolbar.tsx\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { Button } from '@/components/ui';\nimport { saveAsTemplate } from '@/admin/lib/saveAsTemplate';\nimport { createSharedPreview } from '@/admin/lib/createSharedPreview';\nimport { supabase } from '@/admin/lib/supabaseClient';\nimport toast from 'react-hot-toast';\n\nexport default function TemplateActionToolbar({\n  template,\n  autosaveStatus,\n  onSaveDraft,\n  onUndo,\n  onRedo,\n}: {  \n  template: any;\n  autosaveStatus?: string;\n  onSaveDraft?: () => void;\n  onUndo: () => void;\n  onRedo: () => void;\n}) {\n  const router = useRouter();\n  const [status, setStatus] = useState('Draft');\n  const [versions, setVersions] = useState<any[]>([]);\n\n  useEffect(() => {\n    if (template?.template_name) {\n      supabase\n        .from('template_versions')\n        .select('id, commit_message, created_at')\n        .eq('template_name', template.template_name)\n        .order('created_at', { ascending: false })\n        .then(({ data }) => {\n          if (data) setVersions(data);\n        });\n\n      setStatus(template?.published_at ? 'Published' : 'Draft');\n    }\n  }, [template?.template_name]);\n\n  useEffect(() => {\n    const handleHotkey = (e: KeyboardEvent) => {\n      if (e.metaKey && e.key === 's') {\n        e.preventDefault();\n        onSaveDraft?.();\n      }\n      if (e.metaKey && e.shiftKey && e.key.toLowerCase() === 's') {\n        e.preventDefault();\n        handleShare();\n      }\n      if (e.metaKey && e.shiftKey && e.key.toLowerCase() === 'c') {\n        e.preventDefault();\n        toast.success('Copy preview (not implemented)');\n      }\n    };\n    window.addEventListener('keydown', handleHotkey);\n    return () => window.removeEventListener('keydown', handleHotkey);\n  }, [template]);\n\n  const handleSaveAs = async () => {\n    const newId = await saveAsTemplate(template);\n    if (newId) {\n      toast.success('Template copied');\n      router.push(`/admin/templates?selected=${newId}`);\n    } else {\n      toast.error('Failed to copy template');\n    }\n  };\n\n  const handleShare = async () => {\n    const id = await createSharedPreview(template.id);\n    if (id) {\n      toast.success('Preview shared!');\n      router.push(`/shared/${id}`);\n    } else {\n      toast.error('Share failed');\n    }\n  };\n\n  return (\n    <div className=\"fixed bottom-0 left-0 w-full z-40 border-t border-gray-700 bg-gray-900 px-6 py-3 flex justify-between items-center text-white\">\n      <div className=\"text-sm font-medium flex gap-4 items-center\">\n        <span>📄 {template.template_name}</span>\n        <span\n          className={`text-xs px-2 py-1 rounded ${\n            status === 'Published' ? 'bg-green-600' : 'bg-yellow-600'\n          }`}\n        >\n          {status}\n        </span>\n        {autosaveStatus && (\n          <span className=\"text-xs text-gray-400 italic\">💾 {autosaveStatus}</span>\n        )}\n        {autosaveStatus === 'saved' && (\n          <span className=\"text-xs text-green-400 animate-fade-out duration-1000\">✓ Saved</span>\n        )}\n        {autosaveStatus === 'error' && <span className=\"text-xs text-red-400\">⚠ Error</span>}\n        <Button variant=\"ghost\" onClick={onUndo}>\n          Undo\n        </Button>\n        <Button variant=\"ghost\" onClick={onRedo}>\n          Redo\n        </Button>\n      </div>\n\n      <div className=\"flex items-center gap-3\">\n        <select\n          className=\"bg-gray-800 border border-gray-600 text-sm text-white rounded px-2 py-1\"\n          onChange={(e) => toast(`Selected version: ${e.target.value}`)}\n        >\n          <option>View Version</option>\n          {versions.map((v) => (\n            <option key={v.id}>\n              {v.commit_message || 'Untitled'} — {new Date(v.created_at).toLocaleDateString()}\n            </option>\n          ))}\n        </select>\n\n        <Button size=\"sm\" variant=\"secondary\" onClick={onSaveDraft}>\n          Save Draft\n        </Button>\n        <Button size=\"sm\" variant=\"secondary\" onClick={handleSaveAs}>\n          Save As Template\n        </Button>\n        <Button size=\"sm\" variant=\"secondary\" onClick={handleShare}>\n          Share Snapshot\n        </Button>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/template-editor-content.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":22,"column":3,"nodeType":null,"messageId":"delete","endLine":22,"endColumn":5,"fix":{"range":[1073,1075],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":23,"column":1,"nodeType":null,"messageId":"delete","endLine":23,"endColumn":3,"fix":{"range":[1118,1120],"text":""}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'setShowPublishModal' is defined but never used. Allowed unused args must match /^_/u.","line":32,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":32,"endColumn":22},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'recentlyInsertedBlockId' is defined but never used. Allowed unused args must match /^_/u.","line":33,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":33,"endColumn":26},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":49,"column":1,"nodeType":null,"messageId":"delete","endLine":49,"endColumn":3,"fix":{"range":[1828,1830],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":57,"column":3,"nodeType":null,"messageId":"delete","endLine":57,"endColumn":5,"fix":{"range":[2102,2104],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `····`","line":58,"column":1,"nodeType":null,"messageId":"delete","endLine":58,"endColumn":5,"fix":{"range":[2124,2128],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":61,"column":3,"nodeType":null,"messageId":"delete","endLine":61,"endColumn":5,"fix":{"range":[2220,2222],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":63,"column":40,"nodeType":null,"messageId":"delete","endLine":63,"endColumn":42,"fix":{"range":[2279,2281],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":70,"column":1,"nodeType":null,"messageId":"delete","endLine":70,"endColumn":3,"fix":{"range":[2551,2553],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":76,"column":1,"nodeType":null,"messageId":"delete","endLine":76,"endColumn":3,"fix":{"range":[2743,2745],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":78,"column":1,"nodeType":null,"messageId":"delete","endLine":78,"endColumn":3,"fix":{"range":[2814,2816],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":80,"column":1,"nodeType":null,"messageId":"delete","endLine":80,"endColumn":3,"fix":{"range":[2867,2869],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":86,"column":1,"nodeType":null,"messageId":"delete","endLine":86,"endColumn":3,"fix":{"range":[3032,3034],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":88,"column":1,"nodeType":null,"messageId":"delete","endLine":88,"endColumn":3,"fix":{"range":[3070,3072],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎··`","line":92,"column":3,"nodeType":null,"messageId":"delete","endLine":93,"endColumn":3,"fix":{"range":[3188,3191],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":98,"column":1,"nodeType":null,"messageId":"delete","endLine":98,"endColumn":3,"fix":{"range":[3335,3337],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":111,"column":1,"nodeType":null,"messageId":"delete","endLine":111,"endColumn":3,"fix":{"range":[3741,3743],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":123,"column":5,"nodeType":null,"messageId":"delete","endLine":123,"endColumn":7,"fix":{"range":[4125,4127],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":186,"column":5,"nodeType":null,"messageId":"insert","endLine":186,"endColumn":5,"fix":{"range":[6235,6235],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":192,"column":1,"nodeType":null,"messageId":"delete","endLine":192,"endColumn":3,"fix":{"range":[6420,6422],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":19,"source":"// components/admin/templates/template-editor-content.tsx\n'use client';\n\nimport TemplateSettingsPanel from './template-settings-panel';\nimport { TemplateEditorBranding } from './template-editor.branding';\nimport TemplatePageEditor from './template-page-editor';\nimport TemplateJsonEditor from './template-json-editor';\nimport TemplateHistory from './template-history';\nimport TemplatePreview from './template-preview';\nimport TemplatePublishModal from './template-publish-modal';\nimport DevicePreviewWrapper from './device-preview-wrapper';\nimport ImageUploader from '../admin/image-uploader';\nimport TemplateImageGallery from '../admin/template-image-gallery';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui';\nimport TemplateActionToolbar from './template-action-toolbar';\nimport type { Template, TemplateData } from '@/types/template';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { saveTemplate } from '@/admin/lib/saveTemplate';\n\nfunction pushWithLimit<T>(stack: T[], item: T, limit = 10): T[] {\n    return [...stack.slice(-limit + 1), item];\n  }\n\nexport function TemplateEditorContent({\n  template,\n  rawJson,\n  setRawJson,\n  livePreviewData,\n  setTemplate,\n  autosaveStatus,\n  setShowPublishModal,\n  recentlyInsertedBlockId,\n}: {\n  template: Template;\n  rawJson: string;\n  setRawJson: (v: string) => void;\n  livePreviewData: TemplateData;\n  setTemplate: React.Dispatch<React.SetStateAction<Template>>;\n  autosaveStatus: string;\n  setShowPublishModal: (v: boolean) => void;\n  recentlyInsertedBlockId: string | null;\n}) {\n  const [showModal, setModal] = useState(false);\n  const [historyStack, setHistoryStack] = useState<Template[]>(() => {\n    const stored = localStorage.getItem('templateHistory');\n    return stored ? JSON.parse(stored) : [];\n  });\n  \n  const [redoStack, setRedoStack] = useState<Template[]>(() => {\n    const stored = localStorage.getItem('templateRedo');\n    return stored ? JSON.parse(stored) : [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem('templateHistory', JSON.stringify(historyStack));\n    }, [historyStack]);\n    \n  useEffect(() => {\n    localStorage.setItem('templateRedo', JSON.stringify(redoStack));\n    }, [redoStack]);\n\n  // 🔧 Update template + JSON together  \n  const handleTemplateChange = (updated: Template) => {\n    setHistoryStack((prev) => pushWithLimit(prev, updated, 10));\n    setRedoStack((prev) => pushWithLimit(prev, updated, 10));\n    setTemplate(updated);\n    setRawJson(JSON.stringify(updated.data, null, 2));\n  };\n  \n  // 💾 Save function\n  const handleSaveDraft = async () => {\n    try {\n      console.log('handleSaveDraft: ', JSON.stringify(template, null, 2));\n      const parsed = JSON.parse(rawJson);\n  \n      const fullTemplate: Template = { ...template, data: parsed };\n  \n      const promise = saveTemplate(fullTemplate);\n  \n      toast.promise(promise, {\n        loading: 'Saving...',\n        success: 'Template saved successfully!',\n        error: 'Failed to save template',\n      });\n  \n      const saved = await promise;\n  \n      // update local state too\n      setTemplate(saved);\n      setRawJson(JSON.stringify(saved.data, null, 2));\n  \n    } catch (err: any) {\n      console.error('[❌ JSON Parse Error]', err.message);\n      toast.error('Invalid JSON: could not save.');\n    }\n  };\n  \n  const handleUndo = () => {\n    if (historyStack.length === 0) {\n      toast('Nothing to undo');\n      return;\n    }\n    const previous = historyStack[historyStack.length - 1];\n    setHistoryStack((prev) => prev.slice(0, -1));\n    setRedoStack((prev) => [...prev, template]);\n    setTemplate(previous);\n    setRawJson(JSON.stringify(previous.data, null, 2));\n    toast.success('Undo successful');\n  };\n  \n  const handleRedo = () => {\n    if (redoStack.length === 0) {\n      toast('Nothing to redo');\n      return;\n    }\n    const next = redoStack[redoStack.length - 1];\n    setRedoStack((prev) => prev.slice(0, -1));\n    setHistoryStack((prev) => [...prev, template]);\n    setTemplate(next);\n    setRawJson(JSON.stringify(next.data, null, 2));\n    toast.success('Redo successful');\n  };  \n\n  return (\n    <>\n      <Tabs defaultValue=\"edit\">\n        <TabsList>\n          <TabsTrigger value=\"edit\">Edit</TabsTrigger>\n          <TabsTrigger value=\"preview\">Preview</TabsTrigger>\n          <TabsTrigger value=\"history\">History</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"edit\">\n          <div className=\"grid md:grid-cols-2 gap-6 pt-4\">\n            <div className=\"space-y-4\">\n              <TemplateSettingsPanel template={template} onChange={handleTemplateChange} />\n              <TemplateEditorBranding\n                selectedProfileId={template.brand || ''}\n                onSelectProfileId={(selectedId) =>\n                  handleTemplateChange({ ...template, brand: selectedId || '' })\n                }\n              />\n              <TemplatePageEditor\n                template={template}\n                onChange={handleTemplateChange}\n                onLivePreviewUpdate={(data) => {\n                  setRawJson(JSON.stringify(data, null, 2));\n                }}\n              />\n              <ImageUploader\n                siteId={template.site_id || ''}\n                templateId={template.id || ''}\n                folder=\"hero\"\n                dbField=\"hero_url\"\n                label=\"Hero Image\"\n              />\n              <TemplateImageGallery templateId={template.id || ''} />\n            </div>\n            <TemplateJsonEditor rawJson={rawJson} setRawJson={setRawJson} />\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"preview\">\n          <DevicePreviewWrapper>\n            <TemplatePreview\n              data={livePreviewData}\n              colorScheme={template.color_scheme}\n              theme={template.theme}\n              brand={template.brand}\n            />\n          </DevicePreviewWrapper>\n        </TabsContent>\n\n        <TabsContent value=\"history\">\n          <TemplateHistory template={template} onRevert={handleTemplateChange} />\n        </TabsContent>\n      </Tabs>\n\n      <TemplatePublishModal\n        open={showModal}\n        onClose={() => setModal(false)}\n        snapshotId={template.id || ''}\n      />\n\n    <TemplateActionToolbar\n        template={template}\n        autosaveStatus={autosaveStatus}\n        onSaveDraft={handleSaveDraft}\n        onUndo={handleUndo}\n        onRedo={handleRedo}\n        />\n    </>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/template-editor-layout.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'isCreating' is assigned a value but never used.","line":21,"column":21,"nodeType":null,"messageId":"unusedVar","endLine":21,"endColumn":31}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// components/admin/templates/template-editor-layout.tsx\n'use client';\n\nimport { useTemplateEditor } from '@/context/template-editor-context';\n// import { Button } from '@/components/ui/button';\nimport { cn } from '@/admin/lib/utils';\nimport { CheckCircle, Loader2 } from 'lucide-react';\nimport type { ReactNode } from 'react';\n\nexport default function TemplateEditorLayout({\n  children,\n  toolbar,\n  preview,\n  className = '',\n}: {\n  children: ReactNode;\n  toolbar?: ReactNode;\n  preview?: ReactNode;\n  className?: string;\n}) {\n  const { autosave, isCreating, template } = useTemplateEditor();\n\n  return (\n    <div className=\"min-h-screen bg-background text-foreground\">\n      {/* Header */}\n      <header className=\"sticky top-0 z-40 flex items-center justify-between border-b bg-zinc-900 px-4 py-2\">\n        <div className=\"text-sm font-semibold text-white\">\n          {template.template_name}\n          <span className=\"ml-2 text-xs text-muted-foreground\">\n            {autosave.status === 'saving' && (\n              <span className=\"flex items-center gap-1 text-yellow-400\">\n                <Loader2 className=\"animate-spin w-3 h-3\" />\n                Saving...\n              </span>\n            )}\n            {autosave.status === 'saved' && (\n              <span className=\"flex items-center gap-1 text-green-400\">\n                <CheckCircle className=\"w-3 h-3\" />\n                Saved\n              </span>\n            )}\n          </span>\n        </div>\n\n        <div className=\"flex items-center gap-2\">{toolbar}</div>\n      </header>\n\n      {/* Main Content */}\n      <div\n        className={cn(\n          'grid grid-cols-1 md:grid-cols-[1fr_300px] gap-4 p-6 max-w-screen-xl mx-auto',\n          className\n        )}\n      >\n        <div className=\"w-full\">{children}</div>\n        {preview && (\n          <aside className=\"bg-white/5 border border-white/10 rounded p-3 overflow-y-auto\">\n            {preview}\n          </aside>\n        )}\n      </div>\n\n      {/* Optional footer/actions could go here */}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/template-editor-toolbar.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'handleSaveDraft' is defined but never used. Allowed unused args must match /^_/u.","line":13,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":13,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'onBack' is defined but never used. Allowed unused args must match /^_/u.","line":14,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":14,"endColumn":9},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":44,"column":1,"nodeType":null,"messageId":"insert","endLine":44,"endColumn":1,"fix":{"range":[999,999],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":45,"column":1,"nodeType":null,"messageId":"insert","endLine":45,"endColumn":1,"fix":{"range":[1092,1092],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":46,"column":1,"nodeType":null,"messageId":"insert","endLine":46,"endColumn":1,"fix":{"range":[1111,1111],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":47,"column":5,"nodeType":null,"messageId":"insert","endLine":47,"endColumn":5,"fix":{"range":[1133,1133],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":48,"column":1,"nodeType":null,"messageId":"insert","endLine":48,"endColumn":1,"fix":{"range":[1136,1136],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":49,"column":9,"nodeType":null,"messageId":"insert","endLine":49,"endColumn":9,"fix":{"range":[1157,1157],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":50,"column":1,"nodeType":null,"messageId":"insert","endLine":50,"endColumn":1,"fix":{"range":[1172,1172],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `············` with `··················`","line":51,"column":1,"nodeType":null,"messageId":"replace","endLine":51,"endColumn":13,"fix":{"range":[1225,1237],"text":"                  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":52,"column":15,"nodeType":null,"messageId":"insert","endLine":52,"endColumn":15,"fix":{"range":[1270,1270],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··············` with `····················`","line":53,"column":1,"nodeType":null,"messageId":"replace","endLine":53,"endColumn":15,"fix":{"range":[1282,1296],"text":"                    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":54,"column":13,"nodeType":null,"messageId":"insert","endLine":54,"endColumn":13,"fix":{"range":[1321,1321],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··········` with `················`","line":55,"column":1,"nodeType":null,"messageId":"replace","endLine":55,"endColumn":11,"fix":{"range":[1328,1338],"text":"                "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `··············`","line":56,"column":1,"nodeType":null,"messageId":"replace","endLine":56,"endColumn":9,"fix":{"range":[1340,1348],"text":"              "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":57,"column":1,"nodeType":null,"messageId":"insert","endLine":57,"endColumn":1,"fix":{"range":[1351,1351],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `··············`","line":58,"column":1,"nodeType":null,"messageId":"replace","endLine":58,"endColumn":9,"fix":{"range":[1371,1379],"text":"              "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":59,"column":1,"nodeType":null,"messageId":"insert","endLine":59,"endColumn":1,"fix":{"range":[1398,1398],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":60,"column":11,"nodeType":null,"messageId":"insert","endLine":60,"endColumn":11,"fix":{"range":[1435,1435],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··········` with `················`","line":61,"column":1,"nodeType":null,"messageId":"replace","endLine":61,"endColumn":11,"fix":{"range":[1466,1476],"text":"                "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":62,"column":9,"nodeType":null,"messageId":"insert","endLine":62,"endColumn":9,"fix":{"range":[1512,1512],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `··············`","line":63,"column":1,"nodeType":null,"messageId":"replace","endLine":63,"endColumn":9,"fix":{"range":[1515,1523],"text":"              "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":64,"column":1,"nodeType":null,"messageId":"insert","endLine":64,"endColumn":1,"fix":{"range":[1543,1543],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":65,"column":1,"nodeType":null,"messageId":"insert","endLine":65,"endColumn":1,"fix":{"range":[1578,1578],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":66,"column":13,"nodeType":null,"messageId":"insert","endLine":66,"endColumn":13,"fix":{"range":[1622,1622],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":67,"column":11,"nodeType":null,"messageId":"insert","endLine":67,"endColumn":11,"fix":{"range":[1648,1648],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··········` with `················`","line":68,"column":1,"nodeType":null,"messageId":"replace","endLine":68,"endColumn":11,"fix":{"range":[1650,1660],"text":"                "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":69,"column":13,"nodeType":null,"messageId":"insert","endLine":69,"endColumn":13,"fix":{"range":[1698,1698],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":70,"column":1,"nodeType":null,"messageId":"insert","endLine":70,"endColumn":1,"fix":{"range":[1718,1718],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":71,"column":11,"nodeType":null,"messageId":"insert","endLine":71,"endColumn":11,"fix":{"range":[1762,1762],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `··············`","line":72,"column":1,"nodeType":null,"messageId":"replace","endLine":72,"endColumn":9,"fix":{"range":[1764,1772],"text":"              "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `··············`","line":73,"column":1,"nodeType":null,"messageId":"replace","endLine":73,"endColumn":9,"fix":{"range":[1775,1783],"text":"              "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":74,"column":7,"nodeType":null,"messageId":"insert","endLine":74,"endColumn":7,"fix":{"range":[1917,1917],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······<Button·onClick={handleRename}·size=\"sm\"·variant=\"default\"·disabled={!inputValue.trim()·||·inputValue·===·templateName·||·nameExists}>Save` with `············<Button⏎··············onClick={handleRename}⏎··············size=\"sm\"⏎··············variant=\"default\"⏎··············disabled={!inputValue.trim()·||·inputValue·===·templateName·||·nameExists}⏎············>⏎··············Save⏎············`","line":75,"column":1,"nodeType":null,"messageId":"replace","endLine":75,"endColumn":145,"fix":{"range":[1920,2064],"text":"            <Button\n              onClick={handleRename}\n              size=\"sm\"\n              variant=\"default\"\n              disabled={!inputValue.trim() || inputValue === templateName || nameExists}\n            >\n              Save\n            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······{nameExists·&&·(⏎········<span·className=\"text-xs·text-red-500\">That·name·already·exists</span>` with `············{nameExists·&&·<span·className=\"text-xs·text-red-500\">That·name·already·exists</span>}`","line":76,"column":1,"nodeType":null,"messageId":"replace","endLine":77,"endColumn":79,"fix":{"range":[2074,2175],"text":"            {nameExists && <span className=\"text-xs text-red-500\">That name already exists</span>}"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `)}⏎······<Button·onClick={()·=>·setIsRenaming(false)}·size=\"sm\"·variant=\"ghost\">Cancel` with `······<Button·onClick={()·=>·setIsRenaming(false)}·size=\"sm\"·variant=\"ghost\">⏎··············Cancel⏎············`","line":78,"column":7,"nodeType":null,"messageId":"replace","endLine":79,"endColumn":84,"fix":{"range":[2182,2268],"text":"      <Button onClick={() => setIsRenaming(false)} size=\"sm\" variant=\"ghost\">\n              Cancel\n            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":80,"column":5,"nodeType":null,"messageId":"insert","endLine":80,"endColumn":5,"fix":{"range":[2282,2282],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":81,"column":1,"nodeType":null,"messageId":"insert","endLine":81,"endColumn":1,"fix":{"range":[2286,2286],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":82,"column":1,"nodeType":null,"messageId":"insert","endLine":82,"endColumn":1,"fix":{"range":[2294,2294],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":83,"column":1,"nodeType":null,"messageId":"insert","endLine":83,"endColumn":1,"fix":{"range":[2301,2301],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `············`","line":84,"column":1,"nodeType":null,"messageId":"replace","endLine":84,"endColumn":7,"fix":{"range":[2376,2382],"text":"            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":85,"column":1,"nodeType":null,"messageId":"insert","endLine":85,"endColumn":1,"fix":{"range":[2390,2390],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":86,"column":9,"nodeType":null,"messageId":"insert","endLine":86,"endColumn":9,"fix":{"range":[2418,2418],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `··············`","line":87,"column":1,"nodeType":null,"messageId":"replace","endLine":87,"endColumn":9,"fix":{"range":[2434,2442],"text":"              "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":88,"column":1,"nodeType":null,"messageId":"insert","endLine":88,"endColumn":1,"fix":{"range":[2462,2462],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `············`","line":89,"column":1,"nodeType":null,"messageId":"replace","endLine":89,"endColumn":7,"fix":{"range":[2506,2512],"text":"            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":90,"column":1,"nodeType":null,"messageId":"insert","endLine":90,"endColumn":1,"fix":{"range":[2514,2514],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":91,"column":1,"nodeType":null,"messageId":"insert","endLine":91,"endColumn":1,"fix":{"range":[2553,2553],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":92,"column":5,"nodeType":null,"messageId":"insert","endLine":92,"endColumn":5,"fix":{"range":[2573,2573],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":93,"column":3,"nodeType":null,"messageId":"insert","endLine":93,"endColumn":3,"fix":{"range":[2579,2579],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `······`","line":94,"column":1,"nodeType":null,"messageId":"insert","endLine":94,"endColumn":1,"fix":{"range":[2582,2582],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `········`","line":107,"column":3,"nodeType":null,"messageId":"insert","endLine":107,"endColumn":3,"fix":{"range":[3046,3046],"text":"        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `········`","line":108,"column":1,"nodeType":null,"messageId":"insert","endLine":108,"endColumn":1,"fix":{"range":[3133,3133],"text":"        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":114,"column":11,"nodeType":null,"messageId":"delete","endLine":114,"endColumn":13,"fix":{"range":[3347,3349],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `{'·'}⏎···········`","line":115,"column":25,"nodeType":null,"messageId":"insert","endLine":115,"endColumn":25,"fix":{"range":[3431,3431],"text":"{' '}\n           "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":116,"column":11,"nodeType":null,"messageId":"delete","endLine":116,"endColumn":13,"fix":{"range":[3519,3521],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··)}⏎` with `)}`","line":118,"column":7,"nodeType":null,"messageId":"replace","endLine":119,"endColumn":1,"fix":{"range":[3547,3552],"text":")}"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":57,"fixableErrorCount":0,"fixableWarningCount":55,"source":"import { Button } from '@/components/ui';\nimport { Pencil } from 'lucide-react';\n\nexport function TemplateEditorToolbar({\n  templateName,\n  autosaveStatus,\n  isRenaming,\n  setIsRenaming,\n  inputValue,\n  setInputValue,\n  slugPreview,\n  handleRename,\n  handleSaveDraft,\n  onBack,\n  nameExists,\n  // setShowNameError,\n}: {\n  templateName: string;\n  autosaveStatus: string;\n  isRenaming: boolean;\n  setIsRenaming: (v: boolean) => void;\n  inputValue: string;\n  setInputValue: (v: string) => void;\n  slugPreview: string;\n  handleRename: () => void;\n  handleSaveDraft: () => void;\n  onBack: () => void;\n  nameExists: boolean;\n  setShowNameError: (v: boolean) => void;\n}) {\n  return (\n    <>\n      {/* <div className=\"fixed top-4 left-4 z-50\">\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={onBack}\n          className=\"shadow-md bg-zinc-900 text-white hover:bg-zinc-800 border border-zinc-700\"\n        >\n          ← Back to Templates\n        </Button>\n      </div> */}\n\n{/* <div className=\"fixed top-4 left-1/2 -translate-x-1/2 z-50 flex items-center gap-2\"> */}\n<div className=\"\">\n  {isRenaming ? (\n    <>\n      <input\n        ref={(el) => {\n          if (el && document.activeElement !== el) {\n            setTimeout(() => {\n              el.focus();\n              el.select();\n            }, 0);\n          }\n        }}\n        type=\"text\"\n        value={inputValue}\n        onChange={(e) => {\n          setInputValue(e.target.value);\n          // setShowNameError(false);\n        }}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') {\n            e.preventDefault();\n            handleRename();\n          }\n          if (e.key === 'Escape') {\n            e.preventDefault();\n            setIsRenaming(false);\n          }\n        }}\n        className=\"text-xl font-bold bg-background border border-muted rounded px-3 py-2 focus:outline-none focus:ring w-full max-w-md\"\n      />\n      <Button onClick={handleRename} size=\"sm\" variant=\"default\" disabled={!inputValue.trim() || inputValue === templateName || nameExists}>Save</Button>\n      {nameExists && (\n        <span className=\"text-xs text-red-500\">That name already exists</span>\n      )}\n      <Button onClick={() => setIsRenaming(false)} size=\"sm\" variant=\"ghost\">Cancel</Button>\n    </>\n  ) : (\n    <>\n      <span className=\"text-xl font-bold text-white\">{templateName}</span>\n      <Button\n        size=\"icon\"\n        variant=\"ghost\"\n        className=\"w-7 h-7\"\n        onClick={() => setIsRenaming(true)}\n      >\n        <Pencil className=\"w-4 h-4\" />\n      </Button>\n    </>\n  )}\n</div>\n\n      <div className=\"fixed top-4 right-4 z-50 flex items-center gap-2\">\n        {/* <Button\n          variant=\"secondary\"\n          size=\"sm\"\n          disabled={autosaveStatus === 'saving'}\n          onClick={handleSaveDraft}\n          className=\"bg-zinc-800 text-white border border-zinc-700 hover:bg-zinc-700\"\n        >\n          {autosaveStatus === 'saving' ? 'Saving…' : 'Save Draft'}\n        </Button> */}\n        {autosaveStatus === 'saved' && (\n  <span className=\"text-xs text-green-400 animate-fade-out duration-1000\">✓ Saved</span>\n)}\n        {autosaveStatus === 'error' && <span className=\"text-xs text-red-400\">⚠ Error</span>}\n      </div>\n\n      {isRenaming && (\n        <div className=\"fixed top-16 left-1/2 -translate-x-1/2 z-50\">\n            <p className=\"text-xs text-muted-foreground text-center\">\n            Preview URL: <code className=\"bg-muted px-2 py-1 rounded\">/templates/{slugPreview}</code>\n            </p>\n        </div>\n        )}\n\n    </>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/template-editor.branding.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/template-editor.loader.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'err' is defined but never used.","line":50,"column":18,"nodeType":null,"messageId":"unusedVar","endLine":50,"endColumn":21}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useEffect, useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport function useTemplateLoader(templateName: string) {\n  const [template, setTemplate] = useState<any | null>(null);\n\n  useEffect(() => {\n    const loadTemplate = async () => {\n      const { data, error } = await supabase\n        .from('templates')\n        .select('*')\n        .eq('template_name', templateName)\n        .single();\n\n      if (error || !data) {\n        toast.error('Failed to load template from DB');\n        return;\n      }\n\n      const draftKey = `draft-${data.id}`;\n      const savedDraft = localStorage.getItem(draftKey);\n\n      if (savedDraft) {\n        try {\n          const parsed = JSON.parse(savedDraft);\n          if (parsed && parsed.pages && parsed.pages.length > 0) {\n            toast((t) => (\n              <span>\n                📝 A draft was found.\n                <button\n                  className=\"ml-2 underline text-blue-400\"\n                  onClick={() => {\n                    toast.dismiss(t.id);\n                    setTemplate({ ...data, data: parsed });\n                  }}\n                >\n                  Restore it?\n                </button>\n              </span>\n            ));\n            setTemplate({ ...data }); // Don't restore by default\n            return;\n          }\n        } catch (err) {\n          console.warn('Failed to parse draft JSON');\n        }\n      }\n\n      setTemplate(data);\n    };\n\n    loadTemplate();\n  }, [templateName]);\n\n  return template;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/template-editor.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'isCreating' is assigned a value but never used.","line":42,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":42,"endColumn":15},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎····insertBlock,⏎····undoInsert,⏎····recentlyInsertedBlockId,⏎····hasUndo,⏎··}·=·useTemplateInsert(setTemplate·as·unknown·as·(updater:·(prev:·Template)·=>·Template)·=>·void` with `·insertBlock,·undoInsert,·recentlyInsertedBlockId,·hasUndo·}·=·useTemplateInsert(⏎····setTemplate·as·unknown·as·(updater:·(prev:·Template)·=>·Template)·=>·void⏎··`","line":54,"column":10,"nodeType":null,"messageId":"replace","endLine":59,"endColumn":98,"fix":{"range":[1784,1957],"text":" insertBlock, undoInsert, recentlyInsertedBlockId, hasUndo } = useTemplateInsert(\n    setTemplate as unknown as (updater: (prev: Template) => Template) => void\n  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `⏎···`","line":68,"column":24,"nodeType":null,"messageId":"insert","endLine":68,"endColumn":24,"fix":{"range":[2209,2209],"text":"\n   "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎············Suggest·Block⏎··········` with `Suggest·Block`","line":119,"column":61,"nodeType":null,"messageId":"replace","endLine":121,"endColumn":11,"fix":{"range":[4096,4133],"text":"Suggest Block"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·handleUseBlock(text,·mode·as·'insert'·|·'replace',·index·as·number·|·undefined)` with `⏎············handleUseBlock(text,·mode·as·'insert'·|·'replace',·index·as·number·|·undefined)⏎··········`","line":147,"column":56,"nodeType":null,"messageId":"replace","endLine":147,"endColumn":136,"fix":{"range":[5002,5082],"text":"\n            handleUseBlock(text, mode as 'insert' | 'replace', index as number | undefined)\n          "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":4,"source":"'use client';\n\nimport { useRouter } from 'next/navigation';\nimport { useState } from 'react';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { TemplateEditorToolbar } from './template-editor-toolbar';\nimport { useTemplateEditorState } from './use-template-editor-state';\nimport { TemplateEditorContent } from './template-editor-content';\nimport { Drawer } from '@/components/ui/drawer';\nimport { Modal } from '@/components/ui/modal';\nimport VectorQueryPage from '@/app/admin/vector-query/page';\nimport type { Snapshot, Template } from '@/types/template';\nimport { Dispatch, SetStateAction } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { useTemplateInsert } from '@/hooks/useTemplateInsert';\nimport { BlocksEditor } from './blocks-editor';\nimport BlockSidebar from './block-sidebar';\n\nexport default function TemplateEditor({\n  templateName,\n  initialData,\n  onRename,\n}: {\n  templateName: string;\n  initialData?: Snapshot;\n  onRename?: (newName: string) => void;\n}) {\n  const router = useRouter();\n  const [showVectorDrawer, setShowVectorDrawer] = useState(false);\n  const [pendingText, setPendingText] = useState<string | null>(null);\n  const [pendingAction, setPendingAction] = useState<'insert' | 'replace'>('insert');\n  const [targetBlockIndex, setTargetBlockIndex] = useState<number | null>(null);\n  const [selectedIndex, setSelectedIndex] = useState<number | null>(null);\n\n  const {\n    template,\n    rawJson,\n    setRawJson,\n    livePreviewData,\n    setTemplate,\n    autosave,\n    isCreating,\n    isRenaming,\n    setIsRenaming,\n    handleRename,\n    inputValue,\n    setInputValue,\n    slugPreview,\n    handleSaveDraft,\n    nameExists,\n    blockErrors,\n  } = useTemplateEditorState({ templateName, initialData, onRename });\n\n  const {\n    insertBlock,\n    undoInsert,\n    recentlyInsertedBlockId,\n    hasUndo,\n  } = useTemplateInsert(setTemplate as unknown as (updater: (prev: Template) => Template) => void);\n\n  const handleUseBlock = (text: string, action: 'insert' | 'replace', index?: number) => {\n    setPendingText(text);\n    setPendingAction(action);\n    setTargetBlockIndex(index ?? null);\n    setShowVectorDrawer(false);\n  };\n\n  const selectedBlock = selectedIndex !== null ? template.data.pages[0].content_blocks[selectedIndex] : null;\n  const selectedId = selectedBlock?._id ?? '';\n\n  return (\n    <>\n      <ScrollArea className=\"h-screen w-full p-6\">\n        <TemplateEditorToolbar\n          templateName={template.template_name}\n          autosaveStatus={autosave.status}\n          isRenaming={isRenaming}\n          setIsRenaming={setIsRenaming}\n          inputValue={inputValue}\n          setInputValue={setInputValue}\n          slugPreview={slugPreview}\n          handleRename={handleRename}\n          handleSaveDraft={handleSaveDraft}\n          onBack={() => router.push('/admin/templates')}\n          nameExists={nameExists}\n          setShowNameError={() => {}}\n        />\n\n        <TemplateEditorContent\n          template={template as unknown as Template}\n          rawJson={rawJson}\n          setRawJson={setRawJson}\n          livePreviewData={livePreviewData}\n          setTemplate={setTemplate as unknown as Dispatch<SetStateAction<Template>>}\n          autosaveStatus={autosave.status}\n          setShowPublishModal={() => {}}\n          recentlyInsertedBlockId={recentlyInsertedBlockId ?? null}\n        />\n\n        <BlocksEditor\n          blocks={template.data.pages[0].content_blocks}\n          onChange={(updatedBlocks) =>\n            setTemplate((prev) => {\n              const updated = { ...prev };\n              updated.data.pages[0].content_blocks = updatedBlocks;\n              return updated;\n            })\n          }\n          industry={template.industry || 'default'}\n          onReplaceWithAI={(index) => {\n            setPendingAction('replace');\n            setTargetBlockIndex(index);\n            setShowVectorDrawer(true);\n          }}\n          onEdit={(index) => setSelectedIndex(index)}\n        />\n\n        <div className=\"mt-6 flex gap-4\">\n          <Button onClick={() => setShowVectorDrawer(true)}>\n            Suggest Block\n          </Button>\n          {hasUndo && (\n            <Button variant=\"ghost\" onClick={undoInsert}>\n              Undo Last Insert\n            </Button>\n          )}\n        </div>\n\n        {selectedBlock && selectedIndex !== null && (\n          <BlockSidebar\n            block={selectedBlock}\n            errors={blockErrors[selectedId] || []}\n            onChange={(updatedBlock) => {\n              setTemplate((prev) => {\n                const updated = { ...prev };\n                updated.data.pages[0].content_blocks[selectedIndex] = updatedBlock;\n                return updated;\n              });\n            }}\n            onClose={() => setSelectedIndex(null)}\n          />\n        )}\n      </ScrollArea>\n\n      <Drawer open={showVectorDrawer} onClose={() => setShowVectorDrawer(false)}>\n        <VectorQueryPage\n          onUseBlock={(text, mode = 'insert', index) => handleUseBlock(text, mode as 'insert' | 'replace', index as number | undefined)}\n        />\n      </Drawer>\n\n      <Modal show={!!pendingText} onClose={() => setPendingText(null)} title=\"🧠 Preview AI Block\">\n        <textarea\n          className=\"w-full border rounded bg-zinc-800 text-white p-2 text-sm mb-4\"\n          rows={5}\n          value={pendingText || ''}\n          onChange={(e) => setPendingText(e.target.value)}\n        />\n        <div className=\"flex justify-end gap-2\">\n          <Button variant=\"ghost\" onClick={() => setPendingText(null)}>\n            Cancel\n          </Button>\n          <Button\n            onClick={() => {\n              if (!pendingText) return;\n              if (pendingAction === 'replace' && targetBlockIndex !== null) {\n                setTemplate((prev) => {\n                  const updated = { ...prev };\n                  updated.data.pages[0].content_blocks[targetBlockIndex] = {\n                    _id: updated.data.pages[0].content_blocks[targetBlockIndex]._id,\n                    type: 'text',\n                    content: { value: pendingText },\n                    tags: ['ai'],\n                    meta: {\n                      ...updated.data.pages[0].content_blocks[targetBlockIndex].meta,\n                      prompt: pendingText,\n                    },\n                  };\n                  return updated;\n                });\n              } else {\n                insertBlock(pendingText);\n              }\n              setPendingText(null);\n            }}\n          >\n            {pendingAction === 'replace' ? 'Replace Block' : 'Insert Block'}\n          </Button>\n        </div>\n      </Modal>\n    </>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/template-fields.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/template-header.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/template-history.tsx","messages":[{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":49,"column":19,"nodeType":"JSXOpeningElement","endLine":53,"endColumn":21}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useEffect, useState } from 'react';\nimport { supabase } from '@/admin/lib/supabaseClient';\nimport TemplateVersionDiff from './template-version-diff';\nimport { Button } from '@/components/ui';\nimport toast from 'react-hot-toast';\n\nexport default function TemplateHistory({\n  template,\n  onRevert,\n}: {\n  template: any;\n  onRevert: (data: any) => void;\n}) {\n  const [versions, setVersions] = useState<any[]>([]);\n  const [selectedVersion, setSelectedVersion] = useState<any>(null);\n\n  useEffect(() => {\n    if (!template?.template_name) return;\n\n    supabase\n      .from('template_versions')\n      .select('*')\n      .eq('template_name', template.template_name)\n      .order('created_at', { ascending: false })\n      .then(({ data }) => {\n        if (data) setVersions(data);\n      });\n  }, [template?.template_name]);\n\n  const handleRevert = () => {\n    if (!selectedVersion) return;\n    onRevert({ ...template, data: selectedVersion.full_data });\n    toast.success('Template reverted to selected version');\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <h2 className=\"text-lg font-bold\">Version History</h2>\n      <ul className=\"space-y-2\">\n        {versions.map((v) => (\n          <li key={v.id} className=\"border p-3 rounded bg-white dark:bg-gray-900\">\n            <div className=\"flex justify-between items-center\">\n              <div>\n                <p className=\"text-sm font-medium\">{v.commit_message || 'No message'}</p>\n                <p className=\"text-xs text-gray-400\">\n                  {new Date(v.created_at || v.saved_at).toLocaleString()}\n                </p>\n                {v.thumbnail_url && (\n                  <img\n                    src={v.thumbnail_url}\n                    alt=\"Preview thumbnail\"\n                    className=\"mt-2 w-32 rounded border border-gray-600 shadow-sm\"\n                  />\n                )}\n              </div>\n              <button\n                className=\"text-blue-500 underline text-xs\"\n                onClick={() => setSelectedVersion(v)}\n              >\n                View Diff\n              </button>\n            </div>\n          </li>\n        ))}\n      </ul>\n\n      {selectedVersion && (\n        <div id=\"version-diff-container\" className=\"mt-6\">\n          <h3 className=\"text-sm font-semibold mb-2 text-gray-300\">Diff from selected version:</h3>\n          <TemplateVersionDiff current={template?.data} previous={selectedVersion.full_data} />\n          <div className=\"flex gap-4 mt-3\">\n            <Button size=\"sm\" variant=\"secondary\" onClick={handleRevert}>\n              Revert to This\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/template-json-editor.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":8,"column":1,"nodeType":null,"messageId":"delete","endLine":8,"endColumn":3,"fix":{"range":[420,422],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎`","line":33,"column":10,"nodeType":null,"messageId":"delete","endLine":34,"endColumn":1,"fix":{"range":[1346,1347],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··········⚠️·{validationError}⏎········` with `⚠️·{validationError}`","line":139,"column":62,"nodeType":null,"messageId":"replace","endLine":141,"endColumn":9,"fix":{"range":[4861,4901],"text":"⚠️ {validationError}"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"// components/admin/templates/template-json-editor.tsx\nimport { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui';\nimport { ChevronRight, ChevronDown } from 'lucide-react';\nimport { TemplateSaveSchema, ValidatedTemplate } from '@/admin/lib/zod/templateSaveSchema';\nimport type { JsonValue } from '@/types/json';\nimport { validateBlocksInTemplate } from '@/admin/lib/validateBlocksInTemplate';\n  \ntype TemplateJsonEditorProps = {\n  rawJson: string;\n  setRawJson: (value: string) => void;\n};\n\nexport default function TemplateJsonEditor({ rawJson, setRawJson }: TemplateJsonEditorProps) {\n  const [isReadOnly, setIsReadOnly] = useState(true);\n  const [parsedJson, setParsedJson] = useState<ValidatedTemplate | null>(null);\n  const [validationError, setValidationError] = useState<string | null>(null);\n  const [collapsed, setCollapsed] = useState(new Set<string>());\n\n  useEffect(() => {\n    try {\n      const parsed = JSON.parse(rawJson);\n      const result = TemplateSaveSchema.safeParse(parsed);\n      if (result.success) {\n        setParsedJson(result.data);\n\n        // setValidationError(null);\n        const blockErrors = validateBlocksInTemplate(result.data);\n        if (blockErrors.length > 0) {\n          setValidationError(blockErrors.join('\\n'));\n        } else {\n          setValidationError(null);\n        }\n\n      } else {\n        setParsedJson(null);\n        const formErrors = result.error.flatten();\n        setValidationError(\n          formErrors.formErrors.length > 0\n            ? formErrors.formErrors.join(', ')\n            : 'Some field(s) inside blocks or pages are incorrectly formatted.'\n        );\n        console.warn('[❌ Zod Field Errors]', formErrors);\n        console.warn('JSON failed schema validation:', result.error.flatten());\n      }\n    } catch {\n      setParsedJson(null);\n      setValidationError('Invalid JSON syntax');\n    }\n  }, [rawJson]);\n\n  const toggleCollapse = (path: string) => {\n    const newSet = new Set(collapsed);\n    if (newSet.has(path)) {\n      newSet.delete(path);\n    } else {\n      newSet.add(path);\n    }\n    setCollapsed(newSet);\n  };\n\n  const renderValue = (value: JsonValue, path = '') => {\n    const type = typeof value;\n\n    if (value === null) return <span className=\"text-pink-400\">null</span>;\n    if (Array.isArray(value)) {\n      const isCollapsed = collapsed.has(path);\n      return (\n        <div>\n          <span className=\"cursor-pointer select-none\" onClick={() => toggleCollapse(path)}>\n            {isCollapsed ? <ChevronRight size={12} /> : <ChevronDown size={12} />}\n            <span className=\"text-yellow-400\"> [Array]</span>\n          </span>\n          {!isCollapsed && (\n            <div className=\"ml-4\">\n              {value.map((v, i) => (\n                <div key={i}>{renderValue(v, `${path}[${i}]`)}</div>\n              ))}\n            </div>\n          )}\n        </div>\n      );\n    }\n\n    if (type === 'object') {\n      const isCollapsed = collapsed.has(path);\n      return (\n        <div>\n          <span className=\"cursor-pointer select-none\" onClick={() => toggleCollapse(path)}>\n            {isCollapsed ? <ChevronRight size={12} /> : <ChevronDown size={12} />}\n            <span className=\"text-blue-400\"> {'{Object}'} </span>\n          </span>\n          {!isCollapsed && (\n            <div className=\"ml-4\">\n              {Object.entries(value).map(([k, v]) => (\n                <div key={k}>\n                  <span className=\"text-green-400\">&quot;{k}&quot;</span>:{' '}\n                  {renderValue(v, `${path}.${k}`)}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      );\n    }\n\n    if (type === 'string')\n      return <span className=\"text-emerald-400\">&quot;{value as string}&quot;</span>;\n    if (type === 'number') return <span className=\"text-cyan-400\">{value as number}</span>;\n    if (type === 'boolean')\n      return <span className=\"text-orange-400\">{(value as boolean).toString()}</span>;\n    return <span className=\"text-white\">{value as string}</span>;\n  };\n\n  const handlePrettify = () => {\n    try {\n      const parsed = JSON.parse(rawJson);\n      setRawJson(JSON.stringify(parsed, null, 2));\n    } catch {\n      alert('Invalid JSON. Cannot format.');\n    }\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      <div className=\"flex justify-between items-center\">\n        <h3 className=\"text-white text-sm font-semibold\">JSON Editor</h3>\n        <div className=\"flex gap-2\">\n          <Button variant=\"secondary\" size=\"sm\" onClick={handlePrettify}>\n            Prettify\n          </Button>\n          <Button variant=\"secondary\" size=\"sm\" onClick={() => setIsReadOnly(!isReadOnly)}>\n            {isReadOnly ? 'Unlock' : 'Read-Only'}\n          </Button>\n        </div>\n      </div>\n\n      {validationError && (\n        <div className=\"text-red-400 text-sm font-mono px-1\">\n          ⚠️ {validationError}\n        </div>\n      )}\n\n      <div className=\"overflow-auto rounded border border-gray-700 bg-gray-900 font-mono text-sm text-white max-h-[500px] p-4\">\n        {isReadOnly ? (\n          parsedJson ? (\n            renderValue(parsedJson)\n          ) : (\n            <pre>{rawJson}</pre>\n          )\n        ) : (\n          <textarea\n            value={rawJson}\n            onChange={(e) => setRawJson(e.target.value)}\n            className=\"w-full h-[600px] resize-none bg-gray-900 text-white font-mono text-sm p-2 border border-gray-700 rounded\"\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/template-list-card.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·id:·string;·slug:·string;·template_name:·string;·updated_at:·string;·industry?:·string` with `⏎····id:·string;⏎····slug:·string;⏎····template_name:·string;⏎····updated_at:·string;⏎····industry?:·string;⏎·`","line":8,"column":14,"nodeType":null,"messageId":"replace","endLine":8,"endColumn":101,"fix":{"range":[201,288],"text":"\n    id: string;\n    slug: string;\n    template_name: string;\n    updated_at: string;\n    industry?: string;\n "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// components/admin/templates/template-list-card.tsx\nimport QueryLink from '@/components/query-link';\nimport { z } from 'zod';\n\nexport default function TemplateListCard({\n  template,\n}: {\n  template: { id: string; slug: string; template_name: string; updated_at: string; industry?: string };\n}) {\n  return (\n    <QueryLink\n      pathname={`/admin/templates/${template.slug}`}\n      params={{}}\n      schema={z.object({})} // or remove if params are unused\n      className=\"block border rounded px-4 py-3 hover:bg-white/5 transition\"\n    >\n      <div className=\"text-sm font-semibold text-white\">{template.template_name}</div>\n      <div className=\"text-xs text-zinc-400\">\n        {template.industry || 'General'} • Updated{' '}\n        {new Date(template.updated_at).toLocaleDateString()}\n      </div>\n    </QueryLink>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/template-page-editor.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··DndContext,⏎··closestCenter,⏎··PointerSensor,⏎··useSensor,⏎··useSensors,⏎` with `·DndContext,·closestCenter,·PointerSensor,·useSensor,·useSensors·`","line":13,"column":9,"nodeType":null,"messageId":"replace","endLine":19,"endColumn":1,"fix":{"range":[431,507],"text":" DndContext, closestCenter, PointerSensor, useSensor, useSensors "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··SortableContext,⏎··verticalListSortingStrategy,⏎··arrayMove,⏎` with `·SortableContext,·verticalListSortingStrategy,·arrayMove·`","line":20,"column":9,"nodeType":null,"messageId":"replace","endLine":24,"endColumn":1,"fix":{"range":[539,603],"text":" SortableContext, verticalListSortingStrategy, arrayMove "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":47,"column":1,"nodeType":null,"messageId":"delete","endLine":47,"endColumn":3,"fix":{"range":[1308,1310],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·items={template.data.pages.map((p)·=>·p.id)}·strategy={verticalListSortingStrategy}` with `⏎··········items={template.data.pages.map((p)·=>·p.id)}⏎··········strategy={verticalListSortingStrategy}⏎········`","line":163,"column":25,"nodeType":null,"messageId":"replace","endLine":163,"endColumn":109,"fix":{"range":[5108,5192],"text":"\n          items={template.data.pages.map((p) => p.id)}\n          strategy={verticalListSortingStrategy}\n        "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"'use client';\n\nimport { useState } from 'react';\nimport type { Template, Page } from '@/types/template';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Plus } from 'lucide-react';\nimport { industryPresets } from '@/lib/presets';\nimport { PageCard } from './page-card';\nimport { SortablePage } from './sortable-page';\n\nimport {\n  DndContext,\n  closestCenter,\n  PointerSensor,\n  useSensor,\n  useSensors,\n} from '@dnd-kit/core';\nimport {\n  SortableContext,\n  verticalListSortingStrategy,\n  arrayMove,\n} from '@dnd-kit/sortable';\n\nimport {\n  Select,\n  SelectTrigger,\n  SelectContent,\n  SelectItem,\n  SelectValue,\n} from '@/components/ui/select';\n\ntype Props = {\n  template: Template;\n  onChange: (updated: Template) => void;\n  onLivePreviewUpdate: (data: Template['data']) => void;\n};\n\nexport default function TemplatePageEditor({ template, onChange, onLivePreviewUpdate }: Props) {\n  const [newTitle, setNewTitle] = useState('');\n  const [newSlug, setNewSlug] = useState('');\n  const [newContentBlocks, setNewContentBlocks] = useState<any[]>([]);\n  const [expandedPages, setExpandedPages] = useState<Record<string, boolean>>(() =>\n    Object.fromEntries(template.data.pages.map((p) => [p.id, false]))\n  );\n  \n  const sensors = useSensors(useSensor(PointerSensor));\n\n  const handleDragEnd = (event: any) => {\n    const { active, over } = event;\n    if (!over || active.id === over.id) return;\n\n    const oldIndex = template.data.pages.findIndex((p) => p.id === active.id);\n    const newIndex = template.data.pages.findIndex((p) => p.id === over.id);\n\n    if (oldIndex < 0 || newIndex < 0) return;\n\n    const reordered = arrayMove(template.data.pages, oldIndex, newIndex);\n    const updatedTemplate = {\n      ...template,\n      data: { ...template.data, pages: reordered },\n    };\n\n    onChange(updatedTemplate);\n    onLivePreviewUpdate(updatedTemplate.data);\n  };\n\n  const getStarterPagePresets = (industry: string) => {\n    const presetBlocks = industryPresets[industry.toLowerCase()] || industryPresets.default;\n    return Object.entries(presetBlocks).map(([type, block]) => ({\n      label: `${type.charAt(0).toUpperCase() + type.slice(1)} Page`,\n      title: type.charAt(0).toUpperCase() + type.slice(1),\n      slug: type.toLowerCase(),\n      content_blocks: [block],\n    }));\n  };\n  const pagePresets = getStarterPagePresets(template.industry || 'default');\n\n  const handleAddPage = () => {\n    if (!newTitle.trim() || !newSlug.trim()) return;\n    const newPage: Page = {\n      id: crypto.randomUUID(),\n      title: newTitle.trim(),\n      slug: newSlug.trim(),\n      content_blocks: newContentBlocks,\n    };\n    const updatedTemplate = {\n      ...template,\n      data: {\n        ...template.data,\n        pages: [...template.data.pages, newPage],\n      },\n    };\n    onChange(updatedTemplate);\n    onLivePreviewUpdate(updatedTemplate.data);\n    setNewTitle('');\n    setNewSlug('');\n    setNewContentBlocks([]);\n  };\n\n  const handleRemovePage = (id: string) => {\n    const updatedTemplate = {\n      ...template,\n      data: {\n        ...template.data,\n        pages: template.data.pages.filter((p) => p.id !== id),\n      },\n    };\n    onChange(updatedTemplate);\n    onLivePreviewUpdate(updatedTemplate.data);\n  };\n\n  const handleUpdatePage = (id: string, field: keyof Page, value: string) => {\n    const updatedPages = template.data.pages.map((p) =>\n      p.id === id ? { ...p, [field]: value } : p\n    );\n    const updatedTemplate = {\n      ...template,\n      data: { ...template.data, pages: updatedPages },\n    };\n    onChange(updatedTemplate);\n    onLivePreviewUpdate(updatedTemplate.data);\n  };\n\n  const movePage = (index: number, direction: 'up' | 'down') => {\n    const pages = [...template.data.pages];\n    const targetIndex = direction === 'up' ? index - 1 : index + 1;\n    if (targetIndex < 0 || targetIndex >= pages.length) return;\n    [pages[index], pages[targetIndex]] = [pages[targetIndex], pages[index]];\n    const updatedTemplate = {\n      ...template,\n      data: { ...template.data, pages },\n    };\n    onChange(updatedTemplate);\n    onLivePreviewUpdate(updatedTemplate.data);\n  };\n\n  const togglePage = (id: string) => {\n    setExpandedPages((prev) => ({ ...prev, [id]: !prev[id] }));\n  };\n\n  const setAllPagesExpanded = (expanded: boolean) => {\n    const next = Object.fromEntries(template.data.pages.map((p) => [p.id, expanded]));\n    setExpandedPages(next);\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex justify-between items-center\">\n        <h3 className=\"text-lg font-semibold\">Template Pages</h3>\n        <div className=\"flex gap-2\">\n          <Button variant=\"ghost\" size=\"sm\" onClick={() => setAllPagesExpanded(true)}>\n            Expand All\n          </Button>\n          <Button variant=\"ghost\" size=\"sm\" onClick={() => setAllPagesExpanded(false)}>\n            Collapse All\n          </Button>\n        </div>\n      </div>\n\n      <DndContext sensors={sensors} collisionDetection={closestCenter} onDragEnd={handleDragEnd}>\n        <SortableContext items={template.data.pages.map((p) => p.id)} strategy={verticalListSortingStrategy}>\n          {template.data.pages.map((page, i) => (\n            <SortablePage key={page.id} id={page.id}>\n              <PageCard\n                page={page}\n                index={i}\n                total={template.data.pages.length}\n                template={template}\n                expanded={expandedPages[page.id] ?? true}\n                onToggle={() => togglePage(page.id)}\n                onChange={onChange}\n                onLivePreviewUpdate={onLivePreviewUpdate}\n                onUpdatePageMeta={handleUpdatePage}\n                onMovePage={movePage}\n                onRemovePage={handleRemovePage}\n              />\n            </SortablePage>\n          ))}\n        </SortableContext>\n      </DndContext>\n\n      <div className=\"border-t pt-4 space-y-2\">\n        <h4 className=\"font-medium\">Add New Page</h4>\n\n        <Label>Start from Preset</Label>\n        <Select\n          onValueChange={(label) => {\n            const preset = pagePresets.find((p) => p.label === label);\n            if (preset) {\n              setNewTitle(preset.title);\n              setNewSlug(preset.slug);\n              setNewContentBlocks(preset.content_blocks || []);\n            }\n          }}\n        >\n          <SelectTrigger>\n            <SelectValue placeholder=\"Choose a preset page\" />\n          </SelectTrigger>\n          <SelectContent className=\"radix-select-content\">\n            {pagePresets.map((preset) => (\n              <SelectItem key={preset.label} value={preset.label}>\n                {preset.label}\n              </SelectItem>\n            ))}\n          </SelectContent>\n        </Select>\n\n        <Label>Title</Label>\n        <Input value={newTitle} onChange={(e) => setNewTitle(e.target.value)} />\n\n        <Label>Slug</Label>\n        <Input value={newSlug} onChange={(e) => setNewSlug(e.target.value)} />\n\n        <Button onClick={handleAddPage} className=\"mt-2\">\n          <Plus className=\"w-4 h-4 mr-2\" /> Add Page\n        </Button>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/template-preview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/template-publish-modal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/template-save-bar.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `(⏎··········<span·className=\"text-red-500·text-xs\">⚠️·Error</span>⏎········)` with `<span·className=\"text-red-500·text-xs\">⚠️·Error</span>`","line":89,"column":36,"nodeType":null,"messageId":"replace","endLine":91,"endColumn":10,"fix":{"range":[2581,2657],"text":"<span className=\"text-red-500 text-xs\">⚠️ Error</span>"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// components/admin/templates/template-save-bar.tsx\n// Use TemplateSaveBar() when you need to save a template\n// Use getUserFromRequest() when you need the user context\n\n'use client';\n\nimport { Button } from '@/components/ui';\nimport { Dispatch, SetStateAction, useState } from 'react';\nimport { supabase } from '@/admin/lib/supabaseClient';\nimport toast from 'react-hot-toast';\n\ntype TemplateSaveBarProps = {\n  template: any;\n  rawJson: string;\n  commitMessage: string;\n  setSaveStatus: Dispatch<SetStateAction<'idle' | 'saved' | 'error'>>;\n  setHighlightErrors: Dispatch<SetStateAction<boolean>>;\n};\n\nexport default function TemplateSaveBar({\n  template,\n  rawJson,\n  commitMessage,\n  setSaveStatus,\n  setHighlightErrors,\n}: TemplateSaveBarProps) {\n  const [saveStatus, setLocalSaveStatus] = useState<'idle' | 'saved' | 'error'>('idle');\n\n  const handleSave = async () => {\n    if (\n      !template?.template_name ||\n      !template?.industry ||\n      !template?.layout ||\n      !template?.data?.pages?.length\n    ) {\n      setHighlightErrors(true);\n      return;\n    }\n\n    try {\n      const {\n        data: { user },\n        error,\n      } = await supabase.auth.getUser();\n\n      if (error || !user) {\n        throw new Error('No authenticated user');\n      }\n\n      const editor_id = user.email ?? 'unknown';\n      const payload = { ...template, data: JSON.parse(rawJson) };\n\n      const res = await fetch('/api/templates/update', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          ...payload,\n          commit_message: commitMessage,\n          editor_id,\n        }),\n      });\n\n      if (res.ok) {\n        setLocalSaveStatus('saved');\n        setSaveStatus('saved');\n        toast.success('Template saved successfully.');\n        setTimeout(() => {\n          setLocalSaveStatus('idle');\n          setSaveStatus('idle');\n        }, 3000);\n      } else {\n        throw new Error('Non-200 response');\n      }\n    } catch (err) {\n      console.error('[❌ Template Save Error]', err);\n      setLocalSaveStatus('error');\n      setSaveStatus('error');\n      toast.error('Failed to save template.');\n    }\n  };\n\n  return (\n    <div className=\"flex justify-between items-center fixed bottom-0 left-0 right-0 bg-background border-t p-4 z-50\">\n      <div className=\"flex items-center gap-2\">\n        <Button onClick={handleSave}>Save Changes</Button>\n        {saveStatus === 'saved' && (\n          <span className=\"text-green-500 text-xs animate-pulse\">✓ Saved</span>\n        )}\n        {saveStatus === 'error' && (\n          <span className=\"text-red-500 text-xs\">⚠️ Error</span>\n        )}\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/template-settings-panel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/template-version-diff.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/template-version-save-bar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/templates-index-table.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `(⏎········t.template_name.toLowerCase().includes(term)·||⏎········t.slug.toLowerCase().includes(term)⏎······` with `t.template_name.toLowerCase().includes(term)·||·t.slug.toLowerCase().includes(term`","line":44,"column":14,"nodeType":null,"messageId":"replace","endLine":47,"endColumn":7,"fix":{"range":[1259,1367],"text":"t.template_name.toLowerCase().includes(term) || t.slug.toLowerCase().includes(term"}},{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":149,"column":21,"nodeType":"JSXOpeningElement","endLine":153,"endColumn":23},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎····················size=\"sm\"⏎····················variant=\"ghost\"⏎····················onClick={()·=>·router.push(`/edit/${t.slug}`)}⏎··················` with `·size=\"sm\"·variant=\"ghost\"·onClick={()·=>·router.push(`/edit/${t.slug}`)}`","line":196,"column":26,"nodeType":null,"messageId":"replace","endLine":200,"endColumn":19,"fix":{"range":[6704,6856],"text":" size=\"sm\" variant=\"ghost\" onClick={() => router.push(`/edit/${t.slug}`)}"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"'use client';\n\nimport { useState, useMemo } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport { toast } from 'react-hot-toast';\nimport debounce from 'lodash.debounce';\n\ntype Template = {\n  id: string;\n  template_name: string;\n  slug: string;\n  updated_at: string;\n  banner_url?: string | null;\n  status?: 'draft' | 'published' | null;\n};\n\nconst dateOptions = ['Last 7 days', 'This month', 'This year', 'All time'];\n\nexport default function TemplatesIndexTable({\n  templates,\n  selectedFilter = '',\n}: {\n  templates: Template[];\n  selectedFilter?: string;\n}) {\n  const router = useRouter();\n  const [currentFilter, setCurrentFilter] = useState(selectedFilter);\n  const [search, setSearch] = useState('');\n  const [editingId, setEditingId] = useState<string | null>(null);\n  const [renames, setRenames] = useState<Record<string, string>>({});\n\n  const filtered = useMemo(() => {\n    return templates.filter((t) => {\n      const term = search.toLowerCase();\n      return (\n        t.template_name.toLowerCase().includes(term) ||\n        t.slug.toLowerCase().includes(term)\n      );\n    });\n  }, [templates, search]);\n\n  const handleFilterChange = (option: string) => {\n    const url = new URL(window.location.href);\n    if (option === 'All time') {\n      url.searchParams.delete('date');\n    } else {\n      url.searchParams.set('date', option);\n    }\n    setCurrentFilter(option);\n    router.push(url.toString());\n  };\n\n  const handleRename = useMemo(\n    () =>\n      debounce(async (id: string, newName: string) => {\n        const res = await fetch('/api/templates/rename', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ template_id: id, newName }),\n        });\n        if (res.ok) {\n          toast.success('Template renamed!');\n        } else {\n          toast.error('Failed to rename template');\n        }\n      }, 400),\n    []\n  );\n\n  const handleDuplicate = async (slug: string) => {\n    const res = await fetch(`/api/templates/duplicate?slug=${slug}`, {\n      method: 'POST',\n    });\n    if (res.ok) {\n      toast.success('Template duplicated!');\n      router.refresh();\n    } else {\n      toast.error('Duplicate failed');\n    }\n  };\n\n  const handleExport = async (id: string) => {\n    const res = await fetch(`/api/templates/export?id=${id}`);\n    if (!res.ok) return toast.error('Export failed');\n\n    const blob = await res.blob();\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `template-${id}.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-wrap gap-4 justify-between items-center\">\n        <div className=\"text-lg font-semibold text-white\">Templates</div>\n        <div className=\"flex items-center gap-2\">\n          <Input\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            placeholder=\"Search name or slug...\"\n            className=\"text-sm w-64\"\n          />\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"outline\" className=\"text-xs\">\n                {currentFilter || 'Filter by Date'}\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n              {dateOptions.map((option) => (\n                <DropdownMenuItem key={option} onClick={() => handleFilterChange(option)}>\n                  {option}\n                </DropdownMenuItem>\n              ))}\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </div>\n      </div>\n\n      <div className=\"border border-white/10 rounded overflow-x-auto\">\n        <table className=\"min-w-full text-sm\">\n          <thead>\n            <tr className=\"bg-zinc-900 text-white text-left\">\n              <th className=\"p-2 w-[60px]\">Preview</th>\n              <th className=\"p-2\">Name</th>\n              <th className=\"p-2\">Slug</th>\n              <th className=\"p-2\">Status</th>\n              <th className=\"p-2\">Updated</th>\n              <th className=\"p-2 text-right\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filtered.map((t) => (\n              <tr key={t.id} className=\"border-t border-white/10 hover:bg-zinc-800 transition\">\n                <td className=\"p-2\">\n                  {t.banner_url ? (\n                    <img\n                      src={t.banner_url}\n                      alt=\"preview\"\n                      className=\"w-12 h-8 rounded object-cover\"\n                    />\n                  ) : (\n                    <div className=\"w-12 h-8 bg-zinc-700 rounded flex items-center justify-center text-xs text-white/40\">\n                      N/A\n                    </div>\n                  )}\n                </td>\n                <td className=\"p-2\">\n                  {editingId === t.id ? (\n                    <Input\n                      value={renames[t.id] || t.template_name}\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setRenames((prev) => ({ ...prev, [t.id]: value }));\n                        handleRename(t.id, value);\n                      }}\n                      onBlur={() => setEditingId(null)}\n                      className=\"text-xs\"\n                    />\n                  ) : (\n                    <button\n                      className=\"text-white hover:underline text-left\"\n                      onClick={() => {\n                        setEditingId(t.id);\n                        setRenames((prev) => ({ ...prev, [t.id]: t.template_name }));\n                      }}\n                    >\n                      {t.template_name}\n                    </button>\n                  )}\n                </td>\n                <td className=\"p-2 text-zinc-400\">{t.slug}</td>\n                <td className=\"p-2 text-xs\">\n                  {t.status === 'published' ? (\n                    <span className=\"text-green-400\">Published</span>\n                  ) : (\n                    <span className=\"text-yellow-400\">Draft</span>\n                  )}\n                </td>\n                <td className=\"p-2 text-zinc-400\">\n                  {formatDistanceToNow(new Date(t.updated_at), { addSuffix: true })}\n                </td>\n                <td className=\"p-2 text-right space-x-1\">\n                  <Button\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    onClick={() => router.push(`/edit/${t.slug}`)}\n                  >\n                    Edit\n                  </Button>\n                  <Button size=\"sm\" variant=\"ghost\" onClick={() => handleDuplicate(t.slug)}>\n                    Duplicate\n                  </Button>\n                  <Button size=\"sm\" variant=\"ghost\" onClick={() => handleExport(t.id)}>\n                    Export\n                  </Button>\n                </td>\n              </tr>\n            ))}\n            {filtered.length === 0 && (\n              <tr>\n                <td colSpan={6} className=\"p-4 text-center text-muted-foreground italic\">\n                  No matching templates.\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/thumbnail-preview-modal.tsx","messages":[{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":20,"column":9,"nodeType":"JSXOpeningElement","endLine":24,"endColumn":11}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Dialog, DialogContent } from '@/components/ui';\n\nexport default function ThumbnailPreviewModal({\n  open,\n  onClose,\n  imageUrl,\n  message,\n  timestamp,\n}: {\n  open: boolean;\n  onClose: () => void;\n  imageUrl: string;\n  message?: string;\n  timestamp?: string;\n}) {\n  return (\n    <Dialog open={open} onOpenChange={onClose}>\n      <DialogContent className=\"bg-white dark:bg-gray-900 text-black dark:text-white max-w-xl max-h-screen overflow-y-auto p-4 space-y-4\">\n        <h2 className=\"text-lg font-bold\">Preview Snapshot</h2>\n        <img\n          src={imageUrl}\n          alt=\"Version preview\"\n          className=\"rounded shadow border border-gray-600\"\n        />\n        {message && <p className=\"text-sm text-gray-400\">📝 {message}</p>}\n        {timestamp && (\n          <p className=\"text-xs text-gray-500\">📅 {new Date(timestamp).toLocaleString()}</p>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/use-template-editor-state.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useTemplateSave' is defined but never used.","line":8,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":8,"endColumn":25},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `⏎·········`","line":41,"column":15,"nodeType":null,"messageId":"insert","endLine":41,"endColumn":15,"fix":{"range":[1651,1651],"text":"\n         "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":42,"column":1,"nodeType":null,"messageId":"insert","endLine":42,"endColumn":1,"fix":{"range":[1686,1686],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":43,"column":11,"nodeType":null,"messageId":"insert","endLine":43,"endColumn":11,"fix":{"range":[1742,1742],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":44,"column":1,"nodeType":null,"messageId":"insert","endLine":44,"endColumn":1,"fix":{"range":[1765,1765],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":45,"column":11,"nodeType":null,"messageId":"insert","endLine":45,"endColumn":11,"fix":{"range":[1810,1810],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":46,"column":1,"nodeType":null,"messageId":"insert","endLine":46,"endColumn":1,"fix":{"range":[1865,1865],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":48,"column":13,"nodeType":null,"messageId":"insert","endLine":48,"endColumn":13,"fix":{"range":[1925,1925],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":49,"column":1,"nodeType":null,"messageId":"insert","endLine":49,"endColumn":1,"fix":{"range":[1971,1971],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":50,"column":15,"nodeType":null,"messageId":"insert","endLine":50,"endColumn":15,"fix":{"range":[2020,2020],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":51,"column":1,"nodeType":null,"messageId":"insert","endLine":51,"endColumn":1,"fix":{"range":[2049,2049],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":52,"column":15,"nodeType":null,"messageId":"insert","endLine":52,"endColumn":15,"fix":{"range":[2110,2110],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":53,"column":1,"nodeType":null,"messageId":"insert","endLine":53,"endColumn":1,"fix":{"range":[2162,2162],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":54,"column":15,"nodeType":null,"messageId":"insert","endLine":54,"endColumn":15,"fix":{"range":[2228,2228],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":55,"column":1,"nodeType":null,"messageId":"insert","endLine":55,"endColumn":1,"fix":{"range":[2258,2258],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":56,"column":15,"nodeType":null,"messageId":"insert","endLine":56,"endColumn":15,"fix":{"range":[2331,2331],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":57,"column":1,"nodeType":null,"messageId":"insert","endLine":57,"endColumn":1,"fix":{"range":[2356,2356],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":58,"column":15,"nodeType":null,"messageId":"insert","endLine":58,"endColumn":15,"fix":{"range":[2453,2453],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":59,"column":15,"nodeType":null,"messageId":"insert","endLine":59,"endColumn":15,"fix":{"range":[2518,2518],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":60,"column":13,"nodeType":null,"messageId":"insert","endLine":60,"endColumn":13,"fix":{"range":[2563,2563],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":62,"column":1,"nodeType":null,"messageId":"insert","endLine":62,"endColumn":1,"fix":{"range":[2567,2567],"text":"  "}},{"ruleId":"prefer-const","severity":2,"message":"'content' is never reassigned. Use 'const' instead.","line":62,"column":17,"nodeType":"Identifier","messageId":"useConst","endLine":62,"endColumn":24,"fix":{"range":[2579,2637],"text":"const content = block.content || defaultContent[type] || {};"}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":63,"column":13,"nodeType":null,"messageId":"insert","endLine":63,"endColumn":13,"fix":{"range":[2650,2650],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":64,"column":15,"nodeType":null,"messageId":"insert","endLine":64,"endColumn":15,"fix":{"range":[2710,2710],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":65,"column":13,"nodeType":null,"messageId":"insert","endLine":65,"endColumn":13,"fix":{"range":[2745,2745],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":67,"column":1,"nodeType":null,"messageId":"insert","endLine":67,"endColumn":1,"fix":{"range":[2748,2748],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":68,"column":15,"nodeType":null,"messageId":"insert","endLine":68,"endColumn":15,"fix":{"range":[2794,2794],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":69,"column":1,"nodeType":null,"messageId":"insert","endLine":69,"endColumn":1,"fix":{"range":[2804,2804],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":70,"column":15,"nodeType":null,"messageId":"insert","endLine":70,"endColumn":15,"fix":{"range":[2838,2838],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··············` with `················`","line":71,"column":1,"nodeType":null,"messageId":"replace","endLine":71,"endColumn":15,"fix":{"range":[2847,2861],"text":"                "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":72,"column":13,"nodeType":null,"messageId":"insert","endLine":72,"endColumn":13,"fix":{"range":[2912,2912],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `············` with `··············`","line":74,"column":1,"nodeType":null,"messageId":"replace","endLine":74,"endColumn":13,"fix":{"range":[2916,2928],"text":"              "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":75,"column":13,"nodeType":null,"messageId":"insert","endLine":75,"endColumn":13,"fix":{"range":[2993,2993],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··············` with `················`","line":76,"column":1,"nodeType":null,"messageId":"replace","endLine":76,"endColumn":15,"fix":{"range":[3017,3031],"text":"                "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":78,"column":1,"nodeType":null,"messageId":"insert","endLine":78,"endColumn":1,"fix":{"range":[3067,3067],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `console.warn('[TemplateEditor]·Block·schema·validation·failed·for:',·fullBlock.type,·errorList` with `··console.warn(⏎····················'[TemplateEditor]·Block·schema·validation·failed·for:',⏎····················fullBlock.type,⏎····················errorList⏎··················`","line":79,"column":17,"nodeType":null,"messageId":"replace","endLine":79,"endColumn":111,"fix":{"range":[3143,3237],"text":"  console.warn(\n                    '[TemplateEditor] Block schema validation failed for:',\n                    fullBlock.type,\n                    errorList\n                  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":80,"column":1,"nodeType":null,"messageId":"insert","endLine":80,"endColumn":1,"fix":{"range":[3240,3240],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":81,"column":13,"nodeType":null,"messageId":"insert","endLine":81,"endColumn":13,"fix":{"range":[3268,3268],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":83,"column":1,"nodeType":null,"messageId":"insert","endLine":83,"endColumn":1,"fix":{"range":[3271,3271],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":84,"column":11,"nodeType":null,"messageId":"insert","endLine":84,"endColumn":11,"fix":{"range":[3311,3311],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":85,"column":1,"nodeType":null,"messageId":"insert","endLine":85,"endColumn":1,"fix":{"range":[3333,3333],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `'[TemplateEditor]·Auto-filled·block·content·types:',·Array.from(new·Set(autoFilled))` with `⏎········'[TemplateEditor]·Auto-filled·block·content·types:',⏎········Array.from(new·Set(autoFilled))⏎······`","line":90,"column":19,"nodeType":null,"messageId":"replace","endLine":90,"endColumn":103,"fix":{"range":[3458,3542],"text":"\n        '[TemplateEditor] Auto-filled block content types:',\n        Array.from(new Set(autoFilled))\n      "}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'setIsCreating' is assigned a value but never used.","line":101,"column":22,"nodeType":null,"messageId":"unusedVar","endLine":101,"endColumn":35},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `template.template_name,·template.id` with `⏎····template.template_name,⏎····template.id⏎··`","line":105,"column":82,"nodeType":null,"messageId":"replace","endLine":105,"endColumn":117,"fix":{"range":[4035,4070],"text":"\n    template.template_name,\n    template.id\n  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `'would·have·redirected·to',·window.location.href·+·'/admin/templates/'·+·template.id` with `⏎··········'would·have·redirected·to',⏎··········window.location.href·+·'/admin/templates/'·+·template.id⏎········`","line":114,"column":21,"nodeType":null,"messageId":"replace","endLine":114,"endColumn":105,"fix":{"range":[4369,4453],"text":"\n          'would have redirected to',\n          window.location.href + '/admin/templates/' + template.id\n        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `'would·have·redirected·to·'·+·window.location.href·+·'/admin/templates/'·+·template.id` with `⏎··········'would·have·redirected·to·'·+·window.location.href·+·'/admin/templates/'·+·template.id⏎········`","line":115,"column":15,"nodeType":null,"messageId":"replace","endLine":115,"endColumn":101,"fix":{"range":[4470,4556],"text":"\n          'would have redirected to ' + window.location.href + '/admin/templates/' + template.id\n        "}}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":45,"fixableErrorCount":1,"fixableWarningCount":43,"source":"// components/admin/templates/use-template-editor-state.ts\nimport { useState, useEffect } from 'react';\nimport { createEmptyTemplate } from '@/lib/createEmptyTemplate';\nimport { useAutosaveTemplate } from '@/hooks/useAutosaveTemplate';\nimport { useTemplateMeta } from '@/hooks/useTemplateMeta';\nimport { useTemplateJsonSync } from '@/hooks/useTemplateJsonSync';\nimport { normalizeTemplate } from '@/admin/utils/normalizeTemplate';\nimport { useTemplateSave } from '@/hooks/useTemplateSave';\nimport type { Snapshot, Template } from '@/types/template';\nimport toast from 'react-hot-toast';\nimport { validateBlock } from '@/lib/validateBlock';\nimport { Block } from '@/types/blocks';\n\nexport function useTemplateEditorState({\n  templateName,\n  initialData,\n  onRename,\n}: {\n  templateName: string;\n  initialData?: Snapshot | Template;\n  onRename?: (newName: string) => void;\n}) {\n  const fallback = createEmptyTemplate(templateName);\n  const [blockErrors, setBlockErrors] = useState<Record<string, string[]>>({});\n\n  const applyDefaults = (tpl: Partial<Template>): Snapshot => {\n    const autoFilled: string[] = [];\n    const errors: Record<string, string[]> = {};\n\n    const snapshot: Snapshot = {\n      template_name: 'template_name' in tpl ? tpl.template_name || templateName : templateName,\n      layout: tpl.layout || 'standard',\n      color_scheme: tpl.color_scheme || 'neutral',\n      theme: tpl.theme || 'default',\n      brand: tpl.brand || 'default',\n      commit: 'commit' in tpl ? tpl.commit || '' : '',\n      id: tpl.id || crypto.randomUUID(),\n      slug: tpl.slug || '',\n      industry: tpl.industry || 'default',\n      data: {\n        pages: tpl.data?.pages?.map((page) => ({\n          id: page.id || crypto.randomUUID(),\n          slug: page.slug || '',\n          title: page.title || '',\n          content_blocks: (page.content_blocks?.map((block) => {\n            const type = block.type || 'text';\n\n            const defaultContent: Record<string, any> = {\n              text: { value: '' },\n              image: { url: '', alt: '' },\n              video: { url: '', caption: '' },\n              audio: { url: '', title: '', provider: 'spotify' },\n              quote: { text: '', attribution: '' },\n              cta: { label: '', link: '' },\n              testimonial: { quote: '', attribution: '' },\n              services: { items: [] },\n              hero: { headline: '', subheadline: '', cta_text: '', cta_link: '' },\n              button: { label: '', href: '', style: 'primary' },\n              grid: { columns: 2, items: [] },\n            };\n\n            let content = block.content || defaultContent[type] || {};\n            if (!block.content && defaultContent[type]) {\n              autoFilled.push(type);\n            }\n\n            const fullBlock = {\n              ...block,\n              type,\n              content,\n              _id: block._id || crypto.randomUUID(),\n            };\n\n            const errorList = validateBlock(fullBlock as Block);\n            if (errorList.length) {\n              errors[fullBlock._id] = errorList;\n\n              if (process.env.NODE_ENV === 'development') {\n                console.warn('[TemplateEditor] Block schema validation failed for:', fullBlock.type, errorList);\n              }\n            }\n\n            return fullBlock;\n          }) ?? []) as Block[],\n        })) ?? [],\n      },\n    };\n\n    if (autoFilled.length && process.env.NODE_ENV === 'development') {\n      console.log('[TemplateEditor] Auto-filled block content types:', Array.from(new Set(autoFilled)));\n    }\n\n    setBlockErrors(errors);\n    return snapshot;\n  };\n\n  const [template, setTemplate] = useState(() =>\n    applyDefaults(initialData ? normalizeTemplate(initialData as Template) : fallback)\n  );\n\n  const [isCreating, setIsCreating] = useState(!initialData);\n  const [isRenaming, setIsRenaming] = useState(false);\n\n  const { rawJson, setRawJson, livePreviewData } = useTemplateJsonSync(template.data);\n  const { inputValue, setInputValue, slugPreview, nameExists } = useTemplateMeta(template.template_name, template.id);\n\n  const autosave = useAutosaveTemplate(template, rawJson);\n\n  useEffect(() => {\n    if (!initialData && isCreating && template?.slug) {\n      console.log('template.slug', template.slug);\n      console.log('template.id', template.id);\n      const timeout = setTimeout(() => {\n        console.log('would have redirected to', window.location.href + '/admin/templates/' + template.id);\n        alert('would have redirected to ' + window.location.href + '/admin/templates/' + template.id);\n      }, 1200);\n      return () => clearTimeout(timeout);\n    }\n  }, [isCreating, initialData, template]);\n\n  const handleSaveDraft = () => {\n    localStorage.setItem(`draft-${template.id}`, rawJson);\n    toast.success('Draft saved');\n  };\n\n  const handleRename = async () => {\n    const newName = inputValue.trim();\n    if (newName.length < 3) return toast.error('Name must be at least 3 chars.');\n    if (newName === template.template_name) return setIsRenaming(false);\n\n    const res = await fetch('/api/templates/rename', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ template_id: template.id, newName }),\n    });\n    const json = await res.json();\n    if (!res.ok) return toast.error(json?.error || 'Failed to rename');\n\n    setTemplate((prev) => ({ ...prev, template_name: newName }));\n    onRename?.(newName);\n    setIsRenaming(false);\n  };\n\n  return {\n    template,\n    setTemplate,\n    rawJson,\n    setRawJson,\n    livePreviewData,\n    autosave,\n    isCreating,\n    isRenaming,\n    setIsRenaming,\n    handleRename,\n    inputValue,\n    setInputValue,\n    slugPreview,\n    handleSaveDraft,\n    nameExists,\n    blockErrors,\n  };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/templates/version-compare-dropdowns.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'renderVersionDiff' is defined but never used.","line":5,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":5,"endColumn":27}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useEffect, useState } from 'react';\nimport { Button } from '@/components/ui';\nimport { supabase } from '@/admin/lib/supabaseClient';\nimport VersionCompareDropdowns from '@/components/admin/templates/version-compare-dropdowns';\nimport { renderVersionDiff } from '@/admin/utils/renderVersionDiff';\n\nexport default function VersionHistoryPanel({\n  slug,\n  onRestore,\n}: {\n  slug: string;\n  onRestore: (snapshotId: string, brandingProfileId: string) => void;\n}) {\n  const [versions, setVersions] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [currentVersion, setCurrentVersion] = useState<string | null>(null);\n  const [confirmingDelete, setConfirmingDelete] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchVersions = async () => {\n      const [versionRes, currentRes] = await Promise.all([\n        supabase\n          .from('published_versions')\n          .select(\n            `id, created_at, snapshot_id, label, slug, branding_profile_id, branding_profiles ( id, name, primary_color, secondary_color, font_family )`\n          )\n          .eq('slug', slug)\n          .order('created_at', { ascending: false }),\n        supabase.from('published_sites').select('snapshot_id').eq('slug', slug).maybeSingle(),\n      ]);\n\n      if (!versionRes.error) setVersions(versionRes.data || []);\n      if (!currentRes.error && currentRes.data) setCurrentVersion(currentRes.data.snapshot_id);\n      setLoading(false);\n    };\n\n    fetchVersions();\n  }, [slug]);\n\n  if (loading) return <p className=\"text-sm text-gray-500\">Loading versions...</p>;\n  if (versions.length === 0)\n    return <p className=\"text-sm text-gray-500\">No version history available.</p>;\n\n  return (\n    <div className=\"mt-4 space-y-2\">\n      <h3 className=\"font-semibold text-base\">Version History</h3>\n      <VersionCompareDropdowns slug={slug} onRestore={onRestore} />\n      <ul className=\"space-y-2\">\n        {versions.map((v) => {\n          const isCurrent = v.snapshot_id === currentVersion;\n          return (\n            <li\n              key={v.id}\n              className={`border rounded p-2 flex justify-between items-center ${isCurrent ? 'border-green-500' : 'border-gray-700'}`}\n            >\n              <div>\n                <div className=\"text-sm text-gray-100\">\n                  Snapshot: <code>{v.snapshot_id}</code>\n                </div>\n                <div className=\"text-xs text-gray-400\">Label: {v.label || 'No label'}</div>\n                <div className=\"text-xs text-gray-500\">\n                  Published: {new Date(v.created_at).toLocaleString()}\n                </div>\n                <div\n                  className=\"text-xs mt-1\"\n                  style={{\n                    fontFamily: v.branding_profiles?.font_family || 'sans-serif',\n                  }}\n                >\n                  Heading Preview in {v.branding_profiles?.font_family || 'Default'}\n                </div>\n              </div>\n              <div className=\"flex gap-2\">\n                {!isCurrent && (\n                  <Button size=\"sm\" onClick={() => onRestore(v.snapshot_id, v.branding_profile_id)}>\n                    Restore\n                  </Button>\n                )}\n                {confirmingDelete === v.id ? (\n                  <Button\n                    size=\"sm\"\n                    variant=\"destructive\"\n                    onClick={async () => {\n                      const { error } = await supabase\n                        .from('published_versions')\n                        .delete()\n                        .eq('id', v.id);\n                      if (!error) setVersions(versions.filter((ver) => ver.id !== v.id));\n                      setConfirmingDelete(null);\n                    }}\n                  >\n                    Confirm Delete\n                  </Button>\n                ) : (\n                  <Button size=\"sm\" variant=\"outline\" onClick={() => setConfirmingDelete(v.id)}>\n                    Delete\n                  </Button>\n                )}\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/test-client-provider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/tokens/email-token-modal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/tooltip.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'prevPlacement' is assigned a value but never used.","line":23,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":23,"endColumn":23},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'autoPlacement'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPrevPlacement' needs the current value of 'autoPlacement'.","line":38,"column":6,"nodeType":"ArrayExpression","endLine":38,"endColumn":17,"suggestions":[{"desc":"Update the dependencies array to be: [autoPlacement, placement]","fix":{"range":[1260,1271],"text":"[autoPlacement, placement]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { ReactNode, useEffect, useRef, useState } from 'react';\n\ninterface TooltipProps {\n  placement?: 'top' | 'bottom' | 'left' | 'right';\n  content: ReactNode;\n  children: ReactNode;\n  labelledById?: string;\n  clickable?: boolean;\n}\n\nexport default function Tooltip({\n  content,\n  children,\n  clickable = false,\n  placement = 'top',\n  labelledById = `tooltip-${Math.random().toString(36).slice(2, 10)}`,\n}: TooltipProps) {\n  const ref = useRef<HTMLDivElement>(null);\n  const [autoPlacement, setAutoPlacement] = useState<'top' | 'bottom' | 'left' | 'right'>(\n    placement\n  );\n  const [prevPlacement, setPrevPlacement] = useState<'top' | 'bottom' | 'left' | 'right'>(\n    placement\n  );\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setPrevPlacement(autoPlacement);\n    const rect = ref.current.getBoundingClientRect();\n    const buffer = 20;\n    if (placement === 'top' && rect.top < buffer) setAutoPlacement('bottom');\n    else if (placement === 'bottom' && rect.bottom > window.innerHeight - buffer)\n      setAutoPlacement('top');\n    else if (placement === 'left' && rect.left < buffer) setAutoPlacement('right');\n    else if (placement === 'right' && rect.right > window.innerWidth - buffer)\n      setAutoPlacement('left');\n  }, [placement]);\n\n  const tooltipPosition =\n    autoPlacement === 'top'\n      ? 'bottom-full mb-1 -top-6'\n      : autoPlacement === 'bottom'\n        ? 'top-full mt-1 translate-y-1'\n        : autoPlacement === 'left'\n          ? 'right-full mr-1 -left-6 top-1/2 -translate-y-1/2'\n          : 'left-full ml-1 -right-6 top-1/2 -translate-y-1/2';\n\n  const arrowStyles =\n    autoPlacement === 'top'\n      ? 'before:-bottom-1 before:border-t-zinc-700'\n      : autoPlacement === 'bottom'\n        ? 'before:-top-1 before:border-b-zinc-700'\n        : autoPlacement === 'left'\n          ? 'before:-right-1 before:border-l-zinc-700'\n          : 'before:-left-1 before:border-r-zinc-700';\n\n  return (\n    <div\n      ref={ref}\n      className=\"group relative inline-block touch-none\"\n      aria-describedby={labelledById}\n      onTouchStart={() =>\n        ref.current?.querySelector('[role=tooltip]')?.classList.add('opacity-100')\n      }\n    >\n      <span\n        role=\"tooltip\"\n        id={labelledById}\n        aria-live=\"polite\"\n        aria-hidden=\"false\"\n        tabIndex={0}\n        onKeyDown={(e) => {\n          if (e.key === 'Escape') {\n            (e.target as HTMLElement).blur();\n          }\n        }}\n        className={`opacity-0 group-hover:opacity-100 group-hover:translate-y-0 absolute left-1/2 -translate-x-1/2 transition-[top,left] duration-300 ease-in-out bg-zinc-700 text-white text-xs rounded px-2 py-1 whitespace-nowrap z-10 transition-opacity transition-transform duration-300 ${clickable ? 'pointer-events-auto cursor-pointer' : 'pointer-events-none'} ${tooltipPosition} before:content-[''] before:absolute before:left-1/2 before:-translate-x-1/2 before:border-4 before:border-transparent ${arrowStyles}`}\n      >\n        {content}\n      </span>\n      {children}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/traces/filter-bar.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'onFilter'. Either include it or remove the dependency array. If 'onFilter' changes too often, find the parent component that defines it and wrap that definition in useCallback.","line":36,"column":6,"nodeType":"ArrayExpression","endLine":36,"endColumn":29,"suggestions":[{"desc":"Update the dependencies array to be: [query, range, entries, onFilter]","fix":{"range":[957,980],"text":"[query, range, entries, onFilter]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// components/admin/traces/filter-bar.tsx\n'use client';\n\nimport { useState, useEffect } from 'react';\n\ntype TraceEntry = {\n  id: string;\n  message: string;\n  created_at: string;\n};\n\ntype FilterBarProps = {\n  entries: TraceEntry[];\n  onFilter: (filtered: TraceEntry[]) => void;\n};\n\nexport function FilterBar({ entries, onFilter }: FilterBarProps) {\n  const [query, setQuery] = useState('');\n  const [range, setRange] = useState('all');\n\n  useEffect(() => {\n    const now = Date.now();\n    const filtered = entries.filter((entry) => {\n      const matchesQuery = entry.message.toLowerCase().includes(query.toLowerCase());\n\n      const createdAt = new Date(entry.created_at).getTime();\n      const matchesTime =\n        range === 'all' ||\n        (range === '24h' && now - createdAt < 1000 * 60 * 60 * 24) ||\n        (range === '7d' && now - createdAt < 1000 * 60 * 60 * 24 * 7);\n\n      return matchesQuery && matchesTime;\n    });\n\n    onFilter(filtered);\n  }, [query, range, entries]);\n\n  return (\n    <div className=\"mb-4 flex flex-wrap gap-4 items-center text-sm text-zinc-200\">\n      <input\n        type=\"text\"\n        placeholder=\"Search messages...\"\n        className=\"bg-zinc-800 border border-zinc-600 rounded px-3 py-1 w-64\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n      />\n\n      <select\n        value={range}\n        onChange={(e) => setRange(e.target.value)}\n        className=\"bg-zinc-800 border border-zinc-600 rounded px-2 py-1\"\n      >\n        <option value=\"all\">All Time</option>\n        <option value=\"24h\">Last 24h</option>\n        <option value=\"7d\">Last 7d</option>\n      </select>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/traces/group-by-route.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··entries,⏎}:·{⏎··entries:·TraceEntry[];⏎` with `·entries·}:·{·entries:·TraceEntry[]·`","line":14,"column":31,"nodeType":null,"messageId":"replace","endLine":18,"endColumn":1,"fix":{"range":[255,297],"text":" entries }: { entries: TraceEntry[] "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `⏎····`","line":21,"column":38,"nodeType":null,"messageId":"insert","endLine":21,"endColumn":38,"fix":{"range":[388,388],"text":"\n    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":22,"column":5,"nodeType":null,"messageId":"insert","endLine":22,"endColumn":5,"fix":{"range":[410,410],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":23,"column":1,"nodeType":null,"messageId":"insert","endLine":23,"endColumn":1,"fix":{"range":[453,453],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":24,"column":5,"nodeType":null,"messageId":"insert","endLine":24,"endColumn":5,"fix":{"range":[491,491],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··},·{}·as·Record<string,·TraceEntry[]>` with `····},⏎····{}·as·Record<string,·TraceEntry[]>⏎··`","line":25,"column":1,"nodeType":null,"messageId":"replace","endLine":25,"endColumn":40,"fix":{"range":[503,542],"text":"    },\n    {} as Record<string, TraceEntry[]>\n  "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":6,"source":"// components/admin/traces/group-by-route.tsx\n'use client';\n\nimport { useState } from 'react';\n\ntype TraceEntry = {\n  id: string;\n  route: string;\n  message: string;\n  context?: Record<string, any>;\n  created_at: string;\n};\n\nexport function GroupByRoute({\n  entries,\n}: {\n  entries: TraceEntry[];\n}) {\n  const [grouped, setGrouped] = useState(true);\n\n  const groupedData = entries.reduce((acc, entry) => {\n    acc[entry.route] = acc[entry.route] || [];\n    acc[entry.route].push(entry);\n    return acc;\n  }, {} as Record<string, TraceEntry[]>);\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"mb-2 text-sm text-zinc-400\">\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={grouped}\n            onChange={() => setGrouped((v) => !v)}\n            className=\"mr-2\"\n          />\n          Group by route\n        </label>\n      </div>\n\n      {grouped\n        ? Object.entries(groupedData).map(([route, group]) => (\n            <div key={route} className=\"border border-zinc-700 rounded\">\n              <div className=\"bg-zinc-800 px-4 py-2 font-mono text-xs text-indigo-300 border-b border-zinc-700\">\n                {route}\n              </div>\n              <div className=\"divide-y divide-zinc-800\">\n                {group.map((entry) => (\n                  <div key={entry.id} className=\"p-4\">\n                    <div className=\"text-white font-medium mb-1\">{entry.message}</div>\n                    {entry.context && (\n                      <pre className=\"bg-zinc-950 text-zinc-400 p-3 text-xs rounded overflow-x-auto\">\n                        {JSON.stringify(entry.context, null, 2)}\n                      </pre>\n                    )}\n                    <div className=\"text-right text-zinc-500 text-xs mt-2\">\n                      {new Date(entry.created_at).toLocaleString()}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))\n        : entries.map((entry) => (\n            <div key={entry.id} className=\"bg-zinc-900 border border-zinc-700 rounded-lg p-4\">\n              <div className=\"text-white font-medium mb-1\">{entry.message}</div>\n              <div className=\"text-zinc-400 text-xs mb-2\">{entry.route}</div>\n              {entry.context && (\n                <pre className=\"bg-zinc-950 text-zinc-400 p-3 text-xs rounded overflow-x-auto\">\n                  {JSON.stringify(entry.context, null, 2)}\n                </pre>\n              )}\n              <div className=\"text-right text-zinc-500 text-xs mt-2\">\n                {new Date(entry.created_at).toLocaleString()}\n              </div>\n            </div>\n          ))}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/traces/trace-filter-controls.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··entries,⏎··onChange,⏎` with `·entries,·onChange·`","line":14,"column":38,"nodeType":null,"messageId":"replace","endLine":17,"endColumn":1,"fix":{"range":[313,337],"text":" entries, onChange "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·setRole(e.target.value);·applyFilter();` with `⏎··········setRole(e.target.value);⏎··········applyFilter();⏎·······`","line":41,"column":27,"nodeType":null,"messageId":"replace","endLine":41,"endColumn":67,"fix":{"range":[1265,1305],"text":"\n          setRole(e.target.value);\n          applyFilter();\n       "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `<option·key={r}·value={r}>{r}</option>` with `(⏎··········<option·key={r}·value={r}>⏎············{r}⏎··········</option>⏎········)`","line":45,"column":30,"nodeType":null,"messageId":"replace","endLine":45,"endColumn":68,"fix":{"range":[1466,1504],"text":"(\n          <option key={r} value={r}>\n            {r}\n          </option>\n        )"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·setVariant(e.target.value);·applyFilter();` with `⏎··········setVariant(e.target.value);⏎··········applyFilter();⏎·······`","line":50,"column":27,"nodeType":null,"messageId":"replace","endLine":50,"endColumn":70,"fix":{"range":[1588,1631],"text":"\n          setVariant(e.target.value);\n          applyFilter();\n       "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `<option·key={v}·value={v}>{v}</option>` with `(⏎··········<option·key={v}·value={v}>⏎············{v}⏎··········</option>⏎········)`","line":54,"column":33,"nodeType":null,"messageId":"replace","endLine":54,"endColumn":71,"fix":{"range":[1802,1840],"text":"(\n          <option key={v} value={v}>\n            {v}\n          </option>\n        )"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·setSession(e.target.value);·applyFilter();` with `⏎··········setSession(e.target.value);⏎··········applyFilter();⏎·······`","line":59,"column":27,"nodeType":null,"messageId":"replace","endLine":59,"endColumn":70,"fix":{"range":[1924,1967],"text":"\n          setSession(e.target.value);\n          applyFilter();\n       "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `<option·key={s}·value={s}>{s.slice(0,·8)}...</option>` with `(⏎··········<option·key={s}·value={s}>⏎············{s.slice(0,·8)}...⏎··········</option>⏎········)`","line":63,"column":33,"nodeType":null,"messageId":"replace","endLine":63,"endColumn":86,"fix":{"range":[2134,2187],"text":"(\n          <option key={s} value={s}>\n            {s.slice(0, 8)}...\n          </option>\n        )"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":7,"source":"// components/admin/traces/trace-filter-controls.tsx\n'use client';\n\nimport { useState } from 'react';\n\ntype TraceFilterControlsProps = {\n  initialRole?: string;\n  initialVariant?: string;\n  initialSession?: string;\n  entries: any[];\n  onChange: (filtered: any[]) => void;\n};\n\nexport function TraceFilterControls({\n  entries,\n  onChange,\n}: TraceFilterControlsProps) {\n  const [role, setRole] = useState<string>('all');\n  const [variant, setVariant] = useState<string>('all');\n  const [session, setSession] = useState<string>('all');\n\n  const allRoles = Array.from(new Set(entries.map((e) => e.role).filter(Boolean)));\n  const allVariants = Array.from(new Set(entries.map((e) => e.ab_variant).filter(Boolean)));\n  const allSessions = Array.from(new Set(entries.map((e) => e.session_id).filter(Boolean)));\n\n  const applyFilter = () => {\n    const filtered = entries.filter((entry) => {\n      return (\n        (role === 'all' || entry.role === role) &&\n        (variant === 'all' || entry.ab_variant === variant) &&\n        (session === 'all' || entry.session_id === session)\n      );\n    });\n    onChange(filtered);\n  };\n\n  return (\n    <div className=\"mb-6 flex gap-4 items-center text-sm text-zinc-200\">\n      <select\n        value={role}\n        onChange={(e) => { setRole(e.target.value); applyFilter(); }}\n        className=\"bg-zinc-800 border border-zinc-600 rounded px-2 py-1\"\n      >\n        <option value=\"all\">All Roles</option>\n        {allRoles.map((r) => <option key={r} value={r}>{r}</option>)}\n      </select>\n\n      <select\n        value={variant}\n        onChange={(e) => { setVariant(e.target.value); applyFilter(); }}\n        className=\"bg-zinc-800 border border-zinc-600 rounded px-2 py-1\"\n      >\n        <option value=\"all\">All A/B Variants</option>\n        {allVariants.map((v) => <option key={v} value={v}>{v}</option>)}\n      </select>\n\n      <select\n        value={session}\n        onChange={(e) => { setSession(e.target.value); applyFilter(); }}\n        className=\"bg-zinc-800 border border-zinc-600 rounded px-2 py-1\"\n      >\n        <option value=\"all\">All Sessions</option>\n        {allSessions.map((s) => <option key={s} value={s}>{s.slice(0, 8)}...</option>)}\n      </select>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/traces/trace-inspector.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··traceId,⏎··entries,⏎}:·{⏎··traceId:·string;⏎··entries:·any[];⏎` with `·traceId,·entries·}:·{·traceId:·string;·entries:·any[]·`","line":9,"column":33,"nodeType":null,"messageId":"replace","endLine":15,"endColumn":1,"fix":{"range":[283,348],"text":" traceId, entries }: { traceId: string; entries: any[] "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// components/admin/traces/trace-inspector.tsx\n'use client';\n\nimport { useState } from 'react';\nimport { TraceFilterControls } from './trace-filter-controls';\nimport { GroupByRoute } from './group-by-route';\nimport { FilterBar } from './filter-bar';\n\nexport function TraceInspector({\n  traceId,\n  entries,\n}: {\n  traceId: string;\n  entries: any[];\n}) {\n  const [filtered, setFiltered] = useState(entries);\n\n  return (\n    <div className=\"p-6 max-w-5xl mx-auto text-sm\">\n      <h1 className=\"text-lg font-semibold text-indigo-400 mb-2\">\n        Trace: {traceId.slice(0, 8)} ({entries.length} event{entries.length > 1 ? 's' : ''})\n      </h1>\n\n      <TraceFilterControls entries={entries} onChange={setFiltered} />\n      <FilterBar entries={filtered} onFilter={setFiltered} />\n      <GroupByRoute entries={filtered} />\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/use-smart-link-persisted.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/user-gate.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/version-history-panel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/admin/visual-schema.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/analytics/heatmap.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/animated-home-wrapper.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/animated-home.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎`","line":9,"column":1,"nodeType":null,"messageId":"delete","endLine":10,"endColumn":1,"fix":{"range":[277,278],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use client';\n\nimport { motion } from 'framer-motion';\nimport Image from 'next/image';\n\nexport default function AnimatedHome() {\n  return (\n    <main className=\"relative min-h-screen bg-zinc-950 text-white flex flex-col items-center justify-center px-6 py-12 overflow-hidden\">\n\n      {/* Logo & Title */}\n      <div className=\"z-10 text-center space-y-6\">\n        <div className=\"flex items-center justify-center gap-3\">\n          <Image\n            src=\"/favicon.ico\"\n            width={40}\n            height={40}\n            alt=\"QuickSites Logo\"\n            className=\"rounded-full\"\n          />\n          <h1 className=\"text-3xl font-bold tracking-tight text-white\">QuickSites</h1>\n        </div>\n\n        <motion.h2\n          className=\"text-4xl md:text-5xl font-extrabold bg-clip-text text-transparent bg-gradient-to-r from-indigo-400 to-purple-500\"\n          initial={{ opacity: 0, y: -10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          Your Website. One Click Away.\n        </motion.h2>\n\n        <p className=\"text-zinc-400 text-lg max-w-xl mx-auto\">\n          Turn your local business into a digital presence in minutes. No code. No hassle.\n        </p>\n\n        <motion.a\n          href=\"/login\"\n          whileHover={{ scale: 1.05 }}\n          whileTap={{ scale: 0.97 }}\n          className=\"inline-block mt-6 px-6 py-3 bg-indigo-600 hover:bg-indigo-700 text-white text-base font-medium rounded-lg shadow-lg transition-all\"\n        >\n          Log In to Get Started\n        </motion.a>\n      </div>\n\n      {/* Footer */}\n      <footer className=\"absolute bottom-6 text-xs text-zinc-600 z-10\">\n        &copy; {new Date().getFullYear()} QuickSites.ai — All rights reserved.\n      </footer>\n    </main>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/app-header-button.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/assistant-widget.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Loader' is defined but never used.","line":4,"column":15,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":21},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `······⏎`","line":84,"column":6,"nodeType":null,"messageId":"delete","endLine":85,"endColumn":1,"fix":{"range":[2154,2161],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use client';\n\nimport { useEffect, useRef, useState } from 'react';\nimport { Bot, Loader, X, Trash2 } from 'lucide-react';\nimport { SiteFlags } from '@/lib/site-config';\nimport clsx from 'clsx';\n\ntype Message = {\n  role: 'user' | 'assistant';\n  content: string;\n};\n\nconst LOCAL_CHAT_KEY = 'quicksites::chat-history';\n\nexport default function AssistantWidget() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const scrollRef = useRef<HTMLDivElement>(null);\n\n  // Load chat history\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      const stored = localStorage.getItem(LOCAL_CHAT_KEY);\n      if (stored) setMessages(JSON.parse(stored));\n    }\n  }, []);\n\n  // Save chat history\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem(LOCAL_CHAT_KEY, JSON.stringify(messages));\n    }\n  }, [messages]);\n\n  // Auto-scroll to bottom\n  useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n    }\n  }, [messages, typing]);\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    const newMessages = [...messages, { role: 'user', content: input }];\n    setMessages(newMessages as Message[]);\n    setInput('');\n    setTyping(true);\n    setLoading(true);\n\n    const res = await fetch('/api/ask-assistant', {\n      method: 'POST',\n      body: JSON.stringify({ messages: newMessages }),\n    });\n\n    const data = await res.json();\n\n    setTyping(false);\n    setMessages([\n      ...(newMessages as Message[]),\n      {\n        role: 'assistant',\n        content: data.reply || 'Sorry, something went wrong.',\n      } as Message,\n    ]);\n    setLoading(false);\n  };\n\n  const clearChat = () => {\n    setMessages([]);\n    localStorage.removeItem(LOCAL_CHAT_KEY);\n  };\n\n  return (\n    <div\n      className={clsx(\n        'fixed bottom-4 right-4 z-50 group',\n        SiteFlags.showMobileWidget ? 'block' : 'hidden',\n        'md:block'\n      )}\n    >      \n\n      <button\n        onClick={() => setIsOpen((o) => !o)}\n        className=\"w-14 h-14 rounded-full bg-indigo-600 hover:bg-indigo-700 flex items-center justify-center text-white shadow-lg\"\n        title=\"Ask QuickSites Assistant\"\n      >\n        {isOpen ? <X className=\"w-5 h-5\" /> : <Bot className=\"w-6 h-6\" />}\n      </button>\n\n      {isOpen && (\n        <div className=\"absolute bottom-20 right-0 w-[320px] bg-zinc-950 border border-zinc-700 rounded-lg shadow-2xl flex flex-col text-white text-sm\">\n          <div className=\"flex items-center justify-between p-4 border-b border-zinc-700\">\n            <h3 className=\"font-semibold text-lg text-indigo-400\">QuickSites Assistant</h3>\n            <button\n              onClick={clearChat}\n              className=\"text-zinc-400 hover:text-red-400\"\n              title=\"Clear conversation\"\n            >\n              <Trash2 className=\"w-4 h-4\" />\n            </button>\n          </div>\n\n          <div\n            ref={scrollRef}\n            className=\"flex flex-col gap-2 px-4 py-3 overflow-y-auto max-h-[300px] text-zinc-300\"\n          >\n            {messages.map((m, i) => (\n              <div\n                key={i}\n                className={`px-3 py-2 rounded-lg max-w-[85%] ${\n                  m.role === 'user'\n                    ? 'bg-zinc-800 self-end text-right'\n                    : 'bg-zinc-900 self-start text-left'\n                }`}\n              >\n                {m.content}\n              </div>\n            ))}\n\n            {typing && (\n              <div className=\"self-start px-3 py-2 rounded-lg bg-zinc-900 text-xs animate-pulse text-zinc-400\">\n                Assistant is typing...\n              </div>\n            )}\n          </div>\n\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              sendMessage();\n            }}\n            className=\"flex gap-2 p-4 border-t border-zinc-700\"\n          >\n            <input\n              className=\"flex-1 px-3 py-2 rounded bg-zinc-800 border border-zinc-600 text-sm\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              placeholder=\"Ask me something...\"\n              disabled={loading}\n            />\n            <button\n              type=\"submit\"\n              className=\"bg-indigo-600 hover:bg-indigo-700 px-3 py-2 rounded text-white text-xs font-medium\"\n              disabled={loading}\n            >\n              {loading ? '...' : 'Send'}\n            </button>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/auth/logout-button.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/auth/require-login.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'redirectTo' and 'router'. Either include them or remove the dependency array.","line":23,"column":6,"nodeType":"ArrayExpression","endLine":23,"endColumn":32,"suggestions":[{"desc":"Update the dependencies array to be: [loading, isAuthenticated, router, redirectTo]","fix":{"range":[575,601],"text":"[loading, isAuthenticated, router, redirectTo]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useLoginStatus } from '@/hooks/useLoginStatus';\nimport { useRouter } from 'next/navigation';\nimport { useEffect } from 'react';\n\nexport default function RequireLogin({\n  children,\n  fallback = null,\n  redirectTo = '/login',\n}: {\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n  redirectTo?: string;\n}) {\n  const { isAuthenticated, loading } = useLoginStatus();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (!loading && !isAuthenticated) {\n      router.replace(`${redirectTo}?redirect=${window.location.pathname}`);\n    }\n  }, [loading, isAuthenticated]);\n\n  if (loading) return fallback;\n  if (!isAuthenticated) return null;\n\n  return <>{children}</>;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/auth/require-role.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎····?·role.includes(currentRole)⏎···` with `·?·role.includes(currentRole)`","line":16,"column":38,"nodeType":null,"messageId":"replace","endLine":18,"endColumn":4,"fix":{"range":[411,448],"text":" ? role.includes(currentRole)"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// lib/components/auth/RequireRole.tsx\n'use client';\n\nimport { ReactNode } from 'react';\nimport { useSession } from '@/lib/providers/SessionProvider';\n\ntype Props = {\n  role: string | string[];\n  fallback?: ReactNode;\n  children: ReactNode;\n};\n\nexport default function RequireRole({ role, fallback = null, children }: Props) {\n  const { role: currentRole } = useSession();\n\n  const allowed = Array.isArray(role)\n    ? role.includes(currentRole)\n    : currentRole === role;\n\n  return allowed ? <>{children}</> : <>{fallback}</>;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/auth/user-menu.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `document?.body?.dataset?.traceId·??·''` with `(document?.body?.dataset?.traceId·??·'')`","line":10,"column":51,"nodeType":null,"messageId":"replace","endLine":10,"endColumn":89,"fix":{"range":[283,321],"text":"(document?.body?.dataset?.traceId ?? '')"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `document?.body?.dataset?.abVariant·??·''` with `(document?.body?.dataset?.abVariant·??·'')`","line":11,"column":53,"nodeType":null,"messageId":"replace","endLine":11,"endColumn":93,"fix":{"range":[380,420],"text":"(document?.body?.dataset?.abVariant ?? '')"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `document?.body?.dataset?.userRole·??·'guest'` with `(document?.body?.dataset?.userRole·??·'guest')`","line":12,"column":48,"nodeType":null,"messageId":"replace","endLine":12,"endColumn":92,"fix":{"range":[474,518],"text":"(document?.body?.dataset?.userRole ?? 'guest')"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"'use client';\n\nimport { useLoginStatus } from '@/hooks/useLoginStatus';\nimport LogoutButton from './logout-button';\nimport Image from 'next/image';\n\nexport default function UserMenu() {\n  const { user, loading } = useLoginStatus();\n\n  const traceId = typeof window !== 'undefined' ? document?.body?.dataset?.traceId ?? '' : '';\n  const abVariant = typeof window !== 'undefined' ? document?.body?.dataset?.abVariant ?? '' : '';\n  const role = typeof window !== 'undefined' ? document?.body?.dataset?.userRole ?? 'guest' : '';\n\n  if (loading || !user) return null;\n\n  return (\n    <div className=\"text-sm text-zinc-300 flex flex-col gap-2 p-4 border border-zinc-700 rounded bg-zinc-900 shadow\">\n      <div className=\"flex items-center gap-3\">\n        {user.user_metadata?.avatar_url && (\n          <Image\n            src={user.user_metadata.avatar_url}\n            alt=\"Avatar\"\n            width={32}\n            height={32}\n            className=\"rounded-full\"\n          />\n        )}\n        <div className=\"flex flex-col\">\n          <span className=\"text-white\">{user.email}</span>\n          <span className=\"text-xs text-zinc-500\">Role: {role}</span>\n        </div>\n      </div>\n\n      {abVariant && (\n        <div className=\"text-xs text-zinc-500\">\n          A/B Variant: <span className=\"text-indigo-400\">{abVariant}</span>\n        </div>\n      )}\n\n      {traceId && (\n        <div className=\"text-xs text-zinc-500 break-all\">\n          Trace ID: <span className=\"text-zinc-400\">{traceId.slice(0, 8)}...</span>\n        </div>\n      )}\n\n      <LogoutButton />\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/background-glow.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎······className={clsx('absolute·inset-0·z-0·pointer-events-none',·className)}⏎······aria-hidden=\"true\"⏎····` with `·className={clsx('absolute·inset-0·z-0·pointer-events-none',·className)}·aria-hidden=\"true\"`","line":41,"column":9,"nodeType":null,"messageId":"replace","endLine":44,"endColumn":5,"fix":{"range":[1084,1192],"text":" className={clsx('absolute inset-0 z-0 pointer-events-none', className)} aria-hidden=\"true\""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use client';\n\nimport clsx from 'clsx';\n// import { useEffect, useState } from 'react';\n// import { useMediaQuery } from '../hooks/useMediaQuery';\n\ntype BackgroundGlowProps = {\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  intensity?: number;\n  colors?: string[];\n  className?: string;\n};\n\nconst sizeMap = {\n  sm: 'w-[80%] h-[80%]',\n  md: 'w-[100%] h-[100%]',\n  lg: 'w-[120%] h-[120%]',\n  xl: 'w-[140%] h-[140%]',\n};\n\nexport default function BackgroundGlow({\n  size = 'xl',\n  intensity = 0.2,\n  colors = ['from-purple-600', 'via-blue-500', 'to-pink-500'],\n  className = '',\n}: BackgroundGlowProps) {\n  // const isLargeScreen = useMediaQuery('(min-width: 768px)');\n  // const [prefersReducedMotion, setReducedMotion] = useState(false);\n\n  // useEffect(() => {\n  //   const media = window.matchMedia('(prefers-reduced-motion: reduce)');\n  //   setReducedMotion(media.matches);\n  // }, []);\n\n  // if (!isLargeScreen || prefersReducedMotion) return null;\n\n  const gradientClass = `bg-gradient-to-tr ${colors.join(' ')}`;\n  const opacity = Math.min(Math.max(intensity, 0), 1);\n\n  return (\n    <div\n      className={clsx('absolute inset-0 z-0 pointer-events-none', className)}\n      aria-hidden=\"true\"\n    >\n      <div\n        className={clsx(\n          'absolute -top-1/2 left-1/2 rounded-full blur-3xl motion-safe:animate-pulse-slow',\n          sizeMap[size],\n          gradientClass\n        )}\n        style={{ opacity }}\n      />\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/blog-sidebar.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Insert `;`","line":12,"column":13,"nodeType":null,"messageId":"insert","endLine":12,"endColumn":13,"fix":{"range":[326,326],"text":";"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// components/blog-sidebar.tsx\nimport QueryLink from '@/components/query-link';\nimport { blogQuerySchema } from '@/lib/querySchemas/blog';\n\n<QueryLink\n  schema={blogQuerySchema}\n  pathname=\"/blog\"\n  params={{ category: 'ai', tag: 'transformers' }}\n  className=\"text-blue-400 hover:underline\"\n>\n  AI + Transformers\n</QueryLink>\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/checkin-map.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/command-palette.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/dev-tools-widget/CookieEditor.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·cookies,·onChange,·onDelete·` with `⏎··cookies,⏎··onChange,⏎··onDelete,⏎`","line":6,"column":31,"nodeType":null,"messageId":"replace","endLine":6,"endColumn":60,"fix":{"range":[128,157],"text":"\n  cookies,\n  onChange,\n  onDelete,\n"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// components/dev-tools-widget/CookieEditor.tsx\n'use client';\n\nimport { useState } from 'react';\n\nexport function CookieEditor({ cookies, onChange, onDelete }: {\n  cookies: { [key: string]: string };\n  onChange: (key: string, value: string) => void;\n  onDelete: (key: string) => void;\n}) {\n  const [filter, setFilter] = useState('');\n\n  const filtered = Object.entries(cookies).filter(([key]) =>\n    key.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <div className=\"pt-3\">\n      <div className=\"text-white font-semibold mb-1\">Cookies</div>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={(e) => setFilter(e.target.value)}\n        placeholder=\"Filter cookies...\"\n        className=\"w-full bg-zinc-800 text-white px-2 py-1 mb-2 rounded text-xs\"\n      />\n      {filtered.length === 0 ? (\n        <div className=\"text-zinc-500\">No matching cookies</div>\n      ) : (\n        <ul className=\"space-y-1\">\n          {filtered.map(([key, value]) => (\n            <li key={key} className=\"flex items-center gap-2\">\n              <span className=\"truncate max-w-[150px] text-zinc-300\">{key}</span>\n              <input\n                type=\"text\"\n                value={value}\n                onChange={(e) => onChange(key, e.target.value)}\n                className=\"flex-1 bg-zinc-800 text-white px-2 py-1 rounded text-xs border border-zinc-600\"\n              />\n              <button\n                onClick={() => onDelete(key)}\n                className=\"text-red-400 hover:underline text-xs\"\n              >\n                Clear\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/dev-tools-widget/DevToolsPanel.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":5,"column":1,"nodeType":null,"messageId":"insert","endLine":5,"endColumn":1,"fix":{"range":[79,79],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":6,"column":1,"nodeType":null,"messageId":"insert","endLine":6,"endColumn":1,"fix":{"range":[122,122],"text":"  "}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'minimized' is assigned a value but never used. Allowed unused args must match /^_/u.","line":10,"column":33,"nodeType":null,"messageId":"unusedVar","endLine":10,"endColumn":42}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"// components/dev-tools-widget/DevToolsPanel.tsx\n'use client';\n\ntype Props = {\n//   layout: 'compact' | 'cozy' | 'debug';\n//   toggleLayout: () => void;\n  minimized: boolean;\n};\n\nexport function DevToolsPanel({ minimized = true }: Props) {\n  return (\n    <div className=\"font-semibold text-white mb-1 flex justify-between items-center\">\n      <span>Developer Tools</span>\n      {/* {!minimized && (\n        <button onClick={toggleLayout} className=\"text-xs text-blue-300 underline\">\n          {layout}\n        </button>\n      )} */}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/dev-tools-widget/HeaderViewer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/dev-tools-widget/MockGeolocationEditor.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'onChange', 'setLoading', and 'setLocationQuery'. Either include them or remove the dependency array. If 'setLoading' changes too often, find the parent component that defines it and wrap that definition in useCallback.","line":41,"column":6,"nodeType":"ArrayExpression","endLine":41,"endColumn":21,"suggestions":[{"desc":"Update the dependencies array to be: [locationQuery, onChange, setLoading, setLocationQuery]","fix":{"range":[1088,1103],"text":"[locationQuery, onChange, setLoading, setLocationQuery]"}}]},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··············onClick={onDelete}⏎··············className=\"text-red-400·hover:underline·ml-2\"⏎············` with `·onClick={onDelete}·className=\"text-red-400·hover:underline·ml-2\"`","line":57,"column":20,"nodeType":null,"messageId":"replace","endLine":60,"endColumn":13,"fix":{"range":[1698,1804],"text":" onClick={onDelete} className=\"text-red-400 hover:underline ml-2\""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// components/dev-tools-widget/MockGeolocationEditor.tsx\n'use client';\n\nimport { useEffect } from 'react';\nimport { getLatLonFromQuery } from '@/lib/utils/location';\nimport { SectionToggle } from './SectionToggle';\n\nexport function MockGeolocationEditor({\n  cookieValue,\n  onChange,\n  onDelete,\n  locationQuery,\n  setLocationQuery,\n  loading,\n  setLoading,\n  activeGeo,\n  collapsedByDefault = false,\n}: {\n  cookieValue: string;\n  onChange: (key: string, value: string) => void;\n  onDelete: () => void;\n  locationQuery: string;\n  setLocationQuery: (v: string) => void;\n  loading: boolean;\n  setLoading: (v: boolean) => void;\n  activeGeo: { lat?: string; lon?: string };\n  collapsedByDefault?: boolean;\n}) {\n  useEffect(() => {\n    if (!locationQuery) return;\n    const delay = setTimeout(async () => {\n      setLoading(true);\n      const result = await getLatLonFromQuery(locationQuery);\n      if (result) {\n        onChange('mock-geo', `${result.lat},${result.lon}`);\n        setLocationQuery('');\n      }\n      setLoading(false);\n    }, 1000);\n    return () => clearTimeout(delay);\n  }, [locationQuery]);\n\n  return (\n    <SectionToggle title=\"📍 Mock Geolocation\" collapsedByDefault={collapsedByDefault}>\n      <div className=\"space-y-2\">\n        <input\n          className=\"w-full px-2 py-1 text-xs rounded bg-zinc-800 border border-zinc-600\"\n          type=\"text\"\n          placeholder=\"Enter city, state...\"\n          value={locationQuery}\n          onChange={(e) => setLocationQuery(e.target.value)}\n        />\n\n        {cookieValue && (\n          <div className=\"text-zinc-400 text-xs\">\n            Current: <code className=\"text-white font-mono\">{cookieValue}</code>{' '}\n            <button\n              onClick={onDelete}\n              className=\"text-red-400 hover:underline ml-2\"\n            >\n              Clear\n            </button>\n          </div>\n        )}\n\n        {activeGeo.lat && activeGeo.lon && (\n          <div className=\"text-xs text-emerald-400\">\n            Navigator: {activeGeo.lat}, {activeGeo.lon}\n          </div>\n        )}\n\n        {loading && <div className=\"text-xs text-zinc-500\">Searching...</div>}\n      </div>\n    </SectionToggle>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/dev-tools-widget/MockUserEditor.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎············className=\"text-green-400·underline\"⏎············onClick={handleSave}⏎··········` with `·className=\"text-green-400·underline\"·onClick={handleSave}`","line":72,"column":18,"nodeType":null,"messageId":"replace","endLine":75,"endColumn":11,"fix":{"range":[2346,2439],"text":" className=\"text-green-400 underline\" onClick={handleSave}"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎············className=\"text-red-400·underline\"⏎············onClick={handleClear}⏎··········` with `·className=\"text-red-400·underline\"·onClick={handleClear}`","line":78,"column":18,"nodeType":null,"messageId":"replace","endLine":81,"endColumn":11,"fix":{"range":[2495,2587],"text":" className=\"text-red-400 underline\" onClick={handleClear}"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"// components/dev-tools-widget/MockUserEditor.tsx\n'use client';\n\nimport { useState } from 'react';\nimport { SectionToggle } from './SectionToggle';\n\nexport function MockUserEditor({\n  cookies,\n  onChange,\n  onDelete,\n  collapsedByDefault,\n}: {\n  cookies: { [key: string]: string };\n  onChange: (key: string, value: string) => void;\n  onDelete: (key: string) => void;\n  collapsedByDefault?: boolean;\n}) {\n  const [email, setEmail] = useState(cookies['mock-user-email'] || '');\n  const [id, setId] = useState(cookies['mock-user-id'] || '');\n  const [role, setRole] = useState(cookies['mock-user-role'] || 'viewer');\n\n  const handleSave = () => {\n    onChange('mock-user-email', email);\n    onChange('mock-user-id', id);\n    onChange('mock-user-role', role);\n  };\n\n  const handleClear = () => {\n    onDelete('mock-user-email');\n    onDelete('mock-user-id');\n    onDelete('mock-user-role');\n    setEmail('');\n    setId('');\n    setRole('viewer');\n  };\n\n  return (\n    <SectionToggle title=\"🧪 Mock User\" collapsedByDefault={collapsedByDefault}>\n      <div className=\"space-y-2 text-xs\">\n        <div className=\"flex flex-col\">\n          <label className=\"text-zinc-400\">Email</label>\n          <input\n            className=\"bg-zinc-800 border border-zinc-700 rounded px-2 py-1\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"test@example.com\"\n          />\n        </div>\n        <div className=\"flex flex-col\">\n          <label className=\"text-zinc-400\">User ID</label>\n          <input\n            className=\"bg-zinc-800 border border-zinc-700 rounded px-2 py-1\"\n            value={id}\n            onChange={(e) => setId(e.target.value)}\n            placeholder=\"uuid...\"\n          />\n        </div>\n        <div className=\"flex flex-col\">\n          <label className=\"text-zinc-400\">Role</label>\n          <select\n            className=\"bg-zinc-800 border border-zinc-700 rounded px-2 py-1\"\n            value={role}\n            onChange={(e) => setRole(e.target.value)}\n          >\n            <option value=\"viewer\">viewer</option>\n            <option value=\"reseller\">reseller</option>\n            <option value=\"admin\">admin</option>\n            <option value=\"owner\">owner</option>\n          </select>\n        </div>\n        <div className=\"flex justify-between pt-2\">\n          <button\n            className=\"text-green-400 underline\"\n            onClick={handleSave}\n          >\n            Save\n          </button>\n          <button\n            className=\"text-red-400 underline\"\n            onClick={handleClear}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    </SectionToggle>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/dev-tools-widget/SectionToggle.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/dev-tools-widget/SessionViewer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/dev-tools-widget/TopMetadataSummary.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":3,"column":3,"nodeType":null,"messageId":"delete","endLine":3,"endColumn":5,"fix":{"range":[93,95],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":4,"column":1,"nodeType":null,"messageId":"replace","endLine":4,"endColumn":5,"fix":{"range":[106,110],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":5,"column":1,"nodeType":null,"messageId":"replace","endLine":5,"endColumn":5,"fix":{"range":[121,125],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":6,"column":1,"nodeType":null,"messageId":"delete","endLine":6,"endColumn":3,"fix":{"range":[138,140],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":7,"column":1,"nodeType":null,"messageId":"replace","endLine":7,"endColumn":5,"fix":{"range":[145,149],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":8,"column":1,"nodeType":null,"messageId":"replace","endLine":8,"endColumn":5,"fix":{"range":[169,173],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":9,"column":1,"nodeType":null,"messageId":"replace","endLine":9,"endColumn":5,"fix":{"range":[193,197],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":10,"column":1,"nodeType":null,"messageId":"delete","endLine":10,"endColumn":3,"fix":{"range":[219,221],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":11,"column":1,"nodeType":null,"messageId":"replace","endLine":11,"endColumn":5,"fix":{"range":[226,230],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":12,"column":1,"nodeType":null,"messageId":"delete","endLine":12,"endColumn":3,"fix":{"range":[239,241],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":13,"column":1,"nodeType":null,"messageId":"delete","endLine":13,"endColumn":3,"fix":{"range":[278,280],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":14,"column":9,"nodeType":null,"messageId":"delete","endLine":14,"endColumn":11,"fix":{"range":[312,314],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":15,"column":1,"nodeType":null,"messageId":"delete","endLine":15,"endColumn":3,"fix":{"range":[368,370],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":16,"column":9,"nodeType":null,"messageId":"delete","endLine":16,"endColumn":11,"fix":{"range":[467,469],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":17,"column":1,"nodeType":null,"messageId":"delete","endLine":17,"endColumn":3,"fix":{"range":[476,478],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··{abVariant·&&·(⏎··········<div·className=\"text-emerald-300·text-xs\">AB·Variant:·{abVariant}</div>⏎········)` with `{abVariant·&&·<div·className=\"text-emerald-300·text-xs\">AB·Variant:·{abVariant}</div>`","line":18,"column":7,"nodeType":null,"messageId":"replace","endLine":20,"endColumn":10,"fix":{"range":[493,602],"text":"{abVariant && <div className=\"text-emerald-300 text-xs\">AB Variant: {abVariant}</div>"}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":21,"column":1,"nodeType":null,"messageId":"delete","endLine":21,"endColumn":3,"fix":{"range":[604,606],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":22,"column":1,"nodeType":null,"messageId":"delete","endLine":22,"endColumn":3,"fix":{"range":[628,630],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":23,"column":7,"nodeType":null,"messageId":"delete","endLine":23,"endColumn":9,"fix":{"range":[726,728],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":24,"column":1,"nodeType":null,"messageId":"delete","endLine":24,"endColumn":3,"fix":{"range":[731,733],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":25,"column":1,"nodeType":null,"messageId":"replace","endLine":25,"endColumn":5,"fix":{"range":[744,748],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":26,"column":1,"nodeType":null,"messageId":"delete","endLine":26,"endColumn":3,"fix":{"range":[751,753],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":27,"column":1,"nodeType":null,"messageId":"delete","endLine":27,"endColumn":3,"fix":{"range":[755,757],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":23,"source":"// components/dev-tools-widget/TopMetadataSummary.tsx\nexport function TopMetadataSummary({\n    abVariant,\n    sessionId,\n    hasMockUser,\n  }: {\n    abVariant?: string;\n    sessionId?: string;\n    hasMockUser: boolean;\n  }) {\n    return (\n      <div className=\"space-y-1 mb-2\">\n        {hasMockUser && (\n          <div className=\"text-yellow-400 text-xs text-center\">\n            ⚠️ Mock user override is set. App state may not reflect real Supabase session.\n          </div>\n        )}\n        {abVariant && (\n          <div className=\"text-emerald-300 text-xs\">AB Variant: {abVariant}</div>\n        )}\n        {sessionId && (\n          <div className=\"text-blue-300 text-xs\">Session ID: {sessionId.slice(0, 8)}…</div>\n        )}\n      </div>\n    );\n  }\n  ","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/dev-tools-widget/index.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'showJwt' is assigned a value but never used.","line":26,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":26,"endColumn":17},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'setShowJwt' is assigned a value but never used.","line":26,"column":19,"nodeType":null,"messageId":"unusedVar","endLine":26,"endColumn":29},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'showMetadata' is assigned a value but never used.","line":27,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":27,"endColumn":22},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'setShowMetadata' is assigned a value but never used.","line":27,"column":24,"nodeType":null,"messageId":"unusedVar","endLine":27,"endColumn":39},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'jwtPayload' is assigned a value but never used.","line":28,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":28,"endColumn":20},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `process.env.NEXT_PUBLIC_SUPABASE_URL!,·process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!` with `⏎······process.env.NEXT_PUBLIC_SUPABASE_URL!,⏎······process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!⏎····`","line":40,"column":45,"nodeType":null,"messageId":"replace","endLine":40,"endColumn":126,"fix":{"range":[1725,1806],"text":"\n      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `mockGeo·?·{·lat:·mockGeo.lat.toString(),·lon:·mockGeo.lon.toString()·}·:·{·lat:·'',·lon:·''·}` with `⏎··········mockGeo⏎············?·{·lat:·mockGeo.lat.toString(),·lon:·mockGeo.lon.toString()·}⏎············:·{·lat:·'',·lon:·''·}⏎········`","line":161,"column":20,"nodeType":null,"messageId":"replace","endLine":161,"endColumn":113,"fix":{"range":[5409,5502],"text":"\n          mockGeo\n            ? { lat: mockGeo.lat.toString(), lon: mockGeo.lon.toString() }\n            : { lat: '', lon: '' }\n        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎········sessionInfo={session}⏎·····` with `·sessionInfo={session}`","line":169,"column":21,"nodeType":null,"messageId":"replace","endLine":171,"endColumn":6,"fix":{"range":[5707,5743],"text":" sessionInfo={session}"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··········onClick={()·=>·setMinimized(true)}⏎··········className=\"text-xs·text-zinc-400·underline\"⏎········` with `·onClick={()·=>·setMinimized(true)}·className=\"text-xs·text-zinc-400·underline\"`","line":173,"column":16,"nodeType":null,"messageId":"replace","endLine":176,"endColumn":9,"fix":{"range":[5825,5933],"text":" onClick={() => setMinimized(true)} className=\"text-xs text-zinc-400 underline\""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··········onClick={copyDebugState}⏎··········className=\"text-xs·text-blue-400·underline\"⏎········` with `·onClick={copyDebugState}·className=\"text-xs·text-blue-400·underline\"`","line":179,"column":16,"nodeType":null,"messageId":"replace","endLine":182,"endColumn":9,"fix":{"range":[5987,6085],"text":" onClick={copyDebugState} className=\"text-xs text-blue-400 underline\""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":5,"source":"// components/dev-tools-widget/index.tsx\n'use client';\n\nimport { useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport { useMockGeolocation } from '@/hooks/useMockGeolocation';\nimport { useRequestMeta } from '@/hooks/useRequestMeta';\nimport type { Database } from '@/types/supabase';\nimport type { Session } from '@supabase/supabase-js';\nimport { DevToolsPanel } from './DevToolsPanel';\nimport { CookieEditor } from './CookieEditor';\nimport { HeaderViewer } from './HeaderViewer';\nimport { SessionViewer } from './SessionViewer';\nimport { TopMetadataSummary } from './TopMetadataSummary';\nimport { MockGeolocationEditor } from './MockGeolocationEditor';\nimport { MockUserEditor } from './MockUserEditor';\n\nexport default function DevToolsWidget() {\n  const [visible, setVisible] = useState(true);\n  const [minimized, setMinimized] = useState(true);\n  const [session, setSession] = useState<Session | null>(null);\n  const [cookies, setCookies] = useState<{ [key: string]: string }>({});\n  const [headers, setHeaders] = useState<{ [key: string]: string }>({});\n  const [locationQuery, setLocationQuery] = useState('');\n  const [locationLoading, setLocationLoading] = useState(false);\n  const [showJwt, setShowJwt] = useState(false);\n  const [showMetadata, setShowMetadata] = useState(false);\n  const [jwtPayload, setJwtPayload] = useState<any>(null);\n\n  const mockGeo = useMockGeolocation();\n  const meta = useRequestMeta();\n\n  useEffect(() => {\n    if (process.env.NODE_ENV !== 'development') return;\n\n    setVisible(true);\n    const minimizedFlag = localStorage.getItem('devtools:minimized') === 'true';\n    setMinimized(minimizedFlag);\n\n    const supabase = createClient<Database>(process.env.NEXT_PUBLIC_SUPABASE_URL!, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!);\n\n    supabase.auth.getSession().then(({ data }) => {\n      setSession(data.session);\n    });\n\n    const { data: listener } = supabase.auth.onAuthStateChange((_event, newSession) => {\n      setSession(newSession ?? null);\n    });\n\n    const handler = (e: KeyboardEvent) => {\n      if (e.metaKey && e.key === '~') {\n        e.preventDefault();\n        setVisible((v) => !v);\n      }\n    };\n    window.addEventListener('keydown', handler);\n\n    return () => {\n      window.removeEventListener('keydown', handler);\n      listener?.subscription?.unsubscribe();\n    };\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('devtools:minimized', String(minimized));\n  }, [minimized]);\n\n  useEffect(() => {\n    const parsed: { [key: string]: string } = {};\n    document.cookie.split(';').forEach((c) => {\n      const [key, ...rest] = c.trim().split('=');\n      parsed[key] = rest.join('=');\n    });\n    setCookies(parsed);\n\n    const headerDump = (window as any).__NEXT_DATA__?.props?.headers || {};\n    setHeaders(headerDump);\n  }, []);\n\n  useEffect(() => {\n    if (!mockGeo?.lat || !mockGeo?.lon) return;\n\n    const mock = {\n      coords: {\n        latitude: parseFloat(mockGeo.lat.toString()),\n        longitude: parseFloat(mockGeo.lon.toString()),\n        accuracy: 10,\n      },\n      timestamp: Date.now(),\n    };\n\n    navigator.geolocation.getCurrentPosition = (cb) => {\n      cb(mock as GeolocationPosition);\n    };\n  }, [mockGeo]);\n\n  useEffect(() => {\n    if (!session?.access_token) return;\n    try {\n      const [, payload] = session.access_token.split('.');\n      const decoded = JSON.parse(atob(payload));\n      setJwtPayload(decoded);\n    } catch (err) {\n      console.warn('Failed to decode JWT', err);\n    }\n  }, [session?.access_token]);\n\n  const handleCookieChange = (key: string, value: string) => {\n    document.cookie = `${key}=${value}`;\n    setCookies((prev) => ({ ...prev, [key]: value }));\n  };\n\n  const handleCookieDelete = (key: string) => {\n    document.cookie = `${key}=; Max-Age=0`;\n    const updated = { ...cookies };\n    delete updated[key];\n    setCookies(updated);\n  };\n\n  const copyDebugState = () => {\n    const debug = {\n      meta,\n      session,\n      cookies,\n      headers,\n    };\n    navigator.clipboard.writeText(JSON.stringify(debug, null, 2));\n    alert('Debug state copied!');\n  };\n\n  const abVariant = cookies['ab-variant'];\n  const sessionId = cookies['session-id'];\n  const hasMockUser = Boolean(cookies['mock-user-id']);\n\n  if (!visible) return null;\n\n  if (minimized) {\n    return (\n      <button\n        onClick={() => setMinimized(false)}\n        className=\"fixed bottom-4 left-1/2 -translate-x-1/2 z-50 px-4 py-2 bg-zinc-800 text-white text-xs rounded border border-zinc-700 shadow-md\"\n      >\n        🛠️ DevTools\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"fixed bottom-4 left-1/2 -translate-x-1/2 z-50 bg-black/80 text-white px-4 py-3 text-xs rounded shadow-md border border-zinc-700 backdrop-blur-md w-[420px] max-h-[80vh] overflow-y-auto\">\n      <DevToolsPanel minimized={minimized} />\n      <TopMetadataSummary abVariant={abVariant} sessionId={sessionId} hasMockUser={hasMockUser} />\n      <CookieEditor cookies={cookies} onChange={handleCookieChange} onDelete={handleCookieDelete} />\n      <MockGeolocationEditor\n        cookieValue={cookies['mock-geo'] || ''}\n        onChange={handleCookieChange}\n        onDelete={() => handleCookieDelete('mock-geo')}\n        locationQuery={locationQuery}\n        setLocationQuery={setLocationQuery}\n        loading={locationLoading}\n        setLoading={setLocationLoading}\n        activeGeo={mockGeo ? { lat: mockGeo.lat.toString(), lon: mockGeo.lon.toString() } : { lat: '', lon: '' }}\n      />\n      <MockUserEditor\n        cookies={cookies}\n        onChange={handleCookieChange}\n        onDelete={handleCookieDelete}\n      />\n      <HeaderViewer headers={headers} />\n      <SessionViewer\n        sessionInfo={session}\n      />\n      <div className=\"flex justify-between items-center pt-3\">\n        <button\n          onClick={() => setMinimized(true)}\n          className=\"text-xs text-zinc-400 underline\"\n        >\n          Minimize\n        </button>\n        <button\n          onClick={copyDebugState}\n          className=\"text-xs text-blue-400 underline\"\n        >\n          📋 Copy Debug Info\n        </button>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/dev/trace-viewer.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `<span·className=\"text-zinc-400\">traceId:</span>·{data.traceId.slice(0,·8)}` with `⏎········<span·className=\"text-zinc-400\">traceId:</span>·{data.traceId.slice(0,·8)}⏎······`","line":36,"column":12,"nodeType":null,"messageId":"replace","endLine":36,"endColumn":86,"fix":{"range":[1109,1183],"text":"\n        <span className=\"text-zinc-400\">traceId:</span> {data.traceId.slice(0, 8)}\n      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `<span·className=\"text-zinc-400\">session:</span>·{data.sessionId?.slice(0,·8)}` with `⏎········<span·className=\"text-zinc-400\">session:</span>·{data.sessionId?.slice(0,·8)}⏎······`","line":37,"column":12,"nodeType":null,"messageId":"replace","endLine":37,"endColumn":89,"fix":{"range":[1201,1278],"text":"\n        <span className=\"text-zinc-400\">session:</span> {data.sessionId?.slice(0, 8)}\n      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `<span·className=\"text-zinc-400\">user:</span>·{data.userId?.slice(0,·8)·||·'guest'}` with `⏎········<span·className=\"text-zinc-400\">user:</span>·{data.userId?.slice(0,·8)·||·'guest'}⏎······`","line":38,"column":12,"nodeType":null,"messageId":"replace","endLine":38,"endColumn":94,"fix":{"range":[1296,1378],"text":"\n        <span className=\"text-zinc-400\">user:</span> {data.userId?.slice(0, 8) || 'guest'}\n      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `<span·className=\"text-zinc-400\">role:</span>·{data.role}` with `⏎········<span·className=\"text-zinc-400\">role:</span>·{data.role}⏎······`","line":39,"column":12,"nodeType":null,"messageId":"replace","endLine":39,"endColumn":68,"fix":{"range":[1396,1452],"text":"\n        <span className=\"text-zinc-400\">role:</span> {data.role}\n      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `<div><span·className=\"text-zinc-400\">A/B:</span>·{data.ab}</div>` with `(⏎········<div>⏎··········<span·className=\"text-zinc-400\">A/B:</span>·{data.ab}⏎········</div>⏎······)`","line":40,"column":19,"nodeType":null,"messageId":"replace","endLine":40,"endColumn":83,"fix":{"range":[1477,1541],"text":"(\n        <div>\n          <span className=\"text-zinc-400\">A/B:</span> {data.ab}\n        </div>\n      )"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":5,"source":"// components/dev/trace-viewer.tsx\n'use client';\n\nimport { useEffect, useState } from 'react';\n\nexport default function TraceViewer() {\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'development') {\n      setVisible(true);\n    }\n  }, []);\n\n  if (!visible) return null;\n\n  const data = {\n    traceId: document?.body?.dataset?.traceId ?? '',\n    sessionId: document?.body?.dataset?.sessionId ?? '',\n    role: document?.body?.dataset?.userRole ?? '',\n    userId: document?.body?.dataset?.userId ?? '',\n    ab: document?.body?.dataset?.abVariant ?? '',\n  };\n\n  return (\n    <div className=\"fixed bottom-4 left-4 left-[50px] z-50 bg-black/80 text-white text-xs px-4 py-3 rounded shadow-lg max-w-xs pointer-events-auto space-y-1 border border-zinc-700\">\n      <div className=\"flex justify-between items-center\">\n        <strong className=\"text-indigo-400\">Trace</strong>\n        <button\n          onClick={() => setVisible(false)}\n          className=\"text-zinc-400 hover:text-red-400 text-xs\"\n        >\n          ✕\n        </button>\n      </div>\n      <div><span className=\"text-zinc-400\">traceId:</span> {data.traceId.slice(0, 8)}</div>\n      <div><span className=\"text-zinc-400\">session:</span> {data.sessionId?.slice(0, 8)}</div>\n      <div><span className=\"text-zinc-400\">user:</span> {data.userId?.slice(0, 8) || 'guest'}</div>\n      <div><span className=\"text-zinc-400\">role:</span> {data.role}</div>\n      {data.ab && <div><span className=\"text-zinc-400\">A/B:</span> {data.ab}</div>}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/domain-preview-card.tsx","messages":[{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":12,"column":9,"nodeType":"JSXOpeningElement","endLine":12,"endColumn":72}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useDomainPreview } from '../hooks/useDomainPreview.jsx';\n\nexport default function DomainPreviewCard({ domain }: { domain: string }) {\n  const { imageUrl, loading } = useDomainPreview(domain);\n\n  return (\n    <div className=\"bg-zinc-800 rounded shadow p-4 w-full max-w-md mx-auto text-white\">\n      <h3 className=\"text-lg font-bold mb-2\">{domain}</h3>\n      {loading ? (\n        <p className=\"text-sm text-zinc-400\">Checking preview...</p>\n      ) : imageUrl ? (\n        <img src={imageUrl} alt=\"Preview\" className=\"rounded w-full\" />\n      ) : (\n        <div className=\"text-sm text-yellow-400\">\n          No screenshot found.\n          <br />\n          <a href={`/api/screenshot?domain=${domain}`} className=\"text-blue-400 underline text-xs\">\n            Generate now\n          </a>\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/domain-with-status.tsx","messages":[{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":11,"column":11,"nodeType":"JSXOpeningElement","endLine":15,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useDomainPreview } from '@/hooks/useDomainPreview';\n\nexport function DomainWithStatus({ domain, status }: { domain: string; status: string }) {\n  const { imageUrl, loading } = useDomainPreview(domain);\n  return (\n    <div className=\"flex items-center gap-4 border-b border-zinc-800 py-2 text-white\">\n      <div className=\"w-32 h-20 bg-zinc-900 rounded overflow-hidden\">\n        {loading ? (\n          <div className=\"text-xs p-2 text-zinc-400\">Loading…</div>\n        ) : imageUrl ? (\n          <img\n            src={imageUrl.replace('.png', '.thumb.png')}\n            alt={domain}\n            className=\"w-full h-full object-cover\"\n          />\n        ) : (\n          <div className=\"text-xs p-2 text-yellow-400\">No preview</div>\n        )}\n      </div>\n      <div className=\"flex-1\">\n        <div className=\"text-sm font-medium\">{domain}</div>\n        <div className={`text-xs ${status === 'failed' ? 'text-red-400' : 'text-zinc-400'}`}>\n          Status: {status}\n        </div>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/embed/celebration-modal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/embed/celebration-toast.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'duration'. Either include it or remove the dependency array.","line":27,"column":6,"nodeType":"ArrayExpression","endLine":27,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [duration]","fix":{"range":[774,776],"text":"[duration]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\n// Example Usage:\n// {showToast && (\n//   <CelebrationToast message=\"🎉 Goal Reached!\" subtext=\"You're on fire.\" />\n// )}\n\nimport { useEffect } from 'react';\nimport confetti from 'canvas-confetti';\n\ntype CelebrationToastProps = {\n  message: string;\n  subtext?: string;\n  duration?: number;\n};\n\nexport function CelebrationToast({ message, subtext, duration = 4000 }: CelebrationToastProps) {\n  useEffect(() => {\n    confetti({ particleCount: 100, spread: 80, origin: { y: 0.6 } });\n    const audio = new Audio('/sounds/celebration.mp3');\n    audio.play().catch(() => {});\n    const timer = setTimeout(() => {\n      const el = document.getElementById('celebration-toast');\n      if (el) el.remove();\n    }, duration);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <div\n      id=\"celebration-toast\"\n      className=\"fixed bottom-6 right-6 z-50 bg-green-600 text-white px-4 py-2 rounded shadow-lg\"\n    >\n      <p className=\"font-bold\">{message}</p>\n      {subtext && <p className=\"text-sm opacity-90\">{subtext}</p>}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/embed/embed-format-modal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/glow-configurator.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `process.env.NEXT_PUBLIC_SUPABASE_URL!,·process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!` with `⏎····process.env.NEXT_PUBLIC_SUPABASE_URL!,⏎····process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!⏎··`","line":44,"column":43,"nodeType":null,"messageId":"replace","endLine":44,"endColumn":124,"fix":{"range":[1400,1481],"text":"\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎······?·defaultGlowConfig⏎·····` with `·?·defaultGlowConfig`","line":52,"column":54,"nodeType":null,"messageId":"replace","endLine":54,"endColumn":6,"fix":{"range":[1836,1868],"text":" ? defaultGlowConfig"}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":55,"column":1,"nodeType":null,"messageId":"delete","endLine":55,"endColumn":3,"fix":{"range":[1892,1894],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":57,"column":1,"nodeType":null,"messageId":"delete","endLine":57,"endColumn":3,"fix":{"range":[1921,1923],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":65,"column":1,"nodeType":null,"messageId":"delete","endLine":65,"endColumn":3,"fix":{"range":[2163,2165],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":75,"column":1,"nodeType":null,"messageId":"delete","endLine":75,"endColumn":3,"fix":{"range":[2568,2570],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":84,"column":1,"nodeType":null,"messageId":"delete","endLine":84,"endColumn":3,"fix":{"range":[2843,2845],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··············?·data.glow_config⏎·············` with `·?·data.glow_config`","line":87,"column":59,"nodeType":null,"messageId":"replace","endLine":89,"endColumn":14,"fix":{"range":[3020,3067],"text":" ? data.glow_config"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··············.from('user_site_settings')⏎··············` with `.from('user_site_settings')`","line":94,"column":27,"nodeType":null,"messageId":"replace","endLine":96,"endColumn":15,"fix":{"range":[3300,3357],"text":".from('user_site_settings')"}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":97,"column":1,"nodeType":null,"messageId":"delete","endLine":97,"endColumn":3,"fix":{"range":[3367,3369],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":98,"column":15,"nodeType":null,"messageId":"delete","endLine":98,"endColumn":17,"fix":{"range":[3415,3417],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":99,"column":1,"nodeType":null,"messageId":"delete","endLine":99,"endColumn":3,"fix":{"range":[3438,3440],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":100,"column":1,"nodeType":null,"messageId":"delete","endLine":100,"endColumn":3,"fix":{"range":[3477,3479],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":105,"column":1,"nodeType":null,"messageId":"delete","endLine":105,"endColumn":3,"fix":{"range":[3583,3585],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":119,"column":1,"nodeType":null,"messageId":"delete","endLine":119,"endColumn":3,"fix":{"range":[4075,4077],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":131,"column":1,"nodeType":null,"messageId":"delete","endLine":131,"endColumn":3,"fix":{"range":[4415,4417],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":133,"column":1,"nodeType":null,"messageId":"delete","endLine":133,"endColumn":3,"fix":{"range":[4444,4446],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":140,"column":1,"nodeType":null,"messageId":"delete","endLine":140,"endColumn":3,"fix":{"range":[4652,4654],"text":""}},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'LOCAL_KEY', 'defaultGlowConfig', 'glowLayers', and 'supabase'. Either include them or remove the dependency array.","line":142,"column":6,"nodeType":"ArrayExpression","endLine":142,"endColumn":16,"suggestions":[{"desc":"Update the dependencies array to be: [LOCAL_KEY, defaultGlowConfig, glowLayers, siteSlug, supabase]","fix":{"range":[4702,4712],"text":"[LOCAL_KEY, defaultGlowConfig, glowLayers, siteSlug, supabase]"}}]},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··⏎··⏎··⏎`","line":143,"column":1,"nodeType":null,"messageId":"delete","endLine":146,"endColumn":1,"fix":{"range":[4715,4724],"text":""}},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'LOCAL_KEY' and 'supabase'. Either include them or remove the dependency array.","line":157,"column":6,"nodeType":"ArrayExpression","endLine":157,"endColumn":36,"suggestions":[{"desc":"Update the dependencies array to be: [glowLayers, userId, siteSlug, supabase, LOCAL_KEY]","fix":{"range":[5041,5071],"text":"[glowLayers, userId, siteSlug, supabase, LOCAL_KEY]"}}]},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `⏎·······`","line":163,"column":21,"nodeType":null,"messageId":"insert","endLine":163,"endColumn":21,"fix":{"range":[5225,5225],"text":"\n       "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":164,"column":9,"nodeType":null,"messageId":"insert","endLine":164,"endColumn":9,"fix":{"range":[5236,5236],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":165,"column":1,"nodeType":null,"messageId":"insert","endLine":165,"endColumn":1,"fix":{"range":[5256,5256],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":166,"column":9,"nodeType":null,"messageId":"insert","endLine":166,"endColumn":9,"fix":{"range":[5343,5343],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······].join('·'))` with `········].join('·')⏎······)⏎······`","line":167,"column":1,"nodeType":null,"messageId":"replace","endLine":167,"endColumn":19,"fix":{"range":[5389,5407],"text":"        ].join(' ')\n      )\n      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `prev·?·[...prev,·presetOptions[0]]·:·[presetOptions[0]]` with `(prev·?·[...prev,·presetOptions[0]]·:·[presetOptions[0]])`","line":185,"column":29,"nodeType":null,"messageId":"replace","endLine":185,"endColumn":84,"fix":{"range":[5894,5949],"text":"(prev ? [...prev, presetOptions[0]] : [presetOptions[0]])"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `(glow,·i)·=>` with `⏎············(glow,·i)·=>⏎·············`","line":214,"column":27,"nodeType":null,"messageId":"replace","endLine":214,"endColumn":39,"fix":{"range":[6971,6983],"text":"\n            (glow, i) =>\n             "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":215,"column":1,"nodeType":null,"messageId":"insert","endLine":215,"endColumn":1,"fix":{"range":[6994,6994],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":216,"column":15,"nodeType":null,"messageId":"insert","endLine":216,"endColumn":15,"fix":{"range":[7086,7086],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `················` with `····················`","line":217,"column":1,"nodeType":null,"messageId":"replace","endLine":217,"endColumn":17,"fix":{"range":[7138,7154],"text":"                    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":218,"column":17,"nodeType":null,"messageId":"insert","endLine":218,"endColumn":17,"fix":{"range":[7219,7219],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··················<button·onClick={()·=>·removeLayer(i)}·className=\"text-red-500·text-xs\">Remove` with `······················<button·onClick={()·=>·removeLayer(i)}·className=\"text-red-500·text-xs\">⏎························Remove⏎······················`","line":219,"column":1,"nodeType":null,"messageId":"replace","endLine":219,"endColumn":97,"fix":{"range":[7247,7343],"text":"                      <button onClick={() => removeLayer(i)} className=\"text-red-500 text-xs\">\n                        Remove\n                      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":220,"column":17,"nodeType":null,"messageId":"insert","endLine":220,"endColumn":17,"fix":{"range":[7369,7369],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··············` with `··················`","line":221,"column":1,"nodeType":null,"messageId":"replace","endLine":221,"endColumn":15,"fix":{"range":[7372,7386],"text":"                  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":223,"column":15,"nodeType":null,"messageId":"insert","endLine":223,"endColumn":15,"fix":{"range":[7408,7408],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `················` with `····················`","line":224,"column":1,"nodeType":null,"messageId":"replace","endLine":224,"endColumn":17,"fix":{"range":[7414,7430],"text":"                    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":225,"column":17,"nodeType":null,"messageId":"insert","endLine":225,"endColumn":17,"fix":{"range":[7489,7489],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":226,"column":1,"nodeType":null,"messageId":"insert","endLine":226,"endColumn":1,"fix":{"range":[7497,7497],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··················` with `······················`","line":227,"column":1,"nodeType":null,"messageId":"replace","endLine":227,"endColumn":19,"fix":{"range":[7587,7605],"text":"                      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":228,"column":1,"nodeType":null,"messageId":"insert","endLine":228,"endColumn":1,"fix":{"range":[7623,7623],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `················` with `····················`","line":229,"column":1,"nodeType":null,"messageId":"replace","endLine":229,"endColumn":17,"fix":{"range":[7716,7732],"text":"                    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":230,"column":1,"nodeType":null,"messageId":"insert","endLine":230,"endColumn":1,"fix":{"range":[7734,7734],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `<option·key={val}·value={val}>{val.toUpperCase()}` with `····<option·key={val}·value={val}>⏎··························{val.toUpperCase()}⏎························`","line":231,"column":21,"nodeType":null,"messageId":"replace","endLine":231,"endColumn":70,"fix":{"range":[7813,7862],"text":"    <option key={val} value={val}>\n                          {val.toUpperCase()}\n                        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":232,"column":1,"nodeType":null,"messageId":"insert","endLine":232,"endColumn":1,"fix":{"range":[7872,7872],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":233,"column":17,"nodeType":null,"messageId":"insert","endLine":233,"endColumn":17,"fix":{"range":[7910,7910],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":234,"column":15,"nodeType":null,"messageId":"insert","endLine":234,"endColumn":15,"fix":{"range":[7934,7934],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··············` with `··················`","line":236,"column":1,"nodeType":null,"messageId":"replace","endLine":236,"endColumn":15,"fix":{"range":[7942,7956],"text":"                  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":237,"column":1,"nodeType":null,"messageId":"insert","endLine":237,"endColumn":1,"fix":{"range":[7962,7962],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":238,"column":17,"nodeType":null,"messageId":"insert","endLine":238,"endColumn":17,"fix":{"range":[8072,8072],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":239,"column":1,"nodeType":null,"messageId":"insert","endLine":239,"endColumn":1,"fix":{"range":[8079,8079],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··················` with `······················`","line":240,"column":1,"nodeType":null,"messageId":"replace","endLine":240,"endColumn":19,"fix":{"range":[8110,8128],"text":"                      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":241,"column":1,"nodeType":null,"messageId":"insert","endLine":241,"endColumn":1,"fix":{"range":[8136,8136],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":242,"column":19,"nodeType":null,"messageId":"insert","endLine":242,"endColumn":19,"fix":{"range":[8180,8180],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··················` with `······················`","line":243,"column":1,"nodeType":null,"messageId":"replace","endLine":243,"endColumn":19,"fix":{"range":[8192,8210],"text":"                      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `onChange={(e)·=>·updateLayer(i,·{·...glow,·intensity:·parseFloat(e.target.value)·})` with `····onChange={(e)·=>⏎························updateLayer(i,·{·...glow,·intensity:·parseFloat(e.target.value)·})⏎······················`","line":244,"column":19,"nodeType":null,"messageId":"replace","endLine":244,"endColumn":102,"fix":{"range":[8251,8334],"text":"    onChange={(e) =>\n                        updateLayer(i, { ...glow, intensity: parseFloat(e.target.value) })\n                      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":245,"column":1,"nodeType":null,"messageId":"insert","endLine":245,"endColumn":1,"fix":{"range":[8336,8336],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":246,"column":17,"nodeType":null,"messageId":"insert","endLine":246,"endColumn":17,"fix":{"range":[8389,8389],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··············` with `··················`","line":247,"column":1,"nodeType":null,"messageId":"replace","endLine":247,"endColumn":15,"fix":{"range":[8392,8406],"text":"                  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":249,"column":15,"nodeType":null,"messageId":"insert","endLine":249,"endColumn":15,"fix":{"range":[8428,8428],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":250,"column":1,"nodeType":null,"messageId":"insert","endLine":250,"endColumn":1,"fix":{"range":[8434,8434],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":251,"column":17,"nodeType":null,"messageId":"insert","endLine":251,"endColumn":17,"fix":{"range":[8512,8512],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":252,"column":19,"nodeType":null,"messageId":"insert","endLine":252,"endColumn":19,"fix":{"range":[8571,8571],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····················` with `························`","line":253,"column":1,"nodeType":null,"messageId":"replace","endLine":253,"endColumn":21,"fix":{"range":[8604,8624],"text":"                        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":254,"column":1,"nodeType":null,"messageId":"insert","endLine":254,"endColumn":1,"fix":{"range":[8629,8629],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":255,"column":1,"nodeType":null,"messageId":"insert","endLine":255,"endColumn":1,"fix":{"range":[8659,8659],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":256,"column":23,"nodeType":null,"messageId":"insert","endLine":256,"endColumn":23,"fix":{"range":[8765,8765],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `························` with `····························`","line":257,"column":1,"nodeType":null,"messageId":"replace","endLine":257,"endColumn":25,"fix":{"range":[8774,8798],"text":"                            "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":258,"column":1,"nodeType":null,"messageId":"insert","endLine":258,"endColumn":1,"fix":{"range":[8870,8870],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":259,"column":23,"nodeType":null,"messageId":"insert","endLine":259,"endColumn":23,"fix":{"range":[8917,8917],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······················` with `··························`","line":260,"column":1,"nodeType":null,"messageId":"replace","endLine":260,"endColumn":23,"fix":{"range":[8981,9003],"text":"                          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":261,"column":21,"nodeType":null,"messageId":"insert","endLine":261,"endColumn":21,"fix":{"range":[9049,9049],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······················<div·className={`h-full·w-full·rounded·bg-gradient-to-r·${opt.colors.join('·')}`}` with `··························<div⏎····························className={`h-full·w-full·rounded·bg-gradient-to-r·${opt.colors.join('·')}`}⏎··························`","line":262,"column":1,"nodeType":null,"messageId":"replace","endLine":262,"endColumn":104,"fix":{"range":[9051,9154],"text":"                          <div\n                            className={`h-full w-full rounded bg-gradient-to-r ${opt.colors.join(' ')}`}\n                          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":263,"column":21,"nodeType":null,"messageId":"insert","endLine":263,"endColumn":21,"fix":{"range":[9182,9182],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":264,"column":1,"nodeType":null,"messageId":"insert","endLine":264,"endColumn":1,"fix":{"range":[9189,9189],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":265,"column":17,"nodeType":null,"messageId":"insert","endLine":265,"endColumn":17,"fix":{"range":[9227,9227],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":266,"column":1,"nodeType":null,"messageId":"insert","endLine":266,"endColumn":1,"fix":{"range":[9234,9234],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `············` with `················`","line":267,"column":1,"nodeType":null,"messageId":"replace","endLine":267,"endColumn":13,"fix":{"range":[9255,9267],"text":"                "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `)` with `····)⏎··········`","line":268,"column":11,"nodeType":null,"messageId":"replace","endLine":268,"endColumn":12,"fix":{"range":[9284,9285],"text":"    )\n          "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":79,"fixableErrorCount":0,"fixableWarningCount":77,"source":"// GlowConfigurator.tsx — v2.2: fix edge crash from stale glow=null in map\n'use client';\n\nimport { useEffect, useState } from 'react';\nimport { SlidersHorizontal } from 'lucide-react';\nimport BackgroundGlow from './background-glow';\nimport { createClient } from '@supabase/supabase-js';\nimport type { Database } from '@/types/supabase';\n\nexport type GlowConfig = {\n  size: 'sm' | 'md' | 'lg' | 'xl';\n  intensity: number;\n  colors: string[];\n};\n\nexport type SiteTheme = {\n  glow: GlowConfig | GlowConfig[];\n  accentColor?: string;\n  fontFamily?: string;\n  borderRadius?: string;\n  buttonStyle?: 'solid' | 'outline' | 'ghost';\n};\n\ntype Props = {\n  defaultGlowConfig: GlowConfig | GlowConfig[];\n  siteSlug?: string;\n};\n\nconst presetOptions: GlowConfig[] = [\n  { size: 'xl', intensity: 0.2, colors: ['from-purple-600', 'via-blue-500', 'to-pink-500'] },\n  { size: 'xl', intensity: 0.2, colors: ['from-indigo-600', 'via-blue-400', 'to-fuchsia-500'] },\n  { size: 'xl', intensity: 0.2, colors: ['from-teal-500', 'via-cyan-400', 'to-lime-400'] },\n  { size: 'xl', intensity: 0.2, colors: ['from-orange-500', 'via-red-500', 'to-pink-500'] },\n];\n\nconst sizeMap = {\n  sm: 'w-[80%] h-[80%]',\n  md: 'w-[100%] h-[100%]',\n  lg: 'w-[120%] h-[120%]',\n  xl: 'w-[140%] h-[140%]',\n};\n\nexport default function GlowConfigurator({ defaultGlowConfig, siteSlug = 'default' }: Props) {\n  const supabase = createClient<Database>(process.env.NEXT_PUBLIC_SUPABASE_URL!, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!);\n  const [userId, setUserId] = useState<string | null>(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [glowLayers, setGlowLayers] = useState<GlowConfig[] | null>(null);\n  const [copied, setCopied] = useState(false);\n  const LOCAL_KEY = `glow-config::${siteSlug}`;\n\n  useEffect(() => {\n    const fallback = Array.isArray(defaultGlowConfig)\n      ? defaultGlowConfig\n      : [defaultGlowConfig];\n  \n    let resolved = false;\n  \n    const fetchAndSeedConfig = async () => {\n      try {\n        // 🚫 Skip during SSR\n        if (typeof window === 'undefined') {\n          console.warn('[GlowConfigurator] Skipping config fetch during SSR');\n          return;\n        }\n  \n        // ✅ Wrap getUser to safely catch auth error\n        let user = null;\n        try {\n          const result = await supabase.auth.getUser();\n          user = result.data.user;\n          if (result.error) console.warn('[GlowConfigurator] Auth warning:', result.error.message);\n        } catch (err: any) {\n          console.warn('[GlowConfigurator] Auth getUser failed:', err.message);\n        }\n  \n        if (user) {\n          setUserId(user.id);\n          const { data, error } = await supabase\n            .from('user_site_settings')\n            .select('glow_config')\n            .eq('user_id', user.id)\n            .eq('site_slug', siteSlug)\n            .single();\n  \n          if (error) console.error('[GlowConfigurator] DB fetch error:', error);\n          if (data?.glow_config) {\n            const parsed = Array.isArray(data.glow_config)\n              ? data.glow_config\n              : [data.glow_config];\n            setGlowLayers(parsed);\n            resolved = true;\n          } else {\n            console.log('[GlowConfigurator] No glow_config found for user — seeding with fallback');\n            await supabase\n              .from('user_site_settings')\n              .upsert({\n                user_id: user.id,\n                site_slug: siteSlug,\n                glow_config: fallback,\n              });\n            setGlowLayers(fallback);\n            resolved = true;\n          }\n        }\n  \n        if (!resolved) {\n          if (typeof window !== 'undefined') {\n            const local = localStorage.getItem(LOCAL_KEY);\n            if (local) {\n              try {\n                const parsed = JSON.parse(local);\n                setGlowLayers(Array.isArray(parsed) ? parsed : [parsed]);\n                resolved = true;\n              } catch (err) {\n                console.error('[GlowConfigurator] localStorage parse error:', err);\n              }\n            }\n          }\n  \n          if (!resolved) {\n            console.log('[GlowConfigurator] Using fallback default glow config');\n            setGlowLayers(fallback);\n            resolved = true;\n          }\n        }\n      } catch (err) {\n        console.error('[GlowConfigurator] Unexpected failure:', err);\n        setGlowLayers(fallback);\n      }\n    };\n  \n    fetchAndSeedConfig();\n  \n    const timeoutId = setTimeout(() => {\n      if (!resolved && !glowLayers) {\n        console.warn('[GlowConfigurator] Timeout fallback triggered');\n        setGlowLayers(fallback);\n      }\n    }, 5000);\n  \n    return () => clearTimeout(timeoutId);\n  }, [siteSlug]);\n  \n  \n  \n\n  useEffect(() => {\n    if (!glowLayers) return;\n    const data = JSON.stringify(glowLayers);\n    if (userId) {\n      supabase\n        .from('user_site_settings')\n        .upsert({ user_id: userId, site_slug: siteSlug, glow_config: glowLayers });\n    } else {\n      localStorage.setItem(LOCAL_KEY, data);\n    }\n  }, [glowLayers, userId, siteSlug]);\n\n  const copyToClipboard = async () => {\n    if (!glowLayers) return;\n    const tailwindString = glowLayers\n      .filter(Boolean)\n      .map((glow) => [\n        sizeMap[glow.size],\n        'absolute -top-1/2 left-1/2 rounded-full blur-3xl animate-pulse-slow',\n        `bg-gradient-to-tr ${glow.colors.join(' ')}`,\n      ].join(' ')).join('\\n');\n    try {\n      await navigator.clipboard.writeText(tailwindString);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    } catch (err) {\n      console.error('Clipboard error', err);\n    }\n  };\n\n  const updateLayer = (index: number, newLayer: GlowConfig) => {\n    if (!glowLayers) return;\n    const newLayers = [...glowLayers];\n    newLayers[index] = newLayer;\n    setGlowLayers(newLayers);\n  };\n\n  const addLayer = () => {\n    setGlowLayers((prev) => prev ? [...prev, presetOptions[0]] : [presetOptions[0]]);\n  };\n\n  const removeLayer = (index: number) => {\n    if (!glowLayers || glowLayers.length <= 1) return;\n    const newLayers = glowLayers.filter((_, i) => i !== index);\n    setGlowLayers(newLayers);\n  };\n\n  if (!glowLayers || glowLayers.some((g) => g == null)) {\n    // return <div className=\"absolute top-4 right-4 z-50 text-white text-xs\">Loading glow config...</div>;\n    return null;\n  }\n\n  return (\n    <>\n      {glowLayers.map((glow, i) => (\n        <BackgroundGlow key={i} {...glow} />\n      ))}\n\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"absolute top-4 right-4 z-50 p-2 bg-zinc-800 hover:bg-zinc-700 rounded-full shadow-md border border-zinc-600\"\n      >\n        <SlidersHorizontal className=\"w-5 h-5 text-white\" />\n      </button>\n\n      {isOpen && (\n        <div className=\"absolute top-16 right-4 z-50 bg-zinc-900/90 border border-zinc-700 rounded-lg p-4 text-sm text-white shadow-xl space-y-6 w-[320px] max-h-[90vh] overflow-y-auto backdrop-blur\">\n          {glowLayers.map((glow, i) => glow && (\n            <div key={i} className=\"space-y-2 border-b border-zinc-700 pb-4\">\n              <div className=\"flex justify-between items-center\">\n                <h3 className=\"font-semibold\">Layer {i + 1}</h3>\n                {glowLayers.length > 1 && (\n                  <button onClick={() => removeLayer(i)} className=\"text-red-500 text-xs\">Remove</button>\n                )}\n              </div>\n\n              <div>\n                <label className=\"block mb-1\">Size</label>\n                <select\n                  className=\"w-full bg-zinc-800 border border-zinc-600 rounded px-2 py-1\"\n                  value={glow.size}\n                  onChange={(e) => updateLayer(i, { ...glow, size: e.target.value as any })}\n                >\n                  {['sm', 'md', 'lg', 'xl'].map((val) => (\n                    <option key={val} value={val}>{val.toUpperCase()}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block mb-1\">Intensity ({glow.intensity.toFixed(2)})</label>\n                <input\n                  type=\"range\"\n                  min={0}\n                  max={1}\n                  step={0.01}\n                  value={glow.intensity}\n                  onChange={(e) => updateLayer(i, { ...glow, intensity: parseFloat(e.target.value) })}\n                  className=\"w-full\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block mb-1\">Palette</label>\n                <div className=\"grid grid-cols-4 gap-2\">\n                  {presetOptions.map((opt, j) => (\n                    <div\n                      key={j}\n                      className=\"h-6 rounded cursor-pointer border border-zinc-700\"\n                      style={{\n                        backgroundImage: `linear-gradient(to right, var(--tw-gradient-stops))`,\n                      }}\n                      onClick={() => updateLayer(i, { ...glow, colors: opt.colors })}\n                      title={`Preset ${j + 1}`}\n                    >\n                      <div className={`h-full w-full rounded bg-gradient-to-r ${opt.colors.join(' ')}`}></div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          ))}\n\n          <button\n            onClick={addLayer}\n            className=\"w-full px-3 py-2 bg-zinc-800 hover:bg-zinc-700 border border-zinc-600 rounded text-white text-xs\"\n          >\n            ➕ Add Glow Layer\n          </button>\n\n          <div>\n            <button\n              onClick={copyToClipboard}\n              className=\"mt-4 w-full px-3 py-2 rounded bg-indigo-600 hover:bg-indigo-700 transition text-white text-sm font-medium\"\n            >\n              {copied ? '✅ Copied!' : 'Copy Tailwind Classes'}\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/habit-leaderboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/layout/site-header.tsx","messages":[{"ruleId":"@next/next/no-img-element","severity":1,"message":"Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","line":17,"column":13,"nodeType":"JSXOpeningElement","endLine":17,"endColumn":80}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// components/layout/site-header.tsx\n'use client';\n\nimport { useSafeAuth } from '@/hooks/useSafeAuth';\nimport SafeLink from '@/components/ui/safe-link';\nimport InspirationalQuote from '@/components/ui/inspirational-quote';\nimport UserInfoPanel from './user-info-panel';\n\nexport default function SiteHeader() {\n  const { isLoggedIn, user, role } = useSafeAuth();\n\n  return (\n    <header className=\"bg-gray-800 text-white sticky top-0 z-50 px-2 py-[6px] shadow-sm border-b border-zinc-700 min-h-[48px] transition-transform duration-300\">\n      <div className=\"flex justify-between items-center max-w-screen-xl mx-auto relative\">\n        <div className=\"flex items-center gap-4 overflow-x-auto whitespace-nowrap max-w-full flex-1\">\n          <SafeLink href=\"/\" className=\"text-blue-400 hover:underline\">\n            <img src=\"/logo_v1.png\" alt=\"QuickSites\" className=\"h-12 w-auto\" />\n          </SafeLink>\n\n          <div className=\"text-xs text-cyan-300 max-w-xs\">\n            <InspirationalQuote tags={['small-business', 'seo', 'persistence']} />\n          </div>\n        </div>\n\n        <UserInfoPanel isLoggedIn={isLoggedIn} user={user} role={role} />\n      </div>\n    </header>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/layout/user-info-panel.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··isLoggedIn,⏎··user,⏎··role,⏎` with `·isLoggedIn,·user,·role·`","line":12,"column":40,"nodeType":null,"messageId":"replace","endLine":16,"endColumn":1,"fix":{"range":[230,261],"text":" isLoggedIn, user, role "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// components/layout/user-info-panel.tsx\n'use client';\n\nimport type { SafeUser } from '@/types/safe-user';\n\ntype Props = {\n  user: SafeUser | null;\n  role: string;\n  isLoggedIn: boolean;\n};\n\nexport default function UserInfoPanel({\n  isLoggedIn,\n  user,\n  role,\n}: Props) {\n  if (!isLoggedIn || !user) {\n    return (\n      <a href=\"/login\" className=\"text-blue-400 hover:underline\">\n        Log In\n      </a>\n    );\n  }\n\n  return (\n    <div className=\"ml-2 flex items-center gap-2\">\n      <div className=\"text-xs text-gray-400 mr-2 text-right leading-tight\">\n        <div>{user.email}</div>\n        <div className=\"text-zinc-500\">role: {role}</div>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/macd-trend.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/meta-tags.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/nav-badge.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/profile-form.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `,`","line":6,"column":16,"nodeType":null,"messageId":"delete","endLine":6,"endColumn":17,"fix":{"range":[160,161],"text":""}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Link' is defined but never used.","line":12,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":12,"endColumn":12},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎············variant=\"outline\"⏎············disabled={requesting}⏎············onClick={requestAccess}⏎··········` with `·variant=\"outline\"·disabled={requesting}·onClick={requestAccess}`","line":184,"column":18,"nodeType":null,"messageId":"replace","endLine":188,"endColumn":11,"fix":{"range":[5668,5779],"text":" variant=\"outline\" disabled={requesting} onClick={requestAccess}"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `Approve` with `⏎····················Approve⏎··················`","line":205,"column":72,"nodeType":null,"messageId":"replace","endLine":205,"endColumn":79,"fix":{"range":[6549,6556],"text":"\n                    Approve\n                  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `Deny` with `⏎····················Deny⏎··················`","line":206,"column":89,"nodeType":null,"messageId":"replace","endLine":206,"endColumn":93,"fix":{"range":[6654,6658],"text":"\n                    Deny\n                  "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":4,"source":"// components/ProfileForm.tsx\n'use client';\n\nimport { useEffect, useState } from 'react';\nimport { supabase } from '@/admin/lib/supabaseClient';\nimport { Button, } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { toast } from 'react-hot-toast';\nimport Image from 'next/image';\nimport { useCurrentUser } from '@/hooks/useCurrentUser';\nimport Link from 'next/link';\nimport { RewardTally } from '@/components/reward-tally';\n\nexport default function ProfileForm() {\n  const { user, role } = useCurrentUser();\n  const [avatarUrl, setAvatarUrl] = useState(user?.avatar_url || '');\n  const [displayName, setDisplayName] = useState(user?.name || '');\n  const [bio, setBio] = useState(user?.bio || '');\n  const [showUtc, setShowUtc] = useState(false);\n  const [latestLog, setLatestLog] = useState<any | null>(null);\n  const [requesting, setRequesting] = useState(false);\n  const [accessRequests, setAccessRequests] = useState<any[]>([]);\n  const [rewardPoints, setRewardPoints] = useState(0);\n  const [refLink, setRefLink] = useState('');\n  const timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n  const email = user?.email ?? (user as any)?.user_metadata?.email ?? '';\n\n  useEffect(() => {\n    if (user?.id) {\n      (async () => {\n        try {\n          const res = await fetch(`/api/reward-points?user_id=${user.id}`);\n          const d = await res.json();\n          setRewardPoints(d.total || 0);\n          setRefLink(`${window.location.origin}/?ref=${user.id}`);\n        } catch {\n          setRewardPoints(0);\n        }\n      })();\n    }\n  }, [user?.id]);\n\n  useEffect(() => {\n    if (role === 'admin') {\n      supabase\n        .from('user_deletion_logs')\n        .select('id, email, deleted_at, user_id, admin_actor, reason')\n        .order('deleted_at', { ascending: false })\n        .limit(1)\n        .then(({ data }) => {\n          if (data?.length) setLatestLog(data[0]);\n        });\n\n      supabase\n        .from('access_requests')\n        .select('id, email, requested_at, reason')\n        .order('requested_at', { ascending: false })\n        .limit(10)\n        .then(({ data }) => {\n          if (data?.length) setAccessRequests(data);\n        });\n    }\n  }, [role]);\n\n  const handleSave = async () => {\n    const { error } = await supabase.auth.updateUser({\n      data: {\n        avatar_url: avatarUrl,\n        name: displayName,\n        bio,\n        updated_at: new Date().toISOString(),\n      },\n    });\n    if (error) {\n      toast.error('Failed to update profile');\n    } else {\n      toast.success('Profile updated!');\n    }\n  };\n\n  const requestAccess = async () => {\n    setRequesting(true);\n    const { error } = await supabase.from('access_requests').insert({\n      user_id: user?.id,\n      email,\n      requested_at: new Date().toISOString(),\n      reason: 'Wants to edit profile info',\n    });\n    if (error) {\n      toast.error('Failed to submit access request');\n    } else {\n      toast.success('Access request sent!');\n    }\n    setRequesting(false);\n  };\n\n  const handleApprove = async (req: any) => {\n    const { error } = await supabase.from('user_profiles').upsert({\n      user_id: req.user_id,\n      email: req.email,\n      role: 'reseller',\n      updated_at: new Date().toISOString(),\n    });\n    if (error) {\n      toast.error(`Failed to approve ${req.email}`);\n    } else {\n      toast.success(`${req.email} approved as reseller`);\n      setAccessRequests(accessRequests.filter((r) => r.id !== req.id));\n    }\n  };\n\n  const handleDeny = async (req: any) => {\n    const { error } = await supabase.from('access_requests').delete().eq('id', req.id);\n    if (error) {\n      toast.error(`Failed to deny ${req.email}`);\n    } else {\n      toast.success(`Denied request from ${req.email}`);\n      setAccessRequests(accessRequests.filter((r) => r.id !== req.id));\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"text-white\">\n        <h1 className=\"text-2xl font-bold mb-2\">👤 Profile</h1>\n        {user && (\n          <>\n            <div className=\"mb-6\">\n              <RewardTally points={rewardPoints} />\n            </div>\n            <div className=\"bg-zinc-800 p-4 rounded text-sm\">\n              <div className=\"text-zinc-400 mb-1\">Your referral link:</div>\n              <code className=\"text-blue-400\">{refLink}</code>\n            </div>\n          </>\n        )}\n      </div>\n\n      <div className=\"space-y-4\">\n        <div>\n          <Label>Display Name</Label>\n          <Input\n            id=\"displayName\"\n            value={displayName}\n            onChange={(e) => setDisplayName(e.target.value)}\n            placeholder=\"e.g. Taylor Swift\"\n          />\n        </div>\n        <div>\n          <Label>Bio</Label>\n          <Input\n            id=\"bio\"\n            value={bio}\n            onChange={(e) => setBio(e.target.value)}\n            placeholder=\"Short description...\"\n          />\n        </div>\n        <div>\n          <Label>Avatar URL</Label>\n          <Input\n            id=\"avatarUrl\"\n            value={avatarUrl}\n            onChange={(e) => setAvatarUrl(e.target.value)}\n            placeholder=\"https://example.com/avatar.png\"\n          />\n        </div>\n\n        <div className=\"flex gap-2 items-center\">\n          <Image\n            src={avatarUrl || '/default-avatar.png'}\n            alt=\"preview\"\n            width={64}\n            height={64}\n            className=\"rounded-full border border-white object-cover\"\n          />\n          <Button onClick={handleSave}>Save</Button>\n        </div>\n      </div>\n\n      {role !== 'admin' && (\n        <div className=\"pt-6\">\n          <Button\n            variant=\"outline\"\n            disabled={requesting}\n            onClick={requestAccess}\n          >\n            Request Elevated Access\n          </Button>\n        </div>\n      )}\n\n      {role === 'admin' && accessRequests.length > 0 && (\n        <div className=\"pt-6\">\n          <h2 className=\"text-lg font-semibold text-white mb-3\">Access Requests</h2>\n          <div className=\"space-y-3\">\n            {accessRequests.map((req) => (\n              <div key={req.id} className=\"bg-zinc-800 p-3 rounded\">\n                <div className=\"text-sm text-zinc-300\">\n                  <span className=\"font-bold text-white\">{req.email}</span> wants access — reason:\n                  <span className=\"italic\"> {req.reason}</span>\n                </div>\n                <div className=\"mt-2 flex gap-2\">\n                  <Button size=\"sm\" onClick={() => handleApprove(req)}>Approve</Button>\n                  <Button size=\"sm\" variant=\"secondary\" onClick={() => handleDeny(req)}>Deny</Button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {role === 'admin' && (\n        <div className=\"pt-6\">\n          <h2 className=\"text-lg font-semibold text-yellow-400\">Admin Log</h2>\n          <button\n            className=\"text-xs text-blue-400 hover:underline\"\n            onClick={() => setShowUtc((v) => !v)}\n          >\n            Toggle UTC ({showUtc ? 'Local' : 'UTC'})\n          </button>\n          <p className=\"text-sm text-zinc-400 mt-2\">\n            Most recent deletion:\n            <code className=\"ml-2 bg-zinc-800 px-2 py-1 rounded text-xs text-yellow-300\">\n              {latestLog\n                ? `${latestLog.email} • ${new Date(latestLog.deleted_at).toLocaleString('en-US', {\n                    timeZone: showUtc ? 'UTC' : timeZone,\n                  })}`\n                : 'Loading...'}\n            </code>\n          </p>\n          <p className=\"text-sm text-zinc-400\">\n            Admin deletions and access approvals are tracked in the database.\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/puppy-widget.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'tooltipDismissed' is assigned a value but never used.","line":19,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":19,"endColumn":26},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `⏎`","line":130,"column":2,"nodeType":null,"messageId":"insert","endLine":130,"endColumn":2,"fix":{"range":[4971,4971],"text":"\n"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport useMediaQuery from '@/hooks/useMediaQuery';\nimport event from '@vercel/analytics';\n\nconst features = [\n  '🚀 AI-generated websites in seconds',\n  '🧠 Built-in SEO optimization',\n  '📱 Mobile-ready, always',\n  '🎨 Fully customizable designs',\n  '🔒 Secure & privacy-respecting',\n];\n\nexport default function PuppyWidget({ showOnMobile = true }: { showOnMobile?: boolean }) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [tooltipVisible, setTooltipVisible] = useState(false);\n  const [tooltipDismissed, setTooltipDismissed] = useState(false);\n  const [currentFeatureIndex, setCurrentFeatureIndex] = useState(0);\n  const isMobile = useMediaQuery('(max-width: 768px)');\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentFeatureIndex((i) => (i + 1) % features.length);\n    }, 3000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setTooltipVisible(true);\n\n      if (isMobile) {\n        const autoHide = setTimeout(() => {\n          setTooltipVisible(false);\n          setTooltipDismissed(true);\n          event.track('tooltip_auto_hidden', { isMobile: true });\n        }, 7000);\n        return () => clearTimeout(autoHide);\n      }\n    }, 5000);\n\n    return () => clearTimeout(timer);\n  }, [isMobile]);\n\n  const handleClick = () => {\n    event.track('puppy_clicked', { isMobile });\n    setIsExpanded((prev) => !prev);\n    setTooltipVisible(false);\n    setTooltipDismissed(false);\n  };\n\n  return (\n    <div className={`fixed bottom-2 right-4 z-50 md:block ${showOnMobile ? '' : 'hidden'}`}>\n      <div className=\"relative w-[60px] h-[60px]\">\n        {/* Puppy Video pinned to bottom right */}\n        <motion.div\n          onClick={handleClick}\n          whileTap={isMobile ? { scale: 1.15 } : undefined}\n          className=\"absolute bottom-0 right-0 cursor-pointer w-16 h-16 md:w-24 md:h-24 rounded-full overflow-hidden border-2 border-white shadow-lg transition-all hover:scale-105\"\n          title=\"Click to learn more\"\n        >\n          <video\n            src=\"/videos/pet-dog-2-small.mp4\"\n            autoPlay\n            muted\n            loop\n            playsInline\n            className=\"w-full h-full object-cover\"\n          />\n        </motion.div>\n\n        {/* Tooltip - final position tweak */}\n        <AnimatePresence>\n          {!isExpanded && tooltipVisible && (\n            <motion.div\n              key=\"tooltip\"\n              initial={{ opacity: 0, x: isMobile ? 10 : -50, y: isMobile ? 30 : 0 }}\n              animate={{ opacity: 1, x: isMobile ? 10 : -50, y: isMobile ? 30 : 0 }}\n              exit={{ opacity: 0, x: isMobile ? 10 : -50, y: isMobile ? 30 : 0 }}\n              transition={{ duration: 0.3 }}\n              className=\"absolute left-[-200px] bottom-[100px] w-[220px] sm:w-[240px] bg-zinc-900 text-white text-xs rounded-lg shadow-xl p-3 border border-zinc-700\n                relative pointer-events-none group-hover:pointer-events-auto group-hover:opacity-100\"\n            >\n              <div className=\"font-semibold text-sm text-indigo-400 mb-1\">Did you know?</div>\n              <p className=\"text-zinc-300 leading-snug\">{features[currentFeatureIndex]}</p>\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        {/* Panel */}\n        <AnimatePresence>\n          {isExpanded && (\n            <motion.div\n              key=\"panel\"\n              initial={{ opacity: 0, scale: 0.95, y: isMobile ? -50 : -50, x: isMobile ? 0 : -20 }}\n              animate={{ opacity: 1, scale: 1, y: isMobile ? -50 : -50, x: isMobile ? 0 : -20 }}\n              exit={{ opacity: 0, scale: 0.95, y: isMobile ? -50 : -50, x: isMobile ? 0 : -20 }}\n              transition={{ duration: 0.3 }}\n              className=\"absolute left-[-260px] bottom-[140px] w-[280px] bg-zinc-950 border border-zinc-700 rounded-lg shadow-2xl p-4 space-y-3 text-white text-sm\n                relative pointer-events-auto\"\n            >\n              <h3 className=\"font-semibold text-lg text-indigo-400\">QuickSites Features</h3>\n              <ul className=\"list-none pl-5 space-y-1 text-zinc-300\">\n                {features.map((f, i) => (\n                  <li key={i}>{f.replace(/^.+? /, '')}</li>\n                ))}\n              </ul>\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        {/* Show tip button */}\n        {/* {tooltipDismissed && !isExpanded && (\n          <button\n            onClick={() => {\n              setTooltipVisible(true);\n              setTooltipDismissed(false);\n              event.track('tooltip_manually_restored', { isMobile });\n            }}\n            className=\"absolute bottom-0 right-0 translate-y-full mt-2 text-xs text-zinc-400 hover:text-white underline\"\n          >\n            Show tip\n          </button>\n        )} */}\n      </div>\n    </div>\n  );\n}","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/query-button.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/query-link.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/quick-sites-widget.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/reward-tally.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/share-tools-enhanced.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/share-tools.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/suggest-block-button.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/supabase-provider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/template-renderer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/alert.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/avatar-with-tooltip.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/badge.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/breadcrumbs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/button.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/calendar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/card.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/celebration-modal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/checkbox.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/command-palette.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/dialog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/drawer.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··········onClick={onClose}⏎··········className=\"text-sm·text-white·mb-4·hover:underline\"⏎········` with `·onClick={onClose}·className=\"text-sm·text-white·mb-4·hover:underline\"`","line":17,"column":16,"nodeType":null,"messageId":"replace","endLine":20,"endColumn":9,"fix":{"range":[340,439],"text":" onClick={onClose} className=\"text-sm text-white mb-4 hover:underline\""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎········className=\"flex-1·bg-black/30·backdrop-blur-sm\"⏎········onClick={onClose}⏎·····` with `·className=\"flex-1·bg-black/30·backdrop-blur-sm\"·onClick={onClose}`","line":25,"column":11,"nodeType":null,"messageId":"replace","endLine":28,"endColumn":6,"fix":{"range":[519,607],"text":" className=\"flex-1 bg-black/30 backdrop-blur-sm\" onClick={onClose}"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"import { ReactNode } from 'react';\n\nexport function Drawer({\n  open,\n  onClose,\n  children,\n}: {\n  open: boolean;\n  onClose: () => void;\n  children: ReactNode;\n}) {\n  if (!open) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex\">\n      <div className=\"w-full sm:w-[420px] bg-black/90 p-4 overflow-y-auto\">\n        <button\n          onClick={onClose}\n          className=\"text-sm text-white mb-4 hover:underline\"\n        >\n          ← Close\n        </button>\n        {children}\n      </div>\n      <div\n        className=\"flex-1 bg-black/30 backdrop-blur-sm\"\n        onClick={onClose}\n      />\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/dropdown-menu.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'DropdownMenuPortal' is assigned a value but never used.","line":10,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":10,"endColumn":25},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··DropdownMenu,⏎··DropdownMenuTrigger,⏎··DropdownMenuContent,⏎··DropdownMenuItem,⏎` with `·DropdownMenu,·DropdownMenuTrigger,·DropdownMenuContent,·DropdownMenuItem·`","line":44,"column":9,"nodeType":null,"messageId":"replace","endLine":49,"endColumn":1,"fix":{"range":[1476,1559],"text":" DropdownMenu, DropdownMenuTrigger, DropdownMenuContent, DropdownMenuItem "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// components/ui/dropdown-menu.tsx\n'use client';\n\nimport * as React from 'react';\nimport * as DropdownPrimitive from '@radix-ui/react-dropdown-menu';\nimport { cn } from '@/admin/lib/utils';\n\nconst DropdownMenu = DropdownPrimitive.Root;\nconst DropdownMenuTrigger = DropdownPrimitive.Trigger;\nconst DropdownMenuPortal = DropdownPrimitive.Portal;\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownPrimitive.Portal>\n    <DropdownPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        'z-50 min-w-[10rem] overflow-hidden rounded-md border border-zinc-800 bg-zinc-900 p-1 text-white shadow-md animate-in fade-in-0',\n        className\n      )}\n      {...props}\n    />\n  </DropdownPrimitive.Portal>\n));\nDropdownMenuContent.displayName = DropdownPrimitive.Content.displayName;\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <DropdownPrimitive.Item\n    ref={ref}\n    className={cn(\n      'cursor-pointer select-none rounded-sm px-2 py-1.5 text-sm text-white outline-none hover:bg-zinc-700',\n      className\n    )}\n    {...props}\n  />\n));\nDropdownMenuItem.displayName = DropdownPrimitive.Item.displayName;\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n};\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/form.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Insert `⏎`","line":14,"column":51,"nodeType":null,"messageId":"insert","endLine":14,"endColumn":51,"fix":{"range":[530,530],"text":"\n"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import React from 'react';\nexport function Input(props: React.InputHTMLAttributes<HTMLInputElement>) {\n  return (\n    <input\n      {...props}\n      className=\"w-full px-3 py-2 rounded-md bg-zinc-800 text-white border border-zinc-700 placeholder-zinc-400 focus:outline-none focus:ring-2 focus:ring-accent\"\n    />\n  );\n}\n\nexport function Label({ children }: { children: React.ReactNode }) {\n  return <label className=\"block text-sm font-medium text-text mb-1\">{children}</label>;\n}\nexport { Form as default } from 'react-hook-form';","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/input.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/inspirational-quote.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎`","line":49,"column":1,"nodeType":null,"messageId":"delete","endLine":50,"endColumn":1,"fix":{"range":[1489,1490],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// components/ui/inspirational-quote.tsx\n'use client';\n\nimport { useEffect, useState } from 'react';\n\nconst QUOTES: { text: string; tags: string[] }[] = [\n  {\n    text: 'Helping one small business thrive doesn’t just change a balance sheet — it changes a neighborhood.',\n    tags: ['small-business', 'persistence'],\n  },\n  {\n    text: 'Success rarely comes with applause. It comes quietly, when you show up on the slow days.',\n    tags: ['persistence'],\n  },\n  {\n    text: 'Your website is your digital storefront. Keep the lights on. Make it easy to walk in.',\n    tags: ['seo', 'small-business'],\n  },\n  {\n    text: 'One good lead can shift the future. Make sure you’re findable when it matters.',\n    tags: ['seo', 'small-business'],\n  },\n  {\n    text: 'Build slow. Rank steady. Win long-term. This is the rhythm of real growth.',\n    tags: ['seo', 'persistence'],\n  },\n  {\n    text: 'Every click is a quiet moment of trust. Honor it.',\n    tags: ['seo', 'persistence'],\n  },\n  {\n    text: 'Most “overnight” success stories took a decade of quiet persistence.',\n    tags: ['persistence'],\n  },\n  {\n    text: 'When you support a small business, you support a dream — not a boardroom.',\n    tags: ['small-business'],\n  },\n  {\n    text: 'SEO isn’t magic. It’s consistency, clarity, and showing up every day.',\n    tags: ['seo', 'persistence'],\n  },\n  {\n    text: 'Local businesses are the soul of a city. Make sure yours has a voice online.',\n    tags: ['seo', 'small-business'],\n  },\n];\n\n\nexport default function InspirationalQuote({ tags = [] }: { tags?: string[] }) {\n  const [quote, setQuote] = useState<string>('');\n\n  useEffect(() => {\n    const filtered = tags.length\n      ? QUOTES.filter((q) => q.tags.some((tag) => tags.includes(tag)))\n      : QUOTES;\n    const chosen = filtered[Math.floor(Math.random() * filtered.length)];\n    setQuote(chosen?.text || '');\n  }, [tags]);\n\n  return <span className=\"italic opacity-75\">{quote}</span>;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/label.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/loader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/loading-redirect.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/modal-wrapper.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··Dialog,⏎··DialogContent,⏎··DialogOverlay,⏎··DialogClose,⏎··DialogTitle,⏎` with `·Dialog,·DialogContent,·DialogOverlay,·DialogClose,·DialogTitle·`","line":3,"column":9,"nodeType":null,"messageId":"replace","endLine":9,"endColumn":1,"fix":{"range":[23,98],"text":" Dialog, DialogContent, DialogOverlay, DialogClose, DialogTitle "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use client';\n\nimport {\n  Dialog,\n  DialogContent,\n  DialogOverlay,\n  DialogClose,\n  DialogTitle,\n} from '@/components/ui';\nimport { ReactNode } from 'react';\n\ntype ModalWrapperProps = {\n  children: ReactNode;\n  onClose: () => void;\n  open: boolean;\n  title?: string;\n};\n\nexport default function ModalWrapper({ children, onClose, open, title }: ModalWrapperProps) {\n  return (\n    <Dialog open={open} onOpenChange={(val) => !val && onClose()}>\n      {/* <DialogOverlay className=\"fixed inset-0 z-[9998] bg-background/80 backdrop-blur-none\" /> */}\n      <DialogOverlay className=\"fixed inset-0 z-[9998] bg-black/40 backdrop-blur-lg\" />\n      <DialogContent\n        className=\"max-w-md z-[9999] border-l border-zinc-700 shadow-xl overflow-y-auto backdrop-blur-lg\"\n        // className=\"\"\n      >\n        {title && (\n          <DialogTitle className=\"text-lg font-semibold text-white mb-4\">{title}</DialogTitle>\n        )}\n        <DialogClose\n          className=\"absolute top-3 right-4 text-white text-2xl hover:text-red-400\"\n          aria-label=\"Close modal\"\n        >\n          ✖\n        </DialogClose>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/modal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/nav-badge.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/popover.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/render-changed-fields.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·original,·modified,·view·=·'inline'·}:·{·original:·any;·modified:·any;·view?:·'inline'·|·'side-by-side'·` with `⏎··original,⏎··modified,⏎··view·=·'inline',⏎}:·{⏎··original:·any;⏎··modified:·any;⏎··view?:·'inline'·|·'side-by-side';⏎`","line":11,"column":38,"nodeType":null,"messageId":"replace","endLine":11,"endColumn":143,"fix":{"range":[260,365],"text":"\n  original,\n  modified,\n  view = 'inline',\n}: {\n  original: any;\n  modified: any;\n  view?: 'inline' | 'side-by-side';\n"}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `⏎···`","line":15,"column":23,"nodeType":null,"messageId":"insert","endLine":15,"endColumn":23,"fix":{"range":[497,497],"text":"\n   "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `{c.op}·{c.path.join('.')}` with `⏎················{c.op}·{c.path.join('.')}⏎··············`","line":57,"column":58,"nodeType":null,"messageId":"replace","endLine":57,"endColumn":83,"fix":{"range":[2289,2314],"text":"\n                {c.op} {c.path.join('.')}\n              "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `⏎················`","line":59,"column":70,"nodeType":null,"messageId":"insert","endLine":59,"endColumn":70,"fix":{"range":[2444,2444],"text":"\n                "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"// components/ui/render-changed-fields.tsx\n'use client';\n\nimport { diff } from 'just-diff';\nimport React from 'react';\n\nexport function getChangedFields(original: any, modified: any) {\n  return diff(original, modified);\n}\n\nexport function RenderChangedFields({ original, modified, view = 'inline' }: { original: any; modified: any; view?: 'inline' | 'side-by-side' }) {\n  const [mode, setMode] = React.useState(view);\n  const changes = getChangedFields(original, modified);\n\n  if (!changes.length) return <div className=\"text-sm text-muted-foreground\">No differences detected.</div>;\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex justify-end gap-2\">\n        <button\n          onClick={() => setMode('inline')}\n          className={`text-sm px-3 py-1 rounded ${mode === 'inline' ? 'bg-zinc-700 text-white' : 'text-muted-foreground'}`}\n        >\n          Inline\n        </button>\n        <button\n          onClick={() => setMode('side-by-side')}\n          className={`text-sm px-3 py-1 rounded ${mode === 'side-by-side' ? 'bg-zinc-700 text-white' : 'text-muted-foreground'}`}\n        >\n          Side-by-Side\n        </button>\n      </div>\n\n      {mode === 'side-by-side' ? (\n        <div className=\"grid grid-cols-2 gap-4 text-sm\">\n          {changes.map((c, i) => (\n            <React.Fragment key={i}>\n              <div className=\"bg-zinc-800 border border-white/10 rounded p-2\">\n                <div className=\"font-mono text-yellow-300\">{c.path.join('.')}</div>\n                <div className=\"text-muted-foreground\">\n                  <strong>From:</strong> {JSON.stringify(c.value?.[0])}\n                </div>\n              </div>\n              <div className=\"bg-zinc-800 border border-white/10 rounded p-2\">\n                <div className=\"font-mono text-yellow-300\">{c.path.join('.')}</div>\n                <div className=\"text-muted-foreground\">\n                  <strong>To:</strong> {JSON.stringify(c.value?.[1])}\n                </div>\n              </div>\n            </React.Fragment>\n          ))}\n        </div>\n      ) : (\n        <div className=\"space-y-2 text-sm\">\n          {changes.map((c, i) => (\n            <div key={i} className=\"bg-zinc-800 border border-white/10 rounded p-2\">\n              <div className=\"font-mono text-yellow-300\">{c.op} {c.path.join('.')}</div>\n              <div className=\"text-muted-foreground\">\n                <strong>From:</strong> {JSON.stringify(c.value?.[0])}<br />\n                <strong>To:</strong> {JSON.stringify(c.value?.[1])}\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/safe-link.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/scroll-area.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/select.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/separator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/sheet.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/switch.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/table.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/tabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/textarea.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/theme-toggle-button.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/theme-toggle.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/themed-bar-chart.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/components/ui/tooltip.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/constants/blockSchemas.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/context/template-editor-context.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `(⏎····<TemplateEditorContext.Provider·value={editor}>⏎······{children}⏎····</TemplateEditorContext.Provider>⏎··)` with `<TemplateEditorContext.Provider·value={editor}>{children}</TemplateEditorContext.Provider>`","line":24,"column":10,"nodeType":null,"messageId":"replace","endLine":28,"endColumn":4,"fix":{"range":[703,815],"text":"<TemplateEditorContext.Provider value={editor}>{children}</TemplateEditorContext.Provider>"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// context/template-editor-context.tsx\n'use client';\n\nimport { createContext, useContext } from 'react';\nimport type { ReactNode } from 'react';\nimport { useTemplateEditorState } from '@/components/admin/templates/use-template-editor-state';\nimport type { Snapshot } from '@/types/template';\n\nconst TemplateEditorContext = createContext<ReturnType<typeof useTemplateEditorState> | null>(null);\n\nexport function TemplateEditorProvider({\n  templateName,\n  initialData,\n  onRename,\n  children,\n}: {\n  templateName: string;\n  initialData?: Snapshot;\n  onRename?: (name: string) => void;\n  children: ReactNode;\n}) {\n  const editor = useTemplateEditorState({ templateName, initialData, onRename });\n\n  return (\n    <TemplateEditorContext.Provider value={editor}>\n      {children}\n    </TemplateEditorContext.Provider>\n  );\n}\n\nexport function useTemplateEditor() {\n  const ctx = useContext(TemplateEditorContext);\n  if (!ctx) throw new Error('useTemplateEditor must be used within TemplateEditorProvider');\n  return ctx;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/saveAsTemplate.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useAutoRedirect.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useAutoRedirectByRole.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎·····`","line":36,"column":23,"nodeType":null,"messageId":"delete","endLine":37,"endColumn":6,"fix":{"range":[896,902],"text":""}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'error' is assigned a value but never used.","line":54,"column":30,"nodeType":null,"messageId":"unusedVar","endLine":54,"endColumn":35}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use client';\n\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { supabase } from '@/admin/lib/supabaseClient';\n\ntype Role = 'admin' | 'owner' | 'reseller' | 'viewer' | string;\n\ntype RoleMap = Partial<Record<Role, string>>;\n\ntype Options = {\n  roleRoutes?: RoleMap;\n  fallbackRoute?: string;\n  enableTestBypass?: boolean;\n};\n\n/**\n * Redirects the user based on their Supabase `user_profiles.role`.\n * Customize the `roleRoutes` map to control where each role should go.\n */\nexport function useAutoRedirectByRole({\n  roleRoutes = {\n    admin: '/admin/dashboard',\n    owner: '/admin/dashboard',\n    reseller: '/admin/dashboard',\n    viewer: '/viewer',\n  },\n  fallbackRoute = '/unauthorized',\n  enableTestBypass = false,\n}: Options = {}) {\n  const router = useRouter();\n\n  useEffect(() => {\n    if (typeof window === 'undefined') return;\n\n    const isTestMode =\n      enableTestBypass && process.env.NEXT_PUBLIC_IS_PLAYWRIGHT_TEST === 'true';\n\n    if (isTestMode) {\n      router.replace(roleRoutes.admin || '/admin/dashboard');\n      return;\n    }\n\n    const fetchAndRedirect = async () => {\n      const {\n        data: { user },\n      } = await supabase.auth.getUser();\n\n      if (!user?.id) {\n        router.replace('/login');\n        return;\n      }\n\n      const { data: profile, error } = await supabase\n        .from('user_profiles')\n        .select('role')\n        .eq('user_id', user.id)\n        .maybeSingle();\n\n      const role = profile?.role ?? 'viewer';\n      const redirectTo = roleRoutes[role] ?? fallbackRoute;\n\n      if (process.env.NODE_ENV === 'development') {\n        console.log(`[🔁 AutoRedirect] Role \"${role}\" → ${redirectTo}`);\n      }\n\n      router.replace(redirectTo);\n    };\n\n    fetchAndRedirect();\n  }, [router, roleRoutes, fallbackRoute, enableTestBypass]);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useAutosaveTemplate.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `·`","line":1,"column":1,"nodeType":null,"messageId":"delete","endLine":1,"endColumn":2,"fix":{"range":[0,1],"text":""}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'toast' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":" // hooks/useAutosaveTemplate.ts\nimport { useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-hot-toast';\n\nexport function useAutosaveTemplate(template: any, rawJson: string) {\n  const [status, setStatus] = useState<'idle' | 'saving' | 'saved'>('idle');\n  const lastSave = useRef('');\n\n  useEffect(() => {\n    if (!template?.id || template.id.length < 8) return; // 🛡️ Don't autosave yet\n\n    const timeout = setTimeout(() => {\n      if (rawJson !== lastSave.current) {\n        setStatus('saving');\n        localStorage.setItem(`draft-${template.id}`, rawJson);\n        lastSave.current = rawJson;\n        setStatus('saved');\n        // toast.success('Changes autosaved');\n      }\n    }, 2000);\n\n    return () => clearTimeout(timeout);\n  }, [rawJson, template?.id]); // 👈 also track id in case it gets populated later\n\n  const restore = () => {\n    if (!template?.id || template.id.length < 8) return '';\n    return localStorage.getItem(`draft-${template.id}`) || '';\n  };\n\n  const clear = () => {\n    if (!template?.id || template.id.length < 8) return;\n    localStorage.removeItem(`draft-${template.id}`);\n  };\n\n  return { status, restore, clear };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useAutosaveToggle.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useAvatarUploader.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useBrandingAutoSuggest.ts","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'setSelectedProfileId' and 'template'. Either include them or remove the dependency array. If 'setSelectedProfileId' changes too often, find the parent component that defines it and wrap that definition in useCallback.","line":28,"column":6,"nodeType":"ArrayExpression","endLine":28,"endColumn":81,"suggestions":[{"desc":"Update the dependencies array to be: [template?.industry, template.layout, brandingProfiles, selectedProfileId, template, setSelectedProfileId]","fix":{"range":[812,887],"text":"[template?.industry, template.layout, brandingProfiles, selectedProfileId, template, setSelectedProfileId]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useEffect } from 'react';\nimport toast from 'react-hot-toast';\n\nexport function useBrandingAutoSuggest({\n  template,\n  brandingProfiles,\n  selectedProfileId,\n  setSelectedProfileId,\n}: {\n  template: any;\n  brandingProfiles: any[];\n  selectedProfileId: string | null;\n  setSelectedProfileId: (id: string) => void;\n}) {\n  useEffect(() => {\n    if (!template || !brandingProfiles?.length || selectedProfileId) return;\n\n    const match = brandingProfiles.find(\n      (p) =>\n        (template?.industry && p.name.toLowerCase().includes(template?.industry.toLowerCase())) ||\n        (template.layout && p.name.toLowerCase().includes(template.layout.toLowerCase()))\n    );\n\n    if (match) {\n      setSelectedProfileId(match.id);\n      toast.success(`Auto-selected branding profile: ${match.name}`);\n    }\n  }, [template?.industry, template?.layout, brandingProfiles, selectedProfileId]);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useBrandingProfiles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useCampaignForm.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎······prev.includes(id)·?·prev.filter((l)·=>·l·!==·id)·:·[...prev,·id]⏎····` with `·(prev.includes(id)·?·prev.filter((l)·=>·l·!==·id)·:·[...prev,·id])`","line":34,"column":31,"nodeType":null,"messageId":"replace","endLine":36,"endColumn":5,"fix":{"range":[1321,1397],"text":" (prev.includes(id) ? prev.filter((l) => l !== id) : [...prev, id])"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace ``/admin/start-campaign?draftId=${data.id}&city=${city}&state=${state}&initialLeadIds=${initialLeadIds.join(',')}`` with `⏎········`/admin/start-campaign?draftId=${data.id}&city=${city}&state=${state}&initialLeadIds=${initialLeadIds.join(',')}`⏎······`","line":120,"column":19,"nodeType":null,"messageId":"replace","endLine":120,"endColumn":132,"fix":{"range":[3949,4062],"text":"\n        `/admin/start-campaign?draftId=${data.id}&city=${city}&state=${state}&initialLeadIds=${initialLeadIds.join(',')}`\n      "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport dayjs from 'dayjs';\nimport { supabase } from '@/admin/lib/supabaseClient';\nimport { useLeads } from './useLeads';\n\nfunction slugify(name: string): string {\n  return name\n    .toLowerCase()\n    .replace(/[^a-z0-9]+/g, '-')\n    .replace(/^-|-$/g, '');\n}\n\nexport function useCampaignForm(city: string, state: string, initialLeadIds: string[] = []) {\n  const router = useRouter();\n\n  const [name, setName] = useState('');\n  const [nameWasManuallySet, setNameWasManuallySet] = useState(false);\n  const [alt1, setAlt1] = useState('');\n  const [alt2, setAlt2] = useState('');\n  const [startsAt, setStartsAt] = useState(dayjs().toISOString().slice(0, 16));\n  const [endsAt, setEndsAt] = useState(dayjs().add(3, 'day').toISOString().slice(0, 16));\n  const [silentMode, setSilentMode] = useState(false);\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState<string | null>(null);\n  const [validationErrors, setValidationErrors] = useState<Record<string, string>>({});\n  const { leads, loading: leadsLoading } = useLeads({ city, state, industry: 'towing' });\n\n  const [selectedLeads, setSelectedLeads] = useState<string[]>([]);\n\n  function toggleLead(id: string) {\n    setSelectedLeads((prev) =>\n      prev.includes(id) ? prev.filter((l) => l !== id) : [...prev, id]\n    );\n  }\n\n  useEffect(() => {\n    if (!nameWasManuallySet && city && selectedLeads.length >= 2 && startsAt) {\n      const a = leads.find((l) => l.id === selectedLeads[0])?.business_name?.split(' ')[0] || 'A';\n      const b = leads.find((l) => l.id === selectedLeads[1])?.business_name?.split(' ')[0] || 'B';\n      const date = dayjs(startsAt).format('YYYY-MM-DD');\n      setName(`${city} Towing: ${a} vs ${b} ${date}`);\n    }\n  }, [city, selectedLeads, nameWasManuallySet, startsAt, leads]);\n\n  useEffect(() => {\n    if (selectedLeads.length >= 2) {\n      const leadA = leads.find((l) => l.id === selectedLeads[0]);\n      const leadB = leads.find((l) => l.id === selectedLeads[1]);\n\n      if (leadA && !alt1) setAlt1(`${slugify(leadA.business_name || '')}.com`);\n      if (leadB && !alt2) setAlt2(`${slugify(leadB.business_name || '')}.com`);\n    }\n  }, [selectedLeads, leads, alt1, alt2]);\n\n  useEffect(() => {\n    supabase.auth.getUser().then(({ data }) => {\n      setEmail(data?.user?.email || '');\n    });\n  }, []);\n\n  function validateFields(): boolean {\n    const errors: Record<string, string> = {};\n\n    if (!name.trim()) errors.name = 'Campaign name is required.';\n    if (selectedLeads.length < 2) errors.leads = 'Select at least 2 leads.';\n    if (dayjs(startsAt).isAfter(dayjs(endsAt)))\n      errors.dates = 'Start date must be before end date.';\n\n    setValidationErrors(errors);\n    return Object.keys(errors).length === 0;\n  }\n\n  const submit = async (mode: 'draft' | 'submit' = 'submit') => {\n    setError(null);\n    if (!validateFields()) return;\n\n    const status = mode === 'draft' ? 'draft' : 'active';\n\n    const { data, error: insertError } = await supabase\n      .from('campaigns')\n      .insert([\n        {\n          name,\n          city,\n          state,\n          starts_at: startsAt,\n          ends_at: endsAt,\n          lead_ids: selectedLeads,\n          alt_domains: [alt1, alt2],\n          created_by: email,\n          status,\n        },\n      ])\n      .select()\n      .single();\n\n    if (insertError) {\n      setError(insertError.message);\n      return;\n    }\n\n    if (mode === 'submit') {\n      await supabase.from('leads').update({ campaign_id: data.id }).in('id', selectedLeads);\n\n      if (!silentMode) {\n        await supabase.from('user_action_logs').insert([\n          {\n            action_type: 'campaign_created',\n            triggered_by: email,\n            notes: `Created campaign: ${name}`,\n          },\n        ]);\n      }\n\n      router.push(`/admin/campaigns?new=${data.id}`);\n    } else {\n      router.push(`/admin/start-campaign?draftId=${data.id}&city=${city}&state=${state}&initialLeadIds=${initialLeadIds.join(',')}`);\n    }\n  };\n\n  return {\n    name,\n    setName,\n    nameWasManuallySet,\n    setNameWasManuallySet,\n    alt1,\n    alt2,\n    setAlt1,\n    setAlt2,\n    startsAt,\n    setStartsAt,\n    endsAt,\n    setEndsAt,\n    silentMode,\n    setSilentMode,\n    email,\n    error,\n    validationErrors,\n    submit,\n    leads,\n    selectedLeads,\n    toggleLead,\n    leadsLoading,\n    initialLeadIds,\n  };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useCanonicalRole.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useCurrentRole.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useCurrentUser.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·isMocked·&&·mockUser·?·{·...mockUser,·role:·role·as·'viewer'·|·'admin'·|·'editor'·|·'owner'·}` with `⏎······isMocked·&&·mockUser⏎········?·{·...mockUser,·role:·role·as·'viewer'·|·'admin'·|·'editor'·|·'owner'·}⏎·······`","line":88,"column":10,"nodeType":null,"messageId":"replace","endLine":88,"endColumn":104,"fix":{"range":[2642,2736],"text":"\n      isMocked && mockUser\n        ? { ...mockUser, role: role as 'viewer' | 'admin' | 'editor' | 'owner' }\n       "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// /hooks/useCurrentUser.tsx (enhanced with mock support and role helpers)\nimport { useContext, useEffect, useState } from 'react';\nimport {\n  CurrentUserContext,\n  CurrentUserContextType,\n} from '@/components/admin/context/current-user-provider';\nimport { supabase } from '@/admin/lib/supabaseClient';\n\nexport function useCurrentUser(): CurrentUserContextType & {\n  role: string;\n  roleSource: string;\n  isLoading: boolean;\n  ready: boolean;\n  isAdmin: boolean;\n  isOwner: boolean;\n  isReseller: boolean;\n  isViewer: boolean;\n  isMocked: boolean;\n} {\n  const context = useContext(CurrentUserContext);\n\n  const [fetchedRole, setFetchedRole] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [roleSource, setRoleSource] = useState<'simulated' | 'session' | 'db' | 'cache'>('session');\n  const [mockUser, setMockUser] = useState<{ id: string; email: string } | null>(null);\n\n  useEffect(() => {\n    const fetchRole = async () => {\n      const devMockRole = typeof window !== 'undefined' ? (window as any).__DEV_MOCK_ROLE__ : null;\n      const devMockUser = typeof window !== 'undefined' ? (window as any).__DEV_MOCK_USER__ : null;\n      if (devMockRole && devMockUser) {\n        setFetchedRole(devMockRole);\n        setRoleSource('simulated');\n        setMockUser(devMockUser);\n        setIsLoading(false);\n        return;\n      }\n\n      const email = context.user?.email;\n      if (!email) {\n        setIsLoading(false);\n        return;\n      }\n\n      const cacheKey = `cached-role-${email}`;\n\n      const cached = localStorage.getItem(cacheKey);\n      if (cached) {\n        console.debug('📦 Using cached fallback role:', cached);\n        setFetchedRole(cached);\n        setRoleSource('cache');\n        setIsLoading(false);\n        return;\n      }\n\n      const { data, error } = await supabase\n        .from('user_roles')\n        .select('new_role')\n        .eq('user_email', email)\n        .order('updated_at', { ascending: false })\n        .limit(1)\n        .single();\n\n      if (error) {\n        console.warn('🔍 Role fetch error', error.message);\n      } else if (data?.new_role?.trim()) {\n        console.debug('✅ Fallback role from DB:', data.new_role);\n        setFetchedRole(data.new_role);\n        setRoleSource('db');\n        localStorage.setItem(cacheKey, data.new_role);\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchRole();\n  }, [context.user?.email]);\n\n  const role: string =\n    (fetchedRole as 'viewer' | 'admin' | 'editor' | 'owner' | 'reseller') ||\n    context.user?.role ||\n    'viewer';\n\n  const isMocked = roleSource === 'simulated';\n\n  return {\n    ...context,\n    user: isMocked && mockUser ? { ...mockUser, role: role as 'viewer' | 'admin' | 'editor' | 'owner' } : context.user,\n    role: role as 'viewer' | 'admin' | 'editor' | 'owner',\n    roleSource,\n    isLoading,\n    ready: !isLoading,\n    isMocked,\n    isAdmin: role === 'admin',\n    isOwner: role === 'owner',\n    isReseller: role === 'reseller',\n    isViewer: role === 'viewer',\n  };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useDashboardLayout.ts","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'activeDashboardId'. Either include it or remove the dependency array.","line":33,"column":6,"nodeType":"ArrayExpression","endLine":33,"endColumn":14,"suggestions":[{"desc":"Update the dependencies array to be: [activeDashboardId, userId]","fix":{"range":[1148,1156],"text":"[activeDashboardId, userId]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// hooks/useDashboardLayout.ts\n\nimport { useEffect, useState } from 'react';\nimport { supabase } from '../admin/lib/supabaseClient';\n\ntype Block = { id: string; title: string };\ntype Settings = Record<string, Record<string, any>>;\n\nexport function useDashboardLayout(userId: string | null, dashboardId?: string) {\n  const [order, setOrder] = useState<Block[]>([]);\n  const [hidden, setHidden] = useState<string[]>([]);\n  const [settings, setSettings] = useState<Settings>({});\n  const [dashboards, setDashboards] = useState<any[]>([]);\n  const [activeDashboardId, setActiveDashboardId] = useState<string | null>(dashboardId || null);\n  const [loaded, setLoaded] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  // Fetch dashboards for the user\n  useEffect(() => {\n    if (!userId) return;\n    setLoading(true);\n    supabase\n      .from('dashboard_user_layouts')\n      .select('*')\n      .eq('user_id', userId)\n      .then(({ data }) => {\n        setDashboards(data || []);\n        if (!activeDashboardId && data?.[0]) {\n          setActiveDashboardId(data[0].dashboard_id);\n        }\n        setLoading(false);\n      });\n  }, [userId]);\n\n  // Load selected layout\n  useEffect(() => {\n    if (!userId || !activeDashboardId) return;\n    setLoading(true);\n    supabase\n      .from('dashboard_user_layouts')\n      .select('layout, hidden, settings')\n      .eq('user_id', userId)\n      .eq('dashboard_id', activeDashboardId)\n      .single()\n      .then(({ data }) => {\n        if (data?.layout) setOrder(data.layout);\n        if (data?.hidden) setHidden(data.hidden);\n        if (data?.settings) setSettings(data.settings);\n        setLoaded(true);\n        setLoading(false);\n      });\n\n    const channel = supabase\n      .channel('dashboard_sync')\n      .on(\n        'postgres_changes',\n        {\n          event: 'UPDATE',\n          schema: 'public',\n          table: 'dashboard_user_layouts',\n          filter: `user_id=eq.${userId}`,\n        },\n        (payload) => {\n          const updated = payload.new;\n          if (updated.dashboard_id === activeDashboardId) {\n            if (updated.layout) setOrder(updated.layout);\n            if (updated.hidden) setHidden(updated.hidden);\n            if (updated.settings) setSettings(updated.settings);\n          }\n        }\n      )\n      .subscribe();\n\n    return () => {\n      supabase.removeChannel(channel);\n    };\n  }, [userId, activeDashboardId]);\n\n  const save = async (layout: Block[], hiddenList: string[], newSettings = settings) => {\n    if (!userId || !activeDashboardId) return;\n    setLoading(true);\n    await supabase.from('dashboard_user_layouts').upsert({\n      user_id: userId,\n      dashboard_id: activeDashboardId,\n      layout,\n      hidden: hiddenList,\n      settings: newSettings,\n      updated_at: new Date().toISOString(),\n    });\n    setOrder(layout);\n    setHidden(hiddenList);\n    setSettings(newSettings);\n    setLoading(false);\n  };\n\n  const updateBlockSetting = (blockId: string, key: string, value: any) => {\n    const newSettings = {\n      ...settings,\n      [blockId]: {\n        ...(settings[blockId] || {}),\n        [key]: value,\n      },\n    };\n    save(order, hidden, newSettings);\n  };\n  const createDashboard = async (name: string) => {\n    if (!userId) return;\n    setLoading(true);\n    const { data } = await supabase\n      .from('dashboard_user_layouts')\n      .insert({\n        user_id: userId,\n        name,\n        layout: 'DEFAULT_LAYOUT',\n        hidden: [],\n        settings: {},\n      })\n      .select()\n      .single();\n\n    if (data) {\n      setDashboards((prev) => [...prev, data]);\n      setActiveDashboardId(data.dashboard_id);\n      setOrder(data.layout);\n      setHidden([]);\n      setSettings({});\n      setLoading(false);\n    }\n  };\n\n  return {\n    order,\n    hidden,\n    settings,\n    dashboards,\n    activeDashboardId,\n    setActiveDashboardId,\n    loaded,\n    save,\n    updateBlockSetting,\n    createDashboard,\n    loading,\n  };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useDateRange.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":2,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":19},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useMemo has a missing dependency: 'searchParams'. Either include it or remove the dependency array.","line":11,"column":6,"nodeType":"ArrayExpression","endLine":11,"endColumn":34,"suggestions":[{"desc":"Update the dependencies array to be: [searchParams]","fix":{"range":[328,356],"text":"[searchParams]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useMemo has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","line":11,"column":7,"nodeType":"ChainExpression","endLine":11,"endColumn":33},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useMemo has a missing dependency: 'searchParams'. Either include it or remove the dependency array.","line":16,"column":6,"nodeType":"ArrayExpression","endLine":16,"endColumn":32,"suggestions":[{"desc":"Update the dependencies array to be: [searchParams]","fix":{"range":[496,522],"text":"[searchParams]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useMemo has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","line":16,"column":7,"nodeType":"ChainExpression","endLine":16,"endColumn":31}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { useMemo } from 'react';\n\nexport function useDateRange() {\n  const searchParams = useSearchParams();\n\n  const start = useMemo(() => {\n    if (typeof searchParams?.get('start') === 'string') return searchParams.get('start');\n    return '';\n  }, [searchParams?.get('start')]);\n\n  const end = useMemo(() => {\n    if (typeof searchParams?.get('end') === 'string') return searchParams.get('end');\n    return '';\n  }, [searchParams?.get('end')]);\n\n  return { start, end };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useDomainPreview.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useErrorLogger.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useFlashToast.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":2,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":19},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'className', 'duration', 'icon', 'key', 'prefix', 'searchParams', and 'type'. Either include them or remove the dependency array.","line":51,"column":6,"nodeType":"ArrayExpression","endLine":51,"endColumn":13,"suggestions":[{"desc":"Update the dependencies array to be: [className, duration, icon, key, prefix, searchParams, type, value]","fix":{"range":[1373,1380],"text":"[className, duration, icon, key, prefix, searchParams, type, value]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useEffect } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { toast, ToastOptions } from 'react-hot-toast';\n\ntype ToastType = 'success' | 'error' | 'loading' | 'custom';\n\ntype UseFlashToastOptions = {\n  type?: ToastType;\n  prefix?: string;\n  duration?: number;\n  icon?: string;\n  className?: string;\n};\n\nexport function useFlashToast(\n  key: string,\n  { type = 'success', prefix = '', duration = 3000, icon, className }: UseFlashToastOptions = {}\n) {\n  const searchParams = useSearchParams();\n  const value = searchParams?.get(key);\n\n  useEffect(() => {\n    if (value && typeof value === 'string') {\n      const message = `${prefix}${value}`;\n\n      const toastOptions: ToastOptions = {\n        duration,\n        icon,\n        className,\n      };\n\n      switch (type) {\n        case 'error':\n          toast.error(message, toastOptions);\n          break;\n        case 'loading':\n          toast.loading(message, toastOptions);\n          break;\n        case 'custom':\n          toast(message, toastOptions);\n          break;\n        default:\n          toast.success(message, toastOptions);\n      }\n\n      // Remove the flash param from the URL\n      const rest = new URLSearchParams(searchParams?.toString() || '');\n      rest.delete(key);\n      window.location.href = `${window.location.pathname}?${rest.toString()}`;\n    }\n  }, [value]);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useGeoLocation.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'key' is assigned a value but never used.","line":26,"column":13,"nodeType":null,"messageId":"unusedVar","endLine":26,"endColumn":16}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// hooks/useGeoLocation.ts\nimport { useEffect, useState } from 'react';\nimport { getCachedGeo, setCachedGeo } from '../lib/geoCache.js';\nimport staticGeo from '../public/staticGeo.json';\n\n// USAGE:\n// const { lat, lon, loading, error } = useGeoLocation('Franklin', 'WI');\n// if (loading) return <p>Loading map...</p>;\n// if (error) return <p>Error: {error}</p>;\n\nfunction getStaticFallback(city: string, state: string): { lat: number; lon: number } | undefined {\n  const key = `${city.trim().toLowerCase()},${state.trim().toLowerCase()}`;\n  return staticGeo[key as keyof typeof staticGeo];\n}\n\nexport function useGeoLocation(city: string, state: string) {\n  const [coords, setCoords] = useState<{ lat: number; lon: number } | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!city || !state) return;\n\n    const tryGeoSources = async () => {\n      setLoading(true);\n      const key = `${city}, ${state}`;\n\n      // 1. Local memory cache\n      const memoryHit = getCachedGeo(city, state);\n      if (memoryHit) {\n        setCoords(memoryHit);\n        setLoading(false);\n        return;\n      }\n\n      // 2. Static fallback JSON\n      const staticHit = getStaticFallback(city, state);\n      if (staticHit) {\n        setCachedGeo(city, state, staticHit.lat, staticHit.lon);\n        setCoords(staticHit);\n        setLoading(false);\n        return;\n      }\n\n      // 3. Remote API\n      try {\n        const res = await fetch(\n          `/api/geocode?city=${encodeURIComponent(city)}&state=${encodeURIComponent(state)}`\n        );\n        if (!res.ok) throw new Error(`API failed: ${res.status}`);\n        const data = await res.json();\n        const lat = Number(data.lat || 0);\n        const lon = Number(data.lon || 0);\n        setCachedGeo(city, state, lat, lon);\n        setCoords({ lat, lon });\n      } catch (err: any) {\n        setError(err.message || 'Unknown error');\n        setCoords({ lat: 0, lon: 0 });\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    tryGeoSources();\n  }, [city, state]);\n\n  return { lat: coords?.lat, lon: coords?.lon, loading, error };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useGlowTheme.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·children,·siteSlug·=·'default'·}:·{·children:·React.ReactNode;·siteSlug?:·string·` with `⏎··children,⏎··siteSlug·=·'default',⏎}:·{⏎··children:·React.ReactNode;⏎··siteSlug?:·string;⏎`","line":41,"column":32,"nodeType":null,"messageId":"replace","endLine":41,"endColumn":114,"fix":{"range":[1011,1093],"text":"\n  children,\n  siteSlug = 'default',\n}: {\n  children: React.ReactNode;\n  siteSlug?: string;\n"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `process.env.NEXT_PUBLIC_SUPABASE_URL!,·process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!` with `⏎····process.env.NEXT_PUBLIC_SUPABASE_URL!,⏎····process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!⏎··`","line":42,"column":43,"nodeType":null,"messageId":"replace","endLine":42,"endColumn":124,"fix":{"range":[1140,1221],"text":"\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n  "}},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'supabase'. Either include it or remove the dependency array.","line":85,"column":6,"nodeType":"ArrayExpression","endLine":85,"endColumn":16,"suggestions":[{"desc":"Update the dependencies array to be: [siteSlug, supabase]","fix":{"range":[2510,2520],"text":"[siteSlug, supabase]"}}]},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎······{children}⏎····` with `{children}`","line":113,"column":66,"nodeType":null,"messageId":"replace","endLine":115,"endColumn":5,"fix":{"range":[3331,3353],"text":"{children}"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"// /hooks/useThemeContext.ts (now includes full theme + provider + glow sync)\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport type { Database } from '@/types/supabase';\n\nexport type GlowConfig = {\n  size: 'sm' | 'md' | 'lg' | 'xl';\n  intensity: number;\n  colors: string[];\n};\n\nexport type SiteTheme = {\n  glow: GlowConfig[];\n  fontFamily?: string;\n  borderRadius?: string;\n  accentColor?: string;\n  // add other themable options here\n};\n\nconst defaultGlow: GlowConfig[] = [\n  { size: 'xl', intensity: 0.2, colors: ['from-purple-600', 'via-blue-500', 'to-pink-500'] },\n];\n\nconst defaultTheme: SiteTheme = {\n  glow: defaultGlow,\n  fontFamily: 'sans',\n  borderRadius: 'lg',\n  accentColor: 'indigo-600',\n};\n\nconst ThemeContext = createContext<{\n  theme: SiteTheme;\n  setTheme: (t: SiteTheme) => void;\n  siteSlug: string;\n}>({\n  theme: defaultTheme,\n  setTheme: () => {},\n  siteSlug: 'default',\n});\n\nexport function ThemeProvider({ children, siteSlug = 'default' }: { children: React.ReactNode; siteSlug?: string }) {\n  const supabase = createClient<Database>(process.env.NEXT_PUBLIC_SUPABASE_URL!, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!);\n  const [theme, setThemeState] = useState<SiteTheme>(defaultTheme);\n\n  useEffect(() => {\n    const loadTheme = async () => {\n      if (typeof window === 'undefined') return;\n\n      const key = `theme-config::${siteSlug}`;\n      const cached = localStorage.getItem(key);\n      if (cached) {\n        try {\n          const parsed = JSON.parse(cached);\n          setThemeState(parsed);\n          return;\n        } catch {\n          console.warn('⚠️ Failed to parse cached theme');\n        }\n      }\n\n      const userId = (window as any).__DEV_MOCK_USER__?.id;\n      if (userId) {\n        const { data } = await supabase\n          .from('user_site_settings')\n          .select('glow_config, theme_font, theme_radius, theme_accent')\n          .eq('user_id', userId)\n          .eq('site_slug', siteSlug)\n          .single();\n\n        if (data) {\n          setThemeState({\n            glow: Array.isArray(data.glow_config) ? data.glow_config : [data.glow_config],\n            fontFamily: data.theme_font || defaultTheme.fontFamily,\n            borderRadius: data.theme_radius || defaultTheme.borderRadius,\n            accentColor: data.theme_accent || defaultTheme.accentColor,\n          });\n          return;\n        }\n      }\n\n      setThemeState(defaultTheme);\n    };\n\n    loadTheme();\n  }, [siteSlug]);\n\n  const setTheme = async (value: SiteTheme) => {\n    setThemeState(value);\n\n    const userId = (window as any).__DEV_MOCK_USER__?.id;\n    if (typeof window !== 'undefined') {\n      const key = `theme-config::${siteSlug}`;\n      try {\n        localStorage.setItem(key, JSON.stringify(value));\n\n        if (userId) {\n          await supabase.from('user_site_settings').upsert({\n            user_id: userId,\n            site_slug: siteSlug,\n            glow_config: value.glow,\n            theme_font: value.fontFamily,\n            theme_radius: value.borderRadius,\n            theme_accent: value.accentColor,\n          });\n        }\n      } catch (err) {\n        console.warn('⚠️ Failed to persist theme', err);\n      }\n    }\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme, siteSlug }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport function useTheme() {\n  return useContext(ThemeContext);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useImageUploader.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'label' is defined but never used. Allowed unused args must match /^_/u.","line":19,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":19,"endColumn":8}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState } from 'react';\nimport { supabase } from '../admin/lib/supabaseClient';\n\ninterface UseImageUploaderOptions {\n  siteId: string;\n  templateId: string;\n  dbField: string;\n  folder?: string;\n  label?: string;\n  initialUrl?: string;\n  onChange?: (url: string | null) => void;\n}\n\nexport function useImageUploader({\n  siteId,\n  templateId,\n  dbField,\n  folder = 'uploads',\n  label,\n  initialUrl,\n  onChange,\n}: UseImageUploaderOptions) {\n  const [preview, setPreview] = useState<string | null>(initialUrl ?? null);\n  const [uploading, setUploading] = useState(false);\n\n  function sanitizeFilename(filename: string): string {\n    const parts = filename.split('.');\n    const ext = parts.pop(); // file extension\n    const base = parts.join('-').replace(/\\s+/g, '-');\n    const timestamp = Date.now(); // or use dayjs() for formatted date\n    return `${base}-${timestamp}.${ext}`.toLowerCase();\n  }\n\n  const uploadImage = async (file: File) => {\n    if (!file) return;\n\n    const cleanName = sanitizeFilename(file.name);\n    const filePath = `${folder}/${siteId}/${cleanName}`;\n    setUploading(true);\n    setPreview(URL.createObjectURL(file));\n\n    const { error: uploadError } = await supabase.storage\n      .from('site-images')\n      .upload(filePath, file, { upsert: true });\n\n    if (uploadError) {\n      console.error('Upload error:', uploadError.message);\n      setUploading(false);\n      return;\n    }\n\n    const { data: publicData } = supabase.storage.from('site-images').getPublicUrl(filePath);\n\n    const publicUrl = publicData?.publicUrl;\n    if (!publicUrl) return;\n\n    const { error: updateError } = await supabase\n      .from('templates')\n      .update({\n        [dbField]: publicUrl,\n        [`${dbField}_meta`]: {\n          originalName: file.name,\n          path: filePath,\n          uploadedAt: new Date().toISOString(),\n        },\n      })\n      .eq('id', templateId);\n\n    if (updateError) {\n      console.error('DB update error:', updateError.message);\n    } else {\n      setPreview(publicUrl);\n      onChange?.(publicUrl);\n    }\n\n    setUploading(false);\n  };\n\n  const removeImage = async () => {\n    if (!preview) return;\n\n    const { data: bucketInfo } = supabase.storage.from('site-images').getPublicUrl('');\n    const bucketUrl = bucketInfo?.publicUrl;\n    const path = preview.replace(`${bucketUrl}/`, '');\n\n    const { error: deleteError } = await supabase.storage.from('site-images').remove([path]);\n\n    if (deleteError) {\n      console.error('Storage delete error:', deleteError.message);\n      return;\n    }\n\n    const { error: updateError } = await supabase\n      .from('templates')\n      .update({ [dbField]: null })\n      .eq('id', templateId);\n\n    if (updateError) {\n      console.error('DB remove error:', updateError.message);\n    } else {\n      setPreview(null);\n      onChange?.(null);\n    }\n  };\n\n  return {\n    preview,\n    uploading,\n    uploadImage,\n    removeImage,\n  };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useInsertedBlockHighlight.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useIsAdmin.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useLastSeen.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useLatestTemplate.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useLeads.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useLiveAdminStats.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useLiveDraftStats.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useLiveTable.ts","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'filter' and 'sort'. Either include them or remove the dependency array.","line":76,"column":6,"nodeType":"ArrayExpression","endLine":76,"endColumn":93,"suggestions":[{"desc":"Update the dependencies array to be: [table, filter.column, filter.operator, filter.value, sort.column, sort.ascending, filter, sort]","fix":{"range":[2258,2345],"text":"[table, filter.column, filter.operator, filter.value, sort.column, sort.ascending, filter, sort]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useEffect, useState } from 'react';\nimport { supabase } from '../admin/lib/supabaseClient';\n\ntype Filter = { column: keyof any; operator: 'eq' | 'neq'; value: any };\ntype Sort = { column: keyof any; ascending?: boolean };\n\nexport function useLiveTable<T extends { id: string | number }>(\n  table: string,\n  filter?: Filter,\n  sort?: Sort\n): T[] {\n  const [rows, setRows] = useState<T[]>([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInitial = async () => {\n      let query = supabase.from(table).select('*');\n\n      if (filter) {\n        query = query.filter(filter.column as string, filter.operator, filter.value);\n      }\n\n      if (sort) {\n        query = query.order(sort.column as string, {\n          ascending: sort.ascending ?? true,\n        });\n      }\n\n      const { data, error } = await query;\n      if (!error && mounted) setRows((data as T[]) || []);\n    };\n\n    fetchInitial();\n\n    const subscription = supabase\n      .channel(`realtime:${table}`)\n      .on('postgres_changes', { event: '*', schema: 'public', table }, (payload) => {\n        const applyFilter = (row: T) => {\n          if (!filter) return true;\n          switch (filter.operator) {\n            case 'eq':\n              return row[filter.column as keyof T] === filter.value;\n            case 'neq':\n              return row[filter.column as keyof T] !== filter.value;\n            default:\n              return true;\n          }\n        };\n\n        setRows((prev) => {\n          const updated = [...prev];\n          const index = updated.findIndex((r) => r.id === (payload.new as T)?.id);\n\n          switch (payload.eventType) {\n            case 'INSERT':\n              return applyFilter(payload.new as T) ? [...updated, payload.new as T] : updated;\n            case 'UPDATE':\n              if (index !== -1 && applyFilter(payload.new as T)) {\n                updated[index] = payload.new as T;\n              }\n              return updated;\n            case 'DELETE':\n              return updated.filter((r) => r.id !== (payload.old as T)?.id);\n            default:\n              return updated;\n          }\n        });\n      })\n      .subscribe();\n\n    return () => {\n      mounted = false;\n      supabase.removeChannel(subscription);\n    };\n  }, [table, filter?.column, filter?.operator, filter?.value, sort?.column, sort?.ascending]);\n\n  return rows;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useLiveTableWrapper.ts","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'filter' and 'sort'. Either include them or remove the dependency array.","line":22,"column":6,"nodeType":"ArrayExpression","endLine":22,"endColumn":59,"suggestions":[{"desc":"Update the dependencies array to be: [filter, sort, table]","fix":{"range":[532,585],"text":"[filter, sort, table]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","line":22,"column":14,"nodeType":"CallExpression","endLine":22,"endColumn":36},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","line":22,"column":38,"nodeType":"CallExpression","endLine":22,"endColumn":58}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\n\nexport function useLiveTableWrapper<T>(table: string, filter: any, sort: any): T[] {\n  const [data, setData] = useState<T[]>([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchData = async () => {\n      const mod = await import('./useLiveTable.jsx');\n      const result = mod.useLiveTable<{ id: string | number } & T>(table, filter, sort);\n      if (mounted) setData(result);\n    };\n\n    fetchData();\n\n    return () => {\n      mounted = false;\n    };\n  }, [table, JSON.stringify(filter), JSON.stringify(sort)]);\n\n  return data;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useLogNotFound.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useLoginStatus.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `process.env.NEXT_PUBLIC_SUPABASE_URL!,·process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!` with `⏎····process.env.NEXT_PUBLIC_SUPABASE_URL!,⏎····process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!⏎··`","line":13,"column":43,"nodeType":null,"messageId":"replace","endLine":13,"endColumn":124,"fix":{"range":[431,512],"text":"\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n  "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// hooks/useLoginStatus.ts\n'use client';\n\nimport { useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport type { Session } from '@supabase/supabase-js';\nimport { Database } from '@/types/supabase';\n\nexport function useLoginStatus() {\n  const [session, setSession] = useState<Session | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const supabase = createClient<Database>(process.env.NEXT_PUBLIC_SUPABASE_URL!, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!);\n\n  useEffect(() => {\n    const fetch = async () => {\n      const { data, error } = await supabase.auth.getSession();\n      if (!error) setSession(data.session);\n      setLoading(false);\n    };\n\n    const { data: listener } = supabase.auth.onAuthStateChange((_, newSession) => {\n      setSession(newSession);\n    });\n\n    fetch();\n\n    return () => {\n      listener?.subscription.unsubscribe();\n    };\n  }, [supabase]);\n\n  return {\n    isAuthenticated: !!session,\n    session,\n    loading,\n    user: session?.user ?? null,\n  };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useMediaQuery.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useMockGeolocation.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎······.split(';·')⏎······` with `.split(';·')`","line":10,"column":35,"nodeType":null,"messageId":"replace","endLine":12,"endColumn":7,"fix":{"range":[271,297],"text":".split('; ')"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// hooks/useMockGeolocation.ts\n'use client';\n\nimport { useEffect, useState } from 'react';\n\nexport function useMockGeolocation() {\n  const [mockGeo, setMockGeo] = useState<{ lat: number; lon: number } | null>(null);\n\n  useEffect(() => {\n    const cookie = document.cookie\n      .split('; ')\n      .find((row) => row.startsWith('mock-geo='));\n\n    if (!cookie) {\n      setMockGeo(null);\n      return;\n    }\n\n    try {\n      const value = decodeURIComponent(cookie.split('=')[1]);\n      const [lat, lon] = value.split(',').map(Number);\n      if (!isNaN(lat) && !isNaN(lon)) {\n        setMockGeo({ lat, lon });\n      }\n    } catch {\n      setMockGeo(null);\n    }\n  }, []);\n\n  return mockGeo;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useNavBadge.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useNavBadges.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useQueryFlash.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":2,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":19},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'key' and 'searchParams'. Either include them or remove the dependency array.","line":18,"column":6,"nodeType":"ArrayExpression","endLine":18,"endColumn":30,"suggestions":[{"desc":"Update the dependencies array to be: [key, searchParams]","fix":{"range":[639,663],"text":"[key, searchParams]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","line":18,"column":7,"nodeType":"ChainExpression","endLine":18,"endColumn":29}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useEffect, useState } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\n\nexport function useQueryFlash(key: string): string | null {\n  const searchParams = useSearchParams();\n  const [value, setValue] = useState<string | null>(null);\n\n  useEffect(() => {\n    const param = searchParams?.get(key);\n    if (param && typeof param === 'string') {\n      setValue(param);\n\n      // Strip it from the URL without full reload\n      const rest = new URLSearchParams(searchParams?.toString() || '');\n      rest.delete(key);\n      window.location.href = `${window.location.pathname}?${rest.toString()}`;\n    }\n  }, [searchParams?.get(key)]); // re-run if query changes\n\n  return value;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useQueryParam.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useRadiusFilter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useRedirectAfterLogin.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useRequestMeta.ts","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useMemo has missing dependencies: 'body?.dataset?.userEmail', 'body?.dataset?.userId', and 'body?.dataset?.userRole'. Either include them or remove the dependency array.","line":18,"column":6,"nodeType":"ArrayExpression","endLine":18,"endColumn":82,"suggestions":[{"desc":"Update the dependencies array to be: [body?.dataset?.traceId, body?.dataset?.sessionId, body?.dataset?.abVariant, body?.dataset?.userRole, body?.dataset?.userId, body?.dataset?.userEmail]","fix":{"range":[515,591],"text":"[body?.dataset?.traceId, body?.dataset?.sessionId, body?.dataset?.abVariant, body?.dataset?.userRole, body?.dataset?.userId, body?.dataset?.userEmail]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// hooks/useRequestMeta.ts\n'use client';\n\nimport { useMemo } from 'react';\n\nexport function useRequestMeta() {\n  const body = typeof document !== 'undefined' ? document.body : null;\n\n  return useMemo(() => {\n    return {\n      traceId: body?.dataset?.traceId ?? '',\n      sessionId: body?.dataset?.sessionId ?? '',\n      abVariant: body?.dataset?.abVariant ?? '',\n      userRole: body?.dataset?.userRole ?? '',\n      userId: body?.dataset?.userId ?? '',\n      userEmail: body?.dataset?.userEmail ?? '',\n    };\n  }, [body?.dataset?.traceId, body?.dataset?.sessionId, body?.dataset?.abVariant]);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useResolvedRole.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'resolveRole' is assigned a value but never used.","line":43,"column":16,"nodeType":null,"messageId":"unusedVar","endLine":43,"endColumn":27}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { supabase } from '@/lib/supabase/client';\n\nexport function useResolvedRole(): [string | null, () => Promise<void>] {\n  const [role, setRole] = useState<string | null>(null);\n\n  const resolveRole = async () => {\n    const { data: sessionData } = await supabase.auth.getSession();\n    const user = sessionData.session?.user;\n\n    if (!user) {\n      setRole(null);\n      return;\n    }\n\n    const email = user.email ?? '';\n    const cacheKey = `cached-role-${email}`;\n    let resolvedRole = localStorage.getItem(cacheKey) || 'viewer';\n\n    const { data: profile } = await supabase\n      .from('user_profiles')\n      .select('role')\n      .eq('user_id', user.id)\n      .maybeSingle();\n\n    if (profile?.role) {\n      resolvedRole = profile.role;\n      localStorage.setItem(cacheKey, resolvedRole);\n    }\n\n    setRole(resolvedRole);\n  };\n\n  useEffect(() => {\n    resolveRole();\n  }, []);\n\n  return [role, resolveRole];\n}\n\nexport function useRoleAccessGuard(allowedRoles: string[]) {\n  const [role, resolveRole] = useResolvedRole();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (!role) return;\n\n    const email = localStorage.getItem('cached-email') ?? '';\n    const isOwner = email === 'sandonjurowski@gmail.com';\n\n    if (!allowedRoles.includes(role) && !isOwner) {\n      router.push('/unauthorized');\n    }\n  }, [role, allowedRoles, router]);\n\n  return role;\n}\n\nexport async function getServerResolvedRole(userId: string): Promise<string> {\n  const { data: profile } = await supabase\n    .from('user_profiles')\n    .select('role')\n    .eq('user_id', userId)\n    .maybeSingle();\n\n  return profile?.role ?? 'viewer';\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useRoleAccess.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useRouteQuery.ts","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'router', 'schema', and 'searchParams'. Either include them or remove the dependency array.","line":61,"column":6,"nodeType":"ArrayExpression","endLine":61,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [router, schema, searchParams]","fix":{"range":[2032,2034],"text":"[router, schema, searchParams]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// hooks/useRouteQuery.ts\n'use client';\n\nimport { useEffect, useMemo } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { z, ZodObject, ZodRawShape } from 'zod';\nimport { parseQueryParams } from '@/lib/parseQueryParams';\nimport { stringifyQueryParams } from '@/lib/stringifyQueryParams';\n\nexport function useRouteQuery<T extends ZodRawShape>(\n  schema: ZodObject<T>\n): {\n  params: z.infer<typeof schema>;\n  setParam: (key: keyof z.infer<typeof schema>, value: any) => void;\n  clearParam: (key: keyof z.infer<typeof schema>) => void;\n} {\n  const router = useRouter();\n\n  const searchParams = useMemo(() => {\n    if (typeof window === 'undefined') return new URLSearchParams();\n    return new URLSearchParams(window.location.search);\n  }, []);\n\n  const params = useMemo(() => parseQueryParams(schema, searchParams), [schema, searchParams]);\n\n  const setParam = (key: keyof typeof params, value: any) => {\n    const next = { ...params, [key]: value };\n    const query = stringifyQueryParams(schema, next);\n    const newUrl = `${window.location.pathname}?${query}`;\n    router.replace(newUrl);\n  };\n\n  const clearParam = (key: keyof typeof params) => {\n    const updated = new URLSearchParams(window.location.search);\n    updated.delete(key as string);\n    const newUrl = `${window.location.pathname}?${updated.toString()}`;\n    router.replace(newUrl);\n  };\n\n  // Inject defaults once on mount\n  useEffect(() => {\n    if (typeof window === 'undefined') return;\n\n    const parsed = parseQueryParams(schema, searchParams);\n    const urlParams = new URLSearchParams(window.location.search);\n    let changed = false;\n\n    for (const key in parsed) {\n      const val = parsed[key];\n      const raw = urlParams.get(key);\n      const norm = Array.isArray(val) ? val.join(',') : String(val);\n      if (!raw && val !== undefined && val !== null) {\n        urlParams.set(key, norm);\n        changed = true;\n      }\n    }\n\n    if (changed) {\n      router.replace(`${window.location.pathname}?${urlParams.toString()}`);\n    }\n  }, []);\n\n  return { params, setParam, clearParam };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useSafeAuth.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `process.env.NEXT_PUBLIC_SUPABASE_URL!,·process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!` with `⏎······process.env.NEXT_PUBLIC_SUPABASE_URL!,⏎······process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!⏎····`","line":27,"column":45,"nodeType":null,"messageId":"replace","endLine":27,"endColumn":126,"fix":{"range":[626,707],"text":"\n      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·data:·{·user·},·error` with `⏎········data:·{·user·},⏎········error,⏎·····`","line":65,"column":14,"nodeType":null,"messageId":"replace","endLine":65,"endColumn":36,"fix":{"range":[1633,1655],"text":"\n        data: { user },\n        error,\n     "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"// hooks/useSafeAuth.ts\n'use client';\n\nimport { useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport type { Database } from '@/types/supabase';\nimport type { SafeUser } from '@/types/safe-user';\n\ntype SafeAuth = {\n  user: SafeUser | null;\n  role: string;\n  isLoggedIn: boolean;\n  ip?: string;\n  userAgent?: string;\n};\n\nexport function useSafeAuth(): SafeAuth {\n  const [auth, setAuth] = useState<SafeAuth>({\n    user: null,\n    role: 'guest',\n    isLoggedIn: false,\n    ip: undefined,\n    userAgent: undefined,\n  });\n\n  useEffect(() => {\n    const supabase = createClient<Database>(process.env.NEXT_PUBLIC_SUPABASE_URL!, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!);\n\n    const readFromBody = () => {\n      if (typeof window === 'undefined') return null;\n      const body = document?.body?.dataset;\n      const id = body?.userId ?? '';\n      const email = body?.userEmail ?? '';\n      const role = body?.userRole ?? 'guest';\n      const avatar_url = body?.userAvatarUrl ?? '';\n      const name = body?.userName ?? '';\n\n      if (!id || !email) return null;\n\n      return {\n        user: {\n          id,\n          email,\n          avatar_url,\n          name,\n        },\n        role,\n        isLoggedIn: true,\n      };\n    };\n\n    const init = async () => {\n      const headerInfo = readFromBody();\n\n      if (headerInfo) {\n        setAuth({\n          ...headerInfo,\n          ip: undefined,\n          userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : undefined,\n        });\n        return;\n      }\n\n      // 🧱 Fallback: try Supabase if headers not available\n      const { data: { user }, error } = await supabase.auth.getUser();\n\n      if (error) {\n        console.warn('[useSafeAuth] Supabase auth error:', error.message);\n      }\n\n      setAuth({\n        user: user\n          ? {\n              id: user.id,\n              email: user.email ?? '',\n              avatar_url: user.user_metadata?.avatar_url ?? '',\n              name: user.user_metadata?.name ?? '',\n            }\n          : null,\n        role: user?.user_metadata?.role ?? 'guest',\n        isLoggedIn: !!user,\n        ip: undefined,\n        userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : undefined,\n      });\n    };\n\n    init();\n  }, []);\n\n  return auth;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useSavedCampaignDraft.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Insert `,`","line":18,"column":13,"nodeType":null,"messageId":"insert","endLine":18,"endColumn":13,"fix":{"range":[357,357],"text":","}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import { useEffect, useState } from 'react';\n\nconst DRAFT_KEY = 'campaign-draft';\n\ntype DraftData = {\n  city?: string;\n  state?: string;\n  industry?: string;\n  selectedLeadIds?: string[];\n  silentMode?: boolean;\n  alt1?: string;\n  alt2?: string;\n};\n\nexport function useSavedCampaignDraft(): [\n  DraftData,\n  (draft: Partial<DraftData>) => void,\n  () => void\n] {\n  const [draft, setDraft] = useState<DraftData>({});\n\n  // Load on mount\n  useEffect(() => {\n    const raw = localStorage.getItem(DRAFT_KEY);\n    if (raw) {\n      try {\n        setDraft(JSON.parse(raw));\n      } catch {\n        localStorage.removeItem(DRAFT_KEY);\n      }\n    }\n  }, []);\n\n  // Save subset\n  const updateDraft = (partial: Partial<DraftData>) => {\n    const next = { ...draft, ...partial };\n    setDraft(next);\n    localStorage.setItem(DRAFT_KEY, JSON.stringify(next));\n  };\n\n  const clearDraft = () => {\n    setDraft({});\n    localStorage.removeItem(DRAFT_KEY);\n  };\n\n  return [draft, updateDraft, clearDraft];\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useSelectedLeadsWrapper.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":2,"column":3,"nodeType":null,"messageId":"delete","endLine":2,"endColumn":5,"fix":{"range":[43,45],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":3,"column":1,"nodeType":null,"messageId":"delete","endLine":3,"endColumn":3,"fix":{"range":[70,72],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":4,"column":1,"nodeType":null,"messageId":"delete","endLine":4,"endColumn":3,"fix":{"range":[107,109],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":5,"column":3,"nodeType":null,"messageId":"delete","endLine":5,"endColumn":5,"fix":{"range":[116,118],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":6,"column":1,"nodeType":null,"messageId":"delete","endLine":6,"endColumn":3,"fix":{"range":[163,165],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":7,"column":1,"nodeType":null,"messageId":"delete","endLine":7,"endColumn":3,"fix":{"range":[169,171],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":8,"column":5,"nodeType":null,"messageId":"delete","endLine":8,"endColumn":7,"fix":{"range":[186,188],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":9,"column":7,"nodeType":null,"messageId":"delete","endLine":9,"endColumn":9,"fix":{"range":[235,237],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":10,"column":1,"nodeType":null,"messageId":"delete","endLine":10,"endColumn":3,"fix":{"range":[277,279],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":11,"column":1,"nodeType":null,"messageId":"delete","endLine":11,"endColumn":3,"fix":{"range":[312,314],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":12,"column":1,"nodeType":null,"messageId":"delete","endLine":12,"endColumn":3,"fix":{"range":[315,317],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `······`","line":13,"column":1,"nodeType":null,"messageId":"replace","endLine":13,"endColumn":9,"fix":{"range":[357,365],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":14,"column":1,"nodeType":null,"messageId":"delete","endLine":14,"endColumn":3,"fix":{"range":[393,395],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":15,"column":7,"nodeType":null,"messageId":"delete","endLine":15,"endColumn":9,"fix":{"range":[444,446],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":16,"column":1,"nodeType":null,"messageId":"delete","endLine":16,"endColumn":3,"fix":{"range":[448,450],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":17,"column":1,"nodeType":null,"messageId":"delete","endLine":17,"endColumn":3,"fix":{"range":[451,453],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":18,"column":7,"nodeType":null,"messageId":"delete","endLine":18,"endColumn":9,"fix":{"range":[506,508],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··········` with `········`","line":19,"column":1,"nodeType":null,"messageId":"replace","endLine":19,"endColumn":11,"fix":{"range":[533,543],"text":"        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":20,"column":7,"nodeType":null,"messageId":"delete","endLine":20,"endColumn":9,"fix":{"range":[587,589],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":21,"column":1,"nodeType":null,"messageId":"delete","endLine":21,"endColumn":3,"fix":{"range":[591,593],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":22,"column":1,"nodeType":null,"messageId":"replace","endLine":22,"endColumn":5,"fix":{"range":[600,604],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":23,"column":1,"nodeType":null,"messageId":"delete","endLine":23,"endColumn":3,"fix":{"range":[607,609],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":24,"column":1,"nodeType":null,"messageId":"delete","endLine":24,"endColumn":3,"fix":{"range":[611,613],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":23,"source":"export function useSelectedLeadsWrapper(\n    selectedLeads: string[],\n    toggleLead: (id: string) => void\n  ): {\n    setSelectedLeadIds: (ids: string[]) => void;\n  } {\n    return {\n      setSelectedLeadIds: (ids: string[]) => {\n        const current = new Set(selectedLeads);\n        const next = new Set(ids);\n  \n        // Deselect leads not in new list\n        for (const id of current) {\n          if (!next.has(id)) toggleLead(id);\n        }\n  \n        // Select new leads not already selected\n        for (const id of next) {\n          if (!current.has(id)) toggleLead(id);\n        }\n      },\n    };\n  }\n  ","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useSession.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'profileError' is assigned a value but never used.","line":29,"column":37,"nodeType":null,"messageId":"unusedVar","endLine":29,"endColumn":49}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { supabase } from '@/lib/supabase/client';\n\ntype SessionUser = {\n  id: string;\n  email: string;\n  role: string;\n};\n\nexport function useSession() {\n  const [user, setUser] = useState<SessionUser | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getUser = async () => {\n      const { data: authData, error: authError } = await supabase.auth.getUser();\n\n      if (authError || !authData?.user) {\n        setUser(null);\n        setLoading(false);\n        return;\n      }\n\n      const { id, email } = authData.user;\n\n      // Optional: fetch role from `user_profiles` table\n      const { data: profile, error: profileError } = await supabase\n        .from('user_profiles')\n        .select('role')\n        .eq('user_id', id)\n        .maybeSingle();\n\n      const role = profile?.role || 'viewer';\n\n      setUser({ id, email: email ?? '', role });\n      setLoading(false);\n    };\n\n    getUser();\n  }, []);\n\n  return { user, loading };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useSessionReady.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useSetSessionFromHash.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Insert `⏎······`","line":24,"column":18,"nodeType":null,"messageId":"insert","endLine":24,"endColumn":18,"fix":{"range":[657,657],"text":"\n      "}},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.","line":33,"column":6,"nodeType":"ArrayExpression","endLine":33,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [router]","fix":{"range":[1002,1004],"text":"[router]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// hooks/useSetSessionFromHash.ts\n'use client';\n\nimport { useEffect } from 'react';\nimport { supabase } from '@/admin/lib/supabaseClient';\nimport { useRouter } from 'next/navigation';\n\nexport function useSetSessionFromHash() {\n  const router = useRouter();\n\n  useEffect(() => {\n    const hash = window.location.hash;\n\n    if (!hash) return;\n\n    const params = new URLSearchParams(hash.substring(1));\n    const accessToken = params.get('access_token');\n    const refreshToken = params.get('refresh_token');\n\n    if (!accessToken || !refreshToken) return;\n\n    console.log('[🔐 Extracted tokens from hash]', { accessToken, refreshToken });\n\n    supabase.auth.setSession({ access_token: accessToken, refresh_token: refreshToken })\n      .then(({ error }) => {\n        if (error) {\n          console.error('[❌ Failed to set session]', error);\n        } else {\n          console.log('[✅ Supabase session restored]');\n          router.replace('/'); // 🔄 Clean up the hash from URL\n        }\n      });\n  }, []);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useSharedPreview.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useSmartNav.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useTemplateInsert.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··setTemplate:·(updater:·(prev:·Template)·=>·Template)·=>·void⏎` with `setTemplate:·(updater:·(prev:·Template)·=>·Template)·=>·void`","line":5,"column":35,"nodeType":null,"messageId":"replace","endLine":7,"endColumn":1,"fix":{"range":[156,220],"text":"setTemplate: (updater: (prev: Template) => Template) => void"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·pageIndex:·number;·blockIndex:·number` with `⏎····pageIndex:·number;⏎····blockIndex:·number;⏎·`","line":9,"column":63,"nodeType":null,"messageId":"replace","endLine":9,"endColumn":101,"fix":{"range":[381,419],"text":"\n    pageIndex: number;\n    blockIndex: number;\n "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `lastInsertedBlock.blockIndex,·1` with `⏎········lastInsertedBlock.blockIndex,⏎········1⏎······`","line":37,"column":77,"nodeType":null,"messageId":"replace","endLine":37,"endColumn":108,"fix":{"range":[1159,1190],"text":"\n        lastInsertedBlock.blockIndex,\n        1\n      "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport type { Template } from '@/types/template';\n\nexport function useTemplateInsert(\n  setTemplate: (updater: (prev: Template) => Template) => void\n) {\n  const [recentlyInsertedBlockId, setRecentlyInsertedBlockId] = useState<string | null>(null);\n  const [lastInsertedBlock, setLastInsertedBlock] = useState<{ pageIndex: number; blockIndex: number } | null>(null);\n\n  const insertBlock = (text: string, pageIndex = 0) => {\n    const newId = uuidv4();\n    setTemplate((prev) => {\n      const updated = { ...prev };\n      const blocks = updated.data.pages[pageIndex].content_blocks;\n      const blockIndex = blocks.length;\n\n      blocks.push({\n        _id: newId,\n        type: 'text',\n        content: { value: text },\n        tags: ['ai'],\n      });\n\n      setLastInsertedBlock({ pageIndex, blockIndex });\n      return updated;\n    });\n\n    setRecentlyInsertedBlockId(newId);\n  };\n\n  const undoInsert = () => {\n    if (!lastInsertedBlock) return;\n\n    setTemplate((prev) => {\n      const updated = { ...prev };\n      updated.data.pages[lastInsertedBlock.pageIndex].content_blocks.splice(lastInsertedBlock.blockIndex, 1);\n      return updated;\n    });\n\n    setRecentlyInsertedBlockId(null);\n    setLastInsertedBlock(null);\n  };\n\n  return {\n    insertBlock,\n    undoInsert,\n    recentlyInsertedBlockId,\n    hasUndo: !!lastInsertedBlock,\n  };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useTemplateJsonSync.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useTemplateMeta.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎········.from('templates')⏎········.select('id')⏎········` with `.from('templates').select('id')`","line":23,"column":29,"nodeType":null,"messageId":"replace","endLine":26,"endColumn":9,"fix":{"range":[800,858],"text":".from('templates').select('id')"}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `····`","line":27,"column":1,"nodeType":null,"messageId":"delete","endLine":27,"endColumn":5,"fix":{"range":[899,903],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `····`","line":32,"column":1,"nodeType":null,"messageId":"delete","endLine":32,"endColumn":5,"fix":{"range":[1063,1067],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `····`","line":36,"column":1,"nodeType":null,"messageId":"delete","endLine":36,"endColumn":5,"fix":{"range":[1160,1164],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"// hooks/useTemplateMeta.ts\nimport { useEffect, useState } from 'react';\nimport { debounce } from 'lodash';\nimport { stripTimestampFromName, slugify } from '@/lib/utils/slug';\nimport { supabase } from '@/lib/supabase';\n\nexport function useTemplateMeta(name: string, currentId?: string) {\n  const clean = stripTimestampFromName(name);\n  const [inputValue, setInputValue] = useState(clean);\n  const [slugPreview, setSlugPreview] = useState('');\n  const [nameExists, setNameExists] = useState(false);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setSlugPreview(slugify(inputValue));\n    }, 150);\n    return () => clearTimeout(handler);\n  }, [inputValue]);\n\n  useEffect(() => {\n    if (!inputValue.trim()) return;\n    const check = debounce(async () => {\n      const query = supabase\n        .from('templates')\n        .select('id')\n        .eq('template_name', inputValue.trim());\n    \n      // Only apply the filter if currentId is a valid UUID string\n      if (currentId && currentId.length >= 8) {\n        query.neq('id', currentId);\n      }\n    \n      const { data } = await query.maybeSingle();\n      setNameExists(!!data);\n    }, 300);\n    \n    check();\n    return () => check.cancel?.();\n  }, [inputValue, currentId]);\n\n  return {\n    inputValue,\n    setInputValue,\n    slugPreview,\n    nameExists,\n  };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useTemplateSave.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'data' is assigned a value but never used.","line":15,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":15,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// hooks/useTemplateSave.ts\nimport { supabase } from '@/lib/supabase';\nimport { toast } from 'react-hot-toast';\nimport type { ValidatedTemplate } from '@/admin/lib/zod/templateSaveSchema';\nimport { TemplateSaveSchema } from '@/admin/lib/zod/templateSaveSchema';\n\nexport async function useTemplateSave(template: ValidatedTemplate): Promise<boolean> {\n  const validated = TemplateSaveSchema.safeParse(template);\n  if (!validated.success) {\n    toast.error('Template is invalid. Cannot save.');\n    console.warn('[Validation Error]', validated.error.format());\n    return false;\n  }\n\n  const { data, error } = await supabase\n    .from('templates')\n    .update(validated.data)\n    .eq('id', template.id);\n\n  if (error) {\n    toast.error('Save failed');\n    return false;\n  }\n\n  toast.success('Template saved!');\n  return true;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useThemeContext.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `process.env.NEXT_PUBLIC_SUPABASE_URL!,·process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!` with `⏎····process.env.NEXT_PUBLIC_SUPABASE_URL!,⏎····process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!⏎··`","line":47,"column":43,"nodeType":null,"messageId":"replace","endLine":47,"endColumn":124,"fix":{"range":[1065,1146],"text":"\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n  "}},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'supabase'. Either include it or remove the dependency array.","line":90,"column":6,"nodeType":"ArrayExpression","endLine":90,"endColumn":16,"suggestions":[{"desc":"Update the dependencies array to be: [siteSlug, supabase]","fix":{"range":[2435,2445],"text":"[siteSlug, supabase]"}}]},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎······{children}⏎····` with `{children}`","line":118,"column":66,"nodeType":null,"messageId":"replace","endLine":120,"endColumn":5,"fix":{"range":[3256,3278],"text":"{children}"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"// /hooks/useThemeContext.tsx\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport type { Database } from '@/types/supabase';\n\nexport type GlowConfig = {\n  size: 'sm' | 'md' | 'lg' | 'xl';\n  intensity: number;\n  colors: string[];\n};\n\nexport type SiteTheme = {\n  glow: GlowConfig[];\n  fontFamily?: string;\n  borderRadius?: string;\n  accentColor?: string;\n};\n\nconst defaultGlow: GlowConfig[] = [\n  { size: 'xl', intensity: 0.2, colors: ['from-purple-600', 'via-blue-500', 'to-pink-500'] },\n];\n\nconst defaultTheme: SiteTheme = {\n  glow: defaultGlow,\n  fontFamily: 'sans',\n  borderRadius: 'lg',\n  accentColor: 'indigo-600',\n};\n\nconst ThemeContext = createContext<{\n  theme: SiteTheme;\n  setTheme: (t: SiteTheme) => void;\n  siteSlug: string;\n}>({\n  theme: defaultTheme,\n  setTheme: () => {},\n  siteSlug: 'default',\n});\n\nexport function ThemeProvider({\n  children,\n  siteSlug = 'default',\n}: {\n  children: React.ReactNode;\n  siteSlug?: string;\n}) {\n  const supabase = createClient<Database>(process.env.NEXT_PUBLIC_SUPABASE_URL!, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!);\n  const [theme, setThemeState] = useState<SiteTheme>(defaultTheme);\n\n  useEffect(() => {\n    const loadTheme = async () => {\n      if (typeof window === 'undefined') return;\n\n      const key = `theme-config::${siteSlug}`;\n      const cached = localStorage.getItem(key);\n      if (cached) {\n        try {\n          const parsed = JSON.parse(cached);\n          setThemeState(parsed);\n          return;\n        } catch {\n          console.warn('⚠️ Failed to parse cached theme');\n        }\n      }\n\n      const userId = (window as any).__DEV_MOCK_USER__?.id;\n      if (userId) {\n        const { data } = await supabase\n          .from('user_site_settings')\n          .select('glow_config, theme_font, theme_radius, theme_accent')\n          .eq('user_id', userId)\n          .eq('site_slug', siteSlug)\n          .single();\n\n        if (data) {\n          setThemeState({\n            glow: Array.isArray(data.glow_config) ? data.glow_config : [data.glow_config],\n            fontFamily: data.theme_font || defaultTheme.fontFamily,\n            borderRadius: data.theme_radius || defaultTheme.borderRadius,\n            accentColor: data.theme_accent || defaultTheme.accentColor,\n          });\n          return;\n        }\n      }\n\n      setThemeState(defaultTheme);\n    };\n\n    loadTheme();\n  }, [siteSlug]);\n\n  const setTheme = async (value: SiteTheme) => {\n    setThemeState(value);\n\n    const userId = (window as any).__DEV_MOCK_USER__?.id;\n    if (typeof window !== 'undefined') {\n      const key = `theme-config::${siteSlug}`;\n      try {\n        localStorage.setItem(key, JSON.stringify(value));\n\n        if (userId) {\n          await supabase.from('user_site_settings').upsert({\n            user_id: userId,\n            site_slug: siteSlug,\n            glow_config: value.glow,\n            theme_font: value.fontFamily,\n            theme_radius: value.borderRadius,\n            theme_accent: value.accentColor,\n          });\n        }\n      } catch (err) {\n        console.warn('⚠️ Failed to persist theme', err);\n      }\n    }\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme, siteSlug }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport function useTheme() {\n  return useContext(ThemeContext);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useTrack.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useTypedQuery.ts","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'queryParams', 'router', and 'schema'. Either include them or remove the dependency array.","line":61,"column":6,"nodeType":"ArrayExpression","endLine":61,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [queryParams, router, schema]","fix":{"range":[1999,2001],"text":"[queryParams, router, schema]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useEffect, useMemo } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { z, ZodObject, ZodRawShape } from 'zod';\nimport { parseQueryParams } from '@/lib/parseQueryParams';\nimport { stringifyQueryParams } from '@/lib/stringifyQueryParams';\n\ntype ParamTools<T> = {\n  params: T;\n  setParam: (key: keyof T, value: any) => void;\n  clearParam: (key: keyof T) => void;\n};\n\nexport function useTypedQuery<T extends ZodRawShape>(\n  schema: ZodObject<T>\n): ParamTools<z.infer<typeof schema>> {\n  const router = useRouter();\n  const queryParams = useMemo(() => {\n    return typeof window !== 'undefined'\n      ? new URLSearchParams(window.location.search)\n      : new URLSearchParams();\n  }, []);\n\n  const params = useMemo(() => parseQueryParams(schema, queryParams), [schema, queryParams]);\n\n  const setParam = (key: keyof typeof params, value: any) => {\n    const next = { ...params, [key]: value };\n    const query = stringifyQueryParams(schema, next);\n    const newUrl = `${window.location.pathname}?${query}`;\n    router.replace(newUrl);\n  };\n\n  const clearParam = (key: keyof typeof params) => {\n    const updated = new URLSearchParams(window.location.search);\n    updated.delete(key as string);\n    const newUrl = `${window.location.pathname}?${updated.toString()}`;\n    router.replace(newUrl);\n  };\n\n  // Inject defaults only once on mount\n  useEffect(() => {\n    if (typeof window === 'undefined') return;\n    const parsed = parseQueryParams(schema, queryParams);\n    const urlParams = new URLSearchParams(window.location.search);\n    let changed = false;\n\n    for (const key in parsed) {\n      const val = parsed[key];\n      const raw = urlParams.get(key);\n      const norm = Array.isArray(val) ? val.join(',') : String(val);\n      if (!raw && val !== undefined && val !== null) {\n        urlParams.set(key, norm);\n        changed = true;\n      }\n    }\n\n    if (changed) {\n      router.replace(`${window.location.pathname}?${urlParams.toString()}`);\n    }\n  }, []);\n\n  return { params, setParam, clearParam };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useTypedQueryParam.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··T·extends·'string[]'·?·string[]·:⏎··T·extends·'number[]'·?·number[]·:⏎··T·extends·'string'·?·string·:⏎··T·extends·'number'·?·number·:⏎··T·extends·'date'·?·Date·:` with `·T·extends·'string[]'⏎··?·string[]⏎··:·T·extends·'number[]'⏎····?·number[]⏎····:·T·extends·'string'⏎······?·string⏎······:·T·extends·'number'⏎········?·number⏎········:·T·extends·'date'⏎··········?·Date`","line":8,"column":25,"nodeType":null,"messageId":"replace","endLine":13,"endColumn":28,"fix":{"range":[224,388],"text":" T extends 'string[]'\n  ? string[]\n  : T extends 'number[]'\n    ? number[]\n    : T extends 'string'\n      ? string\n      : T extends 'number'\n        ? number\n        : T extends 'date'\n          ? Date"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·T·extends·'date[]'·?·Date[]·:⏎··T·extends·'json'·?·Record<string,·any>·:⏎··T·extends·'json[]'·?·Record<string,·any>[]·:⏎··T·extends·'boolean'·?·boolean·:⏎·` with `·········:·T·extends·'date[]'⏎············?·Date[]⏎············:·T·extends·'json'⏎··············?·Record<string,·any>⏎··············:·T·extends·'json[]'⏎················?·Record<string,·any>[]⏎················:·T·extends·'boolean'⏎··················?·boolean⏎··················:`","line":14,"column":2,"nodeType":null,"messageId":"replace","endLine":18,"endColumn":2,"fix":{"range":[390,546],"text":"         : T extends 'date[]'\n            ? Date[]\n            : T extends 'json'\n              ? Record<string, any>\n              : T extends 'json[]'\n                ? Record<string, any>[]\n                : T extends 'boolean'\n                  ? boolean\n                  :"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··InferParamType<T>,⏎··(value:·any)·=>·void,⏎··()·=>·void⏎` with `InferParamType<T>,·(value:·any)·=>·void,·()·=>·void`","line":20,"column":24,"nodeType":null,"messageId":"replace","endLine":24,"endColumn":1,"fix":{"range":[578,637],"text":"InferParamType<T>, (value: any) => void, () => void"}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `,`","line":46,"column":15,"nodeType":null,"messageId":"insert","endLine":46,"endColumn":15,"fix":{"range":[1118,1118],"text":","}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··key:·string,⏎··fallback:·any,⏎··type:·T,⏎··schema?:·z.ZodTypeAny⏎` with `key:·string,·fallback:·any,·type:·T,·schema?:·z.ZodTypeAny`","line":47,"column":3,"nodeType":null,"messageId":"replace","endLine":52,"endColumn":1,"fix":{"range":[1121,1189],"text":"key: string, fallback: any, type: T, schema?: z.ZodTypeAny"}},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'searchParams'. Either include it or remove the dependency array.","line":66,"column":6,"nodeType":"ArrayExpression","endLine":66,"endColumn":35,"suggestions":[{"desc":"Update the dependencies array to be: [key, fallback, router, type, searchParams]","fix":{"range":[1705,1734],"text":"[key, fallback, router, type, searchParams]"}}]},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎············?·encodeURIComponent(JSON.stringify(v))⏎···········` with `·?·encodeURIComponent(JSON.stringify(v))`","line":75,"column":32,"nodeType":null,"messageId":"replace","endLine":77,"endColumn":12,"fix":{"range":[1991,2055],"text":" ? encodeURIComponent(JSON.stringify(v))"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":6,"source":"'use client';\n\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { z } from 'zod';\nimport { parseTypedQueryValue } from '@/admin/lib/query/parseTypedQueryValue';\n\ntype InferParamType<T> =\n  T extends 'string[]' ? string[] :\n  T extends 'number[]' ? number[] :\n  T extends 'string' ? string :\n  T extends 'number' ? number :\n  T extends 'date' ? Date :\n  T extends 'date[]' ? Date[] :\n  T extends 'json' ? Record<string, any> :\n  T extends 'json[]' ? Record<string, any>[] :\n  T extends 'boolean' ? boolean :\n  never;\n\ntype ParamReturn<T> = [\n  InferParamType<T>,\n  (value: any) => void,\n  () => void\n];\n\nfunction getSearchParams(): URLSearchParams {\n  return typeof window !== 'undefined'\n    ? new URLSearchParams(window.location.search)\n    : new URLSearchParams();\n}\n\nfunction isArrayType(type: string): boolean {\n  return ['string[]', 'number[]', 'date[]', 'json[]'].includes(type);\n}\n\nexport default function useTypedQueryParam<\n  T extends\n    | 'string'\n    | 'number'\n    | 'boolean'\n    | 'string[]'\n    | 'number[]'\n    | 'date'\n    | 'date[]'\n    | 'json'\n    | 'json[]'\n>(\n  key: string,\n  fallback: any,\n  type: T,\n  schema?: z.ZodTypeAny\n): ParamReturn<T> {\n  const router = useRouter();\n  const searchParams = getSearchParams();\n\n  // Set default param if missing (only in browser)\n  useEffect(() => {\n    if (typeof window === 'undefined') return;\n\n    if (!searchParams.has(key) && fallback !== undefined && type !== 'json') {\n      const updated = new URLSearchParams(window.location.search);\n      updated.set(key, String(fallback));\n      const newUrl = `${window.location.pathname}?${updated.toString()}`;\n      router.replace(newUrl);\n    }\n  }, [key, fallback, router, type]);\n\n  const setParam = (value: any) => {\n    const newParams = new URLSearchParams(window.location.search);\n\n    if (Array.isArray(value)) {\n      newParams.delete(key);\n      value.forEach((v) => {\n        const serialized =\n          typeof v === 'object'\n            ? encodeURIComponent(JSON.stringify(v))\n            : String(v);\n        newParams.append(key, serialized);\n      });\n    } else if (value instanceof Date) {\n      newParams.set(key, value.toISOString());\n    } else if (typeof value === 'object' && value !== null) {\n      newParams.set(key, encodeURIComponent(JSON.stringify(value)));\n    } else {\n      newParams.set(key, String(value));\n    }\n\n    const newUrl = `${window.location.pathname}?${newParams.toString()}`;\n    router.replace(newUrl);\n  };\n\n  const clearParam = () => {\n    const newParams = new URLSearchParams(window.location.search);\n    newParams.delete(key);\n    const newUrl = `${window.location.pathname}?${newParams.toString()}`;\n    router.replace(newUrl);\n  };\n\n  const values = searchParams.getAll(key);\n  const raw = isArrayType(type) ? values : searchParams.get(key);\n\n  const parsed: InferParamType<T> = parseTypedQueryValue(\n    key,\n    raw,\n    fallback,\n    type,\n    schema as any,\n    router as any\n  );\n\n  return [parsed, setParam, clearParam];\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useUserMap.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/hooks/useZodPlaygroundState.ts","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'isEmbed', 'loadSchemaFromQueryParam', and 'router'. Either include them or remove the dependency array.","line":77,"column":6,"nodeType":"ArrayExpression","endLine":77,"endColumn":14,"suggestions":[{"desc":"Update the dependencies array to be: [isEmbed, loadSchemaFromQueryParam, params, router]","fix":{"range":[2545,2553],"text":"[isEmbed, loadSchemaFromQueryParam, params, router]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useEffect, useState } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { createClient } from '@supabase/supabase-js';\nimport { ZodTypeAny } from 'zod';\nimport { defaultSchema } from '@/admin/lib/defaultSchema';\nimport { jsonSchemaToZod } from '@/admin/utils/jsonSchemaToZod';\nimport { zodToJsonSchema } from '@/admin/utils/zodToJsonSchema';\nimport { useCurrentUser } from '@/hooks/useCurrentUser';\nimport { logEmbedView } from '@/admin/lib/logEmbedView';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport function useZodPlaygroundState() {\n  const router = useRouter();\n  const params = useSearchParams();\n  const { user } = useCurrentUser();\n\n  // was: ts-expect-error TS2589: deep type inference\n  const [schema, setSchema] = useState<ZodTypeAny>(defaultSchema);\n  const [error, setError] = useState<string | null>(null);\n  const [jsonExport, setJsonExport] = useState<string | null>(null);\n  const [shortLink, setShortLink] = useState<string | null>(null);\n  const [slackUsername, setSlackUsername] = useState('');\n\n  const isEmbed =\n    typeof window !== 'undefined' &&\n    new URLSearchParams(window.location.search).get('embed') === '1';\n\n  const loadSchemaFromQueryParam = () => {\n    const encoded = params?.get('schema');\n    if (!encoded) return;\n\n    try {\n      const decoded = decodeURIComponent(encoded);\n      const parsed = JSON.parse(decoded);\n      const zodified = jsonSchemaToZod(parsed);\n      // was: @ts-expect-error TS2589: deep type inference\n      setSchema(zodified);\n      setJsonExport(decoded);\n    } catch (err: any) {\n      setError('Invalid schema from query param: ' + err.message);\n    }\n  };\n\n  useEffect(() => {\n    const schemaId = params?.get('schema_id');\n    if (schemaId) {\n      supabase\n        .from('schema_links')\n        .select('*')\n        .eq('id', schemaId)\n        .single()\n        .then(({ data, error }) => {\n          if (error || !data) {\n            router.push('/admin/links?error=schema_id_not_found');\n            return;\n          }\n\n          try {\n            const parsed = JSON.parse(data.json);\n            const zodified = jsonSchemaToZod(parsed);\n            setSchema(zodified);\n            setJsonExport(data.json);\n            if (isEmbed) logEmbedView(schemaId);\n          } catch (err: any) {\n            setError('Failed to parse schema from ID: ' + err.message);\n          }\n        });\n\n      return;\n    }\n\n    loadSchemaFromQueryParam();\n  }, [params]);\n\n  const exportJsonSchema = () => {\n    try {\n      // was: @ts-expect-error TS2589: deep type inference\n      const json = zodToJsonSchema(schema);\n      const stringified = JSON.stringify(json, null, 2);\n      setJsonExport(stringified);\n\n      const blob = new Blob([stringified], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'schema.json';\n      a.click();\n      URL.revokeObjectURL(url);\n    } catch (err: any) {\n      setError('Failed to export schema: ' + err.message);\n    }\n  };\n\n  const handleCreateShortLink = async () => {\n    if (!user || !jsonExport) return;\n\n    const { data, error } = await supabase\n      .from('schema_links')\n      .insert({\n        user_id: user.id,\n        json: jsonExport,\n        slack_username: slackUsername,\n      })\n      .select()\n      .single();\n\n    if (error) return alert('Failed to create short link');\n    setShortLink(`${window.location.origin}/admin/zod-playground?schema_id=${data.id}`);\n  };\n\n  const handleDeploy = (payload: Record<string, any>) => {\n    const encoded = encodeURIComponent(JSON.stringify(payload));\n    router.push(`/launch?params=${encoded}`);\n  };\n\n  return {\n    schema,\n    setSchema,\n    error,\n    setError,\n    jsonExport,\n    setJsonExport,\n    shortLink,\n    setShortLink,\n    slackUsername,\n    setSlackUsername,\n    exportJsonSchema,\n    handleCreateShortLink,\n    handleDeploy,\n    isEmbed,\n  };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/init.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/admin/routes.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/admin/templates.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··Table,⏎··TableBody,⏎··TableCell,⏎··TableHead,⏎··TableHeader,⏎··TableRow,⏎` with `·Table,·TableBody,·TableCell,·TableHead,·TableHeader,·TableRow·`","line":7,"column":9,"nodeType":null,"messageId":"replace","endLine":14,"endColumn":1,"fix":{"range":[335,411],"text":" Table, TableBody, TableCell, TableHead, TableHeader, TableRow "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import { useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport SafeLink from '@/components/ui/safe-link';\nimport TagFilterDropdown from '@/components/admin/templates/tag-filter-dropdown';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport default function TemplatesAdminPage() {\n  const [templates, setTemplates] = useState<any[]>([]);\n  const [filter, setFilter] = useState('');\n  const [tags, setTags] = useState<string[]>([]);\n\n  useEffect(() => {\n    supabase\n      .from('templates')\n      .select('*')\n      .then(({ data, error }) => {\n        if (data) setTemplates(data);\n        else console.error(error);\n      });\n  }, []);\n\n  const filtered = templates.filter((t) => {\n    const matchesSearch = t.template_name?.toLowerCase().includes(filter.toLowerCase());\n    const matchesTags =\n      tags.length === 0 || (t.tags || []).some((tag: string) => tags.includes(tag));\n    return matchesSearch && matchesTags;\n  });\n\n  return (\n    <div className=\"p-6 max-w-6xl mx-auto space-y-4\">\n      <h1 className=\"text-2xl font-bold\">Templates</h1>\n\n      <Input\n        placeholder=\"Filter by template name\"\n        value={filter}\n        onChange={(e) => setFilter(e.target.value)}\n        className=\"max-w-md\"\n      />\n\n      <TagFilterDropdown selected={tags} onChange={setTags} />\n\n      <div className=\"rounded border overflow-x-auto mt-4\">\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead>Name</TableHead>\n              <TableHead>Tags</TableHead>\n              <TableHead>Actions</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {filtered.map((t) => (\n              <TableRow key={t.template_name}>\n                <TableCell>{t.template_name}</TableCell>\n                <TableCell className=\"text-xs text-muted-foreground\">\n                  {(t.tags || []).join(', ')}\n                </TableCell>\n                <TableCell>\n                  <SafeLink href={`/admin/templates/${encodeURIComponent(t.template_name)}`}>\n                    <Button size=\"sm\" variant=\"outline\">\n                      Edit\n                    </Button>\n                  </SafeLink>\n                  {t.domain && (\n                    <SafeLink href={`/sites/${t.domain}`} className=\"text-blue-500 underline\">\n                      <Button size=\"sm\" variant=\"ghost\">\n                        🌐 View Live\n                      </Button>\n                    </SafeLink>\n                  )}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/analytics/getTraceId.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/analytics/logError.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/analytics/logTrace.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··message:·string,⏎··options:·LogTraceOptions·=·{}⏎` with `message:·string,·options:·LogTraceOptions·=·{}`","line":13,"column":32,"nodeType":null,"messageId":"replace","endLine":16,"endColumn":1,"fix":{"range":[343,395],"text":"message: string, options: LogTraceOptions = {}"}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'userId' is assigned a value but never used.","line":17,"column":20,"nodeType":null,"messageId":"unusedVar","endLine":17,"endColumn":26},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'ip' is assigned a value but never used.","line":17,"column":34,"nodeType":null,"messageId":"unusedVar","endLine":17,"endColumn":36},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'sessionId' is assigned a value but never used.","line":17,"column":38,"nodeType":null,"messageId":"unusedVar","endLine":17,"endColumn":47},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":30,"column":9,"nodeType":null,"messageId":"insert","endLine":30,"endColumn":9,"fix":{"range":[896,896],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":31,"column":1,"nodeType":null,"messageId":"insert","endLine":31,"endColumn":1,"fix":{"range":[912,912],"text":"  "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":3,"source":"import { getRequestContext } from '../request/getRequestContext';\n\ntype LogTraceOptions = {\n  level?: 'info' | 'warn' | 'error';\n  debugOnly?: boolean;\n  context?: Record<string, any>;\n};\n\n/**\n * Logs a message with traceId and optional context.\n * Returns the formatted trace string (for DB or header use).\n */\nexport async function logTrace(\n  message: string,\n  options: LogTraceOptions = {}\n): Promise<string> {\n  const { traceId, userId, role, ip, sessionId } = await getRequestContext();\n\n  const trace = `[trace:${traceId}]`;\n  const roleInfo = role ? ` (${role})` : '';\n  const prefix = `[${options.level?.toUpperCase() ?? 'INFO'}]${roleInfo}`;\n\n  const fullMessage = `${prefix} ${trace} ${message}`;\n\n  if (!options.debugOnly || process.env.NODE_ENV === 'development') {\n    const logFn =\n      options.level === 'warn'\n        ? console.warn\n        : options.level === 'error'\n        ? console.error\n        : console.log;\n\n    logFn(fullMessage);\n    if (options.context) console.dir(options.context, { depth: 3 });\n  }\n\n  return trace;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/analytics/trackEvent.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/api/compareSlugsClient.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/api/json.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/api/method.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/api/middleware.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/api/openapi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/api/validation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/api/withInputOutputValidation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/api/withQueryValidation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/auth/AuthContext.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·data:·{·user·},·error` with `⏎······data:·{·user·},⏎······error,⏎···`","line":40,"column":12,"nodeType":null,"messageId":"replace","endLine":40,"endColumn":34,"fix":{"range":[1241,1263],"text":"\n      data: { user },\n      error,\n   "}},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'loadSession'. Either include it or remove the dependency array.","line":105,"column":6,"nodeType":"ArrayExpression","endLine":105,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [loadSession]","fix":{"range":[2767,2769],"text":"[loadSession]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use client';\n\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { supabase } from '../supabase/client';\nimport type { User } from '@supabase/supabase-js';\nimport React from 'react';\n\ntype AuthState = {\n  user: User | null;\n  role: string | null;\n  ready: boolean;\n  roleSource: 'profile' | 'cache' | 'onAuthChange-profile' | 'onAuthChange-cache' | 'init';\n  refetch: () => void;\n};\n\nconst AuthContext = createContext<AuthState>({\n  user: null,\n  role: null,\n  ready: false,\n  roleSource: 'init',\n  refetch: () => {},\n});\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [role, setRole] = useState<string | null>(null);\n  const [roleSource, setRoleSource] = useState<AuthState['roleSource']>('init');\n  const [ready, setReady] = useState(false);\n\n  const getCachedRole = (email: string | null | undefined): string => {\n    if (!email) return 'viewer';\n    return localStorage.getItem(`cached-role-${email}`) ?? 'viewer';\n  };\n\n  const cacheRole = (email: string | null | undefined, role: string) => {\n    if (email) localStorage.setItem(`cached-role-${email}`, role);\n  };\n\n  const loadSession = async () => {\n    const { data: { user }, error } = await supabase.auth.getUser();\n    if (error || !user) {\n      setUser(null);\n      setRole(null);\n      setReady(true);\n      return;\n    }\n\n    setUser(user);\n\n    const { data: profile } = await supabase\n      .from('user_profiles')\n      .select('role')\n      .eq('user_id', user.id)\n      .maybeSingle();\n\n    if (profile?.role) {\n      setRole(profile.role);\n      setRoleSource('profile');\n      cacheRole(user.email, profile.role);\n    } else {\n      const fallback = getCachedRole(user.email);\n      setRole(fallback);\n      setRoleSource('cache');\n    }\n\n    setReady(true);\n  };\n\n  useEffect(() => {\n    loadSession();\n\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      const u = session?.user ?? null;\n      setUser(u);\n\n      if (u?.id) {\n        supabase\n          .from('user_profiles')\n          .select('role')\n          .eq('user_id', u.id)\n          .maybeSingle()\n          .then(({ data }) => {\n            if (data?.role) {\n              setRole(data.role);\n              setRoleSource('onAuthChange-profile');\n              cacheRole(u.email, data.role);\n            } else {\n              const fallback = getCachedRole(u.email);\n              setRole(fallback);\n              setRoleSource('onAuthChange-cache');\n            }\n            setReady(true);\n          });\n      } else {\n        setRole(null);\n        setReady(true);\n      }\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, role, ready, roleSource, refetch: loadSession }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useCurrentUser() {\n  return useContext(AuthContext);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/auth/AuthProvider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/auth/verifyRoleFromJWT.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/block-utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/blocks.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/context/getClientContext.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/cookies/enforceServerOnly.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":3,"column":3,"nodeType":null,"messageId":"delete","endLine":3,"endColumn":5,"fix":{"range":[84,86],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":4,"column":1,"nodeType":null,"messageId":"delete","endLine":4,"endColumn":3,"fix":{"range":[123,125],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":5,"column":3,"nodeType":null,"messageId":"delete","endLine":5,"endColumn":5,"fix":{"range":[222,224],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":6,"column":1,"nodeType":null,"messageId":"delete","endLine":6,"endColumn":3,"fix":{"range":[226,228],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":7,"column":1,"nodeType":null,"messageId":"delete","endLine":7,"endColumn":3,"fix":{"range":[230,232],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":5,"source":"// lib/cookies/enforceServerOnly.ts\nexport function assertRouteHandlerContext() {\n    if (typeof window !== 'undefined') {\n      throw new Error('❌ Cookie modification must happen in a server action or route handler.');\n    }\n  }\n  ","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/cookies/getOrCreateSessionCookie.ts","messages":[],"suppressedMessages":[{"ruleId":"no-restricted-syntax","severity":2,"message":"❌ Do not use `await cookies()`. This function is synchronous in App Router.","line":13,"column":23,"nodeType":"CallExpression","messageId":"restrictedSyntax","endLine":13,"endColumn":32,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/cookies/getSafeCookie.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `await·getReadableCookieStore(` with `(await·getReadableCookieStore()`","line":18,"column":32,"nodeType":null,"messageId":"replace","endLine":18,"endColumn":61,"fix":{"range":[701,730],"text":"(await getReadableCookieStore()"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use server';\n\nimport { getReadableCookieStore } from '../utils/getReadableCookieStore';\nimport { getWritableCookieStore } from '../utils/getWritableCookieStore';\nimport { resolveCookiesSync } from '../safeCookiesSync';\nimport { safeParse } from '../utils/safeParse';\n\nimport type { ReadonlyRequestCookies } from 'next/dist/server/web/spec-extension/adapters/request-cookies';\nimport type { ResponseCookies } from 'next/dist/compiled/@edge-runtime/cookies';\n\n/**\n * Async getter — use in layouts, route handlers, or Server Actions.\n */\nexport async function getSafeCookie(\n  name: string,\n  cookieStore?: ReadonlyRequestCookies\n): Promise<string | object | undefined> {\n  const store = cookieStore ?? await getReadableCookieStore();\n  const raw = store.get(name)?.value;\n  return safeParse(raw);\n}\n\n/**\n * Sync getter — use only in synchronous Server Components.\n */\nexport function getSafeCookieSync(\n  name: string,\n  cookieStore?: ReadonlyRequestCookies\n): string | object | undefined {\n  const store = cookieStore ?? resolveCookiesSync();\n  const raw = store.get(name)?.value;\n  return safeParse(raw);\n}\n\n/**\n * Async setter — only works in Server Actions or Route Handlers.\n */\nexport async function setSafeCookie(\n  name: string,\n  value: string | object,\n  options: Parameters<ResponseCookies['set']>[2] = {}\n): Promise<void> {\n  const store = await getWritableCookieStore();\n  const encoded = typeof value === 'string' ? value : JSON.stringify(value);\n  store.set(name, encoded, options);\n}\n\n/**\n * Async remover — only works in Server Actions or Route Handlers.\n */\nexport async function removeSafeCookie(name: string): Promise<void> {\n  const store = await getWritableCookieStore();\n  store.set(name, '', { maxAge: 0 });\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/cookies/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/cookies/removeCookie.ts","messages":[],"suppressedMessages":[{"ruleId":"no-restricted-syntax","severity":2,"message":"❌ Do not use `await cookies()`. This function is synchronous in App Router.","line":11,"column":23,"nodeType":"CallExpression","messageId":"restrictedSyntax","endLine":11,"endColumn":32,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/create-default-block.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎············createDefaultBlock('text'),⏎············createDefaultBlock('text'),⏎··········` with `createDefaultBlock('text'),·createDefaultBlock('text')`","line":25,"column":19,"nodeType":null,"messageId":"replace","endLine":28,"endColumn":11,"fix":{"range":[863,954],"text":"createDefaultBlock('text'), createDefaultBlock('text')"}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":31,"column":5,"nodeType":null,"messageId":"delete","endLine":31,"endColumn":7,"fix":{"range":[981,983],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `······`","line":32,"column":1,"nodeType":null,"messageId":"replace","endLine":32,"endColumn":9,"fix":{"range":[996,1004],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":33,"column":1,"nodeType":null,"messageId":"delete","endLine":33,"endColumn":3,"fix":{"range":[1013,1015],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··········` with `········`","line":34,"column":1,"nodeType":null,"messageId":"replace","endLine":34,"endColumn":11,"fix":{"range":[1037,1047],"text":"        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":35,"column":1,"nodeType":null,"messageId":"delete","endLine":35,"endColumn":3,"fix":{"range":[1052,1054],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `············` with `··········`","line":36,"column":1,"nodeType":null,"messageId":"replace","endLine":36,"endColumn":13,"fix":{"range":[1073,1085],"text":"          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":37,"column":1,"nodeType":null,"messageId":"delete","endLine":37,"endColumn":3,"fix":{"range":[1104,1106],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `············` with `··········`","line":38,"column":1,"nodeType":null,"messageId":"replace","endLine":38,"endColumn":13,"fix":{"range":[1153,1165],"text":"          "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":39,"column":11,"nodeType":null,"messageId":"delete","endLine":39,"endColumn":13,"fix":{"range":[1200,1202],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":40,"column":1,"nodeType":null,"messageId":"delete","endLine":40,"endColumn":3,"fix":{"range":[1217,1219],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":41,"column":7,"nodeType":null,"messageId":"delete","endLine":41,"endColumn":9,"fix":{"range":[1236,1238],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `······`","line":42,"column":1,"nodeType":null,"messageId":"delete","endLine":42,"endColumn":7,"fix":{"range":[1241,1247],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":43,"column":1,"nodeType":null,"messageId":"delete","endLine":43,"endColumn":3,"fix":{"range":[1248,1250],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":44,"column":1,"nodeType":null,"messageId":"delete","endLine":44,"endColumn":3,"fix":{"range":[1271,1273],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":45,"column":9,"nodeType":null,"messageId":"delete","endLine":45,"endColumn":11,"fix":{"range":[1296,1298],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":46,"column":9,"nodeType":null,"messageId":"delete","endLine":46,"endColumn":11,"fix":{"range":[1324,1326],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··········` with `········`","line":47,"column":1,"nodeType":null,"messageId":"replace","endLine":47,"endColumn":11,"fix":{"range":[1331,1341],"text":"        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":48,"column":1,"nodeType":null,"messageId":"delete","endLine":48,"endColumn":3,"fix":{"range":[1352,1354],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··········` with `········`","line":49,"column":1,"nodeType":null,"messageId":"replace","endLine":49,"endColumn":11,"fix":{"range":[1412,1422],"text":"        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":50,"column":1,"nodeType":null,"messageId":"delete","endLine":50,"endColumn":3,"fix":{"range":[1425,1427],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `······`","line":51,"column":1,"nodeType":null,"messageId":"delete","endLine":51,"endColumn":7,"fix":{"range":[1436,1442],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":52,"column":1,"nodeType":null,"messageId":"delete","endLine":52,"endColumn":3,"fix":{"range":[1443,1445],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":53,"column":1,"nodeType":null,"messageId":"delete","endLine":53,"endColumn":3,"fix":{"range":[1461,1463],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":54,"column":9,"nodeType":null,"messageId":"delete","endLine":54,"endColumn":11,"fix":{"range":[1486,1488],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":55,"column":1,"nodeType":null,"messageId":"delete","endLine":55,"endColumn":3,"fix":{"range":[1501,1503],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":56,"column":9,"nodeType":null,"messageId":"delete","endLine":56,"endColumn":11,"fix":{"range":[1524,1526],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":57,"column":1,"nodeType":null,"messageId":"delete","endLine":57,"endColumn":3,"fix":{"range":[1537,1539],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":58,"column":11,"nodeType":null,"messageId":"delete","endLine":58,"endColumn":13,"fix":{"range":[1584,1586],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":59,"column":1,"nodeType":null,"messageId":"delete","endLine":59,"endColumn":3,"fix":{"range":[1597,1599],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":60,"column":7,"nodeType":null,"messageId":"delete","endLine":60,"endColumn":9,"fix":{"range":[1616,1618],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `······`","line":61,"column":1,"nodeType":null,"messageId":"delete","endLine":61,"endColumn":7,"fix":{"range":[1621,1627],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `····`","line":62,"column":1,"nodeType":null,"messageId":"replace","endLine":62,"endColumn":7,"fix":{"range":[1628,1634],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":63,"column":7,"nodeType":null,"messageId":"delete","endLine":63,"endColumn":9,"fix":{"range":[1660,1662],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··········` with `········`","line":64,"column":1,"nodeType":null,"messageId":"replace","endLine":64,"endColumn":11,"fix":{"range":[1671,1681],"text":"        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":65,"column":9,"nodeType":null,"messageId":"delete","endLine":65,"endColumn":11,"fix":{"range":[1710,1712],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··········` with `········`","line":66,"column":1,"nodeType":null,"messageId":"replace","endLine":66,"endColumn":11,"fix":{"range":[1717,1727],"text":"        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":67,"column":1,"nodeType":null,"messageId":"delete","endLine":67,"endColumn":3,"fix":{"range":[1738,1740],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":68,"column":11,"nodeType":null,"messageId":"delete","endLine":68,"endColumn":13,"fix":{"range":[1800,1802],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":69,"column":9,"nodeType":null,"messageId":"delete","endLine":69,"endColumn":11,"fix":{"range":[1837,1839],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········};······` with `······};`","line":70,"column":1,"nodeType":null,"messageId":"replace","endLine":70,"endColumn":17,"fix":{"range":[1842,1858],"text":"      };"}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":71,"column":1,"nodeType":null,"messageId":"delete","endLine":71,"endColumn":3,"fix":{"range":[1859,1861],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":42,"fixableErrorCount":0,"fixableWarningCount":42,"source":"import type { Block } from '@/types/blocks';\n\nexport function createDefaultBlock(type: Block['type']): Block {\n  const _id = crypto.randomUUID();\n\n  switch (type) {\n    case 'text':\n      return { type, _id, content: { value: 'New text block' } };\n    case 'image':\n      return { type, _id, content: { url: '', alt: 'New image' } };\n    case 'video':\n      return { type, _id, content: { url: '', caption: 'New video' } };\n    case 'audio':\n      return { type, _id, content: { url: '', title: 'New audio', provider: 'spotify' } };\n    case 'quote':\n      return { type, _id, content: { text: 'New quote', attribution: 'Anonymous' } };\n    case 'button':\n      return { type, _id, content: { label: 'Click me', href: '#', style: 'primary' } };\n    case 'grid':\n      return {\n        type,\n        _id,\n        content: {\n          columns: 2,\n          items: [\n            createDefaultBlock('text'),\n            createDefaultBlock('text'),\n          ],\n        },\n      };\n      case 'hero':\n        return {\n          type: 'hero',\n          _id,\n          content: {\n            title: 'Welcome!',\n            description: 'This is a hero block',\n            cta_label: 'Learn More',\n            cta_link: '#',\n          },\n        };\n      \n      case 'services':\n        return {\n          type: 'services',\n          _id,\n          content: {\n            items: ['Service 1', 'Service 2', 'Service 3'],\n          },\n        };\n      \n      case 'cta':\n        return {\n          type: 'cta',\n          _id,\n          content: {\n            label: 'Call to Action',\n            link: '#',\n          },\n        };\n      \n      case 'testimonial':\n        return {\n          type: 'testimonial',\n          _id,\n          content: {\n            quote: 'This product changed my life.',\n            attribution: 'Happy User',\n          },\n        };      \n      default:\n      return { type: 'text', _id, content: { value: `Unsupported block type: ${type}` } };\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/createDefaultBlock.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'blockContentSchemaMap' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":31},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎············createDefaultBlock('text'),⏎············createDefaultBlock('image'),⏎··········` with `createDefaultBlock('text'),·createDefaultBlock('image')`","line":112,"column":19,"nodeType":null,"messageId":"replace","endLine":115,"endColumn":11,"fix":{"range":[2210,2302],"text":"createDefaultBlock('text'), createDefaultBlock('image')"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// lib/createDefaultBlock.ts\nimport type { Block } from '@/admin/lib/zod/blockSchema';\nimport crypto from 'crypto';\nimport { blockContentSchemaMap } from '@/admin/lib/zod/blockSchema';\n\nexport function createDefaultBlock(type: Block['type']): Block {\n  const _id = crypto.randomUUID?.() || Date.now().toString();\n\n  switch (type) {\n    case 'text':\n      return { type, _id, value: { value: 'Sample text block' } };\n\n    case 'image':\n      return {\n        type,\n        _id,\n        value: {\n          url: 'https://placekitten.com/800/400',\n          alt: 'A cute kitten',\n        },\n      };\n\n    case 'video':\n      return {\n        type,\n        _id,\n        value: {\n          url: 'https://www.youtube.com/embed/dQw4w9WgXcQ',\n          caption: 'Intro video',\n        },\n      };\n\n    case 'audio':\n      return {\n        type,\n        _id,\n        value: {\n          provider: 'spotify',\n          url: 'https://spotify.com/sample',\n          title: 'Sample Audio',\n        },\n      };\n\n    case 'quote':\n      return {\n        type,\n        _id,\n        value: {\n          text: 'This changed everything.',\n          author: 'Jane Doe',\n        },\n      };\n\n    case 'button':\n      return {\n        type,\n        _id,\n        value: {\n          label: 'Click Me',\n          href: '#',\n          style: 'primary',\n        },\n      };\n\n    case 'hero':\n      return {\n        type,\n        _id,\n        value: {\n          title: 'Welcome to Your Site!',\n          description: 'This is the hero section.',\n          cta_label: 'Get Started',\n          cta_link: '#',\n        },\n      };\n\n    case 'services':\n      return {\n        type,\n        _id,\n        value: {\n          items: ['Service A', 'Service B', 'Service C'],\n        },\n      };\n\n    case 'testimonial':\n      return {\n        type,\n        _id,\n        value: {\n          quote: 'They did a great job!',\n          attribution: 'Happy Client',\n        },\n      };\n\n    case 'cta':\n      return {\n        type,\n        _id,\n        value: {\n          label: 'Learn More',\n          link: '#about',\n        },\n      };\n\n    case 'grid':\n      return {\n        type,\n        _id,\n        value: {\n          columns: 2,\n          items: [\n            createDefaultBlock('text'),\n            createDefaultBlock('image'),\n          ],\n        },\n      };\n\n    default:\n      return {\n        type: 'text',\n        _id,\n        value: { value: `Unsupported block type: ${type}` },\n      };\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/createEmptyTemplate.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/createTemplateFromPreset.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":9,"column":3,"nodeType":null,"messageId":"delete","endLine":9,"endColumn":5,"fix":{"range":[398,400],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":10,"column":1,"nodeType":null,"messageId":"delete","endLine":10,"endColumn":3,"fix":{"range":[452,454],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":11,"column":3,"nodeType":null,"messageId":"delete","endLine":11,"endColumn":5,"fix":{"range":[504,506],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":12,"column":1,"nodeType":null,"messageId":"delete","endLine":12,"endColumn":3,"fix":{"range":[550,552],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":13,"column":1,"nodeType":null,"messageId":"delete","endLine":13,"endColumn":3,"fix":{"range":[564,566],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":14,"column":1,"nodeType":null,"messageId":"delete","endLine":14,"endColumn":3,"fix":{"range":[567,569],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":15,"column":3,"nodeType":null,"messageId":"delete","endLine":15,"endColumn":5,"fix":{"range":[623,625],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":16,"column":1,"nodeType":null,"messageId":"delete","endLine":16,"endColumn":3,"fix":{"range":[664,666],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":17,"column":3,"nodeType":null,"messageId":"delete","endLine":17,"endColumn":5,"fix":{"range":[691,693],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":18,"column":1,"nodeType":null,"messageId":"delete","endLine":18,"endColumn":3,"fix":{"range":[744,746],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":19,"column":3,"nodeType":null,"messageId":"delete","endLine":19,"endColumn":5,"fix":{"range":[778,780],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":20,"column":1,"nodeType":null,"messageId":"delete","endLine":20,"endColumn":3,"fix":{"range":[846,848],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":21,"column":3,"nodeType":null,"messageId":"delete","endLine":21,"endColumn":5,"fix":{"range":[851,853],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":22,"column":1,"nodeType":null,"messageId":"delete","endLine":22,"endColumn":3,"fix":{"range":[862,864],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":23,"column":5,"nodeType":null,"messageId":"delete","endLine":23,"endColumn":7,"fix":{"range":[910,912],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":24,"column":1,"nodeType":null,"messageId":"delete","endLine":24,"endColumn":3,"fix":{"range":[920,922],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":25,"column":5,"nodeType":null,"messageId":"delete","endLine":25,"endColumn":7,"fix":{"range":[936,938],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":26,"column":1,"nodeType":null,"messageId":"delete","endLine":26,"endColumn":3,"fix":{"range":[944,946],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":27,"column":1,"nodeType":null,"messageId":"delete","endLine":27,"endColumn":3,"fix":{"range":[960,962],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":29,"column":1,"nodeType":null,"messageId":"delete","endLine":29,"endColumn":3,"fix":{"range":[1005,1007],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":30,"column":7,"nodeType":null,"messageId":"delete","endLine":30,"endColumn":9,"fix":{"range":[1025,1027],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":31,"column":1,"nodeType":null,"messageId":"delete","endLine":31,"endColumn":3,"fix":{"range":[1036,1038],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":32,"column":11,"nodeType":null,"messageId":"delete","endLine":32,"endColumn":13,"fix":{"range":[1076,1078],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":33,"column":1,"nodeType":null,"messageId":"delete","endLine":33,"endColumn":3,"fix":{"range":[1105,1107],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":34,"column":9,"nodeType":null,"messageId":"delete","endLine":34,"endColumn":11,"fix":{"range":[1149,1151],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":35,"column":1,"nodeType":null,"messageId":"delete","endLine":35,"endColumn":3,"fix":{"range":[1155,1157],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":36,"column":5,"nodeType":null,"messageId":"delete","endLine":36,"endColumn":7,"fix":{"range":[1170,1172],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":37,"column":1,"nodeType":null,"messageId":"delete","endLine":37,"endColumn":3,"fix":{"range":[1175,1177],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":38,"column":1,"nodeType":null,"messageId":"delete","endLine":38,"endColumn":3,"fix":{"range":[1182,1184],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··⏎··`","line":39,"column":1,"nodeType":null,"messageId":"delete","endLine":40,"endColumn":3,"fix":{"range":[1186,1191],"text":""}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'layout' is assigned a value but never used. Allowed unused args must match /^_/u.","line":43,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":43,"endColumn":9},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'brand' is assigned a value but never used. Allowed unused args must match /^_/u.","line":44,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":44,"endColumn":8}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":30,"source":"// lib/createTemplateFromPreset.ts\nimport { createDefaultPage } from '@/lib/pageDefaults';\nimport { createDefaultBlock } from '@/lib/createDefaultBlock';\nimport { generateUniqueTemplateName, slugify } from '@/lib/utils/slug';\nimport { templateDefaults } from '@/lib/templateDefaults';\nimport type { ValidatedTemplate } from '@/admin/lib/zod/templateSaveSchema';\n\nexport const templatePresets = {\n    Towing: ['hero', 'services', 'testimonial', 'cta'],\n    Bakery: ['hero', 'image', 'quote', 'button'],\n    Agency: ['hero', 'video', 'quote', 'grid'],\n  } as const;\n  \n  export function createTemplateFromPresetWithBlocks(\n    industry: keyof typeof templatePresets\n  ): ValidatedTemplate {\n    const name = generateUniqueTemplateName(industry);\n    const slug = slugify(name);\n    const blocks = templatePresets[industry].map(createDefaultBlock);\n  \n    return {\n      ...templateDefaults, // ✅ moved first\n      id: '',\n      name,\n      slug,\n      industry,\n      layout: 'default',\n    //   brand: '',\n      data: {\n        pages: [\n          createDefaultPage({\n            title: industry + ' Site',\n            content_blocks: blocks,\n          }),\n        ],\n      },\n    };\n  }\n  \n  \nexport function createTemplateFromPreset({\n  industry = 'General',\n  layout = 'default',\n  brand = '',\n}: {\n  industry?: string;\n  layout?: string;\n  brand?: string;\n}): ValidatedTemplate {\n  const name = generateUniqueTemplateName(`${industry.toLowerCase()}-preset`);\n  const slug = slugify(name);\n\n  return {\n    id: '',\n    name,\n    slug,\n    // industry,\n    // layout,\n    // brand,\n    ...templateDefaults,\n    data: {\n      pages: [\n        createDefaultPage({\n          title: 'Welcome',\n          content_blocks: [\n            createDefaultBlock('hero'),\n            createDefaultBlock('services'),\n            createDefaultBlock('testimonial'),\n            createDefaultBlock('cta'),\n          ],\n        }),\n      ],\n    },\n  };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/db.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/defineRouteQuery.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/domainTracker.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/generateHero.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/generateServices.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/geoCache.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/getBadgeForReferrer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/getFromDate.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":3,"column":3,"nodeType":null,"messageId":"delete","endLine":3,"endColumn":5,"fix":{"range":[82,84],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":4,"column":1,"nodeType":null,"messageId":"delete","endLine":4,"endColumn":3,"fix":{"range":[108,110],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":5,"column":3,"nodeType":null,"messageId":"delete","endLine":5,"endColumn":5,"fix":{"range":[113,115],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":6,"column":1,"nodeType":null,"messageId":"delete","endLine":6,"endColumn":3,"fix":{"range":[132,134],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":7,"column":7,"nodeType":null,"messageId":"delete","endLine":7,"endColumn":9,"fix":{"range":[160,162],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":8,"column":5,"nodeType":null,"messageId":"delete","endLine":8,"endColumn":7,"fix":{"range":[233,235],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":9,"column":1,"nodeType":null,"messageId":"delete","endLine":9,"endColumn":3,"fix":{"range":[237,239],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `····`","line":10,"column":1,"nodeType":null,"messageId":"replace","endLine":10,"endColumn":7,"fix":{"range":[240,246],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":11,"column":1,"nodeType":null,"messageId":"delete","endLine":11,"endColumn":3,"fix":{"range":[266,268],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `······`","line":12,"column":1,"nodeType":null,"messageId":"replace","endLine":12,"endColumn":9,"fix":{"range":[302,310],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":13,"column":1,"nodeType":null,"messageId":"delete","endLine":13,"endColumn":3,"fix":{"range":[344,346],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":14,"column":7,"nodeType":null,"messageId":"delete","endLine":14,"endColumn":9,"fix":{"range":[385,387],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":15,"column":5,"nodeType":null,"messageId":"delete","endLine":15,"endColumn":7,"fix":{"range":[404,406],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":16,"column":1,"nodeType":null,"messageId":"delete","endLine":16,"endColumn":3,"fix":{"range":[408,410],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `····`","line":17,"column":1,"nodeType":null,"messageId":"replace","endLine":17,"endColumn":7,"fix":{"range":[411,417],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":18,"column":1,"nodeType":null,"messageId":"delete","endLine":18,"endColumn":3,"fix":{"range":[439,441],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `······`","line":19,"column":1,"nodeType":null,"messageId":"replace","endLine":19,"endColumn":9,"fix":{"range":[475,483],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":20,"column":1,"nodeType":null,"messageId":"delete","endLine":20,"endColumn":3,"fix":{"range":[517,519],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":21,"column":5,"nodeType":null,"messageId":"delete","endLine":21,"endColumn":7,"fix":{"range":[542,544],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":22,"column":1,"nodeType":null,"messageId":"delete","endLine":22,"endColumn":3,"fix":{"range":[546,548],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":23,"column":1,"nodeType":null,"messageId":"delete","endLine":23,"endColumn":3,"fix":{"range":[549,551],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `······`","line":24,"column":1,"nodeType":null,"messageId":"replace","endLine":24,"endColumn":9,"fix":{"range":[578,586],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":25,"column":1,"nodeType":null,"messageId":"delete","endLine":25,"endColumn":3,"fix":{"range":[614,616],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `······`","line":26,"column":1,"nodeType":null,"messageId":"replace","endLine":26,"endColumn":9,"fix":{"range":[657,665],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":27,"column":1,"nodeType":null,"messageId":"delete","endLine":27,"endColumn":3,"fix":{"range":[678,680],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":28,"column":1,"nodeType":null,"messageId":"delete","endLine":28,"endColumn":3,"fix":{"range":[686,688],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":29,"column":1,"nodeType":null,"messageId":"delete","endLine":29,"endColumn":3,"fix":{"range":[689,691],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":30,"column":1,"nodeType":null,"messageId":"delete","endLine":30,"endColumn":3,"fix":{"range":[716,718],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `····`","line":31,"column":1,"nodeType":null,"messageId":"replace","endLine":31,"endColumn":7,"fix":{"range":[779,785],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":32,"column":1,"nodeType":null,"messageId":"delete","endLine":32,"endColumn":3,"fix":{"range":[787,789],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":33,"column":1,"nodeType":null,"messageId":"delete","endLine":33,"endColumn":3,"fix":{"range":[790,792],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":34,"column":1,"nodeType":null,"messageId":"delete","endLine":34,"endColumn":3,"fix":{"range":[817,819],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `····`","line":35,"column":1,"nodeType":null,"messageId":"replace","endLine":35,"endColumn":7,"fix":{"range":[884,890],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":36,"column":1,"nodeType":null,"messageId":"delete","endLine":36,"endColumn":3,"fix":{"range":[892,894],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":37,"column":1,"nodeType":null,"messageId":"delete","endLine":37,"endColumn":3,"fix":{"range":[895,897],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":38,"column":1,"nodeType":null,"messageId":"delete","endLine":38,"endColumn":3,"fix":{"range":[921,923],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":39,"column":5,"nodeType":null,"messageId":"delete","endLine":39,"endColumn":7,"fix":{"range":[975,977],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":40,"column":1,"nodeType":null,"messageId":"delete","endLine":40,"endColumn":3,"fix":{"range":[979,981],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":41,"column":1,"nodeType":null,"messageId":"delete","endLine":41,"endColumn":3,"fix":{"range":[982,984],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `····`","line":42,"column":1,"nodeType":null,"messageId":"replace","endLine":42,"endColumn":7,"fix":{"range":[1005,1011],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":43,"column":1,"nodeType":null,"messageId":"delete","endLine":43,"endColumn":3,"fix":{"range":[1020,1022],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":44,"column":3,"nodeType":null,"messageId":"delete","endLine":44,"endColumn":5,"fix":{"range":[1043,1045],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":45,"column":1,"nodeType":null,"messageId":"delete","endLine":45,"endColumn":3,"fix":{"range":[1047,1049],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":46,"column":1,"nodeType":null,"messageId":"delete","endLine":46,"endColumn":3,"fix":{"range":[1051,1053],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":47,"column":3,"nodeType":null,"messageId":"delete","endLine":47,"endColumn":5,"fix":{"range":[1090,1092],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":48,"column":1,"nodeType":null,"messageId":"delete","endLine":48,"endColumn":3,"fix":{"range":[1101,1103],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":49,"column":1,"nodeType":null,"messageId":"replace","endLine":49,"endColumn":5,"fix":{"range":[1118,1122],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":50,"column":1,"nodeType":null,"messageId":"replace","endLine":50,"endColumn":5,"fix":{"range":[1137,1141],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":51,"column":1,"nodeType":null,"messageId":"replace","endLine":51,"endColumn":5,"fix":{"range":[1157,1161],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":52,"column":1,"nodeType":null,"messageId":"delete","endLine":52,"endColumn":3,"fix":{"range":[1175,1177],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":53,"column":3,"nodeType":null,"messageId":"delete","endLine":53,"endColumn":5,"fix":{"range":[1195,1197],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":54,"column":1,"nodeType":null,"messageId":"replace","endLine":54,"endColumn":5,"fix":{"range":[1210,1214],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":55,"column":1,"nodeType":null,"messageId":"delete","endLine":55,"endColumn":3,"fix":{"range":[1226,1228],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":56,"column":1,"nodeType":null,"messageId":"delete","endLine":56,"endColumn":3,"fix":{"range":[1240,1242],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":57,"column":1,"nodeType":null,"messageId":"delete","endLine":57,"endColumn":3,"fix":{"range":[1243,1245],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `····`","line":58,"column":1,"nodeType":null,"messageId":"delete","endLine":58,"endColumn":5,"fix":{"range":[1312,1316],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":56,"fixableErrorCount":0,"fixableWarningCount":56,"source":"// lib/getFromDate.ts\nexport function getFromDate(label: string): Date | null {\n    const now = new Date();\n  \n    switch (label) {\n      case 'Today': {\n        return new Date(now.getFullYear(), now.getMonth(), now.getDate());\n      }\n  \n      case 'Yesterday': {\n        const from = new Date(now);\n        from.setDate(from.getDate() - 1);\n        from.setHours(0, 0, 0, 0);\n        return from;\n      }\n  \n      case 'Last 7 days': {\n        const from = new Date(now);\n        from.setDate(from.getDate() - 7);\n        return from;\n      }\n  \n      case 'Last 30 days': {\n        const from = new Date(now);\n        from.setDate(from.getDate() - 30);\n        return from;\n      }\n  \n      case 'This month': {\n        return new Date(now.getFullYear(), now.getMonth(), 1);\n      }\n  \n      case 'Last month': {\n        return new Date(now.getFullYear(), now.getMonth() - 1, 1);\n      }\n  \n      case 'This year': {\n        return new Date(now.getFullYear(), 0, 1);\n      }\n  \n      case 'All time':\n      default:\n        return null;\n    }\n  }\n  export const dateFilterOptions = [\n    'Today',\n    'Yesterday',\n    'Last 7 days',\n    'Last 30 days',\n    'This month',\n    'Last month',\n    'This year',\n    'All time',\n  ] as const;\n  \n  export type DateFilterOption = (typeof dateFilterOptions)[number];\n    ","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/guards/sessionGuard.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/leads/distance.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":5,"column":3,"nodeType":null,"messageId":"delete","endLine":5,"endColumn":5,"fix":{"range":[170,172],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":6,"column":1,"nodeType":null,"messageId":"delete","endLine":6,"endColumn":3,"fix":{"range":[215,217],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":7,"column":1,"nodeType":null,"messageId":"delete","endLine":7,"endColumn":3,"fix":{"range":[273,275],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":8,"column":1,"nodeType":null,"messageId":"delete","endLine":8,"endColumn":3,"fix":{"range":[276,278],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":9,"column":3,"nodeType":null,"messageId":"delete","endLine":9,"endColumn":5,"fix":{"range":[315,317],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":10,"column":1,"nodeType":null,"messageId":"delete","endLine":10,"endColumn":3,"fix":{"range":[350,352],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":11,"column":1,"nodeType":null,"messageId":"delete","endLine":11,"endColumn":3,"fix":{"range":[353,355],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":12,"column":1,"nodeType":null,"messageId":"delete","endLine":12,"endColumn":3,"fix":{"range":[367,369],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":13,"column":5,"nodeType":null,"messageId":"delete","endLine":13,"endColumn":7,"fix":{"range":[403,405],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":14,"column":1,"nodeType":null,"messageId":"delete","endLine":14,"endColumn":3,"fix":{"range":[478,480],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":15,"column":1,"nodeType":null,"messageId":"delete","endLine":15,"endColumn":3,"fix":{"range":[481,483],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":16,"column":1,"nodeType":null,"messageId":"delete","endLine":16,"endColumn":3,"fix":{"range":[544,546],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":17,"column":1,"nodeType":null,"messageId":"delete","endLine":17,"endColumn":3,"fix":{"range":[548,550],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··export·function·sortLeadsByDistance(⏎····leads:·Lead[],⏎····targetLat:·number,⏎····targetLon:·number⏎··` with `export·function·sortLeadsByDistance(leads:·Lead[],·targetLat:·number,·targetLon:·number`","line":18,"column":1,"nodeType":null,"messageId":"replace","endLine":22,"endColumn":3,"fix":{"range":[551,656],"text":"export function sortLeadsByDistance(leads: Lead[], targetLat: number, targetLon: number"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":23,"column":1,"nodeType":null,"messageId":"replace","endLine":23,"endColumn":5,"fix":{"range":[668,672],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `····`","line":24,"column":1,"nodeType":null,"messageId":"replace","endLine":24,"endColumn":7,"fix":{"range":[685,691],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":25,"column":5,"nodeType":null,"messageId":"delete","endLine":25,"endColumn":7,"fix":{"range":[760,762],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `······`","line":26,"column":1,"nodeType":null,"messageId":"replace","endLine":26,"endColumn":9,"fix":{"range":[780,788],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":27,"column":1,"nodeType":null,"messageId":"delete","endLine":27,"endColumn":3,"fix":{"range":[874,876],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `······`","line":28,"column":1,"nodeType":null,"messageId":"replace","endLine":28,"endColumn":9,"fix":{"range":[968,976],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":29,"column":5,"nodeType":null,"messageId":"delete","endLine":29,"endColumn":7,"fix":{"range":[1002,1004],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":30,"column":1,"nodeType":null,"messageId":"delete","endLine":30,"endColumn":3,"fix":{"range":[1008,1010],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":31,"column":1,"nodeType":null,"messageId":"delete","endLine":31,"endColumn":3,"fix":{"range":[1012,1014],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":23,"source":"// lib/leads/distance.ts\nimport { Lead } from '@/types/lead.types';\n\nexport function getDistanceMiles(lat1: number, lon1: number, lat2: number, lon2: number): number {\n    const R = 3958.8; // Earth radius in miles\n    const toRad = (deg: number) => deg * (Math.PI / 180);\n  \n    const dLat = toRad(lat2 - lat1);\n    const dLon = toRad(lon2 - lon1);\n  \n    const a =\n      Math.sin(dLat / 2) ** 2 +\n      Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n  \n    return R * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  }\n  \n  export function sortLeadsByDistance(\n    leads: Lead[],\n    targetLat: number,\n    targetLon: number\n  ): Lead[] {\n    return leads\n      .filter((l) => l.address_lat !== null && l.address_lon !== null)\n      .sort((a, b) => {\n        const distA = getDistanceMiles(targetLat, targetLon, a.address_lat!, a.address_lon!);\n        const distB = getDistanceMiles(targetLat, targetLon, b.address_lat!, b.address_lon!);\n        return distA - distB;\n      });\n  }\n  ","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/leads/enrichLead.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··lead:·any,⏎··campaignMap:·Map<string,·string[]>⏎` with `lead:·any,·campaignMap:·Map<string,·string[]>`","line":40,"column":28,"nodeType":null,"messageId":"replace","endLine":43,"endColumn":1,"fix":{"range":[932,983],"text":"lead: any, campaignMap: Map<string, string[]>"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import { z } from 'zod';\nimport type { Lead as BaseLead } from '@/types/lead.types';\nimport { getDistanceMiles } from './distance';\n\nexport const zLead = z.object({\n  id: z.string(),\n  business_name: z.string(),\n  campaign_id: z.string().nullable(),\n  draft_sites: z\n    .object({\n      domain: z.string().optional(),\n      is_claimed: z.boolean().optional(),\n    })\n    .nullable()\n    .optional(),\n  users: z\n    .object({\n      email: z.string().email().optional(),\n    })\n    .nullable()\n    .optional(),\n  address_lat: z.number().nullable().optional(),\n  address_lon: z.number().nullable().optional(),\n});\n\nexport type EnrichedLead = BaseLead & {\n  draft_sites?: {\n    domain?: string;\n    is_claimed?: boolean;\n  };\n  users?: {\n    email?: string;\n  };\n  address_lat?: number | null;\n  address_lon?: number | null;\n  link_type: '📎 campaign_id' | '📦 lead_ids[]' | null;\n  distance_km?: number;\n};\n\nexport function enrichLead(\n  lead: any,\n  campaignMap: Map<string, string[]>\n): EnrichedLead | null {\n  const parsed = zLead.safeParse(lead);\n  if (!parsed.success) {\n    console.warn('❌ Invalid lead skipped:', parsed.error.format());\n    return null;\n  }\n\n  const cleaned = parsed.data;\n  let link_type: EnrichedLead['link_type'] = null;\n\n  for (const [campId, ids] of campaignMap.entries()) {\n    if (ids.includes(cleaned.id)) {\n      link_type = cleaned.campaign_id === campId ? '📎 campaign_id' : '📦 lead_ids[]';\n      break;\n    }\n  }\n\n  return {\n    ...lead,\n    link_type,\n  };\n}\n\nexport function enrichLeadWithDistance(\n  lead: any,\n  campaignMap: Map<string, string[]>,\n  campaignLat: number,\n  campaignLon: number\n): EnrichedLead | null {\n  const base = enrichLead(lead, campaignMap);\n  if (!base) return null;\n\n  const lat = base.address_lat;\n  const lon = base.address_lon;\n\n  if (lat !== null && lon !== null && typeof lat === 'number' && typeof lon === 'number') {\n    const distMiles = getDistanceMiles(campaignLat, campaignLon, lat, lon);\n    return { ...base, distance_km: Math.round(distMiles * 1.60934 * 10) / 10 }; // round to 1 decimal\n  }\n\n  return base;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/leads/photoProcessor.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/loadLeads.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎····.from('leads')⏎····` with `.from('leads')`","line":32,"column":41,"nodeType":null,"messageId":"replace","endLine":34,"endColumn":5,"fix":{"range":[876,900],"text":".from('leads')"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import { supabase } from '@/admin/lib/supabaseClient';\n\nexport type LeadSummary = {\n  id: string;\n  business_name: string | null;\n  address_city: string | null;\n  address_state?: string | null;\n  created_at?: string | null;\n  industry?: string | null;\n  current_campaign_id?: string | null;\n  current_campaign_expires_at?: string | null;\n};\n\ntype LoadLeadsOptions = {\n  city?: string;\n  state?: string;\n  industry?: string;\n  sortBy?: 'created_at' | 'business_name';\n  sortOrder?: 'asc' | 'desc';\n};\n\nconst _leadCache = new Map<string, LeadSummary[]>();\n\nfunction makeCacheKey(opts: LoadLeadsOptions) {\n  return JSON.stringify(opts);\n}\n\nexport async function loadLeads(options: LoadLeadsOptions = {}): Promise<LeadSummary[]> {\n  const cacheKey = makeCacheKey(options);\n  if (_leadCache.has(cacheKey)) return _leadCache.get(cacheKey)!;\n\n  const { data, error } = await supabase\n    .from('leads')\n    .select(`\n      id,\n      business_name,\n      address_city,\n      address_state,\n      created_at,\n      industry,\n      current_campaign_id,\n      current_campaign_expires_at\n    `);\n\n  if (error) {\n    console.error('Error loading leads:', error.message);\n    return [];\n  }\n\n  let leads = data || [];\n\n  if (options.city) {\n    leads = leads.filter((l) => l.address_city?.toLowerCase() === options.city!.toLowerCase());\n  }\n\n  if (options.state) {\n    leads = leads.filter((l) => l.address_state?.toLowerCase() === options.state!.toLowerCase());\n  }\n\n  if (options.industry) {\n    leads = leads.filter((l) => l.industry?.toLowerCase() === options.industry!.toLowerCase());\n  }\n\n  if (options.sortBy) {\n    leads.sort((a, b) => {\n      const aVal = a[options.sortBy!] ?? '';\n      const bVal = b[options.sortBy!] ?? '';\n      return options.sortOrder === 'desc'\n        ? String(bVal).localeCompare(String(aVal))\n        : String(aVal).localeCompare(String(bVal));\n    });\n  }\n\n  _leadCache.set(cacheKey, leads);\n  return leads;\n}\n\nexport async function getTopTwoLeads(\n  options: LoadLeadsOptions\n): Promise<[LeadSummary, LeadSummary] | null> {\n  const leads = await loadLeads(options);\n  if (leads.length >= 2) {\n    return [leads[0], leads[1]];\n  }\n  return null;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/nav/links.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/og/renderOgImage.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/pageDefaults.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/parseQueryParams.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'_' is assigned a value but never used.","line":28,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":28,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// lib/parseQueryParams.ts\nimport { z, ZodObject, ZodRawShape } from 'zod';\n\ntype ParamSource = URLSearchParams | Record<string, string | undefined>;\n\nfunction isURLSearchParams(input: ParamSource): input is URLSearchParams {\n  return typeof (input as URLSearchParams).getAll === 'function';\n}\n\nfunction parseNestedParams(source: URLSearchParams): Record<string, any> {\n  const result: Record<string, any> = {};\n\n  for (const [key, value] of source.entries()) {\n    // Handle array notation: tags[]=x\n    const arrayMatch = key.match(/^(.+)\\[\\]$/);\n    if (arrayMatch) {\n      const base = arrayMatch[1];\n      if (!Array.isArray(result[base])) {\n        result[base] = [];\n      }\n      result[base].push(value);\n      continue;\n    }\n\n    // Handle nested keys: filter[priceMin]\n    const nestedMatch = key.match(/^([^\\[\\]]+)\\[([^\\[\\]]+)\\]$/);\n    if (nestedMatch) {\n      const [_, parent, child] = nestedMatch;\n      result[parent] = {\n        ...(result[parent] || {}),\n        [child]: value,\n      };\n      continue;\n    }\n\n    // Default flat assignment\n    result[key] = value;\n  }\n\n  return result;\n}\n\nexport function parseQueryParams<T extends ZodRawShape>(\n  schema: ZodObject<T>,\n  input: ParamSource\n): z.infer<ZodObject<T>> {\n  let parsedInput: Record<string, any>;\n\n  if (isURLSearchParams(input)) {\n    parsedInput = parseNestedParams(input);\n  } else {\n    parsedInput = input;\n  }\n\n  const result = schema.safeParse(parsedInput);\n  if (!result.success) {\n    console.warn('[parseQueryParams] failed:', result.error.format());\n    return schema.parse({});\n  }\n\n  return result.data;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/presets.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@/types/blocks\"` with `'@/types/blocks'`","line":2,"column":32,"nodeType":null,"messageId":"replace","endLine":2,"endColumn":48,"fix":{"range":[49,65],"text":"'@/types/blocks'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":5,"column":3,"nodeType":null,"messageId":"delete","endLine":5,"endColumn":5,"fix":{"range":[114,116],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `····`","line":6,"column":1,"nodeType":null,"messageId":"replace","endLine":6,"endColumn":7,"fix":{"range":[126,132],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":7,"column":1,"nodeType":null,"messageId":"delete","endLine":7,"endColumn":3,"fix":{"range":[140,142],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":8,"column":1,"nodeType":null,"messageId":"delete","endLine":8,"endColumn":3,"fix":{"range":[162,164],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":9,"column":1,"nodeType":null,"messageId":"delete","endLine":9,"endColumn":3,"fix":{"range":[205,207],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":10,"column":7,"nodeType":null,"messageId":"delete","endLine":10,"endColumn":9,"fix":{"range":[265,267],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":11,"column":1,"nodeType":null,"messageId":"delete","endLine":11,"endColumn":3,"fix":{"range":[289,291],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":12,"column":5,"nodeType":null,"messageId":"delete","endLine":12,"endColumn":7,"fix":{"range":[323,325],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `····`","line":13,"column":1,"nodeType":null,"messageId":"replace","endLine":13,"endColumn":7,"fix":{"range":[328,334],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":14,"column":1,"nodeType":null,"messageId":"delete","endLine":14,"endColumn":3,"fix":{"range":[346,348],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":15,"column":1,"nodeType":null,"messageId":"delete","endLine":15,"endColumn":3,"fix":{"range":[372,374],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `····`","line":16,"column":1,"nodeType":null,"messageId":"replace","endLine":16,"endColumn":7,"fix":{"range":[445,451],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":17,"column":1,"nodeType":null,"messageId":"delete","endLine":17,"endColumn":3,"fix":{"range":[454,456],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `······`","line":18,"column":1,"nodeType":null,"messageId":"replace","endLine":18,"endColumn":9,"fix":{"range":[475,483],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":19,"column":1,"nodeType":null,"messageId":"delete","endLine":19,"endColumn":3,"fix":{"range":[504,506],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":20,"column":7,"nodeType":null,"messageId":"delete","endLine":20,"endColumn":9,"fix":{"range":[560,562],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":21,"column":5,"nodeType":null,"messageId":"delete","endLine":21,"endColumn":7,"fix":{"range":[600,602],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":22,"column":1,"nodeType":null,"messageId":"replace","endLine":22,"endColumn":5,"fix":{"range":[605,609],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":23,"column":1,"nodeType":null,"messageId":"replace","endLine":23,"endColumn":5,"fix":{"range":[612,616],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":24,"column":5,"nodeType":null,"messageId":"delete","endLine":24,"endColumn":7,"fix":{"range":[633,635],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `······`","line":25,"column":1,"nodeType":null,"messageId":"replace","endLine":25,"endColumn":9,"fix":{"range":[643,651],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":26,"column":1,"nodeType":null,"messageId":"delete","endLine":26,"endColumn":3,"fix":{"range":[665,667],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":27,"column":7,"nodeType":null,"messageId":"delete","endLine":27,"endColumn":9,"fix":{"range":[723,725],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":28,"column":7,"nodeType":null,"messageId":"delete","endLine":28,"endColumn":9,"fix":{"range":[777,779],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":29,"column":1,"nodeType":null,"messageId":"delete","endLine":29,"endColumn":3,"fix":{"range":[809,811],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":30,"column":5,"nodeType":null,"messageId":"delete","endLine":30,"endColumn":7,"fix":{"range":[840,842],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":31,"column":1,"nodeType":null,"messageId":"delete","endLine":31,"endColumn":3,"fix":{"range":[845,847],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":32,"column":7,"nodeType":null,"messageId":"delete","endLine":32,"endColumn":9,"fix":{"range":[872,874],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `······`","line":33,"column":1,"nodeType":null,"messageId":"replace","endLine":33,"endColumn":9,"fix":{"range":[895,903],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":34,"column":7,"nodeType":null,"messageId":"delete","endLine":34,"endColumn":9,"fix":{"range":[945,947],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `····`","line":35,"column":1,"nodeType":null,"messageId":"replace","endLine":35,"endColumn":7,"fix":{"range":[980,986],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":36,"column":1,"nodeType":null,"messageId":"delete","endLine":36,"endColumn":3,"fix":{"range":[989,991],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":37,"column":7,"nodeType":null,"messageId":"delete","endLine":37,"endColumn":9,"fix":{"range":[1013,1015],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":38,"column":1,"nodeType":null,"messageId":"delete","endLine":38,"endColumn":3,"fix":{"range":[1033,1035],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":39,"column":5,"nodeType":null,"messageId":"delete","endLine":39,"endColumn":7,"fix":{"range":[1092,1094],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":40,"column":1,"nodeType":null,"messageId":"replace","endLine":40,"endColumn":5,"fix":{"range":[1097,1101],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":41,"column":1,"nodeType":null,"messageId":"delete","endLine":41,"endColumn":3,"fix":{"range":[1104,1106],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":42,"column":5,"nodeType":null,"messageId":"delete","endLine":42,"endColumn":7,"fix":{"range":[1123,1125],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `······`","line":43,"column":1,"nodeType":null,"messageId":"replace","endLine":43,"endColumn":9,"fix":{"range":[1133,1141],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":44,"column":1,"nodeType":null,"messageId":"delete","endLine":44,"endColumn":3,"fix":{"range":[1155,1157],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `······`","line":45,"column":1,"nodeType":null,"messageId":"replace","endLine":45,"endColumn":9,"fix":{"range":[1199,1207],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":46,"column":1,"nodeType":null,"messageId":"delete","endLine":46,"endColumn":3,"fix":{"range":[1247,1249],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":47,"column":7,"nodeType":null,"messageId":"delete","endLine":47,"endColumn":9,"fix":{"range":[1285,1287],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":48,"column":5,"nodeType":null,"messageId":"delete","endLine":48,"endColumn":7,"fix":{"range":[1311,1313],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":49,"column":1,"nodeType":null,"messageId":"delete","endLine":49,"endColumn":3,"fix":{"range":[1316,1318],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":50,"column":7,"nodeType":null,"messageId":"delete","endLine":50,"endColumn":9,"fix":{"range":[1335,1337],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":51,"column":1,"nodeType":null,"messageId":"delete","endLine":51,"endColumn":3,"fix":{"range":[1350,1352],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":52,"column":7,"nodeType":null,"messageId":"delete","endLine":52,"endColumn":9,"fix":{"range":[1385,1387],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `····`","line":53,"column":1,"nodeType":null,"messageId":"replace","endLine":53,"endColumn":7,"fix":{"range":[1405,1411],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":54,"column":1,"nodeType":null,"messageId":"delete","endLine":54,"endColumn":3,"fix":{"range":[1414,1416],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··};` with `};⏎`","line":55,"column":1,"nodeType":null,"messageId":"replace","endLine":55,"endColumn":5,"fix":{"range":[1421,1425],"text":"};\n"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":52,"fixableErrorCount":0,"fixableWarningCount":52,"source":"// lib/presets.ts\nimport type { PresetMap } from \"@/types/blocks\";\n\nexport const industryPresets: PresetMap = {\n    towing: {\n      hero: {\n        type: 'hero',\n        headline: '24/7 Emergency Towing',\n        subheadline: 'Serving your city with pride.',\n        cta_text: 'Call Now',\n        cta_link: '/contact',\n      },\n      services: {\n        type: 'services',\n        items: ['Roadside Assistance', 'Jump Starts', 'Flatbed Towing'],\n      },\n      testimonial: {\n        type: 'testimonial',\n        quote: 'Fast and professional. 5 stars!',\n        attribution: 'Alex T., Customer',\n      },\n    },\n    dentistry: {\n      hero: {\n        type: 'hero',\n        headline: 'Gentle Dentistry, Modern Tools',\n        subheadline: 'Accepting new patients today.',\n        cta_text: 'Book Appointment',\n        cta_link: '/book',\n      },\n      testimonial: {\n        type: 'testimonial',\n        quote: 'They made me smile again!',\n        attribution: 'Sara M., Patient',\n      },\n      services: {\n        type: 'services',\n        items: ['Cleanings', 'Whitening', 'Fillings'],\n      },\n    },\n    default: {\n      hero: {\n        type: 'hero',\n        headline: 'Welcome to Our Website',\n        subheadline: \"We're glad you're here.\",\n        cta_text: 'Learn More',\n        cta_link: '/about',\n      },\n      cta: {\n        type: 'cta',\n        label: 'Contact Us',\n        link: '/contact',\n      },\n    },\n  };","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/presets/blockPresets.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/providers/SessionProvider.tsx","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··createContext,⏎··useContext,⏎··useEffect,⏎··useState,⏎··type·ReactNode,⏎` with `·createContext,·useContext,·useEffect,·useState,·type·ReactNode·`","line":3,"column":9,"nodeType":null,"messageId":"replace","endLine":9,"endColumn":1,"fix":{"range":[23,98],"text":" createContext, useContext, useEffect, useState, type ReactNode "}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'User' is defined but never used.","line":12,"column":31,"nodeType":null,"messageId":"unusedVar","endLine":12,"endColumn":35},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `·data:·{·user·},·error` with `⏎······data:·{·user·},⏎······error,⏎···`","line":39,"column":12,"nodeType":null,"messageId":"replace","endLine":39,"endColumn":34,"fix":{"range":[963,985],"text":"\n      data: { user },\n      error,\n   "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎······{children}⏎····` with `{children}`","line":77,"column":63,"nodeType":null,"messageId":"replace","endLine":79,"endColumn":5,"fix":{"range":[1807,1829],"text":"{children}"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"'use client';\n\nimport {\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n  type ReactNode,\n} from 'react';\nimport { supabase } from '@/lib/supabase/client';\nimport type { Database } from '@/types/supabase';\nimport type { SupabaseClient, User } from '@supabase/supabase-js';\n\ntype SessionUser = {\n  id: string;\n  email: string;\n  avatar_url?: string;\n};\n\ntype SessionContextType = {\n  user: SessionUser | null;\n  role: string;\n  supabase: SupabaseClient<Database>;\n};\n\nconst SessionContext = createContext<SessionContextType | null>(null);\n\nexport function useSession() {\n  const context = useContext(SessionContext);\n  if (!context) throw new Error('useSession must be used within <SessionProvider>');\n  return context;\n}\n\nexport function SessionProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<SessionUser | null>(null);\n  const [role, setRole] = useState<string>('guest');\n\n  async function refreshUser() {\n    const { data: { user }, error } = await supabase.auth.getUser();\n    if (error || !user) {\n      setUser(null);\n      setRole('guest');\n      return;\n    }\n\n    setUser({\n      id: user.id,\n      email: user.email ?? 'unknown',\n      avatar_url: user.user_metadata?.avatar_url ?? '',\n    });\n\n    const { data: profile } = await supabase\n      .from('user_profiles')\n      .select('role')\n      .eq('user_id', user.id)\n      .maybeSingle();\n\n    setRole(profile?.role ?? 'guest');\n  }\n\n  useEffect(() => {\n    refreshUser();\n\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange((event) => {\n      console.log(`[🔄 Supabase Auth Event] ${event}`);\n      refreshUser();\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  return (\n    <SessionContext.Provider value={{ user, role, supabase }}>\n      {children}\n    </SessionContext.Provider>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/qr/helpers.block-qr.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'registerFont' is defined but never used.","line":3,"column":24,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":36},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'loadImage' is defined but never used.","line":3,"column":38,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":47},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'hash' is defined but never used.","line":11,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":11,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'getOutputPath' is defined but never used.","line":14,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":14,"endColumn":23},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'ensureDir' is defined but never used.","line":17,"column":16,"nodeType":null,"messageId":"unusedVar","endLine":17,"endColumn":25},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'createZipFromHandleDir' is defined but never used.","line":22,"column":16,"nodeType":null,"messageId":"unusedVar","endLine":22,"endColumn":38},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'label' is assigned a value but never used.","line":45,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":45,"endColumn":10},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'font' is assigned a value but never used.","line":47,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":47,"endColumn":9},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'fontSize' is assigned a value but never used.","line":48,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":48,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'color' is assigned a value but never used.","line":49,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":49,"endColumn":10},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'background' is assigned a value but never used.","line":50,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":50,"endColumn":15},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'mode' is assigned a value but never used.","line":52,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":52,"endColumn":9},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'zip' is assigned a value but never used.","line":53,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":53,"endColumn":8},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'signed' is assigned a value but never used.","line":54,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":54,"endColumn":11}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// 🔧 Extracted helper functions for /block-qr route\n\nimport { createCanvas, registerFont, loadImage } from 'canvas';\nimport QRCode from 'qrcode';\nimport crypto from 'node:crypto';\nimport path from 'node:path';\nimport fs from 'node:fs/promises';\nimport archiver from 'archiver';\nimport { NextRequest } from 'next/server';\n\nfunction hash(input: string): string {\n  return crypto.createHash('sha1').update(input).digest('hex');\n}\nfunction getOutputPath(handle: string, filename: string) {\n  return path.resolve('public/generated-qr', handle, filename);\n}\nasync function ensureDir(handle: string) {\n  const dir = path.resolve('public/generated-qr', handle);\n  await fs.mkdir(dir, { recursive: true });\n  return dir;\n}\nasync function createZipFromHandleDir(handle: string) {\n  const dir = path.resolve('public/generated-qr', handle);\n  const zipPath = path.resolve(dir, 'archive.zip');\n  const output = await fs.open(zipPath, 'w');\n  const archive = archiver('zip', { zlib: { level: 9 } });\n\n  const stream = output.createWriteStream();\n  archive.pipe(stream);\n\n  const files = await fs.readdir(dir);\n  for (const file of files) {\n    if (file.endsWith('.png') || file.endsWith('.svg')) {\n      archive.file(path.join(dir, file), { name: file });\n    }\n  }\n  archive.finalize();\n  return output;\n}\n\nexport async function POST(req: NextRequest) {\n  const {\n    blockId,\n    handle,\n    label = `block-${blockId}`,\n    size = 512,\n    font = 'Inter',\n    fontSize = 20,\n    color = '#000000',\n    background = '#ffffff',\n    format = 'png',\n    mode = 'inline',\n    zip = false,\n    signed = false,\n  } = await req.json();\n\n  if (!blockId || !handle) {\n    return Response.json({ error: 'Missing blockId or handle' }, { status: 400 });\n  }\n\n  const url = `https://quicksites.ai/world/${handle}#block-${blockId}`;\n  const canvas = createCanvas(size, size);\n  await QRCode.toCanvas(canvas, url);\n  const buffer = canvas.toBuffer();\n  const filename = `${blockId}.${format}`;\n  const filepath = path.resolve('public/generated-qr', handle, filename);\n  await fs.writeFile(filepath, buffer);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/querySchemas/blog.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/querySchemas/dashboard.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/querySchemas/projects.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/querySchemas/search.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/querySchemas/templates.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/referral.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/request/getMockLocation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/request/getRequestContext.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎····cookieStore,⏎····headerStore,⏎····abRaw,⏎····role,⏎····userId,⏎····userEmail,⏎·` with `·cookieStore,·headerStore,·abRaw,·role,·userId,·userEmail`","line":65,"column":10,"nodeType":null,"messageId":"replace","endLine":72,"endColumn":2,"fix":{"range":[1921,2005],"text":" cookieStore, headerStore, abRaw, role, userId, userEmail"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use server';\n\nimport crypto from 'crypto';\nimport { safeParse } from '../utils/safeParse';\nimport { getClientIp, getUserAgent, getReferer } from '../safeHeaders';\nimport { getOrCreateSessionCookie } from '../cookies/getOrCreateSessionCookie';\nimport { getMockLocation } from './getMockLocation';\nimport { getSupabaseCookieAdapter } from '../utils/getSupabaseCookieAdapter';\n\nimport { createServerComponentClient } from '@supabase/auth-helpers-nextjs';\nimport type { SupabaseClient } from '@supabase/supabase-js';\nimport type { Database } from '@/types/supabase';\nimport type { MockGeoLocation } from '@/types/location';\nimport type { ReadonlyRequestCookies } from 'next/dist/server/web/spec-extension/adapters/request-cookies';\nimport type { ReadonlyHeaders } from 'next/dist/server/web/spec-extension/adapters/headers';\n\nexport type RequestContext = {\n  cookies: ReadonlyRequestCookies;\n  headers: ReadonlyHeaders;\n  cookieMode: 'readonly';\n  headerMode: 'readonly';\n\n  ip: string;\n  userAgent: string;\n  referer?: string;\n  role?: string;\n  userId?: string;\n  userEmail?: string;\n  abVariant?: string;\n  sessionId: string;\n  traceId: string;\n  geo: MockGeoLocation | null;\n\n  supabase?: {\n    client: SupabaseClient<Database>;\n    user: {\n      id: string;\n      email: string;\n      role?: string;\n    } | null;\n  };\n};\n\nlet _requestContextCache: RequestContext | null = null;\n\nexport async function getRequestContext(\n  stores?: {\n    cookieStore: ReadonlyRequestCookies;\n    headerStore: ReadonlyHeaders;\n    abRaw?: string | null;\n    role?: string;\n    userId?: string;\n    userEmail?: string;\n  },\n  withSupabase = false\n): Promise<RequestContext> {\n  if (_requestContextCache) return _requestContextCache;\n\n  if (!stores?.cookieStore || !stores?.headerStore) {\n    throw new Error(\n      `getRequestContext: Missing cookieStore or headerStore. Did you forget to call extractUserContext()?`\n    );\n  }\n\n  const {\n    cookieStore,\n    headerStore,\n    abRaw,\n    role,\n    userId,\n    userEmail,\n  } = stores;\n\n  const abVariant = safeParse(abRaw) as string | undefined;\n\n  const [ip, userAgent, referer, sessionId, geo] = await Promise.all([\n    getClientIp(),\n    getUserAgent(),\n    getReferer(),\n    getOrCreateSessionCookie(),\n    getMockLocation(),\n  ]);\n\n  const traceId = crypto.randomUUID();\n\n  const context: RequestContext = {\n    cookies: cookieStore,\n    headers: headerStore,\n    cookieMode: 'readonly',\n    headerMode: 'readonly',\n    ip,\n    userAgent,\n    referer,\n    role,\n    userId,\n    userEmail,\n    abVariant,\n    sessionId,\n    traceId,\n    geo,\n  };\n\n  if (withSupabase) {\n    const supabase = createServerComponentClient<Database>({\n      cookies: getSupabaseCookieAdapter(cookieStore),\n    });\n\n    const {\n      data: { user },\n    } = await supabase.auth.getUser();\n\n    context.supabase = {\n      client: supabase,\n      user: user\n        ? {\n            id: user.id,\n            email: user.email ?? '',\n            role: user.user_metadata?.role,\n          }\n        : null,\n    };\n  }\n\n  _requestContextCache = context;\n  return context;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/resolveAdminPath.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/resolveGeo.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace ``/api/geocode?city=${encodeURIComponent(city)}&state=${encodeURIComponent(state)}`` with `⏎······`/api/geocode?city=${encodeURIComponent(city)}&state=${encodeURIComponent(state)}`⏎····`","line":38,"column":29,"nodeType":null,"messageId":"replace","endLine":38,"endColumn":111,"fix":{"range":[1092,1174],"text":"\n      `/api/geocode?city=${encodeURIComponent(city)}&state=${encodeURIComponent(state)}`\n    "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"type GeoResult = { lat: number; lon: number };\nconst memoryCache: Record<string, GeoResult> = {};\n\nconst getLocalStorageCache = (): Record<string, GeoResult> => {\n  if (typeof window === 'undefined') return {};\n  try {\n    const cached = localStorage.getItem('geoCache');\n    return cached ? JSON.parse(cached) : {};\n  } catch {\n    return {};\n  }\n};\n\nconst setLocalStorageCache = (cache: Record<string, GeoResult>) => {\n  if (typeof window === 'undefined') return;\n  try {\n    localStorage.setItem('geoCache', JSON.stringify(cache));\n  } catch {}\n};\n\nexport async function resolveGeo(city: string, state: string): Promise<GeoResult> {\n  const key = `${city.trim().toLowerCase()},${state.trim().toLowerCase()}`;\n\n  // Check in-memory cache first\n  if (memoryCache[key]) return memoryCache[key];\n\n  // Check localStorage cache\n  const localCache = getLocalStorageCache();\n  if (localCache[key]) {\n    memoryCache[key] = localCache[key]; // hydrate into memory\n    return localCache[key];\n  }\n\n  console.log('[🗺️ geoCache miss]', key);\n\n  // Fetch from API\n  try {\n    const res = await fetch(`/api/geocode?city=${encodeURIComponent(city)}&state=${encodeURIComponent(state)}`);\n    const json = await res.json();\n\n    const lat = json.lat ?? 39.5;\n    const lon = json.lon ?? -98.35;\n    const result = { lat, lon };\n\n    // Cache result in both memory + localStorage\n    memoryCache[key] = result;\n    localCache[key] = result;\n    setLocalStorageCache(localCache);\n\n    return result;\n  } catch (err) {\n    console.warn('[⚠️ geocode failed]', err);\n    return { lat: 39.5, lon: -98.35 }; // fallback: US center\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/safeCookies.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'ResponseCookies' is defined but never used.","line":6,"column":15,"nodeType":null,"messageId":"unusedVar","endLine":6,"endColumn":30}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use server';\n\nimport { cookies as nextCookies } from 'next/headers';\nimport type { CookieOptions } from '@/types/cookies';\nimport type { ReadonlyRequestCookies } from 'next/dist/server/web/spec-extension/adapters/request-cookies';\nimport type { ResponseCookies } from 'next/dist/compiled/@edge-runtime/cookies';\n\nimport { safeParse } from '@/lib/utils/safeParse';\nimport { getWritableCookieStore } from '@/lib/utils/getWritableCookieStore';\n\n/**\n * Reads a cookie value safely. Supports optional injection.\n */\nexport async function getSafeCookie(\n  name: string,\n  cookieStore?: ReadonlyRequestCookies\n): Promise<string | object | undefined> {\n  const store = cookieStore ?? (await nextCookies()); // ✅ Correct default\n\n  const raw = store.get(name)?.value;\n  return safeParse(raw);\n}\n/**\n * Sets a cookie. Use only in route handlers / server actions.\n */\nexport async function setSafeCookie(\n  name: string,\n  value: string | object,\n  options: CookieOptions = {}\n): Promise<void> {\n  const store = await getWritableCookieStore(); // 🔁 Writable only in handlers\n  const encoded = typeof value === 'string' ? value : JSON.stringify(value);\n  store.set(name, encoded, options);\n}\n\n/**\n * Deletes a cookie by name. Same constraints as `setSafeCookie`.\n */\nexport async function removeSafeCookie(name: string): Promise<void> {\n  const store = await getWritableCookieStore();\n  store.set(name, '', { maxAge: 0 });\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/safeCookiesSync.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/safeHeaders.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎····headers.get('x-real-ip')·??⏎···` with `·headers.get('x-real-ip')·??`","line":31,"column":60,"nodeType":null,"messageId":"replace","endLine":33,"endColumn":4,"fix":{"range":[886,922],"text":" headers.get('x-real-ip') ??"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use server';\n\nimport { headers as rawHeaders } from 'next/headers';\n\nlet _headerCache: Awaited<ReturnType<typeof rawHeaders>> | null = null;\n\n/**\n * Retrieves a cached or fresh header store.\n */\nexport async function getHeaderStore(): Promise<Headers> {\n  if (_headerCache) return _headerCache;\n  const result = rawHeaders();\n  _headerCache = result instanceof Promise ? await result : result;\n  return _headerCache;\n}\n\n/**\n * Retrieves a specific header value, lowercased.\n */\nexport async function getSafeHeader(name: string): Promise<string | undefined> {\n  const store = await getHeaderStore();\n  return store.get(name.toLowerCase()) ?? undefined;\n}\n\n/**\n * Get the client IP address, with standard fallbacks.\n */\nexport async function getClientIp(): Promise<string> {\n  const headers = await getHeaderStore();\n  return (\n    headers.get('x-forwarded-for')?.split(',')[0].trim() ??\n    headers.get('x-real-ip') ??\n    'unknown'\n  );\n}\n\n/**\n * Get the user-agent string from headers.\n */\nexport async function getUserAgent(): Promise<string> {\n  const headers = await getHeaderStore();\n  return headers.get('user-agent') ?? 'unknown';\n}\n\n/**\n * Get the referrer, if present.\n */\nexport async function getReferer(): Promise<string | undefined> {\n  const headers = await getHeaderStore();\n  return headers.get('referer') ?? undefined;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/safeQueryParam.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··input:·ParamSource⏎` with `input:·ParamSource`","line":4,"column":28,"nodeType":null,"messageId":"replace","endLine":6,"endColumn":1,"fix":{"range":[126,148],"text":"input: ParamSource"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··searchParams:·ParamSource,⏎··key:·string,⏎··fallback·=·''⏎` with `searchParams:·ParamSource,·key:·string,·fallback·=·''`","line":10,"column":35,"nodeType":null,"messageId":"replace","endLine":14,"endColumn":1,"fix":{"range":[278,339],"text":"searchParams: ParamSource, key: string, fallback = ''"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎····?·searchParams.get(key)⏎···` with `·?·searchParams.get(key)`","line":15,"column":48,"nodeType":null,"messageId":"replace","endLine":17,"endColumn":4,"fix":{"range":[398,430],"text":" ? searchParams.get(key)"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··searchParams:·ParamSource,⏎··key:·string,⏎··fallback·=·0⏎` with `searchParams:·ParamSource,·key:·string,·fallback·=·0`","line":22,"column":32,"nodeType":null,"messageId":"replace","endLine":26,"endColumn":1,"fix":{"range":[562,622],"text":"searchParams: ParamSource, key: string, fallback = 0"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··searchParams:·ParamSource,⏎··key:·string,⏎··fallback·=·false⏎` with `searchParams:·ParamSource,·key:·string,·fallback·=·false`","line":32,"column":33,"nodeType":null,"messageId":"replace","endLine":36,"endColumn":1,"fix":{"range":[790,854],"text":"searchParams: ParamSource, key: string, fallback = false"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":5,"source":"// lib/safeQueryParam.ts\ntype ParamSource = URLSearchParams | Record<string, string | undefined>;\n\nfunction isURLSearchParams(\n  input: ParamSource\n): input is URLSearchParams {\n  return typeof (input as URLSearchParams).get === 'function';\n}\n\nexport function getSafeQueryParam(\n  searchParams: ParamSource,\n  key: string,\n  fallback = ''\n): string {\n  const value = isURLSearchParams(searchParams)\n    ? searchParams.get(key)\n    : searchParams[key];\n\n  return typeof value === 'string' && value.length > 0 ? value : fallback;\n}\n\nexport function getNumberParam(\n  searchParams: ParamSource,\n  key: string,\n  fallback = 0\n): number {\n  const raw = getSafeQueryParam(searchParams, key);\n  const num = parseFloat(raw);\n  return isNaN(num) ? fallback : num;\n}\n\nexport function getBooleanParam(\n  searchParams: ParamSource,\n  key: string,\n  fallback = false\n): boolean {\n  const raw = getSafeQueryParam(searchParams, key).toLowerCase();\n  if (raw === 'true' || raw === '1') return true;\n  if (raw === 'false' || raw === '0') return false;\n  return fallback;\n}\n\nexport function getArrayParam(\n  searchParams: ParamSource,\n  key: string,\n  fallback: string[] = [],\n  separator: string = ','\n): string[] {\n  if (isURLSearchParams(searchParams)) {\n    const all = searchParams.getAll(key);\n    if (all.length > 0) return all;\n    const commaSplit = searchParams.get(key)?.split(separator);\n    return commaSplit?.filter(Boolean) || fallback;\n  }\n\n  const value = searchParams[key];\n  if (typeof value === 'string') {\n    return value.split(separator).filter(Boolean);\n  }\n\n  return fallback;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/safeSessionStorage.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":3,"column":3,"nodeType":null,"messageId":"delete","endLine":3,"endColumn":5,"fix":{"range":[93,95],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":4,"column":3,"nodeType":null,"messageId":"delete","endLine":4,"endColumn":5,"fix":{"range":[145,147],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":5,"column":1,"nodeType":null,"messageId":"delete","endLine":5,"endColumn":3,"fix":{"range":[153,155],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":6,"column":1,"nodeType":null,"messageId":"delete","endLine":6,"endColumn":3,"fix":{"range":[229,231],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":7,"column":5,"nodeType":null,"messageId":"delete","endLine":7,"endColumn":7,"fix":{"range":[262,264],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":8,"column":1,"nodeType":null,"messageId":"delete","endLine":8,"endColumn":3,"fix":{"range":[288,290],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":9,"column":5,"nodeType":null,"messageId":"delete","endLine":9,"endColumn":7,"fix":{"range":[306,308],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":10,"column":1,"nodeType":null,"messageId":"delete","endLine":10,"endColumn":3,"fix":{"range":[321,323],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":11,"column":1,"nodeType":null,"messageId":"delete","endLine":11,"endColumn":3,"fix":{"range":[327,329],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":12,"column":1,"nodeType":null,"messageId":"delete","endLine":12,"endColumn":3,"fix":{"range":[331,333],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":13,"column":1,"nodeType":null,"messageId":"delete","endLine":13,"endColumn":3,"fix":{"range":[334,336],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":14,"column":1,"nodeType":null,"messageId":"delete","endLine":14,"endColumn":3,"fix":{"range":[418,420],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":15,"column":3,"nodeType":null,"messageId":"delete","endLine":15,"endColumn":5,"fix":{"range":[467,469],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":16,"column":1,"nodeType":null,"messageId":"delete","endLine":16,"endColumn":3,"fix":{"range":[475,477],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":17,"column":5,"nodeType":null,"messageId":"delete","endLine":17,"endColumn":7,"fix":{"range":[524,526],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `······`","line":18,"column":1,"nodeType":null,"messageId":"replace","endLine":18,"endColumn":9,"fix":{"range":[542,550],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":19,"column":5,"nodeType":null,"messageId":"delete","endLine":19,"endColumn":7,"fix":{"range":[590,592],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `········` with `······`","line":20,"column":1,"nodeType":null,"messageId":"replace","endLine":20,"endColumn":9,"fix":{"range":[601,609],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":21,"column":5,"nodeType":null,"messageId":"delete","endLine":21,"endColumn":7,"fix":{"range":[651,653],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":22,"column":1,"nodeType":null,"messageId":"replace","endLine":22,"endColumn":5,"fix":{"range":[655,659],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":23,"column":1,"nodeType":null,"messageId":"delete","endLine":23,"endColumn":3,"fix":{"range":[670,672],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":24,"column":1,"nodeType":null,"messageId":"delete","endLine":24,"endColumn":3,"fix":{"range":[674,676],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":25,"column":1,"nodeType":null,"messageId":"delete","endLine":25,"endColumn":3,"fix":{"range":[677,679],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":26,"column":1,"nodeType":null,"messageId":"replace","endLine":26,"endColumn":5,"fix":{"range":[748,752],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":27,"column":3,"nodeType":null,"messageId":"delete","endLine":27,"endColumn":5,"fix":{"range":[797,799],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `····`","line":28,"column":1,"nodeType":null,"messageId":"replace","endLine":28,"endColumn":7,"fix":{"range":[815,821],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":29,"column":3,"nodeType":null,"messageId":"delete","endLine":29,"endColumn":5,"fix":{"range":[853,855],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `····`","line":30,"column":1,"nodeType":null,"messageId":"replace","endLine":30,"endColumn":7,"fix":{"range":[864,870],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":31,"column":3,"nodeType":null,"messageId":"delete","endLine":31,"endColumn":5,"fix":{"range":[904,906],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":32,"column":1,"nodeType":null,"messageId":"delete","endLine":32,"endColumn":3,"fix":{"range":[908,910],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":33,"column":1,"nodeType":null,"messageId":"delete","endLine":33,"endColumn":3,"fix":{"range":[912,914],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":31,"source":"// lib/safeSessionStorage.ts\nexport function safeGet<T = unknown>(key: string): T | null {\n    if (typeof window === 'undefined') return null;\n    try {\n      const raw = sessionStorage.getItem(key) || localStorage.getItem(key);\n      if (!raw) return null;\n      return JSON.parse(raw);\n    } catch {\n      return null;\n    }\n  }\n  \n  export function safeSet(key: string, value: unknown, useLocal: boolean = false) {\n    if (typeof window === 'undefined') return;\n    try {\n      const encoded = JSON.stringify(value);\n      if (useLocal) {\n        localStorage.setItem(key, encoded);\n      } else {\n        sessionStorage.setItem(key, encoded);\n      }\n    } catch {}\n  }\n  \n  export function safeRemove(key: string, useLocal: boolean = false) {\n    if (typeof window === 'undefined') return;\n    if (useLocal) {\n      localStorage.removeItem(key);\n    } else {\n      sessionStorage.removeItem(key);\n    }\n  }\n  ","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/sdk/zod-playground-client.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/seo.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/server/logging.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/site-config.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":3,"column":3,"nodeType":null,"messageId":"delete","endLine":3,"endColumn":5,"fix":{"range":[51,53],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":4,"column":1,"nodeType":null,"messageId":"delete","endLine":4,"endColumn":3,"fix":{"range":[80,82],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":5,"column":1,"nodeType":null,"messageId":"delete","endLine":5,"endColumn":3,"fix":{"range":[108,110],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":6,"column":1,"nodeType":null,"messageId":"delete","endLine":6,"endColumn":3,"fix":{"range":[113,115],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"// lib/site-config.ts\nexport const SiteFlags = {\n    showMobileGradients: true,\n    showMobileWidget: true,\n  };\n  ","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/siteHelpers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/slugHelpers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/store-referral.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/stringifyQueryParams.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎······?·useBrackets⏎········?·`${prefix}[${key}]`⏎········:·`${prefix}.${key}`⏎·····` with `·?·(useBrackets·?·`${prefix}[${key}]`·:·`${prefix}.${key}`)`","line":16,"column":28,"nodeType":null,"messageId":"replace","endLine":20,"endColumn":6,"fix":{"range":[406,491],"text":" ? (useBrackets ? `${prefix}[${key}]` : `${prefix}.${key}`)"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// lib/stringifyQueryParams.ts\nimport { ZodObject, ZodRawShape, z } from 'zod';\n\nfunction encodeValue(value: any): string {\n  return encodeURIComponent(String(value));\n}\n\nfunction flattenParams(\n  obj: Record<string, any>,\n  prefix = '',\n  useBrackets = false\n): [string, string][] {\n  const entries: [string, string][] = [];\n\n  for (const [key, value] of Object.entries(obj)) {\n    const paramKey = prefix\n      ? useBrackets\n        ? `${prefix}[${key}]`\n        : `${prefix}.${key}`\n      : key;\n\n    if (value === undefined || value === null) continue;\n\n    if (Array.isArray(value)) {\n      for (const v of value) {\n        entries.push([`${paramKey}[]`, encodeValue(v)]);\n      }\n    } else if (typeof value === 'object') {\n      entries.push(...flattenParams(value, paramKey, true));\n    } else {\n      entries.push([paramKey, encodeValue(value)]);\n    }\n  }\n\n  return entries;\n}\n\nexport function stringifyQueryParams<T extends ZodRawShape>(\n  schema: ZodObject<T>,\n  values: Partial<z.infer<ZodObject<T>>>\n): string {\n  const parsed = schema.partial().parse(values);\n  const flat = flattenParams(parsed);\n  return new URLSearchParams(flat).toString();\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase/admin.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase/client.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `process.env.NEXT_PUBLIC_SUPABASE_URL!,·process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,` with `⏎··process.env.NEXT_PUBLIC_SUPABASE_URL!,⏎··process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,⏎·`","line":5,"column":48,"nodeType":null,"messageId":"replace","endLine":5,"endColumn":130,"fix":{"range":[166,248],"text":"\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··` with `····`","line":6,"column":1,"nodeType":null,"messageId":"replace","endLine":6,"endColumn":3,"fix":{"range":[251,253],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":7,"column":1,"nodeType":null,"messageId":"insert","endLine":7,"endColumn":1,"fix":{"range":[261,261],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `······`","line":8,"column":1,"nodeType":null,"messageId":"replace","endLine":8,"endColumn":5,"fix":{"range":[289,293],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":9,"column":5,"nodeType":null,"messageId":"insert","endLine":9,"endColumn":5,"fix":{"range":[326,326],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `······`","line":10,"column":1,"nodeType":null,"messageId":"replace","endLine":10,"endColumn":5,"fix":{"range":[348,352],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":11,"column":5,"nodeType":null,"messageId":"insert","endLine":11,"endColumn":5,"fix":{"range":[382,382],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··` with `····`","line":12,"column":1,"nodeType":null,"messageId":"replace","endLine":12,"endColumn":3,"fix":{"range":[404,406],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":13,"column":1,"nodeType":null,"messageId":"insert","endLine":13,"endColumn":1,"fix":{"range":[409,409],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `······`","line":14,"column":1,"nodeType":null,"messageId":"replace","endLine":14,"endColumn":5,"fix":{"range":[421,425],"text":"      "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":15,"column":3,"nodeType":null,"messageId":"insert","endLine":15,"endColumn":3,"fix":{"range":[441,441],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `}` with `··}⏎`","line":16,"column":1,"nodeType":null,"messageId":"replace","endLine":16,"endColumn":2,"fix":{"range":[444,445],"text":"  }\n"}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎`","line":17,"column":1,"nodeType":null,"messageId":"delete","endLine":18,"endColumn":1,"fix":{"range":[448,449],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":13,"source":"'use client';\nimport { createClient } from '@supabase/supabase-js';\nimport type { Database } from '@/types/supabase';\n\nexport const supabase = createClient<Database>(process.env.NEXT_PUBLIC_SUPABASE_URL!, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!, {\n  auth: {\n    autoRefreshToken: true,\n    storageKey: 'sb-auth-token',\n    persistSession: true,\n    detectSessionInUrl: true,\n    // storage: 'cookie',\n  },\n  global: {\n    fetch: fetch,\n  },\n});\n\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase/createClientWithContext.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@supabase/auth-helpers-nextjs\"` with `'@supabase/auth-helpers-nextjs'`","line":1,"column":45,"nodeType":null,"messageId":"replace","endLine":1,"endColumn":76,"fix":{"range":[44,75],"text":"'@supabase/auth-helpers-nextjs'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"../utils/getReadableCookieStore\"` with `'../utils/getReadableCookieStore'`","line":2,"column":40,"nodeType":null,"messageId":"replace","endLine":2,"endColumn":73,"fix":{"range":[116,149],"text":"'../utils/getReadableCookieStore'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"../../types/supabase\"` with `'../../types/supabase'`","line":3,"column":26,"nodeType":null,"messageId":"replace","endLine":3,"endColumn":48,"fix":{"range":[176,198],"text":"'../../types/supabase'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":6,"column":1,"nodeType":null,"messageId":"replace","endLine":6,"endColumn":5,"fix":{"range":[251,255],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":7,"column":1,"nodeType":null,"messageId":"delete","endLine":7,"endColumn":3,"fix":{"range":[307,309],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":8,"column":1,"nodeType":null,"messageId":"replace","endLine":8,"endColumn":5,"fix":{"range":[310,314],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":9,"column":1,"nodeType":null,"messageId":"delete","endLine":9,"endColumn":3,"fix":{"range":[361,363],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":10,"column":3,"nodeType":null,"messageId":"delete","endLine":10,"endColumn":5,"fix":{"range":[432,434],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":11,"column":1,"nodeType":null,"messageId":"delete","endLine":11,"endColumn":3,"fix":{"range":[438,440],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":12,"column":1,"nodeType":null,"messageId":"delete","endLine":12,"endColumn":3,"fix":{"range":[442,444],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":10,"source":"import { createServerComponentClient } from \"@supabase/auth-helpers-nextjs\";\nimport { getReadableCookieStore } from \"../utils/getReadableCookieStore\";\nimport { Database } from \"../../types/supabase\";\n\nexport async function createClientWithContext() {\n    const cookieStore = await getReadableCookieStore();\n  \n    return createServerComponentClient<Database>({\n      cookies: () => cookieStore as any, // <-- temporary workaround\n    });\n  }\n  ","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase/createScopedClient.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎`","line":8,"column":1,"nodeType":null,"messageId":"delete","endLine":9,"endColumn":1,"fix":{"range":[219,220],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎··`","line":23,"column":1,"nodeType":null,"messageId":"delete","endLine":24,"endColumn":3,"fix":{"range":[726,729],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"'use server';\n\nimport { cookies } from 'next/headers';\nimport { createServerClient } from '@supabase/ssr';\nimport type { SupabaseClient } from '@supabase/supabase-js';\nimport type { Database } from '@/types/supabase';\n\n\nlet cachedClient: SupabaseClient<Database> | null = null;\n\nexport async function createScopedSupabaseClient(): Promise<SupabaseClient<Database>> {\n  type SimpleCookieStore = {\n    get(name: string): { name: string; value: string } | undefined;\n  };\n  if (cachedClient) {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn('[⚠️ Supabase Server Client] Duplicate instantiation detected');\n    }\n    return cachedClient;\n  }\n\n  const cookieStore = cookies() as unknown as SimpleCookieStore;\n\n  \n  const client = createServerClient<Database>(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        get(name: string) {\n          return cookieStore.get(name)?.value;\n        },\n      },\n    }\n  );\n\n  cachedClient = client;\n  return client;\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase/fetchTemplates.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'error' is assigned a value but never used.","line":8,"column":17,"nodeType":null,"messageId":"unusedVar","endLine":8,"endColumn":22}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// lib/supabase/fetchTemplates.ts\nimport { createServerComponentClient } from '@supabase/auth-helpers-nextjs';\nimport { cookies } from 'next/headers';\nimport type { Database } from '@/types/supabase';\n\nexport async function fetchAllTemplates() {\n  const supabase = createServerComponentClient<Database>({ cookies });\n  const { data, error } = await supabase\n    .from('templates')\n    .select('id, slug, template_name, updated_at, industry')\n    .order('updated_at', { ascending: false });\n\n  return data || [];\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase/getRoleRedirectTarget.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Database' is defined but never used.","line":6,"column":15,"nodeType":null,"messageId":"unusedVar","endLine":6,"endColumn":23},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `roleRoutes[role·as·Role]·??·fallbackRoute` with `(roleRoutes[role·as·Role]·??·fallbackRoute)`","line":58,"column":29,"nodeType":null,"messageId":"replace","endLine":58,"endColumn":70,"fix":{"range":[1512,1553],"text":"(roleRoutes[role as Role] ?? fallbackRoute)"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `/:([a-zA-Z0-9_]+)/g,·(_,·key:·string)·=>⏎···` with `⏎····/:([a-zA-Z0-9_]+)/g,⏎····(_,·key:·string)·=>`","line":66,"column":41,"nodeType":null,"messageId":"replace","endLine":67,"endColumn":4,"fix":{"range":[1713,1757],"text":"\n    /:([a-zA-Z0-9_]+)/g,\n    (_, key: string) =>"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"// lib/supabase/getRoleRedirectTarget.ts\n'use server';\n\nimport { getSessionContext } from './getSessionContext';\nimport { getSlugContext } from './getSlugContext';\nimport type { Database } from '@/types/supabase';\n\ntype Role = 'admin' | 'owner' | 'reseller' | 'viewer' | string;\n\ntype RoleMap = Partial<Record<Role, string>>;\n\ntype Options = {\n  roleRoutes?: RoleMap;\n  fallbackRoute?: string;\n  replacements?: Record<string, string>;\n};\n\ntype RedirectTargetResult = {\n  path: string;\n  role: Role;\n  slug: string;\n  user: {\n    id: string;\n    email: string | null;\n  } | null;\n  slugContext: {\n    slug: string;\n    source: 'header' | 'cookie' | 'host' | 'lookup' | 'default';\n    host: string;\n    domain?: string;\n    tenantId?: string | null;\n  };\n};\n\n/**\n * Resolves the redirect path a user should be routed to based on their role and slug context.\n * Supports route templates like /viewer/:slug and dynamic slug resolution via host, cookie, or lookup.\n */\nexport async function getRoleRedirectTarget({\n  roleRoutes = {\n    admin: '/admin/dashboard',\n    owner: '/admin/dashboard',\n    reseller: '/admin/dashboard',\n    viewer: '/viewer/:slug',\n  },\n  fallbackRoute = '/unauthorized',\n  replacements = {},\n}: Options = {}): Promise<RedirectTargetResult> {\n  const { userId, userEmail, role } = await getSessionContext();\n\n  const slugContext = await getSlugContext({\n    subdomainSlugMode: true,\n    resolveTenantId: true,\n  });\n\n  const slug = slugContext.slug ?? 'default';\n\n  const template = userId ? roleRoutes[role as Role] ?? fallbackRoute : '/login';\n\n  const tokenMap: Record<string, string> = {\n    slug,\n    role: role as Role,\n    ...replacements,\n  };\n\n  const resolvedPath = template.replace(/:([a-zA-Z0-9_]+)/g, (_, key: string) =>\n    tokenMap[key] ?? `:${key}`\n  );\n\n  return {\n    path: resolvedPath,\n    role: role as Role,\n    slug,\n    user: userId\n      ? {\n          id: userId,\n          email: userEmail ?? null,\n        }\n      : null,\n    slugContext: {\n      ...slugContext,\n      slug,\n    },\n  };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase/getScopedHeaders.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase/getServerContext.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'ServerHeaders' is defined but never used.","line":4,"column":26,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":39},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎`","line":9,"column":1,"nodeType":null,"messageId":"delete","endLine":10,"endColumn":1,"fix":{"range":[277,278],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"'use server';\n\nimport type { SupabaseClient } from '@supabase/supabase-js';\nimport type { Headers as ServerHeaders } from 'next/dist/compiled/@edge-runtime/primitives';\nimport type { Database } from '../../types/supabase';\n\nimport { createServerClient } from '@supabase/ssr';\n\n\n/**\n * Safely returns request-scoped Supabase client, headers, and cookies.\n * Use only in server components, route handlers, or middleware.\n */\nexport async function getServerContext(): Promise<{\n  supabase: SupabaseClient<Database>;\n  cookies: ReturnType<Awaited<typeof import('next/headers')>['cookies']>;\n  headers: ReturnType<Awaited<typeof import('next/headers')>['headers']>;\n}> {\n  const { cookies, headers } = await import('next/headers');\n\n  const cookieStore = cookies();\n  const headerStore = headers();\n\n  const supabase = createServerClient<Database>(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        async get(name: string) {\n          const cookie = await cookieStore;\n          return cookie.get(name)?.value;\n        },\n      },\n    }\n  );\n\n  return {\n    supabase,\n    cookies: cookieStore,\n    headers: headerStore,\n  };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase/getServerUserProfile.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase/getSessionContext.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase/getSlugContext.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎···`","line":41,"column":34,"nodeType":null,"messageId":"delete","endLine":42,"endColumn":4,"fix":{"range":[1300,1304],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎····slugFromHeader·||⏎····slugFromCookie·||⏎····slugFromLookup·||⏎···` with `·slugFromHeader·||·slugFromCookie·||·slugFromLookup·||`","line":50,"column":15,"nodeType":null,"messageId":"replace","endLine":54,"endColumn":4,"fix":{"range":[1577,1647],"text":" slugFromHeader || slugFromCookie || slugFromLookup ||"}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":59,"column":5,"nodeType":null,"messageId":"insert","endLine":59,"endColumn":5,"fix":{"range":[1732,1732],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":60,"column":1,"nodeType":null,"messageId":"insert","endLine":60,"endColumn":1,"fix":{"range":[1743,1743],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `········`","line":61,"column":1,"nodeType":null,"messageId":"replace","endLine":61,"endColumn":5,"fix":{"range":[1764,1768],"text":"        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `····`","line":62,"column":1,"nodeType":null,"messageId":"insert","endLine":62,"endColumn":1,"fix":{"range":[1779,1779],"text":"    "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":6,"source":"'use server';\n\nimport { headers as getHeaders, cookies as getCookies } from 'next/headers';\nimport { lookupSlugByHost } from '../supabase/lookupSlugByHost';\nimport { lookupTenantBySlug } from '../supabase/lookupTenantBySlug';\n\nexport type SlugContext = {\n  slug: string;\n  source: 'header' | 'cookie' | 'host' | 'lookup' | 'default';\n  host: string;\n  domain?: string;\n  tenantId?: string | null;\n};\n\ntype Options = {\n  subdomainSlugMode?: boolean;\n  resolveTenantId?: boolean;\n  headersOverride?: Headers;\n  cookiesOverride?: ReturnType<typeof getCookies>;\n};\n\n/**\n * Resolves a context-aware slug from headers, cookies, or fallback Supabase lookup.\n * Supports subdomain parsing and tenant ID resolution.\n */\nexport async function getSlugContext({\n  subdomainSlugMode = true,\n  resolveTenantId = false,\n  headersOverride,\n  cookiesOverride,\n}: Options = {}): Promise<SlugContext> {\n  const headers = headersOverride || (await getHeaders());\n  const cookies = cookiesOverride || (await getCookies());\n\n  const rawHost = headers.get('x-forwarded-host') || headers.get('host') || '';\n  const host = rawHost.toLowerCase().trim();\n  const domain = host.replace(/^www\\./, '');\n\n  // 1. Try explicit header (e.g. from reverse proxy or middleware)\n  const slugFromHeader =\n    headers.get('x-site-slug') ||\n    (subdomainSlugMode ? host.split('.')[0] : null);\n\n  // 2. Try cookie (e.g. SSR remember-slug)\n  const slugFromCookie = (await cookies).get('site_slug')?.value ?? null;\n\n  // 3. DB fallback via Supabase\n  const slugFromLookup = await lookupSlugByHost(host);\n\n  const slug =\n    slugFromHeader ||\n    slugFromCookie ||\n    slugFromLookup ||\n    'default';\n\n  const source = slugFromHeader\n    ? 'header'\n    : slugFromCookie\n    ? 'cookie'\n    : slugFromLookup\n    ? 'lookup'\n    : 'default';\n\n  // 4. Optional: resolve tenant ID from slug\n  let tenantId: string | null = null;\n\n  if (resolveTenantId && slug !== 'default') {\n    tenantId = await lookupTenantBySlug(slug); // implement as needed\n  }\n\n  return {\n    slug,\n    source,\n    host,\n    domain,\n    tenantId,\n  };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase/getSupabaseContext.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase/lookupSlugByHost.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase/lookupTenantBySlug.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase/middlewareClient.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··req:·NextRequest,⏎··res:·NextResponse⏎` with `req:·NextRequest,·res:·NextResponse`","line":11,"column":48,"nodeType":null,"messageId":"replace","endLine":14,"endColumn":1,"fix":{"range":[464,505],"text":"req: NextRequest, res: NextResponse"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import { createServerClient, type CookieOptions } from '@supabase/ssr';\nimport type { Database } from '../../types/supabase';\nimport type { NextRequest } from 'next/server';\nimport { NextResponse } from 'next/server';\nimport { safeParse } from '../utils/safeParse';\n\n/**\n * Creates a Supabase client for use in Next.js middleware.\n * Be sure to return the `res` instance you pass in, or headers won't be applied.\n */\nexport function createMiddlewareSupabaseClient(\n  req: NextRequest,\n  res: NextResponse\n) {\n  return createServerClient<Database>(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        get(name: string) {\n          const raw = req.cookies.get(name)?.value;\n          if (!raw) return undefined;\n\n          if (name.startsWith('sb-')) return raw;\n\n          const parsed = safeParse<string>(raw);\n          return typeof parsed === 'string' ? parsed : undefined;\n        },\n        set(name: string, value: string, options?: CookieOptions) {\n          res.cookies.set(name, value, options);\n        },\n        remove(name: string) {\n          res.cookies.set(name, '', { maxAge: 0 });\n        },\n      },\n    }\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase/redirectByRoleServer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase/server.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase/server/getServerUserProfile.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase/serverClient.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase/server_v1.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase/service.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase/universal.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/supabase/useSupabase.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/templateDefaults.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":6,"column":1,"nodeType":null,"messageId":"insert","endLine":6,"endColumn":1,"fix":{"range":[202,202],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":9,"column":1,"nodeType":null,"messageId":"insert","endLine":9,"endColumn":1,"fix":{"range":[248,248],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Insert `··`","line":10,"column":1,"nodeType":null,"messageId":"insert","endLine":10,"endColumn":1,"fix":{"range":[264,264],"text":"  "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"import type { ValidatedTemplate } from '@/admin/lib/zod/templateSaveSchema';\n\nexport const templateDefaults: Omit<ValidatedTemplate, 'id' | 'name' | 'slug'> = {\n  layout: 'default',\n  color_scheme: '',\n//   commit: '',\n  industry: '',\n  theme: '',\n//   brand: '',\n//   site_id: undefined,\n  updated_at: new Date().toISOString(),\n  data: {\n    pages: [],\n  },\n};\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/useInviteGate.ts","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'allow' and 'router'. Either include them or remove the dependency array.","line":15,"column":6,"nodeType":"ArrayExpression","endLine":15,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [allow, router]","fix":{"range":[379,381],"text":"[allow, router]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\n\nexport function useInviteGate(allow = false) {\n  const router = useRouter();\n\n  useEffect(() => {\n    if (typeof window === 'undefined') return;\n\n    const verified = localStorage.getItem('invite_verified') === 'true';\n\n    if (!allow && !verified) {\n      router.push('/early-access');\n    }\n  }, []);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/usePageSeo.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useRouter' is defined but never used.","line":1,"column":23,"nodeType":null,"messageId":"unusedVar","endLine":1,"endColumn":32}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { usePathname, useRouter, useSearchParams } from 'next/navigation';\nimport { useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport { getPageSeo } from './seo';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\ntype SiteSeoFields = {\n  domain?: string;\n  seo_title?: string;\n  seo_description?: string;\n  twitter_handle?: string;\n  site_name?: string;\n};\n\nexport function usePageSeo({\n  title,\n  description,\n  noindex = false,\n}: {\n  title?: string;\n  description: string;\n  noindex?: boolean;\n}) {\n  const pathname = usePathname();\n  const asPath = useSearchParams()?.get('asPath');\n  const [site, setSite] = useState<SiteSeoFields>({});\n\n  useEffect(() => {\n    const slug = pathname?.split('/')[1]; // assumes /edit/[slug] or /view/[slug]\n\n    if (!slug) return;\n\n    supabase\n      .from('sites')\n      .select('domain, seo_title, seo_description, twitter_handle, site_name')\n      .eq('slug', slug)\n      .single()\n      .then(({ data }) => {\n        if (data) setSite(data);\n      });\n  }, [pathname]);\n\n  const derivedTitle =\n    title ||\n    site.seo_title ||\n    pathname\n      ?.replace(/^\\//, '')\n      .replace(/-/g, ' ')\n      .replace(/\\b\\w/g, (c) => c.toUpperCase()) ||\n    'Home';\n\n  const siteUrl = site.domain\n    ? `https://${site.domain}`\n    : process.env.NEXT_PUBLIC_SITE_URL || 'https://example.com';\n\n  const fullUrl = `${siteUrl}${asPath}`;\n\n  return {\n    ...getPageSeo({\n      title: derivedTitle,\n      description: description || site.seo_description || '',\n      slug: pathname || 'home',\n    }),\n    ...(noindex && { robots: 'noindex,nofollow' }),\n    canonical: fullUrl,\n    openGraph: {\n      url: fullUrl,\n      title: derivedTitle,\n      description: description || site.seo_description || '',\n      site_name: site.site_name || 'QuickSites',\n      type: 'website',\n    },\n    twitter: {\n      handle: site.twitter_handle || '@QuickSitesAI',\n      site: site.twitter_handle || '@QuickSitesAI',\n      cardType: 'summary_large_image',\n    },\n  };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/useRefTracker.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/useSearchQueryParams.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/useVectorDB.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/utils/asSupabaseCookieAdapter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/utils/asWritableCookieAdapter.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··store:·ResponseCookies⏎` with `store:·ResponseCookies`","line":7,"column":41,"nodeType":null,"messageId":"replace","endLine":9,"endColumn":1,"fix":{"range":[284,310],"text":"store: ResponseCookies"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import type { ResponseCookies } from 'next/dist/compiled/@edge-runtime/cookies';\n\n/**\n * Wraps a writable ResponseCookies store into a Promise-based adapter,\n * usable for Supabase or any cookie middleware that expects `() => Promise<...>`\n */\nexport function asWritableCookieAdapter(\n  store: ResponseCookies\n): () => Promise<ResponseCookies> {\n  return () => Promise.resolve(store);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/utils/distance.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎····lat1:·number,⏎····lon1:·number,⏎····lat2:·number,⏎····lon2:·number⏎··` with `lat1:·number,·lon1:·number,·lat2:·number,·lon2:·number`","line":3,"column":35,"nodeType":null,"messageId":"replace","endLine":8,"endColumn":3,"fix":{"range":[60,134],"text":"lat1: number, lon1: number, lat2: number, lon2: number"}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":9,"column":1,"nodeType":null,"messageId":"delete","endLine":9,"endColumn":3,"fix":{"range":[146,148],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":10,"column":1,"nodeType":null,"messageId":"replace","endLine":10,"endColumn":5,"fix":{"range":[172,176],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":11,"column":1,"nodeType":null,"messageId":"delete","endLine":11,"endColumn":3,"fix":{"range":[230,232],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":12,"column":1,"nodeType":null,"messageId":"delete","endLine":12,"endColumn":3,"fix":{"range":[233,235],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":13,"column":1,"nodeType":null,"messageId":"replace","endLine":13,"endColumn":5,"fix":{"range":[270,274],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":14,"column":1,"nodeType":null,"messageId":"delete","endLine":14,"endColumn":3,"fix":{"range":[307,309],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":15,"column":1,"nodeType":null,"messageId":"delete","endLine":15,"endColumn":3,"fix":{"range":[310,312],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `····`","line":16,"column":1,"nodeType":null,"messageId":"replace","endLine":16,"endColumn":7,"fix":{"range":[324,330],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··Math.cos(toRad(lat1))·*⏎········Math.cos(toRad(lat2))·*⏎·······` with `Math.cos(toRad(lat1))·*·Math.cos(toRad(lat2))·*`","line":17,"column":5,"nodeType":null,"messageId":"replace","endLine":19,"endColumn":8,"fix":{"range":[360,425],"text":"Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *"}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":20,"column":1,"nodeType":null,"messageId":"delete","endLine":20,"endColumn":3,"fix":{"range":[451,453],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":21,"column":1,"nodeType":null,"messageId":"delete","endLine":21,"endColumn":3,"fix":{"range":[454,456],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":22,"column":3,"nodeType":null,"messageId":"delete","endLine":22,"endColumn":5,"fix":{"range":[518,520],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":23,"column":1,"nodeType":null,"messageId":"delete","endLine":23,"endColumn":3,"fix":{"range":[534,536],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":24,"column":1,"nodeType":null,"messageId":"delete","endLine":24,"endColumn":3,"fix":{"range":[538,540],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··export·function·getDistanceMiles(⏎····lat1:·number,⏎····lon1:·number,⏎····lat2:·number,⏎····lon2:·number⏎··` with `export·function·getDistanceMiles(lat1:·number,·lon1:·number,·lat2:·number,·lon2:·number`","line":25,"column":1,"nodeType":null,"messageId":"replace","endLine":30,"endColumn":3,"fix":{"range":[541,650],"text":"export function getDistanceMiles(lat1: number, lon1: number, lat2: number, lon2: number"}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":31,"column":1,"nodeType":null,"messageId":"delete","endLine":31,"endColumn":3,"fix":{"range":[662,664],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··}` with `}⏎`","line":32,"column":1,"nodeType":null,"messageId":"replace","endLine":32,"endColumn":4,"fix":{"range":[727,730],"text":"}\n"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":18,"source":"// lib/utils/distance.ts\n\nexport function haversineDistance(\n    lat1: number,\n    lon1: number,\n    lat2: number,\n    lon2: number\n  ): number {\n    const R = 6371; // km\n    const toRad = (deg: number) => (deg * Math.PI) / 180;\n  \n    const dLat = toRad(lat2 - lat1);\n    const dLon = toRad(lon2 - lon1);\n  \n    const a =\n      Math.sin(dLat / 2) ** 2 +\n      Math.cos(toRad(lat1)) *\n        Math.cos(toRad(lat2)) *\n        Math.sin(dLon / 2) ** 2;\n  \n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  }\n  \n  export function getDistanceMiles(\n    lat1: number,\n    lon1: number,\n    lat2: number,\n    lon2: number\n  ): number {\n    return haversineDistance(lat1, lon1, lat2, lon2) * 0.621371;\n  }","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/utils/extractUserContext.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/utils/geocode.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":2,"column":3,"nodeType":null,"messageId":"delete","endLine":2,"endColumn":5,"fix":{"range":[47,49],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":3,"column":1,"nodeType":null,"messageId":"replace","endLine":3,"endColumn":5,"fix":{"range":[63,67],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":4,"column":1,"nodeType":null,"messageId":"delete","endLine":4,"endColumn":3,"fix":{"range":[82,84],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":5,"column":1,"nodeType":null,"messageId":"delete","endLine":5,"endColumn":3,"fix":{"range":[134,136],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":6,"column":3,"nodeType":null,"messageId":"delete","endLine":6,"endColumn":5,"fix":{"range":[193,195],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":7,"column":1,"nodeType":null,"messageId":"delete","endLine":7,"endColumn":3,"fix":{"range":[296,298],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":8,"column":1,"nodeType":null,"messageId":"delete","endLine":8,"endColumn":3,"fix":{"range":[299,301],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `····`","line":9,"column":1,"nodeType":null,"messageId":"replace","endLine":9,"endColumn":7,"fix":{"range":[309,315],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":10,"column":7,"nodeType":null,"messageId":"delete","endLine":10,"endColumn":9,"fix":{"range":[352,354],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":11,"column":1,"nodeType":null,"messageId":"delete","endLine":11,"endColumn":3,"fix":{"range":[365,367],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··········'Accept'` with `········Accept`","line":12,"column":1,"nodeType":null,"messageId":"replace","endLine":12,"endColumn":19,"fix":{"range":[438,456],"text":"        Accept"}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":13,"column":7,"nodeType":null,"messageId":"delete","endLine":13,"endColumn":9,"fix":{"range":[484,486],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":14,"column":1,"nodeType":null,"messageId":"delete","endLine":14,"endColumn":3,"fix":{"range":[489,491],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":15,"column":1,"nodeType":null,"messageId":"delete","endLine":15,"endColumn":3,"fix":{"range":[499,501],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":16,"column":1,"nodeType":null,"messageId":"delete","endLine":16,"endColumn":3,"fix":{"range":[502,504],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":17,"column":1,"nodeType":null,"messageId":"delete","endLine":17,"endColumn":3,"fix":{"range":[539,541],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":18,"column":7,"nodeType":null,"messageId":"delete","endLine":18,"endColumn":9,"fix":{"range":[597,599],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··········` with `········`","line":19,"column":1,"nodeType":null,"messageId":"replace","endLine":19,"endColumn":11,"fix":{"range":[608,618],"text":"        "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":20,"column":1,"nodeType":null,"messageId":"delete","endLine":20,"endColumn":3,"fix":{"range":[648,650],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":21,"column":7,"nodeType":null,"messageId":"delete","endLine":21,"endColumn":9,"fix":{"range":[694,696],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":22,"column":1,"nodeType":null,"messageId":"delete","endLine":22,"endColumn":3,"fix":{"range":[699,701],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":23,"column":3,"nodeType":null,"messageId":"delete","endLine":23,"endColumn":5,"fix":{"range":[709,711],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":24,"column":1,"nodeType":null,"messageId":"delete","endLine":24,"endColumn":3,"fix":{"range":[725,727],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":25,"column":3,"nodeType":null,"messageId":"delete","endLine":25,"endColumn":5,"fix":{"range":[789,791],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":26,"column":1,"nodeType":null,"messageId":"delete","endLine":26,"endColumn":3,"fix":{"range":[793,795],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":27,"column":1,"nodeType":null,"messageId":"delete","endLine":27,"endColumn":3,"fix":{"range":[796,798],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":28,"column":1,"nodeType":null,"messageId":"delete","endLine":28,"endColumn":3,"fix":{"range":[813,815],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":29,"column":1,"nodeType":null,"messageId":"delete","endLine":29,"endColumn":3,"fix":{"range":[817,819],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":28,"source":"export async function getLatLonForCityState(\n    city: string,\n    state?: string\n  ): Promise<{ lat: number; lon: number } | null> {\n    const query = `${city}${state ? `, ${state}` : ''}`;\n    const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}`;\n  \n    try {\n      const res = await fetch(url, {\n        headers: {\n          'User-Agent': 'QuickSites-Geocoder/1.0 (admin@quicksites.ai)',\n          'Accept': 'application/json',\n        },\n      });\n  \n      const data = await res.json();\n      if (Array.isArray(data) && data.length > 0) {\n        return {\n          lat: parseFloat(data[0].lat),\n          lon: parseFloat(data[0].lon),\n        };\n      }\n    } catch (e) {\n      console.warn(`🌐 Failed to geocode city: ${query}`, e);\n    }\n  \n    return null;\n  }\n  ","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/utils/getDefaultStores.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/utils/getReadableCookieStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/utils/getResponseCookies.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/utils/getSafeRequestContext.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"@/lib/context/getClientContext\"` with `'@/lib/context/getClientContext'`","line":1,"column":36,"nodeType":null,"messageId":"replace","endLine":1,"endColumn":68,"fix":{"range":[35,67],"text":"'@/lib/context/getClientContext'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"./useSafeCookies\"` with `'./useSafeCookies'`","line":2,"column":32,"nodeType":null,"messageId":"replace","endLine":2,"endColumn":50,"fix":{"range":[100,118],"text":"'./useSafeCookies'"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"./useSafeHeaders\"` with `'./useSafeHeaders'`","line":3,"column":32,"nodeType":null,"messageId":"replace","endLine":3,"endColumn":50,"fix":{"range":[151,169],"text":"'./useSafeHeaders'"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"import { SafeRequestContext } from \"@/lib/context/getClientContext\";\nimport { useSafeCookies } from \"./useSafeCookies\";\nimport { useSafeHeaders } from \"./useSafeHeaders\";\n\nexport function useSafeRequestContext(): SafeRequestContext {\n  const { cookies, cookieMode } = useSafeCookies();\n  const { headers, headerMode } = useSafeHeaders();\n\n  return {\n    cookies,\n    cookieMode,\n    headers,\n    headerMode,\n  };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/utils/getSafeStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/utils/getStaticContext.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/utils/getStaticCookies.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/utils/getStaticHeaders.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/utils/getSupabaseCookieAdapter.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··store:·unknown⏎` with `store:·unknown`","line":6,"column":42,"nodeType":null,"messageId":"replace","endLine":8,"endColumn":1,"fix":{"range":[234,252],"text":"store: unknown"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import type { ReadonlyRequestCookies } from 'next/dist/server/web/spec-extension/adapters/request-cookies';\n\n/**\n * Casts and wraps any cookie store as ReadonlyRequestCookies for Supabase.\n */\nexport function getSupabaseCookieAdapter(\n  store: unknown\n): () => Promise<ReadonlyRequestCookies> {\n  return () => Promise.resolve(store as ReadonlyRequestCookies);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/utils/getWritableCookieStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/utils/location.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `query:·string` with `⏎··query:·string⏎`","line":3,"column":42,"nodeType":null,"messageId":"replace","endLine":3,"endColumn":55,"fix":{"range":[67,80],"text":"\n  query: string\n"}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":4,"column":3,"nodeType":null,"messageId":"delete","endLine":4,"endColumn":5,"fix":{"range":[132,134],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":5,"column":1,"nodeType":null,"messageId":"delete","endLine":5,"endColumn":3,"fix":{"range":[166,168],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":6,"column":1,"nodeType":null,"messageId":"delete","endLine":6,"endColumn":3,"fix":{"range":[169,171],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······const·response·=·await·fetch(`https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(query)}&format=json&limit=1`` with `····const·response·=·await·fetch(⏎······`https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(query)}&format=json&limit=1`⏎····`","line":7,"column":1,"nodeType":null,"messageId":"replace","endLine":7,"endColumn":131,"fix":{"range":[179,309],"text":"    const response = await fetch(\n      `https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(query)}&format=json&limit=1`\n    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":8,"column":1,"nodeType":null,"messageId":"delete","endLine":8,"endColumn":3,"fix":{"range":[312,314],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":9,"column":1,"nodeType":null,"messageId":"delete","endLine":9,"endColumn":3,"fix":{"range":[354,356],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":10,"column":1,"nodeType":null,"messageId":"delete","endLine":10,"endColumn":3,"fix":{"range":[357,359],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":11,"column":7,"nodeType":null,"messageId":"delete","endLine":11,"endColumn":9,"fix":{"range":[400,402],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":12,"column":1,"nodeType":null,"messageId":"delete","endLine":12,"endColumn":3,"fix":{"range":[411,413],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":13,"column":9,"nodeType":null,"messageId":"delete","endLine":13,"endColumn":11,"fix":{"range":[459,461],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":14,"column":7,"nodeType":null,"messageId":"delete","endLine":14,"endColumn":9,"fix":{"range":[497,499],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":15,"column":5,"nodeType":null,"messageId":"delete","endLine":15,"endColumn":7,"fix":{"range":[506,508],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":16,"column":1,"nodeType":null,"messageId":"replace","endLine":16,"endColumn":5,"fix":{"range":[510,514],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":17,"column":1,"nodeType":null,"messageId":"delete","endLine":17,"endColumn":3,"fix":{"range":[532,534],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":18,"column":3,"nodeType":null,"messageId":"delete","endLine":18,"endColumn":5,"fix":{"range":[591,593],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":19,"column":1,"nodeType":null,"messageId":"delete","endLine":19,"endColumn":3,"fix":{"range":[595,597],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":20,"column":1,"nodeType":null,"messageId":"delete","endLine":20,"endColumn":3,"fix":{"range":[598,600],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":21,"column":1,"nodeType":null,"messageId":"delete","endLine":21,"endColumn":3,"fix":{"range":[615,617],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":22,"column":1,"nodeType":null,"messageId":"delete","endLine":22,"endColumn":3,"fix":{"range":[619,621],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":20,"source":"// lib/utils/location.ts\n\nexport async function getLatLonFromQuery(query: string): Promise<{ lat: number; lon: number } | null> {\n    if (!query.trim()) return null;\n  \n    try {\n      const response = await fetch(`https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(query)}&format=json&limit=1`);\n      const data = await response.json();\n  \n      if (data && data.length > 0) {\n        return {\n          lat: parseFloat(data[0].lat),\n          lon: parseFloat(data[0].lon),\n        };\n      }\n    } catch (error) {\n      console.warn('[🌐 Geolocation API Error]', error);\n    }\n  \n    return null;\n  }\n  ","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/utils/safeParse.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/utils/slug.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":4,"column":3,"nodeType":null,"messageId":"delete","endLine":4,"endColumn":5,"fix":{"range":[71,73],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":5,"column":1,"nodeType":null,"messageId":"delete","endLine":5,"endColumn":3,"fix":{"range":[84,86],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":6,"column":5,"nodeType":null,"messageId":"delete","endLine":6,"endColumn":7,"fix":{"range":[109,111],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":7,"column":1,"nodeType":null,"messageId":"delete","endLine":7,"endColumn":3,"fix":{"range":[119,121],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":8,"column":5,"nodeType":null,"messageId":"delete","endLine":8,"endColumn":7,"fix":{"range":[179,181],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":9,"column":5,"nodeType":null,"messageId":"delete","endLine":9,"endColumn":7,"fix":{"range":[231,233],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":10,"column":1,"nodeType":null,"messageId":"delete","endLine":10,"endColumn":3,"fix":{"range":[273,275],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":11,"column":1,"nodeType":null,"messageId":"delete","endLine":11,"endColumn":3,"fix":{"range":[277,279],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":12,"column":1,"nodeType":null,"messageId":"delete","endLine":12,"endColumn":3,"fix":{"range":[280,282],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":13,"column":3,"nodeType":null,"messageId":"delete","endLine":13,"endColumn":5,"fix":{"range":[334,336],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":14,"column":1,"nodeType":null,"messageId":"delete","endLine":14,"endColumn":3,"fix":{"range":[360,362],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":15,"column":5,"nodeType":null,"messageId":"delete","endLine":15,"endColumn":7,"fix":{"range":[384,386],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":16,"column":1,"nodeType":null,"messageId":"delete","endLine":16,"endColumn":3,"fix":{"range":[405,407],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":17,"column":5,"nodeType":null,"messageId":"delete","endLine":17,"endColumn":7,"fix":{"range":[460,462],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `····`","line":18,"column":1,"nodeType":null,"messageId":"replace","endLine":18,"endColumn":7,"fix":{"range":[502,508],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":19,"column":1,"nodeType":null,"messageId":"delete","endLine":19,"endColumn":3,"fix":{"range":[549,551],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `····`","line":20,"column":1,"nodeType":null,"messageId":"replace","endLine":20,"endColumn":7,"fix":{"range":[598,604],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":21,"column":3,"nodeType":null,"messageId":"delete","endLine":21,"endColumn":5,"fix":{"range":[649,651],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":22,"column":1,"nodeType":null,"messageId":"replace","endLine":22,"endColumn":5,"fix":{"range":[654,658],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":23,"column":1,"nodeType":null,"messageId":"delete","endLine":23,"endColumn":3,"fix":{"range":[682,684],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":24,"column":1,"nodeType":null,"messageId":"delete","endLine":24,"endColumn":3,"fix":{"range":[686,688],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":25,"column":1,"nodeType":null,"messageId":"delete","endLine":25,"endColumn":3,"fix":{"range":[689,691],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":26,"column":3,"nodeType":null,"messageId":"delete","endLine":26,"endColumn":5,"fix":{"range":[760,762],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":27,"column":1,"nodeType":null,"messageId":"delete","endLine":27,"endColumn":3,"fix":{"range":[816,818],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":28,"column":1,"nodeType":null,"messageId":"delete","endLine":28,"endColumn":3,"fix":{"range":[820,822],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":29,"column":1,"nodeType":null,"messageId":"delete","endLine":29,"endColumn":3,"fix":{"range":[823,825],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":30,"column":1,"nodeType":null,"messageId":"delete","endLine":30,"endColumn":3,"fix":{"range":[888,890],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":31,"column":1,"nodeType":null,"messageId":"delete","endLine":31,"endColumn":3,"fix":{"range":[958,960],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":32,"column":1,"nodeType":null,"messageId":"delete","endLine":32,"endColumn":3,"fix":{"range":[962,964],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":29,"source":"// lib/utils/slug.ts\n\nexport function slugify(str: string): string {\n    return str\n      .toLowerCase()\n      .trim()\n      .replace(/[^\\w\\s-]/g, '') // remove special chars\n      .replace(/[\\s_-]+/g, '-') // normalize dashes\n      .replace(/^-+|-+$/g, ''); // trim edges\n  }\n  \n  export function generateTimestampSlug(): string {\n    const now = new Date();\n    const parts = [\n      now.getFullYear(),\n      String(now.getMonth() + 1).padStart(2, '0'),\n      String(now.getDate()).padStart(2, '0'),\n      String(now.getHours()).padStart(2, '0'),\n      String(now.getMinutes()).padStart(2, '0'),\n      String(now.getSeconds()).padStart(2, '0'),\n    ];\n    return parts.join('-');\n  }\n  \n  export function generateUniqueTemplateName(base: string): string {\n    return `${slugify(base)}-${generateTimestampSlug()}`;\n  }\n  \n  export function stripTimestampFromName(name: string): string {\n    return name.replace(/-\\d{4}-\\d{2}-\\d{2}-\\d{2}-\\d{2}-\\d{2}$/, '');\n  }\n  ","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/utils/useSafeCookies.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎····typeof·raw·===·'object'·&&⏎····raw·!==·null·&&⏎····'set'·in·raw·&&⏎···` with `·typeof·raw·===·'object'·&&·raw·!==·null·&&·'set'·in·raw·&&`","line":20,"column":21,"nodeType":null,"messageId":"replace","endLine":24,"endColumn":4,"fix":{"range":[698,773],"text":" typeof raw === 'object' && raw !== null && 'set' in raw &&"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import { cookies } from 'next/headers';\nimport type { ReadonlyRequestCookies } from 'next/dist/server/web/spec-extension/adapters/request-cookies';\nimport type { ResponseCookies } from 'next/dist/compiled/@edge-runtime/cookies';\n\nexport type CookieAccessType = 'readonly' | 'writable';\nexport type SafeCookies = ReadonlyRequestCookies | ResponseCookies;\n\nexport interface SafeCookiesResult {\n  cookies: SafeCookies;\n  cookieMode: CookieAccessType;\n}\n\n/**\n * Provides a consistent, type-safe cookies() interface for both\n * server components (readonly) and route handlers (writable).\n */\nexport function useSafeCookies(): SafeCookiesResult {\n  const raw = cookies() as unknown;\n\n  const isWritable =\n    typeof raw === 'object' &&\n    raw !== null &&\n    'set' in raw &&\n    'delete' in raw;\n\n  return {\n    cookies: isWritable ? (raw as ResponseCookies) : (raw as ReadonlyRequestCookies),\n    cookieMode: isWritable ? 'writable' : 'readonly',\n  };\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/utils/useSafeHeaders.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/lib/validateBlock.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎······.flatMap(([field,·msgs])·=>·msgs?.map(msg·=>·`${field}:·${msg}`)·??·[]` with `.flatMap(⏎······([field,·msgs])·=>·msgs?.map((msg)·=>·`${field}:·${msg}`)·??·[]⏎····`","line":10,"column":62,"nodeType":null,"messageId":"replace","endLine":11,"endColumn":77,"fix":{"range":[378,455],"text":".flatMap(\n      ([field, msgs]) => msgs?.map((msg) => `${field}: ${msg}`) ?? []\n    "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// lib/validateBlock.ts\nimport { Block } from '@/types/blocks';\nimport { BlockSchema } from '@/admin/lib/zod/blockSchema';\n\nexport type BlockValidationErrorMap = Record<string, string[]>;\n\nexport function validateBlock(block: Block): string[] {\n  const result = BlockSchema.safeParse(block);\n  if (!result.success) {\n    return Object.entries(result.error.flatten().fieldErrors)\n      .flatMap(([field, msgs]) => msgs?.map(msg => `${field}: ${msg}`) ?? []);\n  }\n  return [];\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/middleware.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'error' is assigned a value but never used.","line":26,"column":28,"nodeType":null,"messageId":"unusedVar","endLine":26,"endColumn":33}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { NextResponse, type NextRequest } from 'next/server';\nimport { createMiddlewareClient } from '@supabase/auth-helpers-nextjs';\nimport type { Database } from './types/supabase';\n\nexport async function middleware(req: NextRequest) {\n  const { pathname } = req.nextUrl;\n\n  // 🛑 Skip .js.map requests (prevent slug confusion)\n  if (pathname.endsWith('.js.map')) {\n    return NextResponse.next();\n  }\n\n  const res = NextResponse.next();\n  const supabase = createMiddlewareClient<Database>({ req, res });\n\n  const {\n    data: { session },\n  } = await supabase.auth.getSession();\n\n  const user = session?.user;\n\n  if (user) {\n    console.log('[middleware] user:', user?.email);\n\n    // 🔍 Fetch role from your app DB (user_profiles or user_roles)\n    const { data: profile, error } = await supabase\n      .from('user_profiles')\n      .select('role')\n      .eq('user_id', user.id)\n      .maybeSingle();\n\n    console.log('[middleware] role:', profile?.role);\n\n    const resolvedRole = profile?.role || 'guest';\n\n    console.log('[middleware] resolvedRole:', resolvedRole);\n\n    // 🔁 Inject headers\n    res.headers.set('x-user-id', user.id);\n    res.headers.set('x-user-email', user.email ?? '');\n    res.headers.set('x-user-role', resolvedRole); // ✅ Use role from DB\n    res.headers.set('x-user-name', user.user_metadata?.name ?? '');\n    res.headers.set('x-user-avatar-url', user.user_metadata?.avatar_url ?? '');\n  }\n\n  return res;\n}\n\nexport const config = {\n  matcher: ['/admin/:path*', '/login'],\n};\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/next-env.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/next-seo.config.js","messages":[{"ruleId":"import/no-anonymous-default-export","severity":1,"message":"Assign object to a variable before exporting as module default","line":5,"column":1,"nodeType":"ExportDefaultDeclaration","endLine":30,"endColumn":3}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// next-seo.config.js\nconst title = 'QuickSites';\nconst description = 'AI-powered local site generator and dashboard';\n\nexport default {\n  title,\n  description,\n  canonical: 'https://quicksites.ai',\n  openGraph: {\n    type: 'website',\n    locale: 'en_US',\n    url: 'https://quicksites.ai',\n    site_name: 'QuickSites',\n    title,\n    description,\n    images: [\n      {\n        url: '/assets/opengraph-image.dark.safe.png',\n        width: 1200,\n        height: 630,\n        alt: title,\n      },\n    ],\n  },\n  twitter: {\n    handle: '@quicksites_ai',\n    site: '@quicksites_ai',\n    cardType: 'summary_large_image',\n  },\n};\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/next.rewrites.template.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/openapi-gen/generate.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/openapi-gen/schemas.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/playwright.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/postcss.config.js","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Insert `;`","line":2,"column":39,"nodeType":null,"messageId":"insert","endLine":2,"endColumn":39,"fix":{"range":[59,59],"text":";"}},{"ruleId":"import/no-anonymous-default-export","severity":1,"message":"Assign object to a variable before exporting as module default","line":3,"column":1,"nodeType":"ExportDefaultDeclaration","endLine":8,"endColumn":5},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":4,"column":3,"nodeType":null,"messageId":"delete","endLine":4,"endColumn":5,"fix":{"range":[79,81],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `······` with `····`","line":5,"column":1,"nodeType":null,"messageId":"replace","endLine":5,"endColumn":7,"fix":{"range":[92,98],"text":"    "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":6,"column":1,"nodeType":null,"messageId":"delete","endLine":6,"endColumn":3,"fix":{"range":[115,117],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":7,"column":3,"nodeType":null,"messageId":"delete","endLine":7,"endColumn":5,"fix":{"range":[141,143],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":8,"column":1,"nodeType":null,"messageId":"delete","endLine":8,"endColumn":3,"fix":{"range":[146,148],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":9,"column":1,"nodeType":null,"messageId":"delete","endLine":9,"endColumn":3,"fix":{"range":[151,153],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":7,"source":"// postcss.config.js\nconsole.log('✅ LOADED POSTCSS CONFIG')\nexport default {\n    plugins: {\n      tailwindcss: {},\n      autoprefixer: {},\n    },\n  };\n  ","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/alert-suspicious-tokens.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/check-cookies-usage.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'process' is defined but never used.","line":4,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":15},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'SUPABASE_TOKEN_KEY' is assigned a value but never used.","line":11,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":11,"endColumn":25}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { readdirSync, statSync, readFileSync } from 'node:fs';\nimport path from 'node:path';\nimport { fileURLToPath } from 'node:url';\nimport process from 'node:process';\n\n// Ensure we're running from the root\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\nconst projectRoot = path.resolve(__dirname, '..');\n\n// Target token name from Supabase\nconst SUPABASE_TOKEN_KEY = 'sb-';\n\n// Files we want to scan\nconst fileExtensions = ['.ts', '.tsx', '.js', '.jsx'];\n\nfunction walk(dir: string): string[] {\n  let files: string[] = [];\n  for (const entry of readdirSync(dir)) {\n    const fullPath = path.join(dir, entry);\n    const stat = statSync(fullPath);\n    if (stat.isDirectory() && !['node_modules', '.next', 'dist'].includes(entry)) {\n      files = files.concat(walk(fullPath));\n    } else if (fileExtensions.some((ext) => fullPath.endsWith(ext))) {\n      files.push(fullPath);\n    }\n  }\n  return files;\n}\n\nfunction scanFile(filePath: string) {\n  const content = readFileSync(filePath, 'utf-8');\n  const matches = content.match(/cookies\\(\\)\\.get\\(['\"`]sb-[^'\"`]+['\"`]\\)/g);\n  if (matches) {\n    console.log(`\\n🔍 Found ${matches.length} match(es) in ${filePath}`);\n    matches.forEach((m) => console.log('  →', m));\n  }\n}\n\nfunction main() {\n  console.log('📦 Scanning for direct Supabase token usage in cookies()...\\n');\n  const files = walk(projectRoot);\n  files.forEach(scanFile);\n  console.log('\\n✅ Scan complete.\\n');\n}\n\nmain();\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/check-import-casing.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/check-links.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/cleanup-expired-tokens.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'ReportToken' is defined but never used.","line":3,"column":6,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { createClient } from '@supabase/supabase-js';\n\ntype ReportToken = {\n  id: string;\n  user_id: string;\n  expires_at: string;\n};\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n);\n\nconst { data, error } = await supabase\n  .from('report_tokens')\n  .select('*')\n  .lt('expires_at', new Date().toISOString());\n\nif (error) {\n  console.error('❌ Failed to clean expired tokens:', error);\n} else {\n  console.log(`🧼 Deleted ${data?.length || 0} expired tokens`);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/cleanup-screenshots.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/cleanup-sitemaps.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'base' is assigned a value but never used.","line":26,"column":15,"nodeType":null,"messageId":"unusedVar","endLine":26,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { supabase } from 'admin/lib/supabaseClient.js';\n\nconst BUCKET = 'sitemaps';\nconst MAX_ENTRIES = 30;\n\nasync function cleanupOldSnapshots() {\n  const { data, error } = await supabase.storage.from(BUCKET).list('', {\n    limit: 1000,\n    offset: 0,\n    sortBy: { column: 'created_at', order: 'desc' },\n  });\n\n  if (error) throw error;\n\n  const files = (data || []).filter(\n    (f: any) => f.name.endsWith('.xml') && !f.name.startsWith('latest')\n  );\n  const grouped = files.reduce<Record<string, typeof files>>((acc: any, file: any) => {\n    const base = file.name.split('-')[0]; // sitemap-index, sitemap-hreflang\n    if (!acc[base]) {\n      acc[base] = [];\n    }\n    acc[base].push(file);\n    return acc;\n  }, {});\n  for (const [base, items] of Object.entries(grouped)) {\n    const toDelete = (items as typeof files).slice(MAX_ENTRIES);\n    for (const file of toDelete) {\n      console.log(`🗑 Deleting old ${file.name}`);\n      await supabase.storage.from(BUCKET).remove([file.name]);\n    }\n  }\n\n  // also create/overwrite latest.xml\n  for (const [base, items] of Object.entries(grouped)) {\n    if (items.length > 0) {\n      const latest = items[0];\n      const latestName = `${base}-latest.xml`;\n      const { data: downloadUrl } = supabase.storage.from(BUCKET).getPublicUrl(latest.name);\n\n      if (downloadUrl) {\n        const res = await fetch(downloadUrl.publicUrl);\n        const buffer = await res.arrayBuffer();\n        await supabase.storage.from(BUCKET).upload(latestName, buffer, {\n          contentType: 'application/xml',\n          upsert: true,\n        });\n        console.log(`📌 Updated ${latestName}`);\n      }\n      // The code below is redundant and should be removed as it duplicates the upload logic inside the loop.\n      // INSERT_YOUR_REWRITE_HERE\n      console.log(`📌 Updated ${latestName}`);\n    }\n  }\n}\n\nawait cleanupOldSnapshots();\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/compare-sitemaps.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/detect-campaign-winners.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'run' is defined but never used.","line":9,"column":16,"nodeType":null,"messageId":"unusedVar","endLine":9,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import 'dotenv/config';\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n);\n\nasync function run() {\n  const { data: claims } = await supabase\n    .from('user_action_logs')\n    .select('*')\n    .eq('action_type', 'site_claimed')\n    .order('timestamp', { ascending: false })\n    .limit(50);\n\n  for (const log of claims || []) {\n    const { data: leadMatch } = await supabase\n      .from('leads')\n      .select('id, campaign_id, domain_id, business_name, email')\n      .eq('domain_id', log.domain_id)\n      .maybeSingle();\n\n    if (!leadMatch?.campaign_id) continue;\n\n    const { data: campaign } = await supabase\n      .from('campaigns')\n      .select('id, winner_lead_id, name, city')\n      .eq('id', leadMatch.campaign_id)\n      .maybeSingle();\n\n    if (campaign?.winner_lead_id) continue;\n\n    await supabase;\n    if (campaign) {\n      await supabase\n        .from('campaigns')\n        .update({ winner_lead_id: leadMatch.id })\n        .eq('id', campaign.id);\n\n      console.log(`🎉 ${leadMatch.business_name} won campaign ${campaign.name} (${campaign.city})`);\n\n      const subject = campaign ? `🏁 You Won: ${campaign.name}` : '🏁 You Won!';\n      const body = campaign\n        ? `Hey ${leadMatch.business_name}, you were the first to claim your site in ${campaign.name} (${campaign.city}). Congrats!\n          \nYour site is live at: https://${log.domain_id || 'your-site.com'}`\n        : `Hey ${leadMatch.business_name}, you were the first to claim your site. Congrats!\n\nYour site is live at: https://${log.domain_id || 'your-site.com'}`;\n\n      console.log('📧 MOCK EMAIL');\n      console.log('To:', leadMatch.email || '(no email)');\n      console.log('Subject:', subject);\n      console.log('Body:', body);\n      console.log('---');\n\n      await supabase.from('user_action_logs').insert([\n        {\n          lead_id: leadMatch.id,\n          domain_id: leadMatch.domain_id,\n          action_type: 'campaign_win',\n          triggered_by: 'campaign_bot',\n          notes: `Won ${campaign.name}`,\n        },\n      ]);\n    }\n  } // Closing bracket for the main function or block\n\n  run();\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/enrich-campaigns-latlon.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··process.env.SUPABASE_URL!,⏎··process.env.SUPABASE_SERVICE_ROLE_KEY!⏎` with `process.env.SUPABASE_URL!,·process.env.SUPABASE_SERVICE_ROLE_KEY!`","line":15,"column":31,"nodeType":null,"messageId":"replace","endLine":18,"endColumn":1,"fix":{"range":[480,551],"text":"process.env.SUPABASE_URL!, process.env.SUPABASE_SERVICE_ROLE_KEY!"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// scripts/enrich-leads-latlon.ts\n\n// Run dry-run like:\n// DRY_RUN=true ts-node scripts/enrich-leads-latlon.ts\n// NODE_OPTIONS=--loader=ts-node/esm DRY_RUN=true ts-node scripts/enrich-leads-latlon.ts\n\nimport { createClient } from '@supabase/supabase-js';\nimport dotenv from 'dotenv';\nimport { getLatLonForCityState } from '../lib/utils/geocode.js';\nimport fs from 'fs';\nimport { getDistanceMiles } from '../lib/utils/distance.js';\n\ndotenv.config();\n\nconst supabase = createClient(\n  process.env.SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n);\n\nconst DRY_RUN = process.env.DRY_RUN === 'true';\nconst RATE_LIMIT_MS = 1100;\nconst LOG_FILE = 'rollback-log.json';\n\ntype EnrichedResult = {\n  id: string;\n  lat: number;\n  lon: number;\n};\n\nasync function enrichLeadCoordinates() {\n  const { data: leads, error } = await supabase\n    .from('leads')\n    .select('id, business_name, address_city, address_state, address_lat, address_lon');\n\n  if (error) {\n    console.error('Failed to fetch leads:', error);\n    return;\n  }\n\n  const enriched: EnrichedResult[] = [];\n  const failedCities: { id: string; city: string; state: string | null }[] = [];\n  let totalProcessed = 0;\n\n  for (const lead of leads || []) {\n    const city = lead.address_city;\n    const state = lead.address_state;\n    if (!city || lead.address_lat !== null || lead.address_lon !== null) continue;\n\n    let coords: { lat: number; lon: number } | null = null;\n    try {\n      for (let attempt = 1; attempt <= 3; attempt++) {\n        try {\n          coords = await getLatLonForCityState(city, state);\n          if (coords) break;\n        } catch {\n          console.warn(`🌐 Attempt ${attempt} failed for ${city}, ${state}`);\n        }\n        await new Promise((res) => setTimeout(res, RATE_LIMIT_MS * attempt));\n      }\n    } catch (e) {\n      console.warn(`🌐 Failed to geocode city: ${city}, ${state}`, e);\n    }\n\n    if (!coords) {\n      failedCities.push({ id: lead.id, city, state });\n      continue;\n    }\n\n    const dist = getDistanceMiles(coords.lat, coords.lon, coords.lat, coords.lon);\n    console.log(`${lead.id} → ${coords.lat}, ${coords.lon} • ${dist.toFixed(1)} mi`);\n\n    if (!DRY_RUN) {\n      const { error: updateError } = await supabase\n        .from('leads')\n        .update({ address_lat: coords.lat, address_lon: coords.lon })\n        .eq('id', lead.id);\n\n      if (!updateError) {\n        enriched.push({ id: lead.id, lat: coords.lat, lon: coords.lon });\n        console.log(`✅ Updated ${lead.business_name}`);\n      } else {\n        console.warn(`❌ Failed to update ${lead.id}`, updateError);\n      }\n\n      await new Promise((res) => setTimeout(res, RATE_LIMIT_MS));\n      totalProcessed++;\n\n      if (totalProcessed % 10 === 0) {\n        console.log('⏸ Pausing briefly after 10 leads...');\n        await new Promise((res) => setTimeout(res, 5000));\n      }\n    }\n  }\n\n  if (!DRY_RUN) {\n    fs.writeFileSync(LOG_FILE, JSON.stringify(enriched, null, 2));\n    console.log(`📦 Saved enriched leads to ${LOG_FILE}`);\n  }\n\n  if (!DRY_RUN && failedCities.length > 0) {\n    fs.writeFileSync('failed-cities.json', JSON.stringify(failedCities, null, 2));\n    console.log(`⚠️  Saved ${failedCities.length} failed lookups to failed-cities.json`);\n  }\n\n  console.log(`🎉 Done. Processed ${totalProcessed} leads.`);\n}\n\nenrichLeadCoordinates();\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/enrich-leads-latlon.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'getDistanceMiles' is defined but never used.","line":11,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":11,"endColumn":26},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··process.env.SUPABASE_URL!,⏎··process.env.SUPABASE_SERVICE_ROLE_KEY!⏎` with `process.env.SUPABASE_URL!,·process.env.SUPABASE_SERVICE_ROLE_KEY!`","line":15,"column":31,"nodeType":null,"messageId":"replace","endLine":18,"endColumn":1,"fix":{"range":[480,551],"text":"process.env.SUPABASE_URL!, process.env.SUPABASE_SERVICE_ROLE_KEY!"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// scripts/enrich-leads-latlon.ts\n\n// Run dry-run like:\n// DRY_RUN=true ts-node scripts/enrich-leads-latlon.ts\n// NODE_OPTIONS=--loader=ts-node/esm DRY_RUN=true ts-node scripts/enrich-leads-latlon.ts\n\nimport { createClient } from '@supabase/supabase-js';\nimport dotenv from 'dotenv';\nimport { getLatLonForCityState } from '../lib/utils/geocode.js';\nimport fs from 'fs';\nimport { getDistanceMiles } from '../lib/leads/distance.js';\n\ndotenv.config();\n\nconst supabase = createClient(\n  process.env.SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n);\n\nconst DRY_RUN = process.env.DRY_RUN === 'true';\nconst RATE_LIMIT_MS = 1100;\nconst LOG_FILE = 'rollback-log.json';\n\ntype EnrichedResult = {\n  id: string;\n  lat: number;\n  lon: number;\n};\n\nasync function enrichLeadCoordinates() {\n  const { data: leads, error } = await supabase\n    .from('leads')\n    .select('id, business_name, address_city, address_state, address_lat, address_lon');\n\n  if (error) {\n    console.error('Failed to fetch leads:', error);\n    return;\n  }\n\n  const enriched: EnrichedResult[] = [];\n  const failedCities: { id: string; city: string; state: string | null }[] = [];\n  let totalProcessed = 0;\n\n  for (const lead of leads || []) {\n    const city = lead.address_city;\n    const state = lead.address_state;\n    if (!city || lead.address_lat !== null || lead.address_lon !== null) continue;\n\n    let coords: { lat: number; lon: number } | null = null;\n    try {\n      for (let attempt = 1; attempt <= 3; attempt++) {\n        try {\n          coords = await getLatLonForCityState(city, state);\n          if (coords) break;\n        } catch {\n          console.warn(`🌐 Attempt ${attempt} failed for ${city}, ${state}`);\n        }\n        await new Promise((res) => setTimeout(res, RATE_LIMIT_MS * attempt));\n      }\n    } catch (e) {\n      console.warn(`🌐 Failed to geocode city: ${city}, ${state}`, e);\n    }\n\n    if (!coords) {\n      failedCities.push({ id: lead.id, city, state });\n      continue;\n    }\n\n    console.log(`${lead.id} → ${coords.lat}, ${coords.lon}`);\n\n    if (!DRY_RUN) {\n      const { error: updateError } = await supabase\n        .from('leads')\n        .update({ address_lat: coords.lat, address_lon: coords.lon })\n        .eq('id', lead.id);\n\n      if (!updateError) {\n        enriched.push({ id: lead.id, lat: coords.lat, lon: coords.lon });\n        console.log(`✅ Updated ${lead.business_name}`);\n      } else {\n        console.warn(`❌ Failed to update ${lead.id}`, updateError);\n      }\n\n      await new Promise((res) => setTimeout(res, RATE_LIMIT_MS));\n      totalProcessed++;\n\n      if (totalProcessed % 10 === 0) {\n        console.log('⏸ Pausing briefly after 10 leads...');\n        await new Promise((res) => setTimeout(res, 5000));\n      }\n    }\n  }\n\n  if (!DRY_RUN) {\n    fs.writeFileSync(LOG_FILE, JSON.stringify(enriched, null, 2));\n    console.log(`📦 Saved enriched leads to ${LOG_FILE}`);\n  }\n\n  if (!DRY_RUN && failedCities.length > 0) {\n    fs.writeFileSync('failed-cities.json', JSON.stringify(failedCities, null, 2));\n    console.log(`⚠️  Saved ${failedCities.length} failed lookups to failed-cities.json`);\n  }\n\n  console.log(`🎉 Done. Processed ${totalProcessed} leads.`);\n}\n\nenrichLeadCoordinates();\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/export-analytics.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/export-audit-csv.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/exportGeoCache.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/filter-lint-report.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/followup-second-chance.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/gen-openapi.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'fs' is defined but never used.","line":4,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":10}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { OpenAPIGenerator } from '@asteasolutions/zod-to-openapi';\n\nimport { z } from 'zod';\nimport fs from 'node:fs';\n\ntype RouteSpec = {\n  method: 'GET' | 'POST' | 'PUT' | 'DELETE';\n  path: string;\n  summary?: string;\n  description?: string;\n  tags?: string[];\n  input?: z.ZodTypeAny;\n  output?: z.ZodTypeAny;\n};\n\nexport function generateOpenApi(routes: RouteSpec[], title = 'API', version = '1.0.0') {\n  const generator = new OpenAPIGenerator(\n    {\n      openapi: '3.0.0',\n      info: { title, version },\n      paths: {},\n    },\n    'json'\n  );\n\n  for (const route of routes) {\n    generator.registerPath({\n      method: route.method.toLowerCase() as any,\n      path: route.path,\n      summary: route.summary,\n      description: route.description,\n      tags: route.tags,\n      request: route.input\n        ? {\n            body: {\n              content: {\n                'application/json': {\n                  schema: route.input,\n                },\n              },\n            },\n          }\n        : undefined,\n      responses: {\n        200: {\n          description: 'Success',\n          content: {\n            'application/json': {\n              schema: route.output || z.any(),\n            },\n          },\n        },\n      },\n    });\n  }\n\n  return generator.generateDocument();\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/generate-security-report.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/generate-sitemap.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/generate-thumbnails.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/generate-weekly-report.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/geo-alerts.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'fetch' is defined but never used.","line":2,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { createClient } from '@supabase/supabase-js';\nimport fetch from 'node-fetch';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n);\nconst { data, error } = await supabase.from('token_logs').select('*');\n\nif (error) {\n  console.error('Failed to load token logs');\n  process.exit(1);\n}\n\nconst byToken: Record<string, Set<string>> = {};\nfor (const log of data) {\n  if (!log.token_hash || !log.ip_location) continue;\n  if (!byToken[log.token_hash]) byToken[log.token_hash] = new Set();\n  byToken[log.token_hash].add(log.ip_location);\n}\n\nfor (const [hash, locations] of Object.entries(byToken)) {\n  if (locations.size > 1) {\n    console.log(`⚠️ Geo anomaly: Token ${hash} used from ${Array.from(locations).join(', ')}`);\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/index-blocks.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎··process.env.SUPABASE_URL!,⏎··process.env.SUPABASE_SERVICE_ROLE_KEY!⏎` with `process.env.SUPABASE_URL!,·process.env.SUPABASE_SERVICE_ROLE_KEY!`","line":7,"column":31,"nodeType":null,"messageId":"replace","endLine":10,"endColumn":1,"fix":{"range":[164,235],"text":"process.env.SUPABASE_URL!, process.env.SUPABASE_SERVICE_ROLE_KEY!"}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `⏎········?·await·res.json()⏎·······` with `·?·await·res.json()`","line":67,"column":60,"nodeType":null,"messageId":"replace","endLine":69,"endColumn":8,"fix":{"range":[1784,1819],"text":" ? await res.json()"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"import { createClient } from '@supabase/supabase-js';\nimport fetch from 'node-fetch';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nconst supabase = createClient(\n  process.env.SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n);\n\nconst API_ENDPOINT = 'http://localhost:3000/api/blocks/index'; // ✅ Use your local or deployed endpoint\n\ntype BlockInput = {\n  id: string;\n  text: string;\n  type: string;\n  industry: string;\n  tone?: string;\n};\n\nasync function fetchBlocksFromSupabase(): Promise<BlockInput[]> {\n  const { data: templates, error } = await supabase.from('templates').select('*');\n\n  if (error) throw new Error(`Supabase error: ${error.message}`);\n\n  const blocks: BlockInput[] = [];\n\n  for (const template of templates) {\n    const industry = template.industry || 'default';\n    const pages = template.data?.pages || [];\n\n    for (const page of pages) {\n      for (let i = 0; i < (page.content_blocks || []).length; i++) {\n        const block = page.content_blocks[i];\n        const id = `template-${template.id}-page-${page.slug}-block-${i}`;\n\n        blocks.push({\n          id,\n          text: JSON.stringify(block),\n          type: block.type || 'unknown',\n          industry,\n          tone: 'neutral',\n        });\n      }\n    }\n  }\n\n  return blocks;\n}\n\nasync function postBlocksToApi(blocks: BlockInput[]) {\n  const batchSize = 50;\n\n  for (let i = 0; i < blocks.length; i += batchSize) {\n    const batch = blocks.slice(i, i + batchSize);\n\n    const res = await fetch(API_ENDPOINT, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ blocks: batch }),\n    });\n\n    const contentType = res.headers.get('content-type') || '';\n\n    if (!res.ok) {\n      const body = contentType.includes('application/json')\n        ? await res.json()\n        : await res.text();\n\n      console.error(`❌ Failed to index batch ${i}–${i + batch.length - 1}:`, body);\n      throw new Error(`Request failed with status ${res.status}`);\n    }\n\n    console.log(`✅ Indexed ${batch.length} blocks (batch ${i / batchSize + 1})`);\n  }\n}\n\n(async () => {\n  try {\n    const blocks = await fetchBlocksFromSupabase();\n    console.log(`Preparing to index ${blocks.length} blocks...`);\n    await postBlocksToApi(blocks);\n    console.log('🎉 All blocks indexed successfully.');\n  } catch (err: any) {\n    console.error('💥 Error during indexing:', err.message || err);\n  }\n})();\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/inspect-vector-index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/lint-digest.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'path' is defined but never used.","line":2,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":12},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'__dirname' is assigned a value but never used.","line":13,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":13,"endColumn":16}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { readFileSync, writeFileSync, existsSync } from 'fs';\nimport path from 'node:path';\nimport { fileURLToPath } from 'url';\nimport { dirname } from 'path';\n\nconsole.log('🟡 lint-digest.ts: starting analysis...');\n\nif (typeof process !== 'undefined' && process.argv[1] === fileURLToPath(import.meta.url)) {\n  console.log('🟢 lint-digest.ts: running as main module');\n}\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\n\n// Only run if executed directly\nif (process.argv[1] === __filename) {\n  console.log('🚀 Starting lint-digest.ts...');\n\n  const lintFile = 'lint-report.json';\n  const txtOut = 'lint-summary.txt';\n  const mdOut = 'lint-summary.md';\n\n  if (!existsSync(lintFile)) {\n    console.error(`❌ Missing ${lintFile}. Make sure ESLint ran correctly.`);\n    process.exit(1);\n  }\n\n  let results: any[];\n  try {\n    const raw = readFileSync(lintFile, 'utf-8');\n    results = JSON.parse(raw);\n    if (!Array.isArray(results)) throw new Error('Expected an array of lint results');\n  } catch (err) {\n    console.error(`❌ Failed to read or parse ${lintFile}:`, err);\n    process.exit(1);\n  }\n\n  type Message = {\n    line: number;\n    column: number;\n    message: string;\n    ruleId: string | null;\n    severity: 'error' | 'warning';\n  };\n\n  type LintEntry = {\n    file: string;\n    errors: number;\n    warnings: number;\n    total: number;\n    messages: Message[];\n  };\n\n  function getTopFolder(filePath: string) {\n    const parts = filePath.split('/');\n    const idx = parts.findIndex((p) => p === 'quicksites-v2');\n    return parts[idx + 1] || 'root';\n  }\n\n  const filtered: LintEntry[] = results\n    .filter(\n      (entry: any) =>\n        entry.filePath.includes('/quicksites-v2/') &&\n        !entry.filePath.includes('/.venv/') &&\n        !entry.filePath.includes('/node_modules/')\n    )\n    .map((entry: any) => ({\n      file: entry.filePath,\n      errors: entry.errorCount,\n      warnings: entry.warningCount,\n      total: entry.errorCount + entry.warningCount,\n      messages: entry.messages.map((m: any) => ({\n        line: m.line,\n        column: m.column,\n        message: m.message,\n        ruleId: m.ruleId,\n        severity: m.severity === 2 ? 'error' : 'warning',\n      })),\n    }))\n    .filter((entry: LintEntry) => entry.total > 0);\n\n  const grouped = new Map<string, LintEntry[]>();\n  for (const entry of filtered) {\n    const folder = getTopFolder(entry.file);\n    if (!grouped.has(folder)) grouped.set(folder, []);\n    grouped.get(folder)!.push(entry);\n  }\n\n  for (const entries of grouped.values()) {\n    entries.sort((a, b) => {\n      if (a.errors > 0 && b.errors === 0) return -1;\n      if (a.errors === 0 && b.errors > 0) return 1;\n      return b.total - a.total;\n    });\n  }\n\n  // Write .txt summary\n  const txtLines: string[] = [];\n  txtLines.push(`Found ${filtered.length} files with issues:\\n`);\n  for (const [folder, entries] of [...grouped.entries()].sort()) {\n    txtLines.push(`${folder}/`);\n    for (const entry of entries) {\n      txtLines.push(\n        `  ${entry.total} issues (${entry.errors} errors, ${entry.warnings} warnings): ${entry.file}`\n      );\n    }\n    txtLines.push('');\n  }\n  console.log('📄 Writing lint-summary.txt...');\n  writeFileSync(txtOut, txtLines.join('\\n'));\n\n  // Write .md summary\n  const mdLines: string[] = [];\n  mdLines.push(`# ESLint Report`);\n  mdLines.push(`Found **${filtered.length}** files with issues.\\n`);\n  for (const [folder, entries] of [...grouped.entries()].sort()) {\n    mdLines.push(`## 📁 \\`${folder}/\\``);\n    for (const entry of entries) {\n      mdLines.push(`### 🔹 \\`${entry.file}\\``);\n      mdLines.push(\n        `- **${entry.total} issues**: ${entry.errors} error(s), ${entry.warnings} warning(s)\\n`\n      );\n      for (const m of entry.messages) {\n        mdLines.push(\n          `  - [${m.severity}] Line ${m.line}:${m.column} – ${m.message} (${m.ruleId || 'unknown'})`\n        );\n      }\n      mdLines.push('');\n    }\n  }\n  console.log('📄 Writing lint-summary.md...');\n  writeFileSync(mdOut, mdLines.join('\\n'));\n\n  // Final check: confirm both outputs exist\n  if (!existsSync(txtOut) || !existsSync(mdOut)) {\n    console.error('❌ Failed to write summary files.');\n    process.exit(1);\n  }\n\n  console.log(`✅ Summary complete — ${grouped.size} folders, ${filtered.length} files`);\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/lint-summary-markdown.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'path' is defined but never used.","line":2,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":12},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'folder' is assigned a value but never used.","line":60,"column":13,"nodeType":null,"messageId":"unusedVar","endLine":60,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { readFileSync, writeFileSync } from 'fs';\nimport path from 'node:path';\n\nconst raw = readFileSync('lint-report.json', 'utf-8');\nconst results = JSON.parse(raw);\n\ntype Message = {\n  line: number;\n  column: number;\n  message: string;\n  ruleId: string | null;\n  severity: 'error' | 'warning';\n};\n\ntype LintEntry = {\n  file: string;\n  errors: number;\n  warnings: number;\n  total: number;\n  messages: Message[];\n};\n\nfunction getTopFolder(filePath: string) {\n  const parts = filePath.split('/');\n  const idx = parts.findIndex((p) => p === 'quicksites-v2');\n  return parts[idx + 1] || 'root';\n}\n\nconst filtered: LintEntry[] = results\n  .filter(\n    (entry: any) =>\n      entry.filePath.includes('/quicksites-v2/') &&\n      !entry.filePath.includes('/.venv/') &&\n      !entry.filePath.includes('/node_modules/')\n  )\n  .map((entry: any) => ({\n    file: entry.filePath,\n    errors: entry.errorCount,\n    warnings: entry.warningCount,\n    total: entry.errorCount + entry.warningCount,\n    messages: entry.messages.map((m: any) => ({\n      line: m.line,\n      column: m.column,\n      message: m.message,\n      ruleId: m.ruleId,\n      severity: m.severity === 2 ? 'error' : 'warning',\n    })),\n  }))\n  .filter((entry: LintEntry) => entry.total > 0);\n\nconst grouped = new Map<string, LintEntry[]>();\n\nfor (const entry of filtered) {\n  const folder = getTopFolder(entry.file);\n  if (!grouped.has(folder)) grouped.set(folder, []);\n  grouped.get(folder)!.push(entry);\n}\n\n// Sort entries in each folder: errors first, then by total issues desc\nfor (const [folder, entries] of grouped.entries()) {\n  entries.sort((a, b) => {\n    if (a.errors > 0 && b.errors === 0) return -1;\n    if (a.errors === 0 && b.errors > 0) return 1;\n    return b.total - a.total;\n  });\n}\n\nconst lines: string[] = [];\n\nlines.push(`# ESLint Report`);\nlines.push(`Found **${filtered.length}** files with issues.\\n`);\n\nfor (const [folder, entries] of [...grouped.entries()].sort()) {\n  lines.push(`## 📁 \\`${folder}/\\``);\n  for (const entry of entries) {\n    lines.push(`### 🔹 \\`${entry.file}\\``);\n    lines.push(\n      `- **${entry.total} issues**: ${entry.errors} error(s), ${entry.warnings} warning(s)\\n`\n    );\n    for (const m of entry.messages) {\n      lines.push(\n        `  - [${m.severity}] Line ${m.line}:${m.column} – ${m.message} (${m.ruleId || 'unknown'})`\n      );\n    }\n    lines.push('');\n  }\n}\n\nwriteFileSync('lint-summary.md', lines.join('\\n'));\nconsole.log('✅ Markdown report written to lint-summary.md');\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/lint-summary.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'path' is defined but never used.","line":2,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":12},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'folder' is assigned a value but never used.","line":44,"column":13,"nodeType":null,"messageId":"unusedVar","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { readFileSync, writeFileSync } from 'fs';\nimport path from 'node:path';\n\nconst raw = readFileSync('lint-report.json', 'utf-8');\nconst results = JSON.parse(raw);\n\ntype LintEntry = {\n  file: string;\n  errors: number;\n  warnings: number;\n  total: number;\n};\n\nfunction getTopFolder(filePath: string) {\n  const parts = filePath.split('/');\n  const idx = parts.findIndex((p) => p === 'quicksites-v2');\n  return parts[idx + 1] || 'root';\n}\n\nconst filtered: LintEntry[] = results\n  .filter(\n    (entry: any) =>\n      entry.filePath.includes('/quicksites-v2/') &&\n      !entry.filePath.includes('/.venv/') &&\n      !entry.filePath.includes('/node_modules/')\n  )\n  .map((entry: any) => ({\n    file: entry.filePath,\n    errors: entry.errorCount,\n    warnings: entry.warningCount,\n    total: entry.errorCount + entry.warningCount,\n  }))\n  .filter((entry: LintEntry) => entry.total > 0);\n\nconst grouped = new Map<string, LintEntry[]>();\n\nfor (const entry of filtered) {\n  const folder = getTopFolder(entry.file);\n  if (!grouped.has(folder)) grouped.set(folder, []);\n  grouped.get(folder)!.push(entry);\n}\n\n// Sort each group: files with errors first, then by total issues desc\nfor (const [folder, entries] of grouped.entries()) {\n  entries.sort((a, b) => {\n    if (a.errors > 0 && b.errors === 0) return -1;\n    if (a.errors === 0 && b.errors > 0) return 1;\n    return b.total - a.total;\n  });\n}\n\nconst output: string[] = [];\n\noutput.push(`Found ${filtered.length} files with issues:\\n`);\n\nfor (const [folder, entries] of [...grouped.entries()].sort()) {\n  output.push(`📁 ${folder}/`);\n  for (const entry of entries) {\n    output.push(\n      `  ${entry.total} issues (${entry.errors} errors, ${entry.warnings} warnings): ${entry.file}`\n    );\n  }\n  output.push(''); // blank line between folders\n}\n\nwriteFileSync('lint-summary.txt', output.join('\\n'));\nconsole.log('✅ Summary written to lint-summary.txt');\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/load-query-usecases.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/migrate-remaining-api.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/modernize-api-files.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'isMiddleware' is assigned a value but never used.","line":25,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":25,"endColumn":21},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'isRoute' is assigned a value but never used.","line":26,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":26,"endColumn":16}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import fs from 'node:fs';\nimport path from 'node:path';\n\nconst PROJECT_ROOT = process.cwd();\nconst TARGET_EXT = ['.ts'];\nconst SEARCH_DIRS = ['app/api', 'app', 'pages', 'admin'];\n\nconst args = process.argv.slice(2);\nconst makeBackup = args.includes('--backup');\n\nfunction walk(dir: string): string[] {\n  if (!fs.existsSync(dir)) return [];\n  const entries = fs.readdirSync(dir, { withFileTypes: true });\n  return entries.flatMap((entry) => {\n    const full = path.join(dir, entry.name);\n    return entry.isDirectory() ? walk(full) : [full];\n  });\n}\n\nfunction cleanFile(filePath: string) {\n  let content = fs.readFileSync(filePath, 'utf-8');\n  const original = content;\n  let changed = false;\n\n  const isMiddleware = filePath.endsWith('middleware.ts');\n  const isRoute = filePath.endsWith('route.ts');\n\n  // Remove next/server imports\n  content = content.replace(\n    /import\\s+{[^}]*Next(Request|Response)[^}]*}\\s+from\\s+['\"]next\\/server['\"];\\s*/g,\n    () => {\n      changed = true;\n      return '';\n    }\n  );\n\n  // Fix req.json() to await req.json()\n  content = content.replace(/([^a-zA-Z0-9_])req\\.json\\s*\\(\\s*\\)/g, (match, prefix) => {\n    if (match.includes('await')) return match;\n    changed = true;\n    return `${prefix}await req.json()`;\n  });\n\n  // Fix route signatures (GET, POST, etc.)\n  content = content.replace(\n    /export\\s+async\\s+function\\s+(GET|POST|PUT|PATCH|DELETE)\\s*\\(\\s*req\\s*\\)/g,\n    (_match, method) => {\n      changed = true;\n      return `export async function ${method}(req: Request): Promise<Response>`;\n    }\n  );\n\n  // Fix middleware signature\n  content = content.replace(/export\\s+function\\s+middleware\\s*\\(\\s*req\\s*\\)/g, () => {\n    changed = true;\n    return `export function middleware(req: Request): Response`;\n  });\n\n  // Fix NextResponse.json\n  content = content.replace(/NextResponse\\.json\\s*\\(/g, () => {\n    changed = true;\n    return 'json(';\n  });\n\n  // Fix NextResponse.next() → new Response()\n  content = content.replace(/NextResponse\\.next\\s*\\(\\s*\\)/g, () => {\n    changed = true;\n    return 'new Response()';\n  });\n\n  // Add runtime = edge if missing\n  if (!/export\\s+const\\s+runtime\\s*=/.test(content)) {\n    content = `export const runtime = 'experimental-edge';\\n\\n` + content;\n    changed = true;\n  }\n\n  // Add import { json } if needed\n  if (changed && !content.includes(\"from '@/lib/api/json'\")) {\n    content = content.replace(\n      /(^|\\n)(import .+?;)+/s,\n      `$&\\nimport { json } from '@/lib/api/json';`\n    );\n  }\n\n  if (changed && content !== original) {\n    if (makeBackup) {\n      fs.writeFileSync(filePath + '.bak', original, 'utf8');\n    }\n    fs.writeFileSync(filePath, content, 'utf8');\n    console.log(`✅ Modernized: ${filePath}`);\n  }\n}\n\nconst allFiles = SEARCH_DIRS.flatMap((dir) =>\n  walk(path.join(PROJECT_ROOT, dir)).filter(\n    (file) =>\n      TARGET_EXT.includes(path.extname(file)) &&\n      (file.endsWith('route.ts') || file.endsWith('middleware.ts'))\n  )\n);\n\nif (allFiles.length === 0) {\n  console.log('⚠️  No matching files found.');\n  process.exit(0);\n}\n\nconsole.log(`🔧 Modernizing ${allFiles.length} file(s)...\\n`);\nallFiles.forEach(cleanFile);\nconsole.log('\\n🏁 Done.');\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/modernize-api-json.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'code' is defined but never used. Allowed unused args must match /^_/u.","line":41,"column":81,"nodeType":null,"messageId":"unusedVar","endLine":41,"endColumn":85}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import fs from 'node:fs';\nimport path from 'node:path';\n\nconst PROJECT_ROOT = process.cwd();\nconst TARGET_EXT = ['.ts', '.tsx'];\nconst SEARCH_DIRS = ['app', 'pages', 'admin', 'src'];\n\nconst args = process.argv.slice(2);\nconst isPreview = args.includes('--preview');\nconst isBackup = args.includes('--backup');\n\nfunction walk(dir: string): string[] {\n  const entries = fs.readdirSync(dir, { withFileTypes: true });\n  return entries.flatMap((entry) => {\n    const full = path.join(dir, entry.name);\n    return entry.isDirectory() ? walk(full) : [full];\n  });\n}\n\nfunction replaceInFile(filePath: string) {\n  let content = fs.readFileSync(filePath, 'utf-8');\n  const original = content;\n  let changed = false;\n\n  // Remove NextResponse import\n  content = content.replace(\n    /import\\s+{[^}]*NextResponse[^}]*}\\s+from\\s+['\"]next\\/server['\"];/g,\n    () => {\n      changed = true;\n      return '';\n    }\n  );\n\n  // Replace NextResponse.json(...) → json(...)\n  content = content.replace(/NextResponse\\.json\\s*\\(/g, () => {\n    changed = true;\n    return 'json(';\n  });\n\n  // Replace res.status(###).json(...) → json(..., ###)\n  content = content.replace(/res\\.status\\s*\\(\\s*(\\d{3})\\s*\\)\\.json\\s*\\(/g, (_m, code) => {\n    changed = true;\n    return `json(`; // Could inline status later\n  });\n\n  // Replace res.json(...) → json(...)\n  content = content.replace(/res\\.json\\s*\\(/g, () => {\n    changed = true;\n    return 'json(';\n  });\n\n  // Ensure req.json() → await req.json()\n  content = content.replace(/([^a-zA-Z0-9_])req\\.json\\s*\\(\\s*\\)/g, (match, prefix) => {\n    if (match.includes('await')) return match;\n    changed = true;\n    return `${prefix}await req.json()`;\n  });\n\n  // Add json import if needed\n  if (changed && !content.includes(\"from '@/lib/api/json'\")) {\n    content = content.replace(\n      /(^|\\n)(import .+?;)+/s,\n      `$&\\nimport { json } from '@/lib/api/json';`\n    );\n  }\n\n  if (changed && content !== original) {\n    if (isPreview) {\n      console.log(`🔍 [PREVIEW] Would update: ${filePath}`);\n    } else {\n      if (isBackup) {\n        fs.writeFileSync(filePath + '.bak', original, 'utf-8');\n      }\n      fs.writeFileSync(filePath, content, 'utf-8');\n      console.log(`✅ Updated: ${filePath}`);\n    }\n  }\n}\n\nlet updatedCount = 0;\nfor (const dir of SEARCH_DIRS) {\n  const fullDir = path.join(PROJECT_ROOT, dir);\n  if (!fs.existsSync(fullDir)) continue;\n\n  const files = walk(fullDir).filter((f) => TARGET_EXT.includes(path.extname(f)));\n\n  for (const file of files) {\n    const before = fs.readFileSync(file, 'utf-8');\n    replaceInFile(file);\n    const after = fs.readFileSync(file, 'utf-8');\n    if (before !== after) updatedCount++;\n  }\n}\n\nconsole.log(`\\n🏁 Done. ${isPreview ? 'Would update' : 'Updated'} ${updatedCount} file(s).`);\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/monitor-campaigns.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/notify-webhooks.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'path' is defined but never used.","line":2,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":12}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import fs from 'node:fs';\nimport path from 'node:path';\nimport fetch from 'node-fetch';\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n);\n\nconst logPath = './reports/activity.log';\nconst contents = fs.readFileSync(logPath, 'utf-8').trim().split('\\n');\nconst lastLine = contents.at(-1) || '';\n\nif (!lastLine.includes('Exported')) {\n  console.log('No export event found, skipping webhook');\n  process.exit(0);\n}\n\nconst { data, error } = await supabase.from('report_webhooks').select('*').eq('enabled', true);\n\nif (error) {\n  console.error('Error fetching webhooks', error);\n  process.exit(1);\n}\n\nfor (const hook of data) {\n  try {\n    await fetch(hook.url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        ...(hook.secret_token && {\n          Authorization: `Bearer ${hook.secret_token}`,\n        }),\n      },\n      body: JSON.stringify({\n        event: 'export.success',\n        summary: lastLine,\n        timestamp: new Date().toISOString(),\n      }),\n    });\n    console.log(`📤 Notified ${hook.url}`);\n  } catch (e: any) {\n    console.error(`❌ Failed to notify ${hook.url}:`, e instanceof Error ? e.message : String(e));\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/process-regeneration-queue.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'error' is assigned a value but never used.","line":11,"column":22,"nodeType":null,"messageId":"unusedVar","endLine":11,"endColumn":27}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import 'dotenv/config';\nimport { execSync } from 'child_process';\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n);\n\nasync function run() {\n  const { data: job, error } = await supabase\n    .from('regeneration_queue')\n    .select('*')\n    .eq('status', 'queued')\n    .order('created_at', { ascending: true })\n    .limit(1)\n    .maybeSingle();\n\n  if (!job) {\n    console.log('✅ No queued jobs.');\n    return;\n  }\n\n  console.log('🔄 Running job for:', job.domain);\n  await supabase\n    .from('regeneration_queue')\n    .update({ status: 'processing', started_at: new Date().toISOString() })\n    .eq('id', job.id);\n\n  try {\n    const cmd = `node ../init.js \"${job.city}\" \"${job.state}\" \"${job.template_id}\" --push-to-github`;\n    const output = execSync(cmd, { encoding: 'utf-8' });\n\n    await supabase\n      .from('regeneration_queue')\n      .update({\n        status: 'done',\n        finished_at: new Date().toISOString(),\n        log: output,\n      })\n      .eq('id', job.id);\n\n    await supabase.from('user_action_logs').insert([\n      {\n        domain_id: job.domain_id,\n        action_type: 'regeneration_complete',\n        triggered_by: job.triggered_by || 'queue_bot',\n      },\n    ]);\n\n    console.log('✅ Job complete.');\n  } catch (err: any) {\n    console.error('❌ Job failed:', err.message);\n\n    await supabase\n      .from('regeneration_queue')\n      .update({\n        status: 'error',\n        finished_at: new Date().toISOString(),\n        log: err.message,\n      })\n      .eq('id', job.id);\n  }\n}\n\nrun();\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/query-inspector.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/remove-next-imports-from-admin.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/rename-components-to-kebab.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/rename-ui-to-kebab.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/replace-component-imports-to-kebab.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'COMPONENT_ALIAS' is assigned a value but never used.","line":6,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":6,"endColumn":22}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import fs from 'node:fs';\nimport path from 'node:path';\n\nconst PROJECT_ROOT = path.resolve('.');\nconst FILE_EXTS = ['.ts', '.tsx', '.js', '.jsx'];\nconst COMPONENT_ALIAS = '@/components/';\n\nfunction toKebabCase(input: string): string {\n  return input\n    .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n    .replace(/([A-Z]+)([A-Z][a-z])/g, '$1-$2')\n    .toLowerCase();\n}\n\nfunction walk(dir: string, files: string[] = []) {\n  for (const entry of fs.readdirSync(dir)) {\n    const fullPath = path.join(dir, entry);\n    const stat = fs.statSync(fullPath);\n    if (stat.isDirectory()) {\n      walk(fullPath, files);\n    } else if (FILE_EXTS.includes(path.extname(fullPath))) {\n      files.push(fullPath);\n    }\n  }\n  return files;\n}\n\nfunction updateImportsToKebabCase() {\n  const files = walk(PROJECT_ROOT);\n  let updated = 0;\n\n  for (const file of files) {\n    let code = fs.readFileSync(file, 'utf-8');\n    const original = code;\n\n    // Replace '@/components/some-component' → '@/components/some-component'\n    code = code.replace(\n      /(['\"])@\\/components\\/((?:[A-Za-z0-9]+\\/)*)([A-Z][A-Za-z0-9]*)\\1/g,\n      (_, quote, pathPart, filePart) => {\n        return `${quote}@/components/${pathPart}${toKebabCase(filePart)}${quote}`;\n      }\n    );\n\n    if (code !== original) {\n      fs.writeFileSync(file, code, 'utf-8');\n      console.log(`📝 Updated imports in: ${path.relative(PROJECT_ROOT, file)}`);\n      updated++;\n    }\n  }\n\n  console.log(`\\n✅ Done. Updated ${updated} file(s).`);\n}\n\nupdateImportsToKebabCase();\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/replace-nextresponse-json.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/replace-ui-imports-to-kebab.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'TARGET_IMPORT_PREFIX' is assigned a value but never used.","line":6,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":6,"endColumn":27}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import fs from 'node:fs';\nimport path from 'node:path';\n\nconst PROJECT_ROOT = path.resolve('.');\nconst FILE_EXTS = ['.ts', '.tsx', '.js', '.jsx'];\nconst TARGET_IMPORT_PREFIX = '@/components/ui/';\n\nfunction isCodeFile(file: string) {\n  return FILE_EXTS.includes(path.extname(file));\n}\n\nfunction toKebabCase(str: string) {\n  return str\n    .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n    .replace(/([A-Z]+)([A-Z][a-z])/g, '$1-$2')\n    .toLowerCase();\n}\n\nfunction walk(dir: string, allFiles: string[] = []) {\n  const files = fs.readdirSync(dir);\n  for (const file of files) {\n    const fullPath = path.join(dir, file);\n    const stat = fs.statSync(fullPath);\n    if (stat.isDirectory()) {\n      walk(fullPath, allFiles);\n    } else if (isCodeFile(fullPath)) {\n      allFiles.push(fullPath);\n    }\n  }\n  return allFiles;\n}\n\nfunction updateImports() {\n  const files = walk(PROJECT_ROOT);\n  let count = 0;\n\n  for (const file of files) {\n    let content = fs.readFileSync(file, 'utf-8');\n    const original = content;\n\n    content = content.replace(\n      /from\\s+['\"]@\\/components\\/ui\\/([A-Z][A-Za-z0-9]+)(\\.tsx)?['\"]/g,\n      (_, compName) => {\n        const kebab = toKebabCase(compName);\n        count++;\n        return `from '@/components/ui/${kebab}'`;\n      }\n    );\n\n    if (content !== original) {\n      fs.writeFileSync(file, content, 'utf-8');\n      console.log(`✅ Updated imports in: ${file}`);\n    }\n  }\n\n  console.log(`\\n🔁 Rewrote ${count} imports to kebab-case.`);\n}\n\nupdateImports();\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/run-lint-report.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/scan-next-in-admin.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/second-chance-offers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/seedSampleTemplate.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/sign-report.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/slack-alert.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/templateLoader.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/test-routes.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/trigger-campaign-starts.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'error' is assigned a value but never used.","line":10,"column":28,"nodeType":null,"messageId":"unusedVar","endLine":10,"endColumn":33}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import 'dotenv/config';\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n);\n\nasync function run() {\n  const { data: campaigns, error } = await supabase\n    .from('campaigns')\n    .select('*')\n    .eq('status', 'upcoming')\n    .lte('starts_at', new Date().toISOString());\n\n  for (const campaign of campaigns || []) {\n    console.log(`🚦 Starting campaign: ${campaign.name}`);\n\n    await supabase.from('campaigns').update({ status: 'active' }).eq('id', campaign.id);\n\n    const { data: leads } = await supabase\n      .from('leads')\n      .select('*')\n      .in('id', campaign.lead_ids || []);\n\n    for (const lead of leads || []) {\n      await fetch(`${process.env.NEXT_PUBLIC_SITE_URL}/api/leads/send-claim`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ lead }),\n      });\n\n      await supabase.from('user_action_logs').insert([\n        {\n          lead_id: lead.id,\n          domain_id: lead.domain_id,\n          action_type: 'campaign_kickoff',\n          triggered_by: 'campaign_bot',\n        },\n      ]);\n    }\n  }\n}\n\nrun();\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/upload-diffs-markdown.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/upload-diffs.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/upload-screenshot.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/upload-sitemaps.timestamped.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/upload-sitemaps.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/visualize-routes.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'fileToRoute' is defined but never used.","line":12,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":12,"endColumn":21}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import glob from 'glob';\nimport path from 'node:path';\n\nconst pagesDir = path.join(process.cwd(), 'pages');\n\nconst files = glob.sync('**/*.tsx', {\n  cwd: pagesDir,\n  nodir: true,\n  ignore: ['_*.tsx', 'api/**', '404.tsx'],\n});\n\nfunction fileToRoute(file: string) {\n  const route = file\n    .replace(/\\/index\\.tsx$/, '/')\n    .replace(/\\.tsx$/, '')\n    .replace(/^index$/, '')\n    .replace(/\\/g/, '/');\n  return '/' + route;\n  console.log('='.repeat(40));\n  files\n    .map(fileToRoute)\n    .sort()\n    .forEach((route) => {\n      const indent = '  '.repeat(route.split('/').length - 2);\n      console.log(indent + '• ' + route);\n    });\n  console.log('='.repeat(40));\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/workers/screenshot-worker.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/workers/worker.block-qr.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'archiver' is defined but never used.","line":5,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":5,"endColumn":16},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'label' is assigned a value but never used.","line":10,"column":28,"nodeType":null,"messageId":"unusedVar","endLine":10,"endColumn":33},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'options' is assigned a value but never used.","line":10,"column":38,"nodeType":null,"messageId":"unusedVar","endLine":10,"endColumn":45}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// 🧵 Worker-friendly version of the /block-qr route\nimport { createCanvas } from 'canvas';\nimport QRCode from 'qrcode';\nimport fs from 'node:fs/promises';\nimport archiver from 'archiver';\nimport { parentPort, workerData } from 'worker_threads';\n\n// Simulate payload and QR logic here for off-main-thread execution.\nasync function run() {\n  const { blockId, handle, label, ...options } = workerData;\n  // You would re-import and reuse helpers here\n  const url = `https://quicksites.ai/world/${handle}#block-${blockId}`;\n  const canvas = createCanvas(512, 512);\n  await QRCode.toCanvas(canvas, url);\n  const buffer = canvas.toBuffer();\n  await fs.writeFile(`./output/${handle}-${blockId}.png`, buffer);\n  parentPort?.postMessage({ ok: true });\n}\nrun().catch((err) => parentPort?.postMessage({ error: err.message }));\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/write-hash-ledger.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/scripts/zip-pruned.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/styles/tokens.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/tailwind.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/test/jest.setup.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/tests/branding-test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/tests/dashboard-to-editor.spec.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/tests/mocks/mocks/mockSmartLinks.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/tests/ogSnapshot.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/tests/redirects.spec.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/tests/snapshot.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/tests/template-editor.spec.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/tests/visual-regression.spec.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/tools/cli/generate-site.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types/SmartLinkItem.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types/blocks.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types/campaign.types.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":2,"column":3,"nodeType":null,"messageId":"delete","endLine":2,"endColumn":5,"fix":{"range":[31,33],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":3,"column":1,"nodeType":null,"messageId":"replace","endLine":3,"endColumn":5,"fix":{"range":[45,49],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":4,"column":1,"nodeType":null,"messageId":"delete","endLine":4,"endColumn":3,"fix":{"range":[63,65],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":5,"column":3,"nodeType":null,"messageId":"delete","endLine":5,"endColumn":5,"fix":{"range":[83,85],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":6,"column":1,"nodeType":null,"messageId":"delete","endLine":6,"endColumn":3,"fix":{"range":[108,110],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":7,"column":1,"nodeType":null,"messageId":"replace","endLine":7,"endColumn":5,"fix":{"range":[138,142],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":8,"column":1,"nodeType":null,"messageId":"delete","endLine":8,"endColumn":3,"fix":{"range":[168,170],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":9,"column":1,"nodeType":null,"messageId":"delete","endLine":9,"endColumn":3,"fix":{"range":[198,200],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `··ends_at:·string;···` with `ends_at:·string;·`","line":10,"column":3,"nodeType":null,"messageId":"replace","endLine":10,"endColumn":24,"fix":{"range":[240,261],"text":"ends_at: string; "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":11,"column":1,"nodeType":null,"messageId":"replace","endLine":11,"endColumn":5,"fix":{"range":[278,282],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":12,"column":3,"nodeType":null,"messageId":"delete","endLine":12,"endColumn":5,"fix":{"range":[339,341],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":13,"column":1,"nodeType":null,"messageId":"replace","endLine":13,"endColumn":5,"fix":{"range":[362,366],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":14,"column":1,"nodeType":null,"messageId":"replace","endLine":14,"endColumn":5,"fix":{"range":[387,391],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":15,"column":3,"nodeType":null,"messageId":"delete","endLine":15,"endColumn":5,"fix":{"range":[448,450],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":16,"column":1,"nodeType":null,"messageId":"delete","endLine":16,"endColumn":3,"fix":{"range":[472,474],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":17,"column":3,"nodeType":null,"messageId":"delete","endLine":17,"endColumn":5,"fix":{"range":[501,503],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":18,"column":1,"nodeType":null,"messageId":"replace","endLine":18,"endColumn":5,"fix":{"range":[526,530],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":19,"column":1,"nodeType":null,"messageId":"replace","endLine":19,"endColumn":5,"fix":{"range":[554,558],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":20,"column":1,"nodeType":null,"messageId":"delete","endLine":20,"endColumn":3,"fix":{"range":[579,581],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":21,"column":1,"nodeType":null,"messageId":"delete","endLine":21,"endColumn":3,"fix":{"range":[584,586],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":20,"source":"export type CampaignType = {\n    id: string;\n    name: string;\n    city: string;\n    state?: string | null;\n    industry?: string | null;\n    city_lat?: number | null;\n    city_lon?: number | null;\n    starts_at: string; // ISO timestamp\n    ends_at: string;   // ISO timestamp\n    lead_ids?: string[]; // optional, used when submitting\n    created_at?: string;\n    updated_at?: string;\n    status: 'draft' | 'published' | 'paused' | 'archived';\n    silent_mode: boolean;\n    alt_domains: string[];\n    arc_offset_y?: number;\n    logo_offset_y?: number;\n    arc_radius?: number;\n  };\n  ","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types/cookies.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":8,"column":3,"nodeType":null,"messageId":"delete","endLine":8,"endColumn":5,"fix":{"range":[173,175],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":9,"column":1,"nodeType":null,"messageId":"replace","endLine":9,"endColumn":5,"fix":{"range":[190,194],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":10,"column":1,"nodeType":null,"messageId":"replace","endLine":10,"endColumn":5,"fix":{"range":[211,215],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":11,"column":1,"nodeType":null,"messageId":"replace","endLine":11,"endColumn":5,"fix":{"range":[232,236],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":12,"column":1,"nodeType":null,"messageId":"replace","endLine":12,"endColumn":5,"fix":{"range":[252,256],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":13,"column":1,"nodeType":null,"messageId":"delete","endLine":13,"endColumn":3,"fix":{"range":[276,278],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":14,"column":1,"nodeType":null,"messageId":"delete","endLine":14,"endColumn":3,"fix":{"range":[298,300],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":15,"column":1,"nodeType":null,"messageId":"delete","endLine":15,"endColumn":3,"fix":{"range":[340,342],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":16,"column":1,"nodeType":null,"messageId":"delete","endLine":16,"endColumn":3,"fix":{"range":[345,347],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":9,"source":"// types/cookies.ts\n\n/**\n * Shared CookieOptions type compatible with ResponseCookies.set()\n * Used in server actions or route handlers.\n */\nexport type CookieOptions = {\n    path?: string;\n    domain?: string;\n    maxAge?: number;\n    expires?: Date;\n    httpOnly?: boolean;\n    secure?: boolean;\n    sameSite?: 'lax' | 'strict' | 'none';\n  };\n  ","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types/domain.types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types/grid-presets.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types/grid.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":5,"column":3,"nodeType":null,"messageId":"delete","endLine":5,"endColumn":5,"fix":{"range":[111,113],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":6,"column":1,"nodeType":null,"messageId":"replace","endLine":6,"endColumn":5,"fix":{"range":[127,131],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":7,"column":1,"nodeType":null,"messageId":"replace","endLine":7,"endColumn":5,"fix":{"range":[146,150],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":8,"column":1,"nodeType":null,"messageId":"delete","endLine":8,"endColumn":3,"fix":{"range":[163,165],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":9,"column":1,"nodeType":null,"messageId":"delete","endLine":9,"endColumn":3,"fix":{"range":[180,182],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":10,"column":3,"nodeType":null,"messageId":"delete","endLine":10,"endColumn":5,"fix":{"range":[204,206],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····leads:·{·id:·string;·name:·string,·isClaimed:·boolean,·campaignId:·string,` with `··leads:·{·id:·string;·name:·string;·isClaimed:·boolean;·campaignId:·string;`","line":11,"column":1,"nodeType":null,"messageId":"replace","endLine":11,"endColumn":79,"fix":{"range":[223,301],"text":"  leads: { id: string; name: string; isClaimed: boolean; campaignId: string;"}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":12,"column":1,"nodeType":null,"messageId":"delete","endLine":12,"endColumn":3,"fix":{"range":[324,326],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":13,"column":1,"nodeType":null,"messageId":"delete","endLine":13,"endColumn":3,"fix":{"range":[351,353],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":14,"column":3,"nodeType":null,"messageId":"delete","endLine":14,"endColumn":5,"fix":{"range":[376,378],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":15,"column":1,"nodeType":null,"messageId":"delete","endLine":15,"endColumn":3,"fix":{"range":[397,399],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":16,"column":1,"nodeType":null,"messageId":"replace","endLine":16,"endColumn":5,"fix":{"range":[442,446],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":17,"column":3,"nodeType":null,"messageId":"delete","endLine":17,"endColumn":5,"fix":{"range":[477,479],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":18,"column":1,"nodeType":null,"messageId":"delete","endLine":18,"endColumn":3,"fix":{"range":[501,503],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":19,"column":1,"nodeType":null,"messageId":"delete","endLine":19,"endColumn":3,"fix":{"range":[548,550],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":20,"column":1,"nodeType":null,"messageId":"delete","endLine":20,"endColumn":3,"fix":{"range":[553,555],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":16,"source":"// types/grid.ts\n// this is for the grid map view\n// not for the grid block editor\nexport type CityPoint = {\n    city: string;\n    state: string;\n    lat: number;\n    lon: number;\n    leadsQty: number;\n    domains: number;\n    leads: { id: string; name: string, isClaimed: boolean, campaignId: string, industry: string }[];\n    domainNames: string[];\n    leadIds: string[];\n    industry?: string;\n    industryCounts?: Record<string, number>;\n    unclaimedLeadCount?: number;\n    campaigns?: string[];\n    has2PlusUnclaimedInSameIndustry?: boolean;\n  };\n  ","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types/html2pdf.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types/json.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types/jsondiffpatch-html.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types/lead.types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types/location.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":2,"column":3,"nodeType":null,"messageId":"delete","endLine":2,"endColumn":5,"fix":{"range":[34,36],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":3,"column":1,"nodeType":null,"messageId":"delete","endLine":3,"endColumn":3,"fix":{"range":[54,56],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":4,"column":1,"nodeType":null,"messageId":"delete","endLine":4,"endColumn":3,"fix":{"range":[77,79],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":5,"column":1,"nodeType":null,"messageId":"delete","endLine":5,"endColumn":3,"fix":{"range":[82,84],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"export type MockGeoLocation = {\n    latitude: number;\n    longitude: number;\n  };\n  ","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types/next-seo-config.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types/page.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types/params.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types/safe-user.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":3,"column":3,"nodeType":null,"messageId":"delete","endLine":3,"endColumn":5,"fix":{"range":[49,51],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `····` with `··`","line":4,"column":1,"nodeType":null,"messageId":"replace","endLine":4,"endColumn":5,"fix":{"range":[63,67],"text":"  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":5,"column":1,"nodeType":null,"messageId":"delete","endLine":5,"endColumn":3,"fix":{"range":[82,84],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":6,"column":3,"nodeType":null,"messageId":"delete","endLine":6,"endColumn":5,"fix":{"range":[116,118],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":7,"column":1,"nodeType":null,"messageId":"delete","endLine":7,"endColumn":3,"fix":{"range":[133,135],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":8,"column":1,"nodeType":null,"messageId":"delete","endLine":8,"endColumn":3,"fix":{"range":[138,140],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":6,"source":"// types/safe-user.ts\nexport type SafeUser = {\n    id: string;\n    email: string;\n    avatar_url?: string | null;\n    name?: string;\n  };\n  ","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types/site.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types/supabase.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎`","line":7,"column":1,"nodeType":null,"messageId":"delete","endLine":8,"endColumn":1,"fix":{"range":[301,302],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `··`","line":834,"column":37,"nodeType":null,"messageId":"delete","endLine":834,"endColumn":39,"fix":{"range":[23357,23359],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `···`","line":835,"column":36,"nodeType":null,"messageId":"delete","endLine":835,"endColumn":39,"fix":{"range":[23421,23424],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `·`","line":836,"column":37,"nodeType":null,"messageId":"delete","endLine":836,"endColumn":38,"fix":{"range":[23487,23488],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `·`","line":837,"column":37,"nodeType":null,"messageId":"delete","endLine":837,"endColumn":38,"fix":{"range":[23572,23573],"text":""}},{"ruleId":"prettier/prettier","severity":1,"message":"Delete `·················`","line":852,"column":9,"nodeType":null,"messageId":"delete","endLine":852,"endColumn":26,"fix":{"range":[23988,24005],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":6,"source":"// types/supabase.ts\nimport { ReadonlyRequestCookies } from 'next/dist/server/web/spec-extension/adapters/request-cookies';\nexport type SupabaseCookieAdapter = () => Promise<ReadonlyRequestCookies>;\n\nexport type Json = string | number | boolean | null | { [key: string]: Json | undefined } | Json[];\n\n\nexport type Database = {\n  graphql_public: {\n    Tables: {\n      [_ in never]: never;\n    };\n    Views: {\n      [_ in never]: never;\n    };\n    Functions: {\n      graphql: {\n        Args: {\n          operationName?: string;\n          query?: string;\n          variables?: Json;\n          extensions?: Json;\n        };\n        Returns: Json;\n      };\n    };\n    Enums: {\n      [_ in never]: never;\n    };\n    CompositeTypes: {\n      [_ in never]: never;\n    };\n  };\n  public: {\n    Tables: {\n      block_checkins: {\n        Row: {\n          block_id: string | null;\n          checked_at: string | null;\n          id: string;\n          user_id: string | null;\n        };\n        Insert: {\n          block_id?: string | null;\n          checked_at?: string | null;\n          id?: string;\n          user_id?: string | null;\n        };\n        Update: {\n          block_id?: string | null;\n          checked_at?: string | null;\n          id?: string;\n          user_id?: string | null;\n        };\n        Relationships: [\n          {\n            foreignKeyName: 'block_checkins_block_id_fkey';\n            columns: ['block_id'];\n            isOneToOne: false;\n            referencedRelation: 'blocks';\n            referencedColumns: ['id'];\n          },\n        ];\n      };\n      block_feedback: {\n        Row: {\n          action: string | null;\n          block_id: string | null;\n          created_at: string | null;\n          id: string;\n          message: string | null;\n          user_id: string | null;\n        };\n        Insert: {\n          action?: string | null;\n          block_id?: string | null;\n          created_at?: string | null;\n          id?: string;\n          message?: string | null;\n          user_id?: string | null;\n        };\n        Update: {\n          action?: string | null;\n          block_id?: string | null;\n          created_at?: string | null;\n          id?: string;\n          message?: string | null;\n          user_id?: string | null;\n        };\n        Relationships: [\n          {\n            foreignKeyName: 'block_feedback_block_id_fkey';\n            columns: ['block_id'];\n            isOneToOne: false;\n            referencedRelation: 'blocks';\n            referencedColumns: ['id'];\n          },\n        ];\n      };\n      blocks: {\n        Row: {\n          actions: Json | null;\n          created_at: string | null;\n          emoji: string | null;\n          id: string;\n          image_url: string | null;\n          lat: number | null;\n          lon: number | null;\n          message: string | null;\n          owner_id: string;\n          room: string | null;\n          slug: string;\n          title: string | null;\n          type: string | null;\n          visibility: string | null;\n        };\n        Insert: {\n          actions?: Json | null;\n          created_at?: string | null;\n          emoji?: string | null;\n          id?: string;\n          image_url?: string | null;\n          lat?: number | null;\n          lon?: number | null;\n          message?: string | null;\n          owner_id: string;\n          room?: string | null;\n          slug: string;\n          title?: string | null;\n          type?: string | null;\n          visibility?: string | null;\n        };\n        Update: {\n          actions?: Json | null;\n          created_at?: string | null;\n          emoji?: string | null;\n          id?: string;\n          image_url?: string | null;\n          lat?: number | null;\n          lon?: number | null;\n          message?: string | null;\n          owner_id?: string;\n          room?: string | null;\n          slug?: string;\n          title?: string | null;\n          type?: string | null;\n          visibility?: string | null;\n        };\n        Relationships: [];\n      };\n      branding_logs: {\n        Row: {\n          created_at: string | null;\n          details: string | null;\n          event: string | null;\n          id: string;\n          profile_id: string | null;\n          user_id: string | null;\n        };\n        Insert: {\n          created_at?: string | null;\n          details?: string | null;\n          event?: string | null;\n          id?: string;\n          profile_id?: string | null;\n          user_id?: string | null;\n        };\n        Update: {\n          created_at?: string | null;\n          details?: string | null;\n          event?: string | null;\n          id?: string;\n          profile_id?: string | null;\n          user_id?: string | null;\n        };\n        Relationships: [\n          {\n            foreignKeyName: 'branding_logs_profile_id_fkey';\n            columns: ['profile_id'];\n            isOneToOne: false;\n            referencedRelation: 'branding_profiles';\n            referencedColumns: ['id'];\n          },\n          {\n            foreignKeyName: 'branding_logs_profile_id_fkey';\n            columns: ['profile_id'];\n            isOneToOne: false;\n            referencedRelation: 'branding_profiles_with_email';\n            referencedColumns: ['id'];\n          },\n        ];\n      };\n      branding_profiles: {\n        Row: {\n          accent_color: string | null;\n          access_token: string | null;\n          brand: string | null;\n          created_at: string | null;\n          id: string;\n          industry: string | null;\n          is_public: boolean | null;\n          is_shared: boolean | null;\n          layout: string | null;\n          logo_url: string | null;\n          name: string;\n          owner_id: string | null;\n          password: string | null;\n          theme: string | null;\n        };\n        Insert: {\n          accent_color?: string | null;\n          access_token?: string | null;\n          brand?: string | null;\n          created_at?: string | null;\n          id?: string;\n          industry?: string | null;\n          is_public?: boolean | null;\n          is_shared?: boolean | null;\n          layout?: string | null;\n          logo_url?: string | null;\n          name: string;\n          owner_id?: string | null;\n          password?: string | null;\n          theme?: string | null;\n        };\n        Update: {\n          accent_color?: string | null;\n          access_token?: string | null;\n          brand?: string | null;\n          created_at?: string | null;\n          id?: string;\n          industry?: string | null;\n          is_public?: boolean | null;\n          is_shared?: boolean | null;\n          layout?: string | null;\n          logo_url?: string | null;\n          name?: string;\n          owner_id?: string | null;\n          password?: string | null;\n          theme?: string | null;\n        };\n        Relationships: [];\n      };\n      campaigns: {\n        Row: {\n          alt_domains: string[] | null;\n          city: string | null;\n          created_at: string | null;\n          created_by: string | null;\n          domain_ids: string[] | null;\n          ends_at: string | null;\n          id: string;\n          lead_ids: string[] | null;\n          name: string;\n          owner_id: string | null;\n          starts_at: string | null;\n          state: string | null;\n          status: string | null;\n        };\n        Insert: {\n          alt_domains?: string[] | null;\n          city?: string | null;\n          created_at?: string | null;\n          created_by?: string | null;\n          domain_ids?: string[] | null;\n          ends_at?: string | null;\n          id?: string;\n          lead_ids?: string[] | null;\n          name: string;\n          owner_id?: string | null;\n          starts_at?: string | null;\n          state?: string | null;\n          status?: string | null;\n        };\n        Update: {\n          alt_domains?: string[] | null;\n          city?: string | null;\n          created_at?: string | null;\n          created_by?: string | null;\n          domain_ids?: string[] | null;\n          ends_at?: string | null;\n          id?: string;\n          lead_ids?: string[] | null;\n          name?: string;\n          owner_id?: string | null;\n          starts_at?: string | null;\n          state?: string | null;\n          status?: string | null;\n        };\n        Relationships: [];\n      };\n      claimed_handles: {\n        Row: {\n          claimed_at: string | null;\n          handle: string;\n          user_id: string;\n        };\n        Insert: {\n          claimed_at?: string | null;\n          handle: string;\n          user_id: string;\n        };\n        Update: {\n          claimed_at?: string | null;\n          handle?: string;\n          user_id?: string;\n        };\n        Relationships: [];\n      };\n      click_events: {\n        Row: {\n          action: string;\n          block_id: string;\n          handle: string | null;\n          id: string;\n          ip_address: string | null;\n          metadata: Json | null;\n          timestamp: string | null;\n        };\n        Insert: {\n          action: string;\n          block_id: string;\n          handle?: string | null;\n          id?: string;\n          ip_address?: string | null;\n          metadata?: Json | null;\n          timestamp?: string | null;\n        };\n        Update: {\n          action?: string;\n          block_id?: string;\n          handle?: string | null;\n          id?: string;\n          ip_address?: string | null;\n          metadata?: Json | null;\n          timestamp?: string | null;\n        };\n        Relationships: [];\n      };\n      comments: {\n        Row: {\n          author_email: string | null;\n          created_at: string | null;\n          id: string;\n          message: string | null;\n          snapshot_id: string | null;\n        };\n        Insert: {\n          author_email?: string | null;\n          created_at?: string | null;\n          id?: string;\n          message?: string | null;\n          snapshot_id?: string | null;\n        };\n        Update: {\n          author_email?: string | null;\n          created_at?: string | null;\n          id?: string;\n          message?: string | null;\n          snapshot_id?: string | null;\n        };\n        Relationships: [\n          {\n            foreignKeyName: 'comments_snapshot_id_fkey';\n            columns: ['snapshot_id'];\n            isOneToOne: false;\n            referencedRelation: 'snapshots';\n            referencedColumns: ['id'];\n          },\n        ];\n      };\n      dashboard_access_log: {\n        Row: {\n          city: string | null;\n          country: string | null;\n          email: string | null;\n          id: string;\n          ip_address: string | null;\n          region: string | null;\n          timestamp: string | null;\n          user_agent: string | null;\n          user_id: string;\n        };\n        Insert: {\n          city?: string | null;\n          country?: string | null;\n          email?: string | null;\n          id?: string;\n          ip_address?: string | null;\n          region?: string | null;\n          timestamp?: string | null;\n          user_agent?: string | null;\n          user_id: string;\n        };\n        Update: {\n          city?: string | null;\n          country?: string | null;\n          email?: string | null;\n          id?: string;\n          ip_address?: string | null;\n          region?: string | null;\n          timestamp?: string | null;\n          user_agent?: string | null;\n          user_id?: string;\n        };\n        Relationships: [];\n      };\n      dashboard_layout_templates: {\n        Row: {\n          created_at: string | null;\n          description: string | null;\n          hidden: string[] | null;\n          id: string;\n          layout: Json | null;\n          name: string;\n        };\n        Insert: {\n          created_at?: string | null;\n          description?: string | null;\n          hidden?: string[] | null;\n          id?: string;\n          layout?: Json | null;\n          name: string;\n        };\n        Update: {\n          created_at?: string | null;\n          description?: string | null;\n          hidden?: string[] | null;\n          id?: string;\n          layout?: Json | null;\n          name?: string;\n        };\n        Relationships: [];\n      };\n      dashboard_layout_versions: {\n        Row: {\n          created_at: string | null;\n          hidden: string[] | null;\n          id: string;\n          layout: Json;\n          role: string;\n          saved_by: string | null;\n        };\n        Insert: {\n          created_at?: string | null;\n          hidden?: string[] | null;\n          id?: string;\n          layout: Json;\n          role: string;\n          saved_by?: string | null;\n        };\n        Update: {\n          created_at?: string | null;\n          hidden?: string[] | null;\n          id?: string;\n          layout?: Json;\n          role?: string;\n          saved_by?: string | null;\n        };\n        Relationships: [];\n      };\n      dashboard_layouts: {\n        Row: {\n          hidden: string[] | null;\n          layout: Json | null;\n          role: string;\n        };\n        Insert: {\n          hidden?: string[] | null;\n          layout?: Json | null;\n          role: string;\n        };\n        Update: {\n          hidden?: string[] | null;\n          layout?: Json | null;\n          role?: string;\n        };\n        Relationships: [];\n      };\n      dashboard_user_layouts: {\n        Row: {\n          dashboard_id: string | null;\n          name: string | null;\n          settings: Json | null;\n          template_id: string | null;\n          user_id: string;\n        };\n        Insert: {\n          dashboard_id?: string | null;\n          name?: string | null;\n          settings?: Json | null;\n          template_id?: string | null;\n          user_id: string;\n        };\n        Update: {\n          dashboard_id?: string | null;\n          name?: string | null;\n          settings?: Json | null;\n          template_id?: string | null;\n          user_id?: string;\n        };\n        Relationships: [\n          {\n            foreignKeyName: 'dashboard_user_layouts_template_id_fkey';\n            columns: ['template_id'];\n            isOneToOne: false;\n            referencedRelation: 'dashboard_layout_templates';\n            referencedColumns: ['id'];\n          },\n        ];\n      };\n      domains: {\n        Row: {\n          city: string | null;\n          date_created: string | null;\n          domain: string | null;\n          id: string;\n          state: string | null;\n          template: string | null;\n        };\n        Insert: {\n          city?: string | null;\n          date_created?: string | null;\n          domain?: string | null;\n          id?: string;\n          state?: string | null;\n          template?: string | null;\n        };\n        Update: {\n          city?: string | null;\n          date_created?: string | null;\n          domain?: string | null;\n          id?: string;\n          state?: string | null;\n          template?: string | null;\n        };\n        Relationships: [];\n      };\n      draft_sites: {\n        Row: {\n          city: string;\n          claimed_by: string | null;\n          date_created: string | null;\n          domain: string;\n          id: string;\n          industry: string | null;\n          is_claimed: boolean | null;\n          notes: string | null;\n          state: string;\n          template_id: string | null;\n          user_id: string | null;\n        };\n        Insert: {\n          city: string;\n          claimed_by?: string | null;\n          date_created?: string | null;\n          domain: string;\n          id?: string;\n          industry?: string | null;\n          is_claimed?: boolean | null;\n          notes?: string | null;\n          state: string;\n          template_id?: string | null;\n          user_id?: string | null;\n        };\n        Update: {\n          city?: string;\n          claimed_by?: string | null;\n          date_created?: string | null;\n          domain?: string;\n          id?: string;\n          industry?: string | null;\n          is_claimed?: boolean | null;\n          notes?: string | null;\n          state?: string;\n          template_id?: string | null;\n          user_id?: string | null;\n        };\n        Relationships: [];\n      };\n      early_access_codes: {\n        Row: {\n          claimed_by: string | null;\n          code: string;\n          used: boolean | null;\n          used_at: string | null;\n        };\n        Insert: {\n          claimed_by?: string | null;\n          code: string;\n          used?: boolean | null;\n          used_at?: string | null;\n        };\n        Update: {\n          claimed_by?: string | null;\n          code?: string;\n          used?: boolean | null;\n          used_at?: string | null;\n        };\n        Relationships: [];\n      };\n      early_access_signups: {\n        Row: {\n          created_at: string | null;\n          email: string;\n          id: string;\n          invite_code: string | null;\n          name: string | null;\n        };\n        Insert: {\n          created_at?: string | null;\n          email: string;\n          id?: string;\n          invite_code?: string | null;\n          name?: string | null;\n        };\n        Update: {\n          created_at?: string | null;\n          email?: string;\n          id?: string;\n          invite_code?: string | null;\n          name?: string | null;\n        };\n        Relationships: [];\n      };\n      geo_cache: {\n        Row: {\n          city: string | null;\n          created_at: string | null;\n          id: string;\n          lat: number | null;\n          lon: number | null;\n          state: string | null;\n        };\n        Insert: {\n          city?: string | null;\n          created_at?: string | null;\n          id?: string;\n          lat?: number | null;\n          lon?: number | null;\n          state?: string | null;\n        };\n        Update: {\n          city?: string | null;\n          created_at?: string | null;\n          id?: string;\n          lat?: number | null;\n          lon?: number | null;\n          state?: string | null;\n        };\n        Relationships: [];\n      };\n      guest_conversions: {\n        Row: {\n          created_at: string | null;\n          guest_user_id: string;\n          id: string;\n          method: string | null;\n          new_user_id: string;\n        };\n        Insert: {\n          created_at?: string | null;\n          guest_user_id: string;\n          id?: string;\n          method?: string | null;\n          new_user_id: string;\n        };\n        Update: {\n          created_at?: string | null;\n          guest_user_id?: string;\n          id?: string;\n          method?: string | null;\n          new_user_id?: string;\n        };\n        Relationships: [];\n      };\n      guest_token_usage: {\n        Row: {\n          action: string;\n          created_at: string | null;\n          id: string;\n          referrer: string | null;\n          user_id: string;\n        };\n        Insert: {\n          action: string;\n          created_at?: string | null;\n          id?: string;\n          referrer?: string | null;\n          user_id: string;\n        };\n        Update: {\n          action?: string;\n          created_at?: string | null;\n          id?: string;\n          referrer?: string | null;\n          user_id?: string;\n        };\n        Relationships: [];\n      };\n      guest_upgrade_events: {\n        Row: {\n          created_at: string | null;\n          event: string;\n          guest_user_id: string;\n          id: string;\n          page_url: string | null;\n          referrer: string | null;\n          trigger_reason: string | null;\n          utm_campaign: string | null;\n          utm_content: string | null;\n          utm_medium: string | null;\n          utm_source: string | null;\n          utm_term: string | null;\n        };\n        Insert: {\n          created_at?: string | null;\n          event: string;\n          guest_user_id: string;\n          id?: string;\n          page_url?: string | null;\n          referrer?: string | null;\n          trigger_reason?: string | null;\n          utm_campaign?: string | null;\n          utm_content?: string | null;\n          utm_medium?: string | null;\n          utm_source?: string | null;\n          utm_term?: string | null;\n        };\n        Update: {\n          created_at?: string | null;\n          event?: string;\n          guest_user_id?: string;\n          id?: string;\n          page_url?: string | null;\n          referrer?: string | null;\n          trigger_reason?: string | null;\n          utm_campaign?: string | null;\n          utm_content?: string | null;\n          utm_medium?: string | null;\n          utm_source?: string | null;\n          utm_term?: string | null;\n        };\n        Relationships: [];\n      };\n      industries: {\n        Row: {\n          id: string;\n          name: string;\n        };\n        Insert: {\n          id?: string;\n          name: string;\n        };\n        Update: {\n          id?: string;\n          name?: string;\n        };\n        Relationships: [];\n      };\n      leads: {\n        Row: {\n          address_city: string | null;\n          address_state: string | null;\n          business_name: string | null;\n          campaign_id: string | null;\n          contact_name: string | null;\n          created_at: string | null;\n          date_created: string | null;\n          domain_id: string | null;\n          email: string | null;\n          id: string;\n          industry: string | null;\n          notes: string | null;\n          outreach_status: string | null;\n          owner_id: string | null;\n          phone: string | null;\n        };\n        Insert: {\n          address_city?: string | null;\n          address_state?: string | null;\n          business_name?: string | null;\n          campaign_id?: string | null;\n          contact_name?: string | null;\n          created_at?: string | null;\n          date_created?: string | null;\n          domain_id?: string | null;\n          email?: string | null;\n          id?: string;\n          industry?: string | null;\n          notes?: string | null;\n          outreach_status?: string | null;\n          owner_id?: string | null;\n          phone?: string | null;\n        };\n        Update: {\n          address_city?: string | null;\n          address_state?: string | null;\n          business_name?: string | null;\n          campaign_id?: string | null;\n          contact_name?: string | null;\n          created_at?: string | null;\n          date_created?: string | null;\n          domain_id?: string | null;\n          email?: string | null;\n          id?: string;\n          industry?: string | null;\n          notes?: string | null;\n          outreach_status?: string | null;\n          owner_id?: string | null;\n          phone?: string | null;\n        };\n        Relationships: [\n          {\n            foreignKeyName: 'leads_campaign_id_fkey';\n            columns: ['campaign_id'];\n            isOneToOne: false;\n            referencedRelation: 'campaigns';\n            referencedColumns: ['id'];\n          },\n          {\n            foreignKeyName: 'leads_domain_id_fkey';\n            columns: ['domain_id'];\n            isOneToOne: false;\n            referencedRelation: 'draft_sites';\n            referencedColumns: ['id'];\n          },\n        ];\n      };\n      nav_preferences: {\n        Row: {\n          id: string;\n          user_id: string;\n          disabled_flags: string[];   // assuming Postgres array\n          enabled_links: string[];    // assuming Postgres array\n          created_at: string | null;  // optional, if your table includes timestamps\n          updated_at: string | null;  // optional\n        };\n        Insert: {\n          user_id: string;\n          disabled_flags?: string[];\n          enabled_links?: string[];\n          created_at?: string | null;\n          updated_at?: string | null;\n        };\n        Update: {\n          disabled_flags?: string[];\n          enabled_links?: string[];\n          created_at?: string | null;\n          updated_at?: string | null;\n        };\n      };                 \n      not_found_logs: {\n        Row: {\n          context: string;\n          id: string;\n          path: string;\n          referrer: string | null;\n          timestamp: string | null;\n          user_agent: string | null;\n        };\n        Insert: {\n          context: string;\n          id?: string;\n          path: string;\n          referrer?: string | null;\n          timestamp?: string | null;\n          user_agent?: string | null;\n        };\n        Update: {\n          context?: string;\n          id?: string;\n          path?: string;\n          referrer?: string | null;\n          timestamp?: string | null;\n          user_agent?: string | null;\n        };\n        Relationships: [];\n      };\n      param_presets: {\n        Row: {\n          created_at: string | null;\n          id: string;\n          name: string;\n          query: string;\n          slug: string;\n        };\n        Insert: {\n          created_at?: string | null;\n          id?: string;\n          name: string;\n          query: string;\n          slug: string;\n        };\n        Update: {\n          created_at?: string | null;\n          id?: string;\n          name?: string;\n          query?: string;\n          slug?: string;\n        };\n        Relationships: [];\n      };\n      public_profiles: {\n        Row: {\n          bio: string | null;\n          created_at: string | null;\n          emoji: string | null;\n          goal_tags: string[] | null;\n          handle: string | null;\n          updated_at: string | null;\n          user_id: string;\n          visible: boolean | null;\n        };\n        Insert: {\n          bio?: string | null;\n          created_at?: string | null;\n          emoji?: string | null;\n          goal_tags?: string[] | null;\n          handle?: string | null;\n          updated_at?: string | null;\n          user_id: string;\n          visible?: boolean | null;\n        };\n        Update: {\n          bio?: string | null;\n          created_at?: string | null;\n          emoji?: string | null;\n          goal_tags?: string[] | null;\n          handle?: string | null;\n          updated_at?: string | null;\n          user_id?: string;\n          visible?: boolean | null;\n        };\n        Relationships: [];\n      };\n      public_sites: {\n        Row: {\n          branding_profile_id: string | null;\n          created_at: string | null;\n          id: string;\n          is_public: boolean | null;\n          language: string | null;\n          owner_id: string | null;\n          published_at: string | null;\n          qr_url: string | null;\n          slug: string;\n          snapshot_id: string | null;\n          status: string | null;\n        };\n        Insert: {\n          branding_profile_id?: string | null;\n          created_at?: string | null;\n          id?: string;\n          is_public?: boolean | null;\n          language?: string | null;\n          owner_id?: string | null;\n          published_at?: string | null;\n          qr_url?: string | null;\n          slug: string;\n          snapshot_id?: string | null;\n          status?: string | null;\n        };\n        Update: {\n          branding_profile_id?: string | null;\n          created_at?: string | null;\n          id?: string;\n          is_public?: boolean | null;\n          language?: string | null;\n          owner_id?: string | null;\n          published_at?: string | null;\n          qr_url?: string | null;\n          slug?: string;\n          snapshot_id?: string | null;\n          status?: string | null;\n        };\n        Relationships: [\n          {\n            foreignKeyName: 'fk_branding_profile';\n            columns: ['branding_profile_id'];\n            isOneToOne: false;\n            referencedRelation: 'branding_profiles';\n            referencedColumns: ['id'];\n          },\n          {\n            foreignKeyName: 'fk_branding_profile';\n            columns: ['branding_profile_id'];\n            isOneToOne: false;\n            referencedRelation: 'branding_profiles_with_email';\n            referencedColumns: ['id'];\n          },\n          {\n            foreignKeyName: 'published_sites_branding_profile_id_fkey';\n            columns: ['branding_profile_id'];\n            isOneToOne: false;\n            referencedRelation: 'branding_profiles';\n            referencedColumns: ['id'];\n          },\n          {\n            foreignKeyName: 'published_sites_branding_profile_id_fkey';\n            columns: ['branding_profile_id'];\n            isOneToOne: false;\n            referencedRelation: 'branding_profiles_with_email';\n            referencedColumns: ['id'];\n          },\n          {\n            foreignKeyName: 'published_sites_snapshot_id_fkey';\n            columns: ['snapshot_id'];\n            isOneToOne: false;\n            referencedRelation: 'snapshots';\n            referencedColumns: ['id'];\n          },\n        ];\n      };\n      published_site_views: {\n        Row: {\n          id: string;\n          referrer: string | null;\n          site_id: string | null;\n          user_agent: string | null;\n          viewed_at: string | null;\n        };\n        Insert: {\n          id?: string;\n          referrer?: string | null;\n          site_id?: string | null;\n          user_agent?: string | null;\n          viewed_at?: string | null;\n        };\n        Update: {\n          id?: string;\n          referrer?: string | null;\n          site_id?: string | null;\n          user_agent?: string | null;\n          viewed_at?: string | null;\n        };\n        Relationships: [\n          {\n            foreignKeyName: 'published_site_views_site_id_fkey';\n            columns: ['site_id'];\n            isOneToOne: false;\n            referencedRelation: 'public_sites';\n            referencedColumns: ['id'];\n          },\n        ];\n      };\n      published_sites: {\n        Row: {\n          branding_profile_id: string | null;\n          domain: string;\n          id: string;\n          is_public: boolean | null;\n          published_at: string | null;\n          status: string | null;\n        };\n        Insert: {\n          branding_profile_id?: string | null;\n          domain: string;\n          id?: string;\n          is_public?: boolean | null;\n          published_at?: string | null;\n          status?: string | null;\n        };\n        Update: {\n          branding_profile_id?: string | null;\n          domain?: string;\n          id?: string;\n          is_public?: boolean | null;\n          published_at?: string | null;\n          status?: string | null;\n        };\n        Relationships: [\n          {\n            foreignKeyName: 'fk_branding_profile';\n            columns: ['branding_profile_id'];\n            isOneToOne: false;\n            referencedRelation: 'branding_profiles';\n            referencedColumns: ['id'];\n          },\n          {\n            foreignKeyName: 'fk_branding_profile';\n            columns: ['branding_profile_id'];\n            isOneToOne: false;\n            referencedRelation: 'branding_profiles_with_email';\n            referencedColumns: ['id'];\n          },\n        ];\n      };\n      published_versions: {\n        Row: {\n          branding_profile_id: string | null;\n          created_at: string | null;\n          id: string;\n          primary_color: string | null;\n          secondary_color: string | null;\n          slug: string;\n          snapshot_id: string;\n        };\n        Insert: {\n          branding_profile_id?: string | null;\n          created_at?: string | null;\n          id?: string;\n          primary_color?: string | null;\n          secondary_color?: string | null;\n          slug: string;\n          snapshot_id: string;\n        };\n        Update: {\n          branding_profile_id?: string | null;\n          created_at?: string | null;\n          id?: string;\n          primary_color?: string | null;\n          secondary_color?: string | null;\n          slug?: string;\n          snapshot_id?: string;\n        };\n        Relationships: [\n          {\n            foreignKeyName: 'published_versions_branding_profile_id_fkey';\n            columns: ['branding_profile_id'];\n            isOneToOne: false;\n            referencedRelation: 'branding_profiles';\n            referencedColumns: ['id'];\n          },\n          {\n            foreignKeyName: 'published_versions_branding_profile_id_fkey';\n            columns: ['branding_profile_id'];\n            isOneToOne: false;\n            referencedRelation: 'branding_profiles_with_email';\n            referencedColumns: ['id'];\n          },\n        ];\n      };\n      referral_logs: {\n        Row: {\n          campaign: string | null;\n          email: string | null;\n          id: string;\n          joined_at: string | null;\n          ref: string | null;\n          source: string | null;\n        };\n        Insert: {\n          campaign?: string | null;\n          email?: string | null;\n          id?: string;\n          joined_at?: string | null;\n          ref?: string | null;\n          source?: string | null;\n        };\n        Update: {\n          campaign?: string | null;\n          email?: string | null;\n          id?: string;\n          joined_at?: string | null;\n          ref?: string | null;\n          source?: string | null;\n        };\n        Relationships: [];\n      };\n      referral_payouts: {\n        Row: {\n          amount: number | null;\n          id: string;\n          note: string | null;\n          paid_at: string | null;\n          user_id: string | null;\n        };\n        Insert: {\n          amount?: number | null;\n          id?: string;\n          note?: string | null;\n          paid_at?: string | null;\n          user_id?: string | null;\n        };\n        Update: {\n          amount?: number | null;\n          id?: string;\n          note?: string | null;\n          paid_at?: string | null;\n          user_id?: string | null;\n        };\n        Relationships: [];\n      };\n      referrals: {\n        Row: {\n          created_at: string | null;\n          id: string;\n          referred_email: string | null;\n          referrer_id: string;\n          reward_points: number | null;\n        };\n        Insert: {\n          created_at?: string | null;\n          id?: string;\n          referred_email?: string | null;\n          referrer_id: string;\n          reward_points?: number | null;\n        };\n        Update: {\n          created_at?: string | null;\n          id?: string;\n          referred_email?: string | null;\n          referrer_id?: string;\n          reward_points?: number | null;\n        };\n        Relationships: [];\n      };\n      regeneration_logs: {\n        Row: {\n          city: string | null;\n          domain: string;\n          id: string;\n          state: string | null;\n          status: string | null;\n          template_id: string;\n          timestamp: string | null;\n        };\n        Insert: {\n          city?: string | null;\n          domain: string;\n          id?: string;\n          state?: string | null;\n          status?: string | null;\n          template_id: string;\n          timestamp?: string | null;\n        };\n        Update: {\n          city?: string | null;\n          domain?: string;\n          id?: string;\n          state?: string | null;\n          status?: string | null;\n          template_id?: string;\n          timestamp?: string | null;\n        };\n        Relationships: [];\n      };\n      regeneration_queue: {\n        Row: {\n          city: string;\n          created_at: string | null;\n          domain: string;\n          finished_at: string | null;\n          id: string;\n          log: string | null;\n          started_at: string | null;\n          state: string;\n          status: string | null;\n          template_id: string;\n        };\n        Insert: {\n          city: string;\n          created_at?: string | null;\n          domain: string;\n          finished_at?: string | null;\n          id?: string;\n          log?: string | null;\n          started_at?: string | null;\n          state: string;\n          status?: string | null;\n          template_id: string;\n        };\n        Update: {\n          city?: string;\n          created_at?: string | null;\n          domain?: string;\n          finished_at?: string | null;\n          id?: string;\n          log?: string | null;\n          started_at?: string | null;\n          state?: string;\n          status?: string | null;\n          template_id?: string;\n        };\n        Relationships: [];\n      };\n      remix_events: {\n        Row: {\n          created_at: string | null;\n          id: string;\n          original_snapshot_id: string | null;\n          user_id: string | null;\n        };\n        Insert: {\n          created_at?: string | null;\n          id?: string;\n          original_snapshot_id?: string | null;\n          user_id?: string | null;\n        };\n        Update: {\n          created_at?: string | null;\n          id?: string;\n          original_snapshot_id?: string | null;\n          user_id?: string | null;\n        };\n        Relationships: [];\n      };\n      report_tokens: {\n        Row: {\n          expires_at: string | null;\n          file_name: string | null;\n          id: string;\n          token_hash: string | null;\n        };\n        Insert: {\n          expires_at?: string | null;\n          file_name?: string | null;\n          id?: string;\n          token_hash?: string | null;\n        };\n        Update: {\n          expires_at?: string | null;\n          file_name?: string | null;\n          id?: string;\n          token_hash?: string | null;\n        };\n        Relationships: [];\n      };\n      report_webhooks: {\n        Row: {\n          enabled: boolean | null;\n          event: string;\n          id: string;\n          secret_token: string | null;\n          url: string;\n        };\n        Insert: {\n          enabled?: boolean | null;\n          event: string;\n          id?: string;\n          secret_token?: string | null;\n          url: string;\n        };\n        Update: {\n          enabled?: boolean | null;\n          event?: string;\n          id?: string;\n          secret_token?: string | null;\n          url?: string;\n        };\n        Relationships: [];\n      };\n      role_change_logs: {\n        Row: {\n          changed_at: string | null;\n          changed_by: string;\n          id: string;\n          new_role: string;\n          user_email: string;\n        };\n        Insert: {\n          changed_at?: string | null;\n          changed_by: string;\n          id?: string;\n          new_role: string;\n          user_email: string;\n        };\n        Update: {\n          changed_at?: string | null;\n          changed_by?: string;\n          id?: string;\n          new_role?: string;\n          user_email?: string;\n        };\n        Relationships: [];\n      };\n      screenshot_queue: {\n        Row: {\n          completed_at: string | null;\n          domain: string;\n          id: string;\n          requested_at: string | null;\n          status: string | null;\n        };\n        Insert: {\n          completed_at?: string | null;\n          domain: string;\n          id?: string;\n          requested_at?: string | null;\n          status?: string | null;\n        };\n        Update: {\n          completed_at?: string | null;\n          domain?: string;\n          id?: string;\n          requested_at?: string | null;\n          status?: string | null;\n        };\n        Relationships: [];\n      };\n      session_logs: {\n        Row: {\n          device: string | null;\n          email: string | null;\n          event: string | null;\n          id: string;\n          is_mobile: boolean | null;\n          timestamp: string;\n          token_end: string | null;\n          token_start: string | null;\n          type: string;\n          user_id: string | null;\n        };\n        Insert: {\n          device?: string | null;\n          email?: string | null;\n          event?: string | null;\n          id?: string;\n          is_mobile?: boolean | null;\n          timestamp: string;\n          token_end?: string | null;\n          token_start?: string | null;\n          type: string;\n          user_id?: string | null;\n        };\n        Update: {\n          device?: string | null;\n          email?: string | null;\n          event?: string | null;\n          id?: string;\n          is_mobile?: boolean | null;\n          timestamp?: string;\n          token_end?: string | null;\n          token_start?: string | null;\n          type?: string;\n          user_id?: string | null;\n        };\n        Relationships: [];\n      };\n      shared_previews: {\n        Row: {\n          created_at: string | null;\n          id: string;\n          template_id: string | null;\n          thumbnail_url: string | null;\n        };\n        Insert: {\n          created_at?: string | null;\n          id?: string;\n          template_id?: string | null;\n          thumbnail_url?: string | null;\n        };\n        Update: {\n          created_at?: string | null;\n          id?: string;\n          template_id?: string | null;\n          thumbnail_url?: string | null;\n        };\n        Relationships: [];\n      };\n      shared_templates: {\n        Row: {\n          data: Json;\n          editor_email: string | null;\n          id: string;\n          shared_at: string | null;\n          template_name: string;\n        };\n        Insert: {\n          data: Json;\n          editor_email?: string | null;\n          id?: string;\n          shared_at?: string | null;\n          template_name: string;\n        };\n        Update: {\n          data?: Json;\n          editor_email?: string | null;\n          id?: string;\n          shared_at?: string | null;\n          template_name?: string;\n        };\n        Relationships: [];\n      };\n      site_events: {\n        Row: {\n          created_at: string | null;\n          id: string;\n          payload: Json;\n          type: string;\n        };\n        Insert: {\n          created_at?: string | null;\n          id?: string;\n          payload: Json;\n          type: string;\n        };\n        Update: {\n          created_at?: string | null;\n          id?: string;\n          payload?: Json;\n          type?: string;\n        };\n        Relationships: [];\n      };\n      sites: {\n        Row: {\n          branding_profile_id: string | null;\n          business_name: string | null;\n          content: Json;\n          created_at: string | null;\n          domain: string | null;\n          id: string;\n          is_published: boolean | null;\n          location: string | null;\n          seo_description: string | null;\n          seo_title: string | null;\n          site_name: string | null;\n          slug: string;\n          template_id: string | null;\n          template_version_id: string | null;\n          twitter_handle: string | null;\n          updated_at: string | null;\n          vanity_url: string | null;\n        };\n        Insert: {\n          branding_profile_id?: string | null;\n          business_name?: string | null;\n          content: Json;\n          created_at?: string | null;\n          domain?: string | null;\n          id?: string;\n          is_published?: boolean | null;\n          location?: string | null;\n          seo_description?: string | null;\n          seo_title?: string | null;\n          site_name?: string | null;\n          slug: string;\n          template_id?: string | null;\n          template_version_id?: string | null;\n          twitter_handle?: string | null;\n          updated_at?: string | null;\n          vanity_url?: string | null;\n        };\n        Update: {\n          branding_profile_id?: string | null;\n          business_name?: string | null;\n          content?: Json;\n          created_at?: string | null;\n          domain?: string | null;\n          id?: string;\n          is_published?: boolean | null;\n          location?: string | null;\n          seo_description?: string | null;\n          seo_title?: string | null;\n          site_name?: string | null;\n          slug?: string;\n          template_id?: string | null;\n          template_version_id?: string | null;\n          twitter_handle?: string | null;\n          updated_at?: string | null;\n          vanity_url?: string | null;\n        };\n        Relationships: [\n          {\n            foreignKeyName: 'sites_branding_profile_id_fkey';\n            columns: ['branding_profile_id'];\n            isOneToOne: false;\n            referencedRelation: 'branding_profiles';\n            referencedColumns: ['id'];\n          },\n          {\n            foreignKeyName: 'sites_branding_profile_id_fkey';\n            columns: ['branding_profile_id'];\n            isOneToOne: false;\n            referencedRelation: 'branding_profiles_with_email';\n            referencedColumns: ['id'];\n          },\n          {\n            foreignKeyName: 'sites_template_id_fkey';\n            columns: ['template_id'];\n            isOneToOne: false;\n            referencedRelation: 'templates';\n            referencedColumns: ['id'];\n          },\n          {\n            foreignKeyName: 'sites_template_version_id_fkey';\n            columns: ['template_version_id'];\n            isOneToOne: false;\n            referencedRelation: 'template_versions';\n            referencedColumns: ['id'];\n          },\n        ];\n      };\n      snapshot_views: {\n        Row: {\n          id: string;\n          ip_address: string | null;\n          template_name: string;\n          user_agent: string | null;\n          viewed_at: string | null;\n        };\n        Insert: {\n          id?: string;\n          ip_address?: string | null;\n          template_name: string;\n          user_agent?: string | null;\n          viewed_at?: string | null;\n        };\n        Update: {\n          id?: string;\n          ip_address?: string | null;\n          template_name?: string;\n          user_agent?: string | null;\n          viewed_at?: string | null;\n        };\n        Relationships: [];\n      };\n      snapshots: {\n        Row: {\n          brand: string | null;\n          branding_profile_id: string | null;\n          color_scheme: string | null;\n          commit_message: string | null;\n          created_at: string | null;\n          data: Json | null;\n          editor_email: string | null;\n          id: string;\n          shared_at: string | null;\n          template_id: string | null;\n          template_name: string | null;\n          theme: string | null;\n          thumbnail_url: string | null;\n        };\n        Insert: {\n          brand?: string | null;\n          branding_profile_id?: string | null;\n          color_scheme?: string | null;\n          commit_message?: string | null;\n          created_at?: string | null;\n          data?: Json | null;\n          editor_email?: string | null;\n          id?: string;\n          shared_at?: string | null;\n          template_id?: string | null;\n          template_name?: string | null;\n          theme?: string | null;\n          thumbnail_url?: string | null;\n        };\n        Update: {\n          brand?: string | null;\n          branding_profile_id?: string | null;\n          color_scheme?: string | null;\n          commit_message?: string | null;\n          created_at?: string | null;\n          data?: Json | null;\n          editor_email?: string | null;\n          id?: string;\n          shared_at?: string | null;\n          template_id?: string | null;\n          template_name?: string | null;\n          theme?: string | null;\n          thumbnail_url?: string | null;\n        };\n        Relationships: [\n          {\n            foreignKeyName: 'snapshots_branding_profile_id_fkey';\n            columns: ['branding_profile_id'];\n            isOneToOne: false;\n            referencedRelation: 'branding_profiles';\n            referencedColumns: ['id'];\n          },\n          {\n            foreignKeyName: 'snapshots_branding_profile_id_fkey';\n            columns: ['branding_profile_id'];\n            isOneToOne: false;\n            referencedRelation: 'branding_profiles_with_email';\n            referencedColumns: ['id'];\n          },\n        ];\n      };\n      starter_templates: {\n        Row: {\n          data: Json | null;\n          description: string | null;\n          id: string;\n          name: string | null;\n          preview: string | null;\n          template_id: string | null;\n        };\n        Insert: {\n          data?: Json | null;\n          description?: string | null;\n          id: string;\n          name?: string | null;\n          preview?: string | null;\n          template_id?: string | null;\n        };\n        Update: {\n          data?: Json | null;\n          description?: string | null;\n          id?: string;\n          name?: string | null;\n          preview?: string | null;\n          template_id?: string | null;\n        };\n        Relationships: [];\n      };\n      steward_rewards: {\n        Row: {\n          created_at: string | null;\n          id: string;\n          points: number | null;\n          reason: string | null;\n          site_domain: string | null;\n          user_id: string;\n        };\n        Insert: {\n          created_at?: string | null;\n          id?: string;\n          points?: number | null;\n          reason?: string | null;\n          site_domain?: string | null;\n          user_id: string;\n        };\n        Update: {\n          created_at?: string | null;\n          id?: string;\n          points?: number | null;\n          reason?: string | null;\n          site_domain?: string | null;\n          user_id?: string;\n        };\n        Relationships: [];\n      };\n      subscriptions: {\n        Row: {\n          domain: string | null;\n          email: string | null;\n          id: string;\n          subscribed_at: string | null;\n          unsubscribe_token: string | null;\n        };\n        Insert: {\n          domain?: string | null;\n          email?: string | null;\n          id?: string;\n          subscribed_at?: string | null;\n          unsubscribe_token?: string | null;\n        };\n        Update: {\n          domain?: string | null;\n          email?: string | null;\n          id?: string;\n          subscribed_at?: string | null;\n          unsubscribe_token?: string | null;\n        };\n        Relationships: [];\n      };\n      support_campaigns: {\n        Row: {\n          block_id: string | null;\n          created_at: string | null;\n          created_by: string | null;\n          goal_count: number | null;\n          headline: string | null;\n          id: string;\n          preclaim_token: string | null;\n          slug: string;\n          target_action: string | null;\n        };\n        Insert: {\n          block_id?: string | null;\n          created_at?: string | null;\n          created_by?: string | null;\n          goal_count?: number | null;\n          headline?: string | null;\n          id?: string;\n          preclaim_token?: string | null;\n          slug: string;\n          target_action?: string | null;\n        };\n        Update: {\n          block_id?: string | null;\n          created_at?: string | null;\n          created_by?: string | null;\n          goal_count?: number | null;\n          headline?: string | null;\n          id?: string;\n          preclaim_token?: string | null;\n          slug?: string;\n          target_action?: string | null;\n        };\n        Relationships: [];\n      };\n      support_requests: {\n        Row: {\n          created_at: string | null;\n          id: string;\n          message: string | null;\n          receiver_handle: string;\n          requester_id: string | null;\n          slug: string | null;\n        };\n        Insert: {\n          created_at?: string | null;\n          id?: string;\n          message?: string | null;\n          receiver_handle: string;\n          requester_id?: string | null;\n          slug?: string | null;\n        };\n        Update: {\n          created_at?: string | null;\n          id?: string;\n          message?: string | null;\n          receiver_handle?: string;\n          requester_id?: string | null;\n          slug?: string | null;\n        };\n        Relationships: [];\n      };\n      template_images: {\n        Row: {\n          id: string;\n          original_name: string | null;\n          path: string;\n          template_id: string | null;\n          type: string | null;\n          uploaded_at: string | null;\n          url: string;\n        };\n        Insert: {\n          id?: string;\n          original_name?: string | null;\n          path: string;\n          template_id?: string | null;\n          type?: string | null;\n          uploaded_at?: string | null;\n          url: string;\n        };\n        Update: {\n          id?: string;\n          original_name?: string | null;\n          path?: string;\n          template_id?: string | null;\n          type?: string | null;\n          uploaded_at?: string | null;\n          url?: string;\n        };\n        Relationships: [\n          {\n            foreignKeyName: 'template_images_template_id_fkey';\n            columns: ['template_id'];\n            isOneToOne: false;\n            referencedRelation: 'templates';\n            referencedColumns: ['id'];\n          },\n        ];\n      };\n      template_logs: {\n        Row: {\n          action: string;\n          actor: string | null;\n          id: string;\n          template_name: string;\n          timestamp: string | null;\n        };\n        Insert: {\n          action: string;\n          actor?: string | null;\n          id?: string;\n          template_name: string;\n          timestamp?: string | null;\n        };\n        Update: {\n          action?: string;\n          actor?: string | null;\n          id?: string;\n          template_name?: string;\n          timestamp?: string | null;\n        };\n        Relationships: [];\n      };\n      template_versions: {\n        Row: {\n          commit_message: string | null;\n          created_at: string | null;\n          diff: Json | null;\n          editor_id: string | null;\n          forced_revert: boolean | null;\n          full_data: Json | null;\n          id: string;\n          saved_at: string | null;\n          template_id: string | null;\n          template_name: string;\n          thumbnail_url: string | null;\n        };\n        Insert: {\n          commit_message?: string | null;\n          created_at?: string | null;\n          diff?: Json | null;\n          editor_id?: string | null;\n          forced_revert?: boolean | null;\n          full_data?: Json | null;\n          id?: string;\n          saved_at?: string | null;\n          template_id?: string | null;\n          template_name: string;\n          thumbnail_url?: string | null;\n        };\n        Update: {\n          commit_message?: string | null;\n          created_at?: string | null;\n          diff?: Json | null;\n          editor_id?: string | null;\n          forced_revert?: boolean | null;\n          full_data?: Json | null;\n          id?: string;\n          saved_at?: string | null;\n          template_id?: string | null;\n          template_name?: string;\n          thumbnail_url?: string | null;\n        };\n        Relationships: [\n          {\n            foreignKeyName: 'template_versions_template_id_fkey';\n            columns: ['template_id'];\n            isOneToOne: false;\n            referencedRelation: 'templates';\n            referencedColumns: ['id'];\n          },\n        ];\n      };\n      template_views: {\n        Row: {\n          domain: string | null;\n          id: string;\n          ip_address: string | null;\n          template_name: string | null;\n          user_agent: string | null;\n          viewed_at: string | null;\n        };\n        Insert: {\n          domain?: string | null;\n          id?: string;\n          ip_address?: string | null;\n          template_name?: string | null;\n          user_agent?: string | null;\n          viewed_at?: string | null;\n        };\n        Update: {\n          domain?: string | null;\n          id?: string;\n          ip_address?: string | null;\n          template_name?: string | null;\n          user_agent?: string | null;\n          viewed_at?: string | null;\n        };\n        Relationships: [];\n      };\n      templates: {\n        Row: {\n          banner_url: string | null;\n          banner_url_meta: Json | null;\n          color_scheme: string | null;\n          created_at: string | null;\n          custom_domain: string | null;\n          data: Json;\n          domain: string | null;\n          gallery_meta: Json | null;\n          hero_url: string | null;\n          hero_url_meta: Json | null;\n          id: string;\n          industry: string | null;\n          layout: string | null;\n          logo_url: string | null;\n          logo_url_meta: Json | null;\n          published: boolean | null;\n          template_name: string;\n          updated_at: string | null;\n        };\n        Insert: {\n          banner_url?: string | null;\n          banner_url_meta?: Json | null;\n          color_scheme?: string | null;\n          created_at?: string | null;\n          custom_domain?: string | null;\n          data: Json;\n          domain?: string | null;\n          gallery_meta?: Json | null;\n          hero_url?: string | null;\n          hero_url_meta?: Json | null;\n          id?: string;\n          industry?: string | null;\n          layout?: string | null;\n          logo_url?: string | null;\n          logo_url_meta?: Json | null;\n          published?: boolean | null;\n          template_name: string;\n          updated_at?: string | null;\n        };\n        Update: {\n          banner_url?: string | null;\n          banner_url_meta?: Json | null;\n          color_scheme?: string | null;\n          created_at?: string | null;\n          custom_domain?: string | null;\n          data?: Json;\n          domain?: string | null;\n          gallery_meta?: Json | null;\n          hero_url?: string | null;\n          hero_url_meta?: Json | null;\n          id?: string;\n          industry?: string | null;\n          layout?: string | null;\n          logo_url?: string | null;\n          logo_url_meta?: Json | null;\n          published?: boolean | null;\n          template_name?: string;\n          updated_at?: string | null;\n        };\n        Relationships: [];\n      };\n      thank_you_notes: {\n        Row: {\n          block_id: string | null;\n          created_at: string | null;\n          id: string;\n          message: string | null;\n          recipient_id: string | null;\n          sender_id: string | null;\n        };\n        Insert: {\n          block_id?: string | null;\n          created_at?: string | null;\n          id?: string;\n          message?: string | null;\n          recipient_id?: string | null;\n          sender_id?: string | null;\n        };\n        Update: {\n          block_id?: string | null;\n          created_at?: string | null;\n          id?: string;\n          message?: string | null;\n          recipient_id?: string | null;\n          sender_id?: string | null;\n        };\n        Relationships: [];\n      };\n      token_logs: {\n        Row: {\n          downloaded_at: string | null;\n          file_name: string | null;\n          id: string;\n          ip_address: string | null;\n          ip_location: string | null;\n          token_hash: string | null;\n          user_agent: string | null;\n        };\n        Insert: {\n          downloaded_at?: string | null;\n          file_name?: string | null;\n          id?: string;\n          ip_address?: string | null;\n          ip_location?: string | null;\n          token_hash?: string | null;\n          user_agent?: string | null;\n        };\n        Update: {\n          downloaded_at?: string | null;\n          file_name?: string | null;\n          id?: string;\n          ip_address?: string | null;\n          ip_location?: string | null;\n          token_hash?: string | null;\n          user_agent?: string | null;\n        };\n        Relationships: [];\n      };\n      tracking_checkins: {\n        Row: {\n          block_id: string | null;\n          checked_at: string | null;\n          id: string;\n          slug: string;\n          user_id: string;\n        };\n        Insert: {\n          block_id?: string | null;\n          checked_at?: string | null;\n          id?: string;\n          slug: string;\n          user_id: string;\n        };\n        Update: {\n          block_id?: string | null;\n          checked_at?: string | null;\n          id?: string;\n          slug?: string;\n          user_id?: string;\n        };\n        Relationships: [\n          {\n            foreignKeyName: 'tracking_checkins_block_id_fkey';\n            columns: ['block_id'];\n            isOneToOne: false;\n            referencedRelation: 'blocks';\n            referencedColumns: ['id'];\n          },\n        ];\n      };\n      user_action_logs: {\n        Row: {\n          action_type: string;\n          domain_id: string | null;\n          id: string;\n          lead_id: string | null;\n          timestamp: string | null;\n          triggered_by: string | null;\n        };\n        Insert: {\n          action_type: string;\n          domain_id?: string | null;\n          id?: string;\n          lead_id?: string | null;\n          timestamp?: string | null;\n          triggered_by?: string | null;\n        };\n        Update: {\n          action_type?: string;\n          domain_id?: string | null;\n          id?: string;\n          lead_id?: string | null;\n          timestamp?: string | null;\n          triggered_by?: string | null;\n        };\n        Relationships: [\n          {\n            foreignKeyName: 'lead_action_logs_domain_id_fkey';\n            columns: ['domain_id'];\n            isOneToOne: false;\n            referencedRelation: 'draft_sites';\n            referencedColumns: ['id'];\n          },\n          {\n            foreignKeyName: 'lead_action_logs_lead_id_fkey';\n            columns: ['lead_id'];\n            isOneToOne: false;\n            referencedRelation: 'leads';\n            referencedColumns: ['id'];\n          },\n        ];\n      };\n      user_deletion_logs: {\n        Row: {\n          deleted_at: string | null;\n          email: string | null;\n          id: string;\n          user_id: string;\n        };\n        Insert: {\n          deleted_at?: string | null;\n          email?: string | null;\n          id?: string;\n          user_id: string;\n        };\n        Update: {\n          deleted_at?: string | null;\n          email?: string | null;\n          id?: string;\n          user_id?: string;\n        };\n        Relationships: [];\n      };\n      user_profiles: {\n        Row: {\n          avatar_url: string | null;\n          last_seen_agent: string | null;\n          last_seen_at: string | null;\n          last_seen_ip: string | null;\n          user_id: string;\n        };\n        Insert: {\n          avatar_url?: string | null;\n          last_seen_agent?: string | null;\n          last_seen_at?: string | null;\n          last_seen_ip?: string | null;\n          user_id: string;\n        };\n        Update: {\n          avatar_url?: string | null;\n          last_seen_agent?: string | null;\n          last_seen_at?: string | null;\n          last_seen_ip?: string | null;\n          user_id?: string;\n        };\n        Relationships: [];\n      };\n      user_roles: {\n        Row: {\n          changed_at: string | null;\n          id: string;\n          new_role: string | null;\n          role: string;\n          updated_at: string | null;\n          user_email: string;\n          user_id: string | null;\n        };\n        Insert: {\n          changed_at?: string | null;\n          id?: string;\n          new_role?: string | null;\n          role: string;\n          updated_at?: string | null;\n          user_email: string;\n          user_id?: string | null;\n        };\n        Update: {\n          changed_at?: string | null;\n          id?: string;\n          new_role?: string | null;\n          role?: string;\n          updated_at?: string | null;\n          user_email?: string;\n          user_id?: string | null;\n        };\n        Relationships: [];\n      };\n      verification_logs: {\n        Row: {\n          email: string | null;\n          id: string;\n          sent_at: string | null;\n          user_id: string;\n        };\n        Insert: {\n          email?: string | null;\n          id?: string;\n          sent_at?: string | null;\n          user_id: string;\n        };\n        Update: {\n          email?: string | null;\n          id?: string;\n          sent_at?: string | null;\n          user_id?: string;\n        };\n        Relationships: [];\n      };\n    };\n    Views: {\n      block_feedback_summary: {\n        Row: {\n          block_id: string | null;\n          cheer_count: number | null;\n          echo_count: number | null;\n          reflect_count: number | null;\n        };\n        Relationships: [\n          {\n            foreignKeyName: 'block_feedback_block_id_fkey';\n            columns: ['block_id'];\n            isOneToOne: false;\n            referencedRelation: 'blocks';\n            referencedColumns: ['id'];\n          },\n        ];\n      };\n      branding_profiles_with_email: {\n        Row: {\n          accent_color: string | null;\n          access_token: string | null;\n          brand: string | null;\n          created_at: string | null;\n          id: string | null;\n          is_public: boolean | null;\n          logo_url: string | null;\n          name: string | null;\n          owner_email: string | null;\n          owner_id: string | null;\n          password: string | null;\n          theme: string | null;\n        };\n        Relationships: [];\n      };\n      checkin_map_points: {\n        Row: {\n          block_id: string | null;\n          lat: number | null;\n          lon: number | null;\n          slug: string | null;\n          total: number | null;\n        };\n        Relationships: [\n          {\n            foreignKeyName: 'tracking_checkins_block_id_fkey';\n            columns: ['block_id'];\n            isOneToOne: false;\n            referencedRelation: 'blocks';\n            referencedColumns: ['id'];\n          },\n        ];\n      };\n      click_summary: {\n        Row: {\n          action: string | null;\n          block_id: string | null;\n          click_count: number | null;\n          day: string | null;\n          handle: string | null;\n        };\n        Relationships: [];\n      };\n      mobile_session_summary: {\n        Row: {\n          first_seen: string | null;\n          is_mobile: boolean | null;\n          last_seen: string | null;\n          session_count: number | null;\n          type: string | null;\n        };\n        Relationships: [];\n      };\n    };\n    Functions: {\n      daily_checkins_by_slug: {\n        Args: { slug: string };\n        Returns: {\n          date: string;\n          count: number;\n        }[];\n      };\n      delete_current_user: {\n        Args: Record<PropertyKey, never>;\n        Returns: undefined;\n      };\n      get_latest_template_versions: {\n        Args: Record<PropertyKey, never>;\n        Returns: {\n          id: string;\n          template_name: string;\n          thumbnail_url: string;\n          saved_at: string;\n        }[];\n      };\n      get_total_reward_points: {\n        Args: { user_id: string };\n        Returns: number;\n      };\n      gtrgm_compress: {\n        Args: { '': unknown };\n        Returns: unknown;\n      };\n      gtrgm_decompress: {\n        Args: { '': unknown };\n        Returns: unknown;\n      };\n      gtrgm_in: {\n        Args: { '': unknown };\n        Returns: unknown;\n      };\n      gtrgm_options: {\n        Args: { '': unknown };\n        Returns: undefined;\n      };\n      gtrgm_out: {\n        Args: { '': unknown };\n        Returns: unknown;\n      };\n      leaderboard_for_slug: {\n        Args: { slug: string };\n        Returns: {\n          user_id: string;\n          total: number;\n        }[];\n      };\n      send_email_verification: {\n        Args: Record<PropertyKey, never>;\n        Returns: undefined;\n      };\n      send_email_verification_with_log: {\n        Args: Record<PropertyKey, never>;\n        Returns: undefined;\n      };\n      set_limit: {\n        Args: { '': number };\n        Returns: number;\n      };\n      show_limit: {\n        Args: Record<PropertyKey, never>;\n        Returns: number;\n      };\n      show_trgm: {\n        Args: { '': string };\n        Returns: string[];\n      };\n    };\n    Enums: {\n      [_ in never]: never;\n    };\n    CompositeTypes: {\n      [_ in never]: never;\n    };\n  };\n};\n\ntype DefaultSchema = Database[Extract<keyof Database, 'public'>];\n\nexport type Tables<\n  DefaultSchemaTableNameOrOptions extends\n    | keyof (DefaultSchema['Tables'] & DefaultSchema['Views'])\n    | { schema: keyof Database },\n  TableName extends DefaultSchemaTableNameOrOptions extends {\n    schema: keyof Database;\n  }\n    ? keyof (Database[DefaultSchemaTableNameOrOptions['schema']]['Tables'] &\n        Database[DefaultSchemaTableNameOrOptions['schema']]['Views'])\n    : never = never,\n> = DefaultSchemaTableNameOrOptions extends { schema: keyof Database }\n  ? (Database[DefaultSchemaTableNameOrOptions['schema']]['Tables'] &\n      Database[DefaultSchemaTableNameOrOptions['schema']]['Views'])[TableName] extends {\n      Row: infer R;\n    }\n    ? R\n    : never\n  : DefaultSchemaTableNameOrOptions extends keyof (DefaultSchema['Tables'] & DefaultSchema['Views'])\n    ? (DefaultSchema['Tables'] & DefaultSchema['Views'])[DefaultSchemaTableNameOrOptions] extends {\n        Row: infer R;\n      }\n      ? R\n      : never\n    : never;\n\nexport type TablesInsert<\n  DefaultSchemaTableNameOrOptions extends\n    | keyof DefaultSchema['Tables']\n    | { schema: keyof Database },\n  TableName extends DefaultSchemaTableNameOrOptions extends {\n    schema: keyof Database;\n  }\n    ? keyof Database[DefaultSchemaTableNameOrOptions['schema']]['Tables']\n    : never = never,\n> = DefaultSchemaTableNameOrOptions extends { schema: keyof Database }\n  ? Database[DefaultSchemaTableNameOrOptions['schema']]['Tables'][TableName] extends {\n      Insert: infer I;\n    }\n    ? I\n    : never\n  : DefaultSchemaTableNameOrOptions extends keyof DefaultSchema['Tables']\n    ? DefaultSchema['Tables'][DefaultSchemaTableNameOrOptions] extends {\n        Insert: infer I;\n      }\n      ? I\n      : never\n    : never;\n\nexport type TablesUpdate<\n  DefaultSchemaTableNameOrOptions extends\n    | keyof DefaultSchema['Tables']\n    | { schema: keyof Database },\n  TableName extends DefaultSchemaTableNameOrOptions extends {\n    schema: keyof Database;\n  }\n    ? keyof Database[DefaultSchemaTableNameOrOptions['schema']]['Tables']\n    : never = never,\n> = DefaultSchemaTableNameOrOptions extends { schema: keyof Database }\n  ? Database[DefaultSchemaTableNameOrOptions['schema']]['Tables'][TableName] extends {\n      Update: infer U;\n    }\n    ? U\n    : never\n  : DefaultSchemaTableNameOrOptions extends keyof DefaultSchema['Tables']\n    ? DefaultSchema['Tables'][DefaultSchemaTableNameOrOptions] extends {\n        Update: infer U;\n      }\n      ? U\n      : never\n    : never;\n\nexport type Enums<\n  DefaultSchemaEnumNameOrOptions extends keyof DefaultSchema['Enums'] | { schema: keyof Database },\n  EnumName extends DefaultSchemaEnumNameOrOptions extends {\n    schema: keyof Database;\n  }\n    ? keyof Database[DefaultSchemaEnumNameOrOptions['schema']]['Enums']\n    : never = never,\n> = DefaultSchemaEnumNameOrOptions extends { schema: keyof Database }\n  ? Database[DefaultSchemaEnumNameOrOptions['schema']]['Enums'][EnumName]\n  : DefaultSchemaEnumNameOrOptions extends keyof DefaultSchema['Enums']\n    ? DefaultSchema['Enums'][DefaultSchemaEnumNameOrOptions]\n    : never;\n\nexport type CompositeTypes<\n  PublicCompositeTypeNameOrOptions extends\n    | keyof DefaultSchema['CompositeTypes']\n    | { schema: keyof Database },\n  CompositeTypeName extends PublicCompositeTypeNameOrOptions extends {\n    schema: keyof Database;\n  }\n    ? keyof Database[PublicCompositeTypeNameOrOptions['schema']]['CompositeTypes']\n    : never = never,\n> = PublicCompositeTypeNameOrOptions extends { schema: keyof Database }\n  ? Database[PublicCompositeTypeNameOrOptions['schema']]['CompositeTypes'][CompositeTypeName]\n  : PublicCompositeTypeNameOrOptions extends keyof DefaultSchema['CompositeTypes']\n    ? DefaultSchema['CompositeTypes'][PublicCompositeTypeNameOrOptions]\n    : never;\n\nexport const Constants = {\n  graphql_public: {\n    Enums: {},\n  },\n  public: {\n    Enums: {},\n  },\n} as const;\n","usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types/swagger-ui-react.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types/template.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types/template.types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types/user-context-types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/sandonjurowski/Desktop/_SilverLamp/quicksites-v2/types/zod-to-openapi.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]